const rt="ENTRIES",W="KEYS",$="VALUES",F="";class M{constructor(t,s){const n=t._tree,u=Array.from(n.keys());this.set=t,this._type=s,this._path=u.length>0?[{node:n,keys:u}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=C(this._path);if(C(s)===F)return{done:!1,value:this.result()};const n=t.get(C(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=C(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>C(t)).filter(t=>t!==F).join("")}value(){return C(this._path).node.get(F)}result(){switch(this._type){case $:return this.value();case W:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const C=e=>e[e.length-1],ct=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const u=t.length+1,o=u+s,i=new Uint8Array(o*u).fill(s+1);for(let r=0;r<u;++r)i[r]=r;for(let r=1;r<o;++r)i[r*u]=r;return R(e,t,s,n,i,1,u,""),n},R=(e,t,s,n,u,o,i,r)=>{const h=o*i;t:for(const c of e.keys())if(c===F){const a=u[h-1];a<=s&&n.set(r,[e.get(c),a])}else{let a=o;for(let l=0;l<c.length;++l,++a){const m=c[l],g=i*a,f=g-i;let d=u[g];const p=Math.max(0,a-s-1),_=Math.min(i-1,a+s);for(let A=p;A<_;++A){const O=m!==t[A],x=u[f+A]+ +O,y=u[f+A+1]+1,k=u[g+A]+1,T=u[g+A+1]=Math.min(x,y,k);T<d&&(d=T)}if(d>s)continue t}R(e.get(c),t,s,n,u,a,i,r+c)}};let q=class w{constructor(t=new Map,s=""){this._size=void 0,this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=v(this._tree,t.slice(this._prefix.length));if(s===void 0){const[u,o]=j(n);for(const i of u.keys())if(i!==F&&i.startsWith(o)){const r=new Map;return r.set(i.slice(o.length),u.get(i)),new w(r,t)}}return new w(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,lt(this._tree,t)}entries(){return new M(this,rt)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return ct(this._tree,t,s)}get(t){const s=B(this._tree,t);return s!==void 0?s.get(F):void 0}has(t){const s=B(this._tree,t);return s!==void 0&&s.has(F)}keys(){return new M(this,W)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,S(this._tree,t).set(F,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=S(this._tree,t);return n.set(F,s(n.get(F))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=S(this._tree,t);let u=n.get(F);return u===void 0&&n.set(F,u=s()),u}values(){return new M(this,$)}[Symbol.iterator](){return this.entries()}static from(t){const s=new w;for(const[n,u]of t)s.set(n,u);return s}static fromObject(t){return w.from(Object.entries(t))}};const v=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==F&&t.startsWith(n))return s.push([e,n]),v(e.get(n),t.slice(n.length),s);return s.push([e,t]),v(void 0,"",s)},B=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==F&&t.startsWith(s))return B(e.get(s),t.slice(s.length))},S=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const o of e.keys())if(o!==F&&t[n]===o[0]){const i=Math.min(s-n,o.length);let r=1;for(;r<i&&t[n+r]===o[r];)++r;const h=e.get(o);if(r===o.length)e=h;else{const c=new Map;c.set(o.slice(r),h),e.set(t.slice(n,n+r),c),e.delete(o),e=c}n+=r;continue t}const u=new Map;return e.set(t.slice(n),u),u}return e},lt=(e,t)=>{const[s,n]=v(e,t);if(s!==void 0){if(s.delete(F),s.size===0)P(n);else if(s.size===1){const[u,o]=s.entries().next().value;N(n,u,o)}}},P=e=>{if(e.length===0)return;const[t,s]=j(e);if(t.delete(s),t.size===0)P(e.slice(0,-1));else if(t.size===1){const[n,u]=t.entries().next().value;n!==F&&N(e.slice(0,-1),n,u)}},N=(e,t,s)=>{if(e.length===0)return;const[n,u]=j(e);n.set(u+t,s),n.delete(u)},j=e=>e[e.length-1],ht=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,L="or",G="and",dt="and_not",at=(e,t)=>{e.includes(t)||e.push(t)},J=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},U=({score:e},{score:t})=>t-e,ft=()=>new Map,b=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},H=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,gt={[L]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:u,terms:o,match:i}=t.get(s);n.score=n.score+u,n.match=Object.assign(n.match,i),J(n.terms,o)}}return e},[G]:(e,t)=>{const s=new Map;for(const n of t.keys()){const u=e.get(n);if(u==null)continue;const{score:o,terms:i,match:r}=t.get(n);J(u.terms,i),s.set(n,{score:u.score+o,terms:u.terms,match:Object.assign(u.match,r)})}return s},[dt]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},pt=(e,t,s,n,u,o)=>{const{k:i,b:r,d:h}=o;return Math.log(1+(s-t+.5)/(t+.5))*(h+e*(i+1)/(e+i*(1-r+r*n/u)))},mt=e=>(t,s,n)=>{const u=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,o=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:u,prefix:o}},Ft={k:1.2,b:.7,d:.5},_t={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(ht),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof(console==null?void 0:console[e])=="function"&&console[e](t)},autoVacuum:!0},K={combineWith:L,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:Ft},At={combineWith:G,prefix:(e,t,s)=>t===s.length-1},yt={batchSize:1e3,batchWait:10},X={minDirtFactor:.1,minDirtCount:20},Ct={...yt,...X};class zt{constructor(t){if((t==null?void 0:t.fields)==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?Ct:t.autoVacuum;this._options={..._t,...t,autoVacuum:s,searchOptions:{...K,...t.searchOptions||{}},autoSuggestOptions:{...At,...t.autoSuggestOptions||{}}},this._index=new q,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=X,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const u={};for(const[o,i]of n)u[o]=Object.fromEntries(i);t.push([s,u])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const Y=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},Q=(e,t,s,n)=>{for(const u of Object.keys(e._fieldIds))if(e._fieldIds[u]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${u}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},Et=(e,t,s,n)=>{if(!e._index.has(n)){Q(e,s,t,n);return}const u=e._index.fetch(n,ft),o=u.get(t);o==null||o.get(s)==null?Q(e,s,t,n):o.get(s)<=1?o.size<=1?u.delete(t):o.delete(s):o.set(s,o.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},Z=(e,t=L)=>{if(e.length===0)return new Map;const s=t.toLowerCase();return e.reduce(gt[s])||new Map},V=(e,t,s,n,u,o,i,r,h=new Map)=>{if(u==null)return h;for(const c of Object.keys(o)){const a=o[c],l=e._fieldIds[c],m=u.get(l);if(m==null)continue;let g=m.size;const f=e._avgFieldLength[l];for(const d of m.keys()){if(!e._documentIds.has(d)){Et(e,l,d,s),g-=1;continue}const p=i?i(e._documentIds.get(d),s,e._storedFields.get(d)):1;if(!p)continue;const _=m.get(d),A=e._fieldLength.get(d)[l],O=pt(_,g,e._documentCount,A,f,r),x=n*a*p*O,y=h.get(d);if(y){y.score+=x,at(y.terms,t);const k=H(y.match,s);k?k.push(c):y.match[s]=[c]}else h.set(d,{score:x,terms:[t],match:{[s]:[c]}})}}return h},wt=(e,t,s)=>{const n={...e._options.searchOptions,...s},u=(n.fields||e._options.fields).reduce((d,p)=>({...d,[p]:H(n.boost,p)||1}),{}),{boostDocument:o,weights:i,maxFuzzy:r,bm25:h}=n,{fuzzy:c,prefix:a}={...K.weights,...i},l=e._index.get(t.term),m=V(e,t.term,t.term,1,l,u,o,h);let g,f;if(t.prefix&&(g=e._index.atPrefix(t.term)),t.fuzzy){const d=t.fuzzy===!0?.2:t.fuzzy,p=d<1?Math.min(r,Math.round(t.term.length*d)):d;p&&(f=e._index.fuzzyGet(t.term,p))}if(g)for(const[d,p]of g){const _=d.length-t.term.length;if(!_)continue;f==null||f.delete(d);const A=a*d.length/(d.length+.3*_);V(e,t.term,d,A,p,u,o,h,m)}if(f)for(const d of f.keys()){const[p,_]=f.get(d);if(!_)continue;const A=c*d.length/(d.length+_);V(e,t.term,d,A,p,u,o,h,m)}return m},tt=(e,t,s={})=>{if(typeof t!="string"){const a={...s,...t,queries:void 0},l=t.queries.map(m=>tt(e,m,a));return Z(l,a.combineWith)}const{tokenize:n,processTerm:u,searchOptions:o}=e._options,i={tokenize:n,processTerm:u,...o,...s},{tokenize:r,processTerm:h}=i,c=r(t).flatMap(a=>h(a)).filter(a=>!!a).map(mt(i)).map(a=>wt(e,a,i));return Z(c,i.combineWith)},et=(e,t,s={})=>{const n=tt(e,t,s),u=[];for(const[o,{score:i,terms:r,match:h}]of n){const c=r.length,a={id:e._documentIds.get(o),score:i*c,terms:Object.keys(h),match:h};Object.assign(a,e._storedFields.get(o)),(s.filter==null||s.filter(a))&&u.push(a)}return u.sort(U),u},xt=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:o,terms:i}of et(e,t,s)){const r=i.join(" "),h=n.get(r);h!=null?(h.score+=o,h.count+=1):n.set(r,{score:o,terms:i,count:1})}const u=[];for(const[o,{score:i,terms:r,count:h}]of n)u.push({suggestion:o,terms:r,score:i/h});return u.sort(U),u},kt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:u,fieldLength:o,averageFieldLength:i,storedFields:r,dirtCount:h,serializationVersion:c},a)=>{if(c!==1&&c!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const l=new zt(a);l._documentCount=t,l._nextId=s,l._documentIds=b(n),l._idToShortId=new Map,l._fieldIds=u,l._fieldLength=b(o),l._avgFieldLength=i,l._storedFields=b(r),l._dirtCount=h||0,l._index=new q;for(const[m,g]of l._documentIds)l._idToShortId.set(g,m);for(const[m,g]of e){const f=new Map;for(const d of Object.keys(g)){let p=g[d];c===1&&(p=p.ds),f.set(parseInt(d,10),b(p))}l._index.set(m,f)}return l},st=Object.entries,vt=Object.fromEntries,z=100,E=20,D=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),u=[];let o=0,i=0;const r=(c,a=!1)=>{let l="";i===0?l=c.length>E?`… ${c.slice(-E)}`:c:a?l=c.length+i>z?`${c.slice(0,z-i)}… `:c:l=c.length>E?`${c.slice(0,E)} … ${c.slice(-E)}`:c,l&&u.push(l),i+=l.length,a||(u.push(["mark",t]),i+=t.length,i>=z&&u.push(" …"))};let h=s.indexOf(n,o);if(h===-1)return null;for(;h>=0;){const c=h+n.length;if(r(e.slice(o,h)),o=c,i>z)break;h=s.indexOf(n,o)}return i<z&&r(e.slice(o),!0),u},nt=/[\u4e00-\u9fa5]/g,ut=(e={})=>({fuzzy:.2,prefix:!0,processTerm:t=>{const s=t.match(nt)||[],n=t.replace(nt,"").toLowerCase();return n?[n,...s]:[...s]},...e}),ot=(e,t,s={})=>{const n={};return et(t,e,ut({boost:{h:2,t:1,c:4},...s})).forEach(u=>{const{id:o,terms:i,score:r}=u,h=o.includes("/"),c=!h&&o.includes("#"),a=o.includes("@"),[l,m]=o.split(/[#@]/),{contents:g}=n[l]??={title:"",contents:[]};if(c)g.push([{type:"heading",key:l,anchor:u.a,display:i.map(f=>D(u.h,f)).filter(f=>f!==null)},r]);else if(h){const[f]=m.split("/"),{h:d="",a:p=""}=Y(t,`${l}#${f}`)||{};g.push([{type:"text",key:l,header:d,anchor:p,display:i.map(_=>D(u.t,_)).filter(_=>_!==null)},r])}else a?g.push([{type:"customField",key:l,index:m,display:i.map(f=>u.c.map(d=>D(d,f))).flat().filter(f=>f!==null)},r]):g.push([{type:"title",key:l,display:i.map(f=>D(u.h,f)).filter(f=>f!==null)},r])}),st(n).sort(([,u],[,o])=>o.contents.reduce((i,[,r])=>i+r,0)-u.contents.reduce((i,[,r])=>i+r,0)).map(([u,{title:o,contents:i}])=>{if(!o){const r=Y(t,u);r&&(o=r.h)}return{title:o,contents:i.map(([r])=>r)}})},it=(e,t,s={})=>xt(t,e,ut(s)).map(({suggestion:n})=>n),I=vt(st(JSON.parse("{\"/\":{\"documentCount\":643,\"nextId\":643,\"documentIds\":{\"0\":\"v-8daa1a0e\",\"1\":\"v-8daa1a0e#0/0\",\"2\":\"v-8daa1a0e#0/1\",\"3\":\"v-8daa1a0e#0/2\",\"4\":\"v-8daa1a0e#0/3\",\"5\":\"v-8daa1a0e@0\",\"6\":\"v-8daa1a0e@1\",\"7\":\"v-2e3eac9e\",\"8\":\"v-145ac574\",\"9\":\"v-145ac574#1\",\"10\":\"v-145ac574#1/0\",\"11\":\"v-145ac574@0\",\"12\":\"v-75f5fc4b\",\"13\":\"v-75f5fc4b#0/0\",\"14\":\"v-75f5fc4b#0/1\",\"15\":\"v-75f5fc4b#0/2\",\"16\":\"v-75f5fc4b#0/3\",\"17\":\"v-75f5fc4b#0/4\",\"18\":\"v-75f5fc4b#0/5\",\"19\":\"v-75f5fc4b#0/6\",\"20\":\"v-75f5fc4b#0/7\",\"21\":\"v-75f5fc4b#0/8\",\"22\":\"v-75f5fc4b#0/9\",\"23\":\"v-75f5fc4b#0/10\",\"24\":\"v-75f5fc4b#0/11\",\"25\":\"v-75f5fc4b@0\",\"26\":\"v-75f5fc4b@1\",\"27\":\"v-3c8012ee\",\"28\":\"v-3c8012ee#0/0\",\"29\":\"v-3c8012ee#0/1\",\"30\":\"v-3c8012ee#0/2\",\"31\":\"v-3c8012ee@0\",\"32\":\"v-3c8012ee@1\",\"33\":\"v-6cb33ee0\",\"34\":\"v-6cb33ee0#0/0\",\"35\":\"v-6cb33ee0#1\",\"36\":\"v-6cb33ee0#1/0\",\"37\":\"v-6cb33ee0#1/1\",\"38\":\"v-6cb33ee0#1/2\",\"39\":\"v-6cb33ee0#1/3\",\"40\":\"v-6cb33ee0#1/4\",\"41\":\"v-6cb33ee0#2\",\"42\":\"v-6cb33ee0#2/0\",\"43\":\"v-6cb33ee0#2/1\",\"44\":\"v-6cb33ee0#2/2\",\"45\":\"v-6cb33ee0#2/3\",\"46\":\"v-6cb33ee0#2/4\",\"47\":\"v-6cb33ee0#2/5\",\"48\":\"v-6cb33ee0#3\",\"49\":\"v-6cb33ee0#3/0\",\"50\":\"v-6cb33ee0#3/1\",\"51\":\"v-6cb33ee0#3/2\",\"52\":\"v-6cb33ee0#3/3\",\"53\":\"v-6cb33ee0#3/4\",\"54\":\"v-6cb33ee0#3/5\",\"55\":\"v-6cb33ee0#3/6\",\"56\":\"v-6cb33ee0#3/7\",\"57\":\"v-6cb33ee0#3/8\",\"58\":\"v-6cb33ee0#3/9\",\"59\":\"v-6cb33ee0#3/10\",\"60\":\"v-6cb33ee0@0\",\"61\":\"v-6cb33ee0@1\",\"62\":\"v-2bcb26fa\",\"63\":\"v-2bcb26fa#1\",\"64\":\"v-2bcb26fa#1/0\",\"65\":\"v-2bcb26fa#2\",\"66\":\"v-2bcb26fa#2/1\",\"67\":\"v-2bcb26fa#3\",\"68\":\"v-2bcb26fa#3/2\",\"69\":\"v-2bcb26fa#4\",\"70\":\"v-2bcb26fa#4/3\",\"71\":\"v-2bcb26fa#5\",\"72\":\"v-2bcb26fa#5/4\",\"73\":\"v-2bcb26fa#6\",\"74\":\"v-2bcb26fa#6/5\",\"75\":\"v-2bcb26fa#7\",\"76\":\"v-2bcb26fa#7/6\",\"77\":\"v-2bcb26fa@0\",\"78\":\"v-2bcb26fa@1\",\"79\":\"v-9e67bfbe\",\"80\":\"v-9e67bfbe#1\",\"81\":\"v-9e67bfbe#1/0\",\"82\":\"v-9e67bfbe#2\",\"83\":\"v-9e67bfbe#2/0\",\"84\":\"v-9e67bfbe#3\",\"85\":\"v-9e67bfbe#3/1\",\"86\":\"v-9e67bfbe#4\",\"87\":\"v-9e67bfbe#5\",\"88\":\"v-9e67bfbe#5/2\",\"89\":\"v-9e67bfbe#6\",\"90\":\"v-9e67bfbe#6/0\",\"91\":\"v-9e67bfbe#6/1\",\"92\":\"v-9e67bfbe#7\",\"93\":\"v-9e67bfbe#7/2\",\"94\":\"v-9e67bfbe#7/3\",\"95\":\"v-9e67bfbe#8\",\"96\":\"v-9e67bfbe#8/4\",\"97\":\"v-9e67bfbe#8/5\",\"98\":\"v-9e67bfbe#8/6\",\"99\":\"v-9e67bfbe#8/7\",\"100\":\"v-9e67bfbe#8/8\",\"101\":\"v-9e67bfbe#8/9\",\"102\":\"v-9e67bfbe#8/10\",\"103\":\"v-9e67bfbe#8/11\",\"104\":\"v-9e67bfbe#8/12\",\"105\":\"v-9e67bfbe#8/13\",\"106\":\"v-9e67bfbe#8/14\",\"107\":\"v-9e67bfbe#8/15\",\"108\":\"v-9e67bfbe#8/16\",\"109\":\"v-9e67bfbe#8/17\",\"110\":\"v-9e67bfbe#8/18\",\"111\":\"v-9e67bfbe#9\",\"112\":\"v-9e67bfbe@0\",\"113\":\"v-9e67bfbe@1\",\"114\":\"v-e7d29956\",\"115\":\"v-e7d29956#1\",\"116\":\"v-e7d29956#2\",\"117\":\"v-e7d29956#2/0\",\"118\":\"v-e7d29956#2/1\",\"119\":\"v-e7d29956#2/2\",\"120\":\"v-e7d29956#3\",\"121\":\"v-e7d29956#3/0\",\"122\":\"v-e7d29956#4\",\"123\":\"v-e7d29956#4/1\",\"124\":\"v-e7d29956#5\",\"125\":\"v-e7d29956#5/2\",\"126\":\"v-e7d29956@0\",\"127\":\"v-e7d29956@1\",\"128\":\"v-870b7946\",\"129\":\"v-870b7946#1\",\"130\":\"v-870b7946#1/0\",\"131\":\"v-870b7946#1/1\",\"132\":\"v-870b7946#2\",\"133\":\"v-870b7946#2/2\",\"134\":\"v-870b7946#2/3\",\"135\":\"v-870b7946#2/4\",\"136\":\"v-870b7946#2/5\",\"137\":\"v-870b7946#3\",\"138\":\"v-870b7946#3/6\",\"139\":\"v-870b7946#4\",\"140\":\"v-870b7946#4/7\",\"141\":\"v-870b7946#4/8\",\"142\":\"v-870b7946#4/9\",\"143\":\"v-870b7946#5\",\"144\":\"v-870b7946#5/0\",\"145\":\"v-870b7946#5/1\",\"146\":\"v-870b7946#5/2\",\"147\":\"v-870b7946#6\",\"148\":\"v-870b7946#6/0\",\"149\":\"v-870b7946#6/1\",\"150\":\"v-870b7946#7\",\"151\":\"v-870b7946#7/0\",\"152\":\"v-870b7946#7/1\",\"153\":\"v-870b7946#7/2\",\"154\":\"v-870b7946#8\",\"155\":\"v-870b7946#8/0\",\"156\":\"v-870b7946#8/1\",\"157\":\"v-870b7946#9\",\"158\":\"v-870b7946#9/0\",\"159\":\"v-870b7946#9/1\",\"160\":\"v-870b7946#9/2\",\"161\":\"v-870b7946#9/3\",\"162\":\"v-870b7946#9/4\",\"163\":\"v-870b7946#9/5\",\"164\":\"v-870b7946#9/6\",\"165\":\"v-870b7946#9/7\",\"166\":\"v-870b7946#9/8\",\"167\":\"v-870b7946#10\",\"168\":\"v-870b7946#10/9\",\"169\":\"v-870b7946#10/10\",\"170\":\"v-870b7946#10/11\",\"171\":\"v-870b7946#10/12\",\"172\":\"v-870b7946#10/13\",\"173\":\"v-870b7946#10/14\",\"174\":\"v-870b7946#10/15\",\"175\":\"v-870b7946#11\",\"176\":\"v-870b7946#11/16\",\"177\":\"v-870b7946#11/17\",\"178\":\"v-870b7946#11/18\",\"179\":\"v-870b7946#12\",\"180\":\"v-870b7946#12/19\",\"181\":\"v-870b7946#12/20\",\"182\":\"v-870b7946#12/21\",\"183\":\"v-870b7946#12/22\",\"184\":\"v-870b7946#12/23\",\"185\":\"v-870b7946#12/24\",\"186\":\"v-870b7946#12/25\",\"187\":\"v-870b7946#12/26\",\"188\":\"v-870b7946#12/27\",\"189\":\"v-870b7946#13\",\"190\":\"v-870b7946#14\",\"191\":\"v-870b7946#14/28\",\"192\":\"v-870b7946#14/29\",\"193\":\"v-870b7946#14/30\",\"194\":\"v-870b7946#14/31\",\"195\":\"v-870b7946#14/32\",\"196\":\"v-870b7946#15\",\"197\":\"v-870b7946#15/0\",\"198\":\"v-870b7946#16\",\"199\":\"v-870b7946#16/1\",\"200\":\"v-870b7946#16/2\",\"201\":\"v-870b7946#16/3\",\"202\":\"v-870b7946#16/4\",\"203\":\"v-870b7946#16/5\",\"204\":\"v-870b7946#16/6\",\"205\":\"v-870b7946#16/7\",\"206\":\"v-870b7946#17\",\"207\":\"v-870b7946#18\",\"208\":\"v-870b7946#18/8\",\"209\":\"v-870b7946#18/9\",\"210\":\"v-870b7946@0\",\"211\":\"v-870b7946@1\",\"212\":\"v-083f0e38\",\"213\":\"v-083f0e38#1\",\"214\":\"v-083f0e38#2\",\"215\":\"v-083f0e38#2/0\",\"216\":\"v-083f0e38#2/1\",\"217\":\"v-083f0e38#2/2\",\"218\":\"v-083f0e38#2/3\",\"219\":\"v-083f0e38#3\",\"220\":\"v-083f0e38#3/0\",\"221\":\"v-083f0e38#4\",\"222\":\"v-083f0e38#4/1\",\"223\":\"v-083f0e38#5\",\"224\":\"v-083f0e38#5/2\",\"225\":\"v-083f0e38#6\",\"226\":\"v-083f0e38#7\",\"227\":\"v-083f0e38#7/3\",\"228\":\"v-083f0e38#7/4\",\"229\":\"v-083f0e38#7/5\",\"230\":\"v-083f0e38#7/6\",\"231\":\"v-083f0e38#7/7\",\"232\":\"v-083f0e38#7/8\",\"233\":\"v-083f0e38#7/9\",\"234\":\"v-083f0e38#8\",\"235\":\"v-083f0e38#8/10\",\"236\":\"v-083f0e38#8/11\",\"237\":\"v-083f0e38#8/12\",\"238\":\"v-083f0e38#8/13\",\"239\":\"v-083f0e38#9\",\"240\":\"v-083f0e38#9/14\",\"241\":\"v-083f0e38#10\",\"242\":\"v-083f0e38#10/15\",\"243\":\"v-083f0e38@0\",\"244\":\"v-083f0e38@1\",\"245\":\"v-60223b4a\",\"246\":\"v-60223b4a#0/0\",\"247\":\"v-60223b4a#0/1\",\"248\":\"v-60223b4a#1\",\"249\":\"v-60223b4a#1/0\",\"250\":\"v-60223b4a#1/1\",\"251\":\"v-60223b4a#1/2\",\"252\":\"v-60223b4a#1/3\",\"253\":\"v-60223b4a#1/4\",\"254\":\"v-60223b4a#1/5\",\"255\":\"v-60223b4a#2\",\"256\":\"v-60223b4a#2/6\",\"257\":\"v-60223b4a#2/7\",\"258\":\"v-60223b4a#3\",\"259\":\"v-60223b4a#3/0\",\"260\":\"v-60223b4a#3/1\",\"261\":\"v-60223b4a#4\",\"262\":\"v-60223b4a#4/0\",\"263\":\"v-60223b4a#4/1\",\"264\":\"v-60223b4a#5\",\"265\":\"v-60223b4a#5/0\",\"266\":\"v-60223b4a#5/1\",\"267\":\"v-60223b4a#5/2\",\"268\":\"v-60223b4a#5/3\",\"269\":\"v-60223b4a#6\",\"270\":\"v-60223b4a#6/4\",\"271\":\"v-60223b4a#6/5\",\"272\":\"v-60223b4a#6/6\",\"273\":\"v-60223b4a#6/7\",\"274\":\"v-60223b4a#6/8\",\"275\":\"v-60223b4a#6/9\",\"276\":\"v-60223b4a#6/10\",\"277\":\"v-60223b4a#6/11\",\"278\":\"v-60223b4a#6/12\",\"279\":\"v-60223b4a#6/13\",\"280\":\"v-60223b4a#6/14\",\"281\":\"v-60223b4a#6/15\",\"282\":\"v-60223b4a#6/16\",\"283\":\"v-60223b4a#6/17\",\"284\":\"v-60223b4a#6/18\",\"285\":\"v-60223b4a#6/19\",\"286\":\"v-60223b4a#6/20\",\"287\":\"v-60223b4a#6/21\",\"288\":\"v-60223b4a#6/22\",\"289\":\"v-60223b4a#6/23\",\"290\":\"v-60223b4a#6/24\",\"291\":\"v-60223b4a#6/25\",\"292\":\"v-60223b4a#6/26\",\"293\":\"v-60223b4a#7\",\"294\":\"v-60223b4a#7/0\",\"295\":\"v-60223b4a#7/1\",\"296\":\"v-60223b4a#7/2\",\"297\":\"v-60223b4a#7/3\",\"298\":\"v-60223b4a#7/4\",\"299\":\"v-60223b4a#7/5\",\"300\":\"v-60223b4a#7/6\",\"301\":\"v-60223b4a#8\",\"302\":\"v-60223b4a#8/7\",\"303\":\"v-60223b4a#8/8\",\"304\":\"v-60223b4a#8/9\",\"305\":\"v-60223b4a#9\",\"306\":\"v-60223b4a#9/10\",\"307\":\"v-60223b4a#9/11\",\"308\":\"v-60223b4a#9/12\",\"309\":\"v-60223b4a#9/13\",\"310\":\"v-60223b4a#10\",\"311\":\"v-60223b4a#10/14\",\"312\":\"v-60223b4a#10/15\",\"313\":\"v-60223b4a#10/16\",\"314\":\"v-60223b4a#11\",\"315\":\"v-60223b4a#12\",\"316\":\"v-60223b4a#12/17\",\"317\":\"v-60223b4a#13\",\"318\":\"v-60223b4a#13/18\",\"319\":\"v-60223b4a#14\",\"320\":\"v-60223b4a#14/19\",\"321\":\"v-60223b4a#15\",\"322\":\"v-60223b4a#15/20\",\"323\":\"v-60223b4a#15/21\",\"324\":\"v-60223b4a#15/22\",\"325\":\"v-60223b4a#15/23\",\"326\":\"v-60223b4a#15/24\",\"327\":\"v-60223b4a#16\",\"328\":\"v-60223b4a#16/0\",\"329\":\"v-60223b4a#16/1\",\"330\":\"v-60223b4a#16/2\",\"331\":\"v-60223b4a#16/3\",\"332\":\"v-60223b4a#16/4\",\"333\":\"v-60223b4a#16/5\",\"334\":\"v-60223b4a#16/6\",\"335\":\"v-60223b4a#17\",\"336\":\"v-60223b4a#17/7\",\"337\":\"v-60223b4a#17/8\",\"338\":\"v-60223b4a#18\",\"339\":\"v-60223b4a#18/0\",\"340\":\"v-60223b4a#18/1\",\"341\":\"v-60223b4a#19\",\"342\":\"v-60223b4a#19/2\",\"343\":\"v-60223b4a#19/3\",\"344\":\"v-60223b4a#20\",\"345\":\"v-60223b4a#20/4\",\"346\":\"v-60223b4a#21\",\"347\":\"v-60223b4a#21/0\",\"348\":\"v-60223b4a#21/1\",\"349\":\"v-60223b4a#22\",\"350\":\"v-60223b4a#22/0\",\"351\":\"v-60223b4a#22/1\",\"352\":\"v-60223b4a#22/2\",\"353\":\"v-60223b4a#23\",\"354\":\"v-60223b4a#23/3\",\"355\":\"v-60223b4a#24\",\"356\":\"v-60223b4a@0\",\"357\":\"v-60223b4a@1\",\"358\":\"v-0232aca2\",\"359\":\"v-0232aca2#0/0\",\"360\":\"v-0232aca2#0/1\",\"361\":\"v-0232aca2#0/2\",\"362\":\"v-0232aca2#0/3\",\"363\":\"v-0232aca2#1\",\"364\":\"v-0232aca2#1/0\",\"365\":\"v-0232aca2#1/1\",\"366\":\"v-0232aca2#2\",\"367\":\"v-0232aca2#2/2\",\"368\":\"v-0232aca2#2/3\",\"369\":\"v-0232aca2#2/4\",\"370\":\"v-0232aca2#2/5\",\"371\":\"v-0232aca2#2/6\",\"372\":\"v-0232aca2#2/7\",\"373\":\"v-0232aca2@0\",\"374\":\"v-0232aca2@1\",\"375\":\"v-b324bab0\",\"376\":\"v-b324bab0#1\",\"377\":\"v-b324bab0#1/0\",\"378\":\"v-b324bab0#1/1\",\"379\":\"v-b324bab0#1/2\",\"380\":\"v-b324bab0#1/3\",\"381\":\"v-b324bab0#1/4\",\"382\":\"v-b324bab0#1/5\",\"383\":\"v-b324bab0#1/6\",\"384\":\"v-b324bab0#1/7\",\"385\":\"v-b324bab0#2\",\"386\":\"v-b324bab0#2/0\",\"387\":\"v-b324bab0#3\",\"388\":\"v-b324bab0#3/1\",\"389\":\"v-b324bab0#3/2\",\"390\":\"v-b324bab0#4\",\"391\":\"v-b324bab0#4/3\",\"392\":\"v-b324bab0#5\",\"393\":\"v-b324bab0#5/0\",\"394\":\"v-b324bab0#5/1\",\"395\":\"v-b324bab0#5/2\",\"396\":\"v-b324bab0#5/3\",\"397\":\"v-b324bab0#5/4\",\"398\":\"v-b324bab0#5/5\",\"399\":\"v-b324bab0#5/6\",\"400\":\"v-b324bab0#5/7\",\"401\":\"v-b324bab0#6\",\"402\":\"v-b324bab0#6/0\",\"403\":\"v-b324bab0#6/1\",\"404\":\"v-b324bab0#7\",\"405\":\"v-b324bab0#7/0\",\"406\":\"v-b324bab0#7/1\",\"407\":\"v-b324bab0#7/2\",\"408\":\"v-b324bab0#7/3\",\"409\":\"v-b324bab0#8\",\"410\":\"v-b324bab0#8/4\",\"411\":\"v-b324bab0#8/5\",\"412\":\"v-b324bab0#9\",\"413\":\"v-b324bab0#9/6\",\"414\":\"v-b324bab0#9/7\",\"415\":\"v-b324bab0#9/8\",\"416\":\"v-b324bab0#9/9\",\"417\":\"v-b324bab0#9/10\",\"418\":\"v-b324bab0#9/11\",\"419\":\"v-b324bab0#9/12\",\"420\":\"v-b324bab0#9/13\",\"421\":\"v-b324bab0#9/14\",\"422\":\"v-b324bab0#9/15\",\"423\":\"v-b324bab0@0\",\"424\":\"v-b324bab0@1\",\"425\":\"v-4229923f\",\"426\":\"v-4229923f#0/0\",\"427\":\"v-4229923f#1\",\"428\":\"v-4229923f#1/0\",\"429\":\"v-4229923f#1/1\",\"430\":\"v-4229923f#1/2\",\"431\":\"v-4229923f#2\",\"432\":\"v-4229923f#2/0\",\"433\":\"v-4229923f#3\",\"434\":\"v-4229923f#3/1\",\"435\":\"v-4229923f#4\",\"436\":\"v-4229923f#4/2\",\"437\":\"v-4229923f#5\",\"438\":\"v-4229923f#5/3\",\"439\":\"v-4229923f#5/4\",\"440\":\"v-4229923f#5/5\",\"441\":\"v-4229923f#5/6\",\"442\":\"v-4229923f#5/7\",\"443\":\"v-4229923f#6\",\"444\":\"v-4229923f#6/0\",\"445\":\"v-4229923f#7\",\"446\":\"v-4229923f#7/1\",\"447\":\"v-4229923f#7/2\",\"448\":\"v-4229923f#7/3\",\"449\":\"v-4229923f#7/4\",\"450\":\"v-4229923f#7/5\",\"451\":\"v-4229923f#7/6\",\"452\":\"v-4229923f#7/7\",\"453\":\"v-4229923f#8\",\"454\":\"v-4229923f#8/0\",\"455\":\"v-4229923f#9\",\"456\":\"v-4229923f#9/1\",\"457\":\"v-4229923f#10\",\"458\":\"v-4229923f#11\",\"459\":\"v-4229923f#11/2\",\"460\":\"v-4229923f#11/3\",\"461\":\"v-4229923f#11/4\",\"462\":\"v-4229923f#11/5\",\"463\":\"v-4229923f#11/6\",\"464\":\"v-4229923f#11/7\",\"465\":\"v-4229923f#12\",\"466\":\"v-4229923f#12/0\",\"467\":\"v-4229923f#13\",\"468\":\"v-4229923f#13/1\",\"469\":\"v-4229923f#13/2\",\"470\":\"v-4229923f#14\",\"471\":\"v-4229923f#14/3\",\"472\":\"v-4229923f#14/4\",\"473\":\"v-4229923f#14/5\",\"474\":\"v-4229923f#14/6\",\"475\":\"v-4229923f#14/7\",\"476\":\"v-4229923f#14/8\",\"477\":\"v-4229923f#15\",\"478\":\"v-4229923f#15/0\",\"479\":\"v-4229923f#15/1\",\"480\":\"v-4229923f#16\",\"481\":\"v-4229923f#16/2\",\"482\":\"v-4229923f#16/3\",\"483\":\"v-4229923f#17\",\"484\":\"v-4229923f#17/4\",\"485\":\"v-4229923f#18\",\"486\":\"v-4229923f#18/5\",\"487\":\"v-4229923f#19\",\"488\":\"v-4229923f#19/6\",\"489\":\"v-4229923f#20\",\"490\":\"v-4229923f#20/7\",\"491\":\"v-4229923f#21\",\"492\":\"v-4229923f#21/8\",\"493\":\"v-4229923f#22\",\"494\":\"v-4229923f#22/9\",\"495\":\"v-4229923f#23\",\"496\":\"v-4229923f#23/10\",\"497\":\"v-4229923f#23/11\",\"498\":\"v-4229923f#24\",\"499\":\"v-4229923f#24/12\",\"500\":\"v-4229923f#25\",\"501\":\"v-4229923f#25/13\",\"502\":\"v-4229923f@0\",\"503\":\"v-4229923f@1\",\"504\":\"v-6c8528da\",\"505\":\"v-6c8528da#0/0\",\"506\":\"v-6c8528da#1\",\"507\":\"v-6c8528da#1/0\",\"508\":\"v-6c8528da#2\",\"509\":\"v-6c8528da#2/1\",\"510\":\"v-6c8528da#3\",\"511\":\"v-6c8528da#4\",\"512\":\"v-6c8528da#4/2\",\"513\":\"v-6c8528da#5\",\"514\":\"v-6c8528da#5/3\",\"515\":\"v-6c8528da#6\",\"516\":\"v-6c8528da#6/4\",\"517\":\"v-6c8528da#7\",\"518\":\"v-6c8528da#7/5\",\"519\":\"v-6c8528da#8\",\"520\":\"v-6c8528da#8/6\",\"521\":\"v-6c8528da#9\",\"522\":\"v-6c8528da#9/7\",\"523\":\"v-6c8528da#10\",\"524\":\"v-6c8528da#10/8\",\"525\":\"v-6c8528da#10/9\",\"526\":\"v-6c8528da#11\",\"527\":\"v-6c8528da#11/0\",\"528\":\"v-6c8528da#11/1\",\"529\":\"v-6c8528da#11/2\",\"530\":\"v-6c8528da#11/3\",\"531\":\"v-6c8528da#12\",\"532\":\"v-6c8528da#12/4\",\"533\":\"v-6c8528da#13\",\"534\":\"v-6c8528da#14\",\"535\":\"v-6c8528da#14/5\",\"536\":\"v-6c8528da#15\",\"537\":\"v-6c8528da#15/0\",\"538\":\"v-6c8528da#15/1\",\"539\":\"v-6c8528da#15/2\",\"540\":\"v-6c8528da#16\",\"541\":\"v-6c8528da#16/0\",\"542\":\"v-6c8528da#16/1\",\"543\":\"v-6c8528da@0\",\"544\":\"v-6c8528da@1\",\"545\":\"v-3eed5af0\",\"546\":\"v-3eed5af0#1\",\"547\":\"v-3eed5af0#1/0\",\"548\":\"v-3eed5af0#2\",\"549\":\"v-3eed5af0#2/0\",\"550\":\"v-3eed5af0#2/1\",\"551\":\"v-3eed5af0#2/2\",\"552\":\"v-3eed5af0#2/3\",\"553\":\"v-3eed5af0#2/4\",\"554\":\"v-3eed5af0#2/5\",\"555\":\"v-3eed5af0#2/6\",\"556\":\"v-3eed5af0#2/7\",\"557\":\"v-3eed5af0#2/8\",\"558\":\"v-3eed5af0#2/9\",\"559\":\"v-3eed5af0#3\",\"560\":\"v-3eed5af0#3/10\",\"561\":\"v-3eed5af0#4\",\"562\":\"v-3eed5af0#5\",\"563\":\"v-3eed5af0#5/0\",\"564\":\"v-3eed5af0#6\",\"565\":\"v-3eed5af0#6/1\",\"566\":\"v-3eed5af0#6/2\",\"567\":\"v-3eed5af0#6/3\",\"568\":\"v-3eed5af0#6/4\",\"569\":\"v-3eed5af0#6/5\",\"570\":\"v-3eed5af0#7\",\"571\":\"v-3eed5af0#7/6\",\"572\":\"v-3eed5af0#8\",\"573\":\"v-3eed5af0#8/7\",\"574\":\"v-3eed5af0#8/8\",\"575\":\"v-3eed5af0#8/9\",\"576\":\"v-3eed5af0#8/10\",\"577\":\"v-3eed5af0#8/11\",\"578\":\"v-3eed5af0#9\",\"579\":\"v-3eed5af0#9/12\",\"580\":\"v-3eed5af0#10\",\"581\":\"v-3eed5af0#10/0\",\"582\":\"v-3eed5af0#11\",\"583\":\"v-3eed5af0#11/1\",\"584\":\"v-3eed5af0#12\",\"585\":\"v-3eed5af0#12/2\",\"586\":\"v-3eed5af0#13\",\"587\":\"v-3eed5af0#13/3\",\"588\":\"v-3eed5af0#14\",\"589\":\"v-3eed5af0#14/4\",\"590\":\"v-3eed5af0#15\",\"591\":\"v-3eed5af0#15/0\",\"592\":\"v-3eed5af0#15/1\",\"593\":\"v-3eed5af0#15/2\",\"594\":\"v-3eed5af0#15/3\",\"595\":\"v-3eed5af0#15/4\",\"596\":\"v-3eed5af0#15/5\",\"597\":\"v-3eed5af0#15/6\",\"598\":\"v-3eed5af0#16\",\"599\":\"v-3eed5af0#17\",\"600\":\"v-3eed5af0#17/0\",\"601\":\"v-3eed5af0#17/1\",\"602\":\"v-3eed5af0#18\",\"603\":\"v-3eed5af0#18/2\",\"604\":\"v-3eed5af0#19\",\"605\":\"v-3eed5af0#19/3\",\"606\":\"v-3eed5af0#20\",\"607\":\"v-3eed5af0#20/0\",\"608\":\"v-3eed5af0#20/1\",\"609\":\"v-3eed5af0#21\",\"610\":\"v-3eed5af0#21/2\",\"611\":\"v-3eed5af0#22\",\"612\":\"v-3eed5af0#22/3\",\"613\":\"v-3eed5af0#22/4\",\"614\":\"v-3eed5af0#22/5\",\"615\":\"v-3eed5af0#23\",\"616\":\"v-3eed5af0#23/6\",\"617\":\"v-3eed5af0#24\",\"618\":\"v-3eed5af0#25\",\"619\":\"v-3eed5af0#25/7\",\"620\":\"v-3eed5af0#26\",\"621\":\"v-3eed5af0#26/0\",\"622\":\"v-3eed5af0#27\",\"623\":\"v-3eed5af0#27/1\",\"624\":\"v-3eed5af0#28\",\"625\":\"v-3eed5af0#28/2\",\"626\":\"v-3eed5af0#29\",\"627\":\"v-3eed5af0#29/3\",\"628\":\"v-3eed5af0#30\",\"629\":\"v-3eed5af0#30/4\",\"630\":\"v-3eed5af0#31\",\"631\":\"v-3eed5af0#31/5\",\"632\":\"v-3eed5af0#32\",\"633\":\"v-3eed5af0#32/0\",\"634\":\"v-3eed5af0#33\",\"635\":\"v-3eed5af0#33/1\",\"636\":\"v-3eed5af0#34\",\"637\":\"v-3eed5af0#35\",\"638\":\"v-3eed5af0@0\",\"639\":\"v-3eed5af0@1\",\"640\":\"v-3fc7045a\",\"641\":\"v-5e797cda\",\"642\":\"v-d5b928c8\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1],\"1\":[null,1],\"2\":[null,6],\"3\":[null,14],\"4\":[null,3],\"5\":[null,null,1],\"6\":[null,null,1],\"7\":[1],\"8\":[1],\"9\":[1],\"10\":[null,1],\"11\":[null,null,1],\"12\":[1],\"13\":[null,4],\"14\":[null,3],\"15\":[null,1],\"16\":[null,1],\"17\":[null,1],\"18\":[null,1],\"19\":[null,1],\"20\":[null,1],\"21\":[null,3],\"22\":[null,1],\"23\":[null,1],\"24\":[null,1],\"25\":[null,null,1],\"26\":[null,null,1],\"27\":[1],\"28\":[null,2],\"29\":[null,5],\"30\":[null,5],\"31\":[null,null,1],\"32\":[null,null,1],\"33\":[1],\"34\":[null,3],\"35\":[1],\"36\":[null,6],\"37\":[null,4],\"38\":[null,6],\"39\":[null,3],\"40\":[null,5],\"41\":[1],\"42\":[null,3],\"43\":[null,1],\"44\":[null,6],\"45\":[null,7],\"46\":[null,2],\"47\":[null,4],\"48\":[1],\"49\":[null,2],\"50\":[null,1],\"51\":[null,1],\"52\":[null,3],\"53\":[null,2],\"54\":[null,1],\"55\":[null,1],\"56\":[null,1],\"57\":[null,1],\"58\":[null,1],\"59\":[null,4],\"60\":[null,null,1],\"61\":[null,null,2],\"62\":[1],\"63\":[3],\"64\":[null,12],\"65\":[2],\"66\":[null,25],\"67\":[2],\"68\":[null,17],\"69\":[2],\"70\":[null,16],\"71\":[2],\"72\":[null,32],\"73\":[2],\"74\":[null,13],\"75\":[2],\"76\":[null,39],\"77\":[null,null,1],\"78\":[null,null,1],\"79\":[1],\"80\":[1],\"81\":[null,1],\"82\":[1],\"83\":[null,20],\"84\":[1],\"85\":[null,12],\"86\":[1],\"87\":[1],\"88\":[null,7],\"89\":[1],\"90\":[null,2],\"91\":[null,16],\"92\":[1],\"93\":[null,3],\"94\":[null,35],\"95\":[1],\"96\":[null,1],\"97\":[null,1],\"98\":[null,1],\"99\":[null,1],\"100\":[null,3],\"101\":[null,1],\"102\":[null,1],\"103\":[null,1],\"104\":[null,1],\"105\":[null,1],\"106\":[null,1],\"107\":[null,1],\"108\":[null,1],\"109\":[null,1],\"110\":[null,1],\"111\":[1],\"112\":[null,null,1],\"113\":[null,null,1],\"114\":[1],\"115\":[2],\"116\":[2],\"117\":[null,1],\"118\":[null,6],\"119\":[null,15],\"120\":[1],\"121\":[null,45],\"122\":[1],\"123\":[null,75],\"124\":[1],\"125\":[null,63],\"126\":[null,null,1],\"127\":[null,null,1],\"128\":[1],\"129\":[1],\"130\":[null,10],\"131\":[null,16],\"132\":[1],\"133\":[null,15],\"134\":[null,22],\"135\":[null,60],\"136\":[null,24],\"137\":[4],\"138\":[null,14],\"139\":[3],\"140\":[null,1],\"141\":[null,20],\"142\":[null,3],\"143\":[2],\"144\":[null,5],\"145\":[null,5],\"146\":[null,4],\"147\":[2],\"148\":[null,6],\"149\":[null,5],\"150\":[2],\"151\":[null,4],\"152\":[null,4],\"153\":[null,4],\"154\":[2],\"155\":[null,5],\"156\":[null,5],\"157\":[1],\"158\":[null,1],\"159\":[null,2],\"160\":[null,27],\"161\":[null,2],\"162\":[null,13],\"163\":[null,1],\"164\":[null,70],\"165\":[null,1],\"166\":[null,42],\"167\":[1],\"168\":[null,1],\"169\":[null,4],\"170\":[null,1],\"171\":[null,6],\"172\":[null,1],\"173\":[null,2],\"174\":[null,16],\"175\":[7],\"176\":[null,14],\"177\":[null,2],\"178\":[null,38],\"179\":[1],\"180\":[null,1],\"181\":[null,13],\"182\":[null,3],\"183\":[null,11],\"184\":[null,1],\"185\":[null,40],\"186\":[null,1],\"187\":[null,34],\"188\":[null,58],\"189\":[1],\"190\":[3],\"191\":[null,3],\"192\":[null,7],\"193\":[null,5],\"194\":[null,4],\"195\":[null,3],\"196\":[1],\"197\":[null,85],\"198\":[1],\"199\":[null,1],\"200\":[null,1],\"201\":[null,15],\"202\":[null,1],\"203\":[null,22],\"204\":[null,1],\"205\":[null,32],\"206\":[1],\"207\":[1],\"208\":[null,14],\"209\":[null,35],\"210\":[null,null,1],\"211\":[null,null,1],\"212\":[1],\"213\":[1],\"214\":[1],\"215\":[null,2],\"216\":[null,9],\"217\":[null,6],\"218\":[null,5],\"219\":[3],\"220\":[null,31],\"221\":[3],\"222\":[null,76],\"223\":[1],\"224\":[null,15],\"225\":[1],\"226\":[1],\"227\":[null,9],\"228\":[null,1],\"229\":[null,11],\"230\":[null,3],\"231\":[null,8],\"232\":[null,1],\"233\":[null,12],\"234\":[1],\"235\":[null,9],\"236\":[null,7],\"237\":[null,3],\"238\":[null,17],\"239\":[1],\"240\":[null,150],\"241\":[2],\"242\":[null,20],\"243\":[null,null,1],\"244\":[null,null,1],\"245\":[1],\"246\":[null,2],\"247\":[null,2],\"248\":[1],\"249\":[null,1],\"250\":[null,9],\"251\":[null,1],\"252\":[null,9],\"253\":[null,1],\"254\":[null,7],\"255\":[1],\"256\":[null,8],\"257\":[null,2],\"258\":[1],\"259\":[null,6],\"260\":[null,4],\"261\":[1],\"262\":[null,16],\"263\":[null,16],\"264\":[1],\"265\":[null,1],\"266\":[null,8],\"267\":[null,1],\"268\":[null,6],\"269\":[1],\"270\":[null,1],\"271\":[null,1],\"272\":[null,1],\"273\":[null,1],\"274\":[null,1],\"275\":[null,1],\"276\":[null,1],\"277\":[null,2],\"278\":[null,1],\"279\":[null,3],\"280\":[null,2],\"281\":[null,2],\"282\":[null,2],\"283\":[null,2],\"284\":[null,4],\"285\":[null,2],\"286\":[null,1],\"287\":[null,3],\"288\":[null,1],\"289\":[null,2],\"290\":[null,1],\"291\":[null,3],\"292\":[null,1],\"293\":[1],\"294\":[null,2],\"295\":[null,1],\"296\":[null,5],\"297\":[null,1],\"298\":[null,6],\"299\":[null,3],\"300\":[null,7],\"301\":[1],\"302\":[null,1],\"303\":[null,1],\"304\":[null,13],\"305\":[1],\"306\":[null,4],\"307\":[null,2],\"308\":[null,3],\"309\":[null,10],\"310\":[1],\"311\":[null,7],\"312\":[null,6],\"313\":[null,7],\"314\":[1],\"315\":[1],\"316\":[null,20],\"317\":[1],\"318\":[null,22],\"319\":[1],\"320\":[null,21],\"321\":[1],\"322\":[null,2],\"323\":[null,3],\"324\":[null,2],\"325\":[null,3],\"326\":[null,3],\"327\":[1],\"328\":[null,1],\"329\":[null,16],\"330\":[null,3],\"331\":[null,5],\"332\":[null,5],\"333\":[null,3],\"334\":[null,5],\"335\":[1],\"336\":[null,9],\"337\":[null,1],\"338\":[1],\"339\":[null,2],\"340\":[null,14],\"341\":[1],\"342\":[null,2],\"343\":[null,14],\"344\":[1],\"345\":[null,2],\"346\":[1],\"347\":[null,2],\"348\":[null,11],\"349\":[1],\"350\":[null,6],\"351\":[null,3],\"352\":[null,15],\"353\":[1],\"354\":[null,6],\"355\":[1],\"356\":[null,null,1],\"357\":[null,null,1],\"358\":[1],\"359\":[null,1],\"360\":[null,1],\"361\":[null,20],\"362\":[null,2],\"363\":[2],\"364\":[null,8],\"365\":[null,18],\"366\":[1],\"367\":[null,1],\"368\":[null,26],\"369\":[null,1],\"370\":[null,32],\"371\":[null,1],\"372\":[null,25],\"373\":[null,null,1],\"374\":[null,null,1],\"375\":[2],\"376\":[2],\"377\":[null,11],\"378\":[null,7],\"379\":[null,3],\"380\":[null,2],\"381\":[null,2],\"382\":[null,2],\"383\":[null,3],\"384\":[null,2],\"385\":[1],\"386\":[null,53],\"387\":[1],\"388\":[null,1],\"389\":[null,79],\"390\":[1],\"391\":[null,1],\"392\":[1],\"393\":[null,3],\"394\":[null,3],\"395\":[null,6],\"396\":[null,7],\"397\":[null,3],\"398\":[null,5],\"399\":[null,4],\"400\":[null,7],\"401\":[1],\"402\":[null,1],\"403\":[null,1],\"404\":[1],\"405\":[null,1],\"406\":[null,16],\"407\":[null,1],\"408\":[null,30],\"409\":[1],\"410\":[null,19],\"411\":[null,21],\"412\":[1],\"413\":[null,5],\"414\":[null,2],\"415\":[null,8],\"416\":[null,7],\"417\":[null,6],\"418\":[null,8],\"419\":[null,5],\"420\":[null,5],\"421\":[null,7],\"422\":[null,36],\"423\":[null,null,1],\"424\":[null,null,1],\"425\":[1],\"426\":[null,10],\"427\":[1],\"428\":[null,1],\"429\":[null,1],\"430\":[null,19],\"431\":[1],\"432\":[null,65],\"433\":[1],\"434\":[null,78],\"435\":[1],\"436\":[null,50],\"437\":[1],\"438\":[null,1],\"439\":[null,4],\"440\":[null,2],\"441\":[null,1],\"442\":[null,2],\"443\":[1],\"444\":[null,55],\"445\":[1],\"446\":[null,2],\"447\":[null,1],\"448\":[null,1],\"449\":[null,1],\"450\":[null,3],\"451\":[null,1],\"452\":[null,1],\"453\":[1],\"454\":[null,33],\"455\":[1],\"456\":[null,49],\"457\":[1],\"458\":[1],\"459\":[null,1],\"460\":[null,5],\"461\":[null,2],\"462\":[null,5],\"463\":[null,3],\"464\":[null,4],\"465\":[1],\"466\":[null,30],\"467\":[1],\"468\":[null,53],\"469\":[null,52],\"470\":[1],\"471\":[null,1],\"472\":[null,12],\"473\":[null,2],\"474\":[null,5],\"475\":[null,2],\"476\":[null,3],\"477\":[1],\"478\":[null,32],\"479\":[null,61],\"480\":[3],\"481\":[null,13],\"482\":[null,13],\"483\":[1],\"484\":[null,34],\"485\":[1],\"486\":[null,24],\"487\":[1],\"488\":[null,22],\"489\":[1],\"490\":[null,26],\"491\":[1],\"492\":[null,29],\"493\":[1],\"494\":[null,28],\"495\":[1],\"496\":[null,2],\"497\":[null,44],\"498\":[1],\"499\":[null,30],\"500\":[1],\"501\":[null,19],\"502\":[null,null,1],\"503\":[null,null,1],\"504\":[1],\"505\":[null,1],\"506\":[1],\"507\":[null,9],\"508\":[1],\"509\":[null,12],\"510\":[1],\"511\":[2],\"512\":[null,23],\"513\":[1],\"514\":[null,29],\"515\":[1],\"516\":[null,25],\"517\":[1],\"518\":[null,28],\"519\":[1],\"520\":[null,33],\"521\":[2],\"522\":[null,35],\"523\":[1],\"524\":[null,6],\"525\":[null,10],\"526\":[1],\"527\":[null,2],\"528\":[null,11],\"529\":[null,2],\"530\":[null,52],\"531\":[1],\"532\":[null,20],\"533\":[1],\"534\":[1],\"535\":[null,12],\"536\":[1],\"537\":[null,12],\"538\":[null,10],\"539\":[null,5],\"540\":[1],\"541\":[null,13],\"542\":[null,33],\"543\":[null,null,1],\"544\":[null,null,1],\"545\":[2],\"546\":[1],\"547\":[null,5],\"548\":[1],\"549\":[null,4],\"550\":[null,3],\"551\":[null,3],\"552\":[null,1],\"553\":[null,2],\"554\":[null,17],\"555\":[null,2],\"556\":[null,17],\"557\":[null,2],\"558\":[null,26],\"559\":[1],\"560\":[null,23],\"561\":[1],\"562\":[1],\"563\":[null,25],\"564\":[1],\"565\":[null,27],\"566\":[null,1],\"567\":[null,11],\"568\":[null,2],\"569\":[null,10],\"570\":[1],\"571\":[null,32],\"572\":[1],\"573\":[null,4],\"574\":[null,2],\"575\":[null,4],\"576\":[null,2],\"577\":[null,40],\"578\":[1],\"579\":[null,2],\"580\":[1],\"581\":[null,25],\"582\":[1],\"583\":[null,8],\"584\":[1],\"585\":[null,34],\"586\":[1],\"587\":[null,38],\"588\":[1],\"589\":[null,5],\"590\":[1],\"591\":[null,2],\"592\":[null,26],\"593\":[null,1],\"594\":[null,19],\"595\":[null,1],\"596\":[null,34],\"597\":[null,2],\"598\":[1],\"599\":[1],\"600\":[null,3],\"601\":[null,13],\"602\":[1],\"603\":[null,15],\"604\":[1],\"605\":[null,1],\"606\":[1],\"607\":[null,5],\"608\":[null,32],\"609\":[1],\"610\":[null,15],\"611\":[1],\"612\":[null,5],\"613\":[null,5],\"614\":[null,21],\"615\":[1],\"616\":[null,25],\"617\":[1],\"618\":[1],\"619\":[null,5],\"620\":[2],\"621\":[null,11],\"622\":[4],\"623\":[null,32],\"624\":[2],\"625\":[null,26],\"626\":[2],\"627\":[null,32],\"628\":[2],\"629\":[null,20],\"630\":[1],\"631\":[null,6],\"632\":[2],\"633\":[null,36],\"634\":[2],\"635\":[null,26],\"636\":[1],\"637\":[1],\"638\":[null,null,1],\"639\":[null,null,1],\"640\":[1],\"641\":[1],\"642\":[1]},\"averageFieldLength\":[1.1915013229747524,10.319252343608683,0.5174502922489967],\"storedFields\":{\"0\":{\"h\":\"Home\"},\"1\":{\"t\":\"Maven中央仓库\"},\"2\":{\"t\":\"Vuepress + GitHub Actions 实现博客自动部署！\"},\"3\":{\"t\":\"Gitworkflows 部署 vuepress 错误“The process ‘/usr/bin/git‘ failed with exit code 1\"},\"4\":{\"t\":\"Github actions 部署vue项目\"},\"5\":{\"c\":[\"使用指南\"]},\"6\":{\"c\":[\"Home\"]},\"7\":{\"h\":\"幻灯片页\"},\"8\":{\"h\":\"学习与记录\"},\"9\":{\"h\":\"目录\",\"a\":\"目录\"},\"10\":{\"t\":\"Linux\"},\"11\":{\"c\":[\"使用指南\"]},\"12\":{\"h\":\"布局与功能禁用\"},\"13\":{\"t\":\"你可以通过设置页面的 Frontmatter，在页面禁用功能与布局。\"},\"14\":{\"t\":\"本页面就是一个示例，禁用了如下功能:\"},\"15\":{\"t\":\"导航栏\"},\"16\":{\"t\":\"侧边栏\"},\"17\":{\"t\":\"路径导航\"},\"18\":{\"t\":\"页面信息\"},\"19\":{\"t\":\"贡献者\"},\"20\":{\"t\":\"更新时间\"},\"21\":{\"t\":\"上一篇/下一篇 链接\"},\"22\":{\"t\":\"评论\"},\"23\":{\"t\":\"页脚\"},\"24\":{\"t\":\"返回顶部按钮\"},\"25\":{\"c\":[\"使用指南\"]},\"26\":{\"c\":[\"禁用\"]},\"27\":{\"h\":\"密码加密的文章\"},\"28\":{\"t\":\"实际的文章内容。\"},\"29\":{\"t\":\"段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字。\"},\"30\":{\"t\":\"段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字。\"},\"31\":{\"c\":[\"使用指南\"]},\"32\":{\"c\":[\"文章加密\"]},\"33\":{\"h\":\"页面配置\"},\"34\":{\"t\":\"more 注释之前的内容被视为文章摘要。\"},\"35\":{\"h\":\"页面信息\",\"a\":\"页面信息\"},\"36\":{\"t\":\"你可以在 Markdown 的 Frontmatter 中设置页面信息。\"},\"37\":{\"t\":\"作者设置为 Ms.Hope。\"},\"38\":{\"t\":\"写作日期为 2020 年 1 月 1 日\"},\"39\":{\"t\":\"分类为 “使用指南”\"},\"40\":{\"t\":\"标签为 “页面配置” 和 “使用指南”\"},\"41\":{\"h\":\"页面内容\",\"a\":\"页面内容\"},\"42\":{\"t\":\"你可以自由在这里书写你的 Markdown。\"},\"43\":{\"t\":\"提示\"},\"44\":{\"t\":\"你可以将图片和 Markdown 文件放置在一起，但是你需要使用相对链接./ 进行引用。\"},\"45\":{\"t\":\"对于 .vuepress/public 文件夹的图片，请使用绝对链接 / 进行引用。\"},\"46\":{\"t\":\"主题包含了一个自定义徽章可以使用:\"},\"47\":{\"t\":\"文字结尾应该有深蓝色的 徽章文字 徽章。 \"},\"48\":{\"h\":\"页面结构\",\"a\":\"页面结构\"},\"49\":{\"t\":\"此页面应当包含:\"},\"50\":{\"t\":\"路径导航\"},\"51\":{\"t\":\"标题和页面信息\"},\"52\":{\"t\":\"TOC (文章标题列表)\"},\"53\":{\"t\":\"贡献者、更新时间等页面元信息\"},\"54\":{\"t\":\"评论\"},\"55\":{\"t\":\"导航栏\"},\"56\":{\"t\":\"侧边栏\"},\"57\":{\"t\":\"页脚\"},\"58\":{\"t\":\"返回顶部按钮\"},\"59\":{\"t\":\"你可以通过主题选项和页面 Frontmatter 自定义它们。\"},\"60\":{\"c\":[\"使用指南\"]},\"61\":{\"c\":[\"页面配置\",\"使用指南\"]},\"62\":{\"h\":\"版本控制\"},\"63\":{\"h\":\"一、git安装后-指定名称和邮箱\",\"a\":\"一、git安装后-指定名称和邮箱\"},\"64\":{\"t\":\"$ git config --global user.name \\\"Your Name\\\" $ git config --global user.email \\\"email@example.com\\\" \"},\"65\":{\"h\":\"二.一分支管理\",\"a\":\"二-一分支管理\"},\"66\":{\"t\":\"git branch #查看分支 git chenkout xxx #切换为分支xxx git checkout -b xxx #新建分支xxx 并且切换过去 git branch -d xxx # 删除本地分支xxx git branch -D xxx #忽略修改 仍然删除分支xxx git fetch origin xxx #拉取远程分支xxx git push origin yyy # 把新建的分支yyy上传 git checkout -b first origin/first ##新建本地分支 和远程分支连接起来 \"},\"67\":{\"h\":\"二、创建版本库\",\"a\":\"二、创建版本库\"},\"68\":{\"t\":\"$ mkdir learngit //创建 $ cd learngit //使用 $ pwd //查看当前目录 $ git init //初始化，生成.git文件(若该文件隐藏，则使用ls -ah) \"},\"69\":{\"h\":\"三、把文件添加add和提交commit到版本库\",\"a\":\"三、把文件添加add和提交commit到版本库\"},\"70\":{\"t\":\"$ git add test.txt //添加 $ git commit -m \\\"wrote a test file\\\" //提交 $ git commit -m \\\"add 3 files.\\\" //一次性提交多个文件 \"},\"71\":{\"h\":\"四、版本控制\",\"a\":\"四、版本控制\"},\"72\":{\"t\":\"$ git log //查看提交历史记录，从最近到最远，可以看到3次 $ git log --pretty=oneline //加参，简洁查看 $ git reflog //查看每一次修改历史 $ cat test.txt //查看文件内容 $ git status //查看工作区中文件当前状态 $ git reset --hard HEAD^（HEAD~100）（commit id） //回退版本 $ git checkout -- test.txt //丢弃工作区的修改，即撤销修改 $ git reset HEAD test.txt //丢弃暂存区的修改（若已提交，则回退） \"},\"73\":{\"h\":\"五、删除文件\",\"a\":\"五、删除文件\"},\"74\":{\"t\":\"$ rm test.txt //直接删除 $ git rm test.txt $ git commit -m \\\"remove test.txt\\\" //删错了，恢复 $ git checkout -- test.txt \"},\"75\":{\"h\":\"六、远程仓库\",\"a\":\"六、远程仓库\"},\"76\":{\"t\":\"$ ssh-keygen -t rsa -C \\\"youremail@example.com\\\" //创建SSH Key $ git remote add origin git@github.com:Daisy/AKgit.git //关联 $ git push -u origin master //将本地内容推送到远程仓库（第一次） $ git push origin master //将本地内容推送到远程仓库（之后） $ git remote -v //查看远程仓库信息 $ git remote rm origin //删除远程仓库（解绑） $ git clone git@github.com: Daisy/AKgit.git //克隆远程仓库 //克隆之后使用和查看 $ cd gitskills $ ls $ git remote //查看远程库的信息 $ git remote -v //查看远程库的详细信息 \"},\"77\":{\"c\":[\"使用指南\"]},\"78\":{\"c\":[\"Markdown\"]},\"79\":{\"h\":\"Maven\"},\"80\":{\"h\":\"安装\",\"a\":\"安装\"},\"81\":{\"t\":\"下载地址中央仓库配置本地仓库\"},\"82\":{\"h\":\"阿里镜像\",\"a\":\"阿里镜像\"},\"83\":{\"t\":\"<mirror> <id>alimaven</id> <mirrorOf>central</mirrorOf> <name>aliyun maven</name> <url>http://maven.aliyun.com/nexus/content/repositories/central/</url> </mirror> \"},\"84\":{\"h\":\"简单命令\",\"a\":\"简单命令\"},\"85\":{\"t\":\"mvn compile #编译 mvn clean #清理 mvn test #测试 mvn package #打包 mvn install #安装到本地仓库 \"},\"86\":{\"h\":\"依赖管理\",\"a\":\"依赖管理\"},\"87\":{\"h\":\"依赖传递\",\"a\":\"依赖传递\"},\"88\":{\"t\":\"例如A依赖了B，B依赖了C和D，那么你就可以在A中，像主动依赖了C和D一样使用它们。并且传递的依赖是没有数量和层级的限制的，非常方便。\"},\"89\":{\"h\":\"可选依赖\",\"a\":\"可选依赖\"},\"90\":{\"t\":\"当别的项目引用这个jar包，optional为true时不让别人知道自己所用依赖\"},\"91\":{\"t\":\" <dependency> <groupId>joda-time</groupId> <artifactId>joda-time</artifactId> <version>2.9.9</version> // 可选依赖 <optional>true</optional> </dependency> \"},\"92\":{\"h\":\"排除依赖\",\"a\":\"排除依赖\"},\"93\":{\"t\":\"加入某个jar包依赖后，不想使用其中的某个依赖，使用坐标主动排除掉\"},\"94\":{\"t\":\"<dependency> <groupId>org.apache.struts</groupId> <artifactId>struts2-core</artifactId> <version>${struts.version}</version> <exclusions> <exclusion> <!-- we prefer our explicit version, though it should be the same --> <groupId>asm</groupId> <artifactId>asm</artifactId> </exclusion> </exclusions> </dependency> <dependency> <groupId>asm</groupId> <artifactId>asm</artifactId> <version>3.3.1</version> </dependency> \"},\"95\":{\"h\":\"依赖范围\",\"a\":\"依赖范围\"},\"96\":{\"t\":\"scope\"},\"97\":{\"t\":\"主代码\"},\"98\":{\"t\":\"测试代码\"},\"99\":{\"t\":\"打包\"},\"100\":{\"t\":\"compile(默认)\"},\"101\":{\"t\":\"Y\"},\"102\":{\"t\":\"Y\"},\"103\":{\"t\":\"Y\"},\"104\":{\"t\":\"test\"},\"105\":{\"t\":\"Y\"},\"106\":{\"t\":\"provided\"},\"107\":{\"t\":\"Y\"},\"108\":{\"t\":\"Y\"},\"109\":{\"t\":\"runtime\"},\"110\":{\"t\":\"Y\"},\"111\":{\"h\":\"\",\"a\":\"\"},\"112\":{\"c\":[\"使用指南\"]},\"113\":{\"c\":[\"Markdown\"]},\"114\":{\"h\":\"阿里云对象存储\"},\"115\":{\"h\":\"阿里官方文档 Java上传文件概述和文件下载\",\"a\":\"阿里官方文档java上传文件概述和文件下载\"},\"116\":{\"h\":\"使用RAM访问 更安全\",\"a\":\"使用ram访问-更安全\"},\"117\":{\"t\":\"警告\"},\"118\":{\"t\":\"主账号AccessKey泄露会威胁您所有资源的安全。建议使用子账号（RAM用户）AccessKey进行操作，可以有效降低AccessKey泄露的风险。\"},\"119\":{\"t\":\"① 使用RAM用户访问密钥发起请求 ② \\\"Action\\\": [ \\\"oss:PutObject\\\", \\\"oss:ListObjects\\\", \\\"oss:DeleteObject\\\" ],放行权限 上传/目录/删除 权限 ③ 跨域放行\"},\"120\":{\"h\":\"上传图片\",\"a\":\"上传图片\"},\"121\":{\"t\":\"public List uploadObject(MultipartFile file) throws IOException { // Endpoint以华东1（杭州）为例，其它Region请按实际情况填写。 String Endpoint = \\\"https://oss-cn-hangzhou.aliyuncs.com\\\"; // 阿里云账号AccessKey拥有所有API的访问权限，风险很高。强烈建议您创建并使用RAM用户进行API访问或日常运维，请登录RAM控制台创建RAM用户。 String AccessKeyId = \\\"yourAccessKeyId\\\"; String AccessKeySecret = \\\"yourAccessKeySecret\\\"; // 填写Bucket名称，例如examplebucket。 String BucketName = \\\"examplebucket\\\"; String originalFilename = file.getOriginalFilename(); OSS os = new OSSClientBuilder().build( Endpoint , AccessKeyId , AccessKeySecret ); os.putObject( BucketName , originalFilename, file.getInputStream() ); os.shutdown(); return getList(); } \"},\"122\":{\"h\":\"目录列表\",\"a\":\"目录列表\"},\"123\":{\"t\":\"public List getList(){ OSS ossClient = new OSSClientBuilder().build( Endpoint ,AccessKeyId ,AccessKeySecert); try { // 列举文件。如果不设置keyPrefix，则列举存储空间下的所有文件。如果设置keyPrefix，则列举包含指定前缀的文件。 ObjectListing objectListing = ossClient.listObjects(Bucket); List<OSSObjectSummary> sums = objectListing.getObjectSummaries(); ArrayList<String> list = new ArrayList<>(); for (OSSObjectSummary s : sums) { // System.out.println(\\\"\\\\t\\\" + s.getKey()); list.add(s.getKey());//返回所有的链接 } return list; } catch (OSSException oe) { System.out.println(\\\"Caught an OSSException, which means your request made it to OSS, \\\" + \\\"but was rejected with an error response for some reason.\\\"); System.out.println(\\\"Error Message:\\\" + oe.getErrorMessage()); System.out.println(\\\"Error Code:\\\" + oe.getErrorCode()); System.out.println(\\\"Request ID:\\\" + oe.getRequestId()); System.out.println(\\\"Host ID:\\\" + oe.getHostId()); } finally { if (ossClient != null) { ossClient.shutdown(); } } return null; } \"},\"124\":{\"h\":\"删除图片\",\"a\":\"删除图片\"},\"125\":{\"t\":\"public List deleteObject(String s){ //s为图片的名字 OSS ossClient = new OSSClientBuilder().build( Endpoint() ,AccessKeyId() ,AccessKeySecert()); try { // 删除文件或目录。如果要删除目录，目录必须为空。 ossClient.deleteObject(Bucket(), s); return this.getList(); } catch (OSSException oe) { System.out.println(\\\"Caught an OSSException, which means your request made it to OSS, \\\" + \\\"but was rejected with an error response for some reason.\\\"); System.out.println(\\\"Error Message:\\\" + oe.getErrorMessage()); System.out.println(\\\"Error Code:\\\" + oe.getErrorCode()); System.out.println(\\\"Request ID:\\\" + oe.getRequestId()); System.out.println(\\\"Host ID:\\\" + oe.getHostId()); } finally { if (ossClient != null) { ossClient.shutdown(); } } return null; } \"},\"126\":{\"c\":[\"使用指南\"]},\"127\":{\"c\":[\"Markdown\"]},\"128\":{\"h\":\"书本\"},\"129\":{\"h\":\"静态资源访问\",\"a\":\"静态资源访问\"},\"130\":{\"t\":\"spring: mvc: static-path-pattern: /static/** web: resources: static-locations: classpath:/static/ \"},\"131\":{\"t\":\"@Configuration public class staticHandles implements WebMvcConfigurer { @Override public void addResourceHandlers(ResourceHandlerRegistry registry) { registry.addResourceHandler(\\\"/static/**\\\") .addResourceLocations(\\\"classpath:/static/\\\"); } } \"},\"132\":{\"h\":\"文件上传\",\"a\":\"文件上传\"},\"133\":{\"t\":\" <dependency> <groupId>javax.servlet</groupId> <artifactId>servlet-api</artifactId> <version>2.5</version> <scope>provided</scope> </dependency> \"},\"134\":{\"t\":\" <form action=\\\"/upload\\\" method=\\\"post\\\" enctype=\\\"multipart/form-data\\\"> <input type=\\\"file\\\" name=\\\"uploadFile\\\" value=\\\"选择文件\\\"> <input type=\\\"submit\\\" value=\\\"上传\\\"> </form> \"},\"135\":{\"t\":\"@RestController public class FileUploadController { SimpleDateFormat sdf = new SimpleDateFormat(\\\"yyyy/MM/dd\\\"); @PostMapping(\\\"/upload\\\") public String upload(MultipartFile uploadFile, HttpServletRequest req){ // 运行目录下 没有文件夹 就建一个 String realPath = req.getSession().getServletContext().getRealPath(\\\"/uploadFile/\\\"); System.out.println(realPath); String format = sdf.format(new Date()); File folder = new File(realPath + format); if(!folder.isDirectory()){ folder.mkdirs(); } // 重命名 String oldName = uploadFile.getOriginalFilename(); String newName = UUID.randomUUID().toString() + oldName.substring(oldName.lastIndexOf(\\\".\\\")); try{ // 保存 uploadFile.transferTo(new File(folder,newName)); // 返回路径 String filePath = req.getScheme() + \\\"://\\\" + req.getServerName() + \\\":\\\" + req.getServerPort() + \\\"/uploadFile/\\\" + format + newName; return filePath; } catch (IOException e) { throw new RuntimeException(e); } } } \"},\"136\":{\"t\":\"spring: servlet: multipart: # 是否开启上传 enabled: true file-size-threshold: 0 # 保存临时位置 location: E:\\\\\\\\temp # 最大 max-file-size: 10MB # 总大小 max-request-size: 10MB # 是否延迟解析 resolve-lazily: false \"},\"137\":{\"h\":\"热加载（Hot Swap）\",\"a\":\"热加载-hot-swap\"},\"138\":{\"t\":\" <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-devtools</artifactId> <optional>true</optional> </dependency> \"},\"139\":{\"h\":\"WebSocket 和 SockJS\",\"a\":\"websocket-和-sockjs\"},\"140\":{\"t\":\"应用场景\"},\"141\":{\"t\":\"WebSocket 和 SockJS 两者都应用广泛，具体应该根据实际情况来选择。WebSocket 是 HTML5 的一种新协议，它实现了浏览器与服务器全双工通信，实现了客户端与服务器端的实时通信。而 SockJS 是 WebSocket 的一个 polyfill 实现，即当浏览器不支持 WebSocket 时，SockJS 可以自动降级为支持长轮询等传输方式的 WebSocket 模拟实现，从而使得浏览器与服务器之间的通信始终保持稳定和高效。\"},\"142\":{\"t\":\"WebSocket和SockJS都是在Web应用程序中使用实时通信的协议，它们都有自己的优势和缺点。\"},\"143\":{\"h\":\"WebSocket的优势：\",\"a\":\"websocket的优势\"},\"144\":{\"t\":\"简单易用：WebSocket是一个非常简单的协议，只需建立连接，就可以进行双向通信。\"},\"145\":{\"t\":\"高效性：WebSocket的头部信息非常小，数据格式紧凑，因此数据传输的效率非常高。\"},\"146\":{\"t\":\"双向通信：WebSocket提供了双向通信的功能，可以同时在客户端和服务器端发送和接收消息。\"},\"147\":{\"h\":\"WebSocket的缺点：\",\"a\":\"websocket的缺点\"},\"148\":{\"t\":\"支持性：WebSocket是HTML5标准的一部分，因此只有在支持HTML5的浏览器中才能使用。对于老的浏览器，需要使用polyfill或其他技术。\"},\"149\":{\"t\":\"长连接：WebSocket在连接建立后会一直保持连接，如果服务器端不能正常关闭连接，可能会导致资源浪费和性能问题。\"},\"150\":{\"h\":\"SockJS的优势：\",\"a\":\"sockjs的优势\"},\"151\":{\"t\":\"跨浏览器：SockJS可以在所有支持JavaScript的浏览器中运行，甚至包括IE6。\"},\"152\":{\"t\":\"支持性：SockJS可以通过polyfill模拟WebSocket的功能，因此在不支持WebSocket的浏览器中也可以使用。\"},\"153\":{\"t\":\"可靠性：SockJS在不支持WebSocket的浏览器中使用的是长轮询技术，可以保证数据的可靠性。\"},\"154\":{\"h\":\"SockJS的缺点：\",\"a\":\"sockjs的缺点\"},\"155\":{\"t\":\"头部信息较大：因为SockJS在不支持WebSocket的浏览器中使用的是长轮询技术，因此需要发送大量的头部信息，导致数据传输效率较低。\"},\"156\":{\"t\":\"连接不稳定：由于SockJS在不支持WebSocket的浏览器中使用的是长轮询技术，因此可能会遇到连接不稳定的情况，例如断开连接或网络故障。\"},\"157\":{\"h\":\"发送邮件\",\"a\":\"发送邮件\"},\"158\":{\"t\":\"study\"},\"159\":{\"t\":\"application.yml\"},\"160\":{\"t\":\"spring: # 邮件配置 mail: host: smtp.qq.com port: 465 username: totryeverything@qq.com password:<第一步获得的密钥> default-encoding: utf-8 properties: mail: smtp: socketFactory: class: javax.net.ssl.SSLSocketFactory debug: true \"},\"161\":{\"t\":\"pom.xml\"},\"162\":{\"t\":\" <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-mail</artifactId> </dependency> \"},\"163\":{\"t\":\"Service\"},\"164\":{\"t\":\" @Service public class MailService { @Autowired JavaMailSender javaMailSender; // 抄送（CC），用户给收件人发出邮件的同时把该邮件抄送给另外的人，在这种抄送方式中，“收件人”知道发件人把该邮件抄送给了另外哪些人。 // 发送者 收件人 抄送人 主题 内容 public void sendSimpleMail(String from,String to, String subject,String content){ SimpleMailMessage msg = new SimpleMailMessage(); msg.setFrom(from); msg.setTo(to); msg.setSubject(subject); msg.setText(content); javaMailSender.send(msg); } // 发送带附件的邮件 public void sendFailMail(String from,String to, String subject,String content, File file) throws MessagingException { MimeMessage msg = javaMailSender.createMimeMessage(); MimeMessageHelper helper = new MimeMessageHelper(msg,true); helper.setFrom(from); helper.setTo(to); helper.setText(content); helper.setSubject(subject); helper.addAttachment(file.getName(),file); javaMailSender.send(msg); } // 附带图片 public void sendMailImg(String from,String to, String subject,String content, String[] srcPath, String[] resIds) throws MessagingException { if(srcPath.length!=resIds.length){ System.out.println(\\\"hello world\\\"); return ; } MimeMessage msg = javaMailSender.createMimeMessage(); MimeMessageHelper helper = new MimeMessageHelper(msg, true); helper.setFrom(from); helper.setTo(to); helper.setText(content,true);//表示正文是HTML格式 helper.setSubject(subject); for(int i=0;i<srcPath.length;i++){ FileSystemResource res = new FileSystemResource(new File(srcPath[i])); helper.addInline(resIds[i],res); } javaMailSender.send(msg); } } \"},\"165\":{\"t\":\"Test\"},\"166\":{\"t\":\" @Autowired private MailService mailService; @Test void sendSimpleMail() { mailService.sendSimpleMail(\\\"totryeverything@qq.com\\\",\\\"19138084894@163.com\\\", \\\"Test\\\",\\\"这只不过是一个测试而已\\\"); } @Test void sendFailMail() throws MessagingException { mailService.sendFailMail(\\\"totryeverything@qq.com\\\",\\\"19138084894@163.com\\\", \\\"Test\\\",\\\"这只不过是一个测试而已\\\",new File(\\\"E:\\\\\\\\c\\\\\\\\ToTryEveryThing\\\\\\\\README.md\\\")); } @Test void sendImgMail() throws MessagingException { mailService.sendMailImg(\\\"totryeverything@qq.com\\\",\\\"19138084894@163.com\\\", \\\"Test\\\", \\\"这只不过是一个测试而已\\\" + \\\"<img /><img />\\\", new String []{\\\"C:\\\\\\\\Users\\\\\\\\Administrator\\\\\\\\Pictures\\\\\\\\47f4c019880711ebb6edd017c2d2eca2.jpg\\\",\\\"C:\\\\\\\\Users\\\\\\\\Administrator\\\\\\\\Pictures\\\\\\\\下载 (2).png\\\"}, new String[]{\\\"p1\\\",\\\"p2\\\"} ); } \"},\"167\":{\"h\":\"定时任务\",\"a\":\"定时任务\"},\"168\":{\"t\":\"提示\"},\"169\":{\"t\":\"在Spring Boot应用程序中使用@Scheduled注解标记的定时任务是在应用程序启动时自动启动的。\"},\"170\":{\"t\":\"配置\"},\"171\":{\"t\":\"@Configuration @EnableScheduling public class ScheduledTasksConfig { } \"},\"172\":{\"t\":\"使用\"},\"173\":{\"t\":\"延迟5s启动 然后每隔5s运行一次\"},\"174\":{\"t\":\" @Scheduled(fixedRate = 5000,initialDelay = 5000) public String schedul (){ System.out.println(i++); return String.valueOf(i); } \"},\"175\":{\"h\":\"@Scheduled(cron = \\\"0 0 12 * * ?\\\"): 使用CRON表达式指定执行时间。\",\"a\":\"scheduled-cron-0-0-12-使用cron表达式指定执行时间。\"},\"176\":{\"t\":\"// 每天中午12点执行任务 @Scheduled(cron = \\\"0 0 12 * * ?\\\") public void doTask() { // your task code here } \"},\"177\":{\"t\":\"自启动 通过get方法停止任务\"},\"178\":{\"t\":\"@RestController public class ScheduleController { @Autowired private TaskScheduler taskScheduler; private ScheduledFuture<?> scheduledFuture; @PostConstruct public void start() { scheduledFuture = taskScheduler.scheduleWithFixedDelay(new MyTask(), 5000L);//5000ms } @GetMapping(\\\"/stop\\\") public String stop() { if (scheduledFuture != null) { scheduledFuture.cancel(true); } return \\\"stop\\\"; } private class MyTask implements Runnable { @Override public void run() { System.out.println(\\\"Task executing...\\\"); } } } \"},\"179\":{\"h\":\"数据校验\",\"a\":\"数据校验\"},\"180\":{\"t\":\"依赖\"},\"181\":{\"t\":\" <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-validation</artifactId> </dependency> \"},\"182\":{\"t\":\"配置 ValidationMessages.properties\"},\"183\":{\"t\":\"user.name.size = name user.address.notnull = adress user.age.size = age user.email.pattern = email \"},\"184\":{\"t\":\"pojo\"},\"185\":{\"t\":\"public class User { @Size(min = 2,max = 10, message = \\\"{user.name.size}\\\") private String name; @NotNull(message = \\\"{user.address.notnull}\\\") private String address; @DecimalMin(value = \\\"1\\\" ,message = \\\"{user.age.size}\\\") @DecimalMax(value = \\\"100\\\" ,message = \\\"{user.age.size}\\\") private Integer age; @Email(message = \\\"{user.email.pattern}\\\") private String email; public String getName() { return name; } public void setName(String name) { this.name = name; } public String getAddress() { return address; } public void setAddress(String address) { this.address = address; } public Integer getAge() { return age; } public void setAge(Integer age) { this.age = age; } public String getEmail() { return email; } public void setEmail(String email) { this.email = email; } } \"},\"186\":{\"t\":\"controller\"},\"187\":{\"t\":\"@RestController public class UserController { @PostMapping(\\\"/adduser/\\\") public List<String> addUser(@Validated User user, BindingResult bindingResult){ ArrayList<String> error = new ArrayList<>(); if(bindingResult.hasErrors()){ List<ObjectError> allErrors = bindingResult.getAllErrors(); for(ObjectError e : allErrors){ error.add(e.getDefaultMessage()); System.out.println(\\\"e.getDefaultMessage() = \\\" + e.getDefaultMessage()); } } return error; } } \"},\"188\":{\"t\":\"<template> <div> <!-- input 标签用于选择图片 --> <input type=\\\"file\\\" accept=\\\"image/*\\\" @change=\\\"previewImage\\\"> <!-- 预览图片的 img 标签 --> <img ref=\\\"previewImg\\\" style=\\\"max-width: 100%; max-height: 100%;\\\" /> </div> </template> <script> export default { methods: { previewImage(event) { // 获取选择的文件 const file = event.target.files[0]; // 判断是否是图片类型 if (file.type.startsWith('image/')) { // 创建 FileReader 对象 const reader = new FileReader(); // 读取图片文件 reader.readAsDataURL(file); // 在图片文件读取完毕后设置预览图片的 URL reader.onload = () => { this.$refs.previewImg.src = reader.result; }; } }, }, }; </script> \"},\"189\":{\"h\":\"分布式锁\",\"a\":\"分布式锁\"},\"190\":{\"h\":\"Redis分布式锁和Redisson分布式锁都是用于实现分布式系统中的分布式锁，但它们之间有以下区别：\",\"a\":\"redis分布式锁和redisson分布式锁都是用于实现分布式系统中的分布式锁-但它们之间有以下区别\"},\"191\":{\"t\":\"Redis分布式锁是基于Redis的SETNX命令实现的，而Redisson分布式锁是基于Redis的Redisson分布式框架实现的。\"},\"192\":{\"t\":\"Redis分布式锁需要手动编写锁逻辑代码，包括锁定、释放锁等。Redisson分布式锁封装了锁逻辑，并提供了API接口，使得锁的使用变得简单。\"},\"193\":{\"t\":\"Redis分布式锁在进行锁定和解锁操作时，需要自己实现保证操作的原子性。Redisson分布式锁内部封装了Redis的单线程模型，保证了锁的操作原子性。\"},\"194\":{\"t\":\"Redis分布式锁在锁定后需要手动维护锁的超时时间。Redisson分布式锁内部封装了锁的自动续期机制，避免了锁过期的问题。\"},\"195\":{\"t\":\"Redis分布式锁在高并发场景下可能存在死锁的问题。Redisson分布式锁使用Redlock算法避免了死锁的问题。\"},\"196\":{\"h\":\"redis分布式锁\",\"a\":\"redis分布式锁\"},\"197\":{\"t\":\"public Result regasdgsdgister(String account, String password) { final String key = account + \\\"-lock\\\"; final String value = System.nanoTime() + \\\" \\\" + UUID.randomUUID(); ValueOperations v = stringRedisTemplate.opsForValue(); Boolean res = v.setIfAbsent(key,value); if(res){ stringRedisTemplate.expire(key,20L, TimeUnit.SECONDS); if(account == null){ return new Result(0,\\\"用户名不能为空\\\"); } if(password.length() == 0){ return new Result(0,\\\"密码不能为空\\\"); } account = account.trim(); if(account.length()==0){ return new Result(0,\\\"用户名不能为空\\\"); } if(password.length()>50){ return new Result(0,\\\"密码长度不能超过50\\\"); } QueryWrapper<web> queryWrapper = new QueryWrapper<web>(); queryWrapper.eq(\\\"account\\\",account); List<web> webs = webMapper.selectList(queryWrapper); if(!webs.isEmpty()){ return new Result(0,\\\"用户名已存在\\\"); } String pass = passwordEncoder.encode(password); String jwt = JwtUtil.createJWT(account); web web1 = new web(); web1.setBackimg(\\\"5\\\"); web1.setList(\\\"[]\\\"); web1.setPassword(pass); web1.setAccount(account); web1.setDate(new Date()); webMapper.insert(web1); String git = \\\"[{\\\\\\\"title\\\\\\\":\\\\\\\"你好\\\\\\\",\\\\\\\"name\\\\\\\":1,\\\\\\\"content\\\\\\\":\\\\\\\"## new content\\\\\\\",\\\\\\\"show\\\\\\\":true}]\\\\n\\\" + \\\"\\\\n\\\"; String title = \\\"[\\\\\\\"你好\\\\\\\"]\\\"; System.out.println(publicMapper.insert(new Public(account, title,git))+999999); System.out.println(new Date()); if(value.equals(v.get(key).toString())){ stringRedisTemplate.delete(key); } return new Result(1,\\\"success\\\",jwt); } return null; } \"},\"198\":{\"h\":\"Redisson\",\"a\":\"redisson\"},\"199\":{\"t\":\"Redisson学习地址\"},\"200\":{\"t\":\"引入\"},\"201\":{\"t\":\"<!-- redisson--> <dependency> <groupId>org.redisson</groupId> <artifactId>redisson</artifactId> <version>3.6.5</version> </dependency> \"},\"202\":{\"t\":\"RedissonConfig\"},\"203\":{\"t\":\"@Configuration public class RedissonConfig { @Bean RedissonClient redisson() { Config config = new Config(); config.useSingleServer().setAddress(\\\"redis://localhost:6379\\\").setDatabase(0); return Redisson.create(config); } } \"},\"204\":{\"t\":\"使用\"},\"205\":{\"t\":\" @Autowired RedissonClient redissonClient; @Override public Result showbyid(Integer id) { RLock lock = redissonClient.getLock(String.valueOf(id)); lock.lock(); try{ article article = articleMapper.selectById(id); article.setViews(article.getViews()+1); int i = articleMapper.updateById(article); return new Result(1,\\\"success\\\",article); }finally { lock.unlock(); } } \"},\"206\":{\"h\":\"Swagger\",\"a\":\"swagger\"},\"207\":{\"h\":\"搭建\",\"a\":\"搭建\"},\"208\":{\"t\":\" <dependency> <groupId>io.springfox</groupId> <artifactId>springfox-swagger2</artifactId> <version>3.0.0</version> </dependency> \"},\"209\":{\"t\":\"@Configuration @EnableSwagger2 public class SwaggerConfig { @Bean public Docket productApi() { return new Docket(DocumentationType.SWAGGER_2) .apiInfo(apiInfo()) .select() .apis(RequestHandlerSelectors.withMethodAnnotation(ApiOperation.class)) //添加ApiOperiation注解的被扫描 .paths(PathSelectors.any()) .build(); } private ApiInfo apiInfo() { return new ApiInfoBuilder().title(\\\"都是书本上的呀\\\").description(\\\"根本不需要的描述\\\") .version(\\\"1.0\\\").build(); } } \"},\"210\":{\"c\":[\"使用指南\"]},\"211\":{\"c\":[\"Markdown\"]},\"212\":{\"h\":\"Linux\"},\"213\":{\"h\":\"docker\",\"a\":\"docker\"},\"214\":{\"h\":\"将当前用户添加到docker用户组\",\"a\":\"将当前用户添加到docker用户组\"},\"215\":{\"t\":\"为了避免每次使用docker命令都需要加上sudo权限，可以将当前用户加入安装中自动创建的docker用户组\"},\"216\":{\"t\":\"如何在 Ubuntu 22.04 LTS 中安装 Docker 和 Docker Compose\"},\"217\":{\"t\":\"sudo usermod -aG docker $USER \"},\"218\":{\"t\":\"执行完此操作后，需要退出服务器，再重新登录回来，才可以省去sudo权限。\"},\"219\":{\"h\":\"镜像（images）\",\"a\":\"镜像-images\"},\"220\":{\"t\":\"docker pull ubuntu:20.04：拉取一个镜像 docker images：列出本地所有镜像 docker image rm ubuntu:20.04 或 docker rmi ubuntu:20.04：删除镜像ubuntu:20.04 docker [container] commit CONTAINER IMAGE_NAME:TAG：创建某个container的镜像 docker save -o ubuntu_20_04.tar ubuntu:20.04：将镜像ubuntu:20.04导出到本地文件ubuntu_20_04.tar中 docker load -i ubuntu_20_04.tar：将镜像ubuntu:20.04从本地文件ubuntu_20_04.tar中加载出来 \"},\"221\":{\"h\":\"容器(container)\",\"a\":\"容器-container\"},\"222\":{\"t\":\"docker [container] create -it ubuntu:20.04：利用镜像ubuntu:20.04创建一个容器。 docker ps -a：查看本地的所有容器 docker [container] start CONTAINER：启动容器 docker [container] stop CONTAINER：停止容器 docker [container] restart CONTAINER：重启容器 docker [contaienr] run -itd ubuntu:20.04：创建并启动一个容器 docker [container] attach CONTAINER：进入容器 先按Ctrl-p，再按Ctrl-q可以挂起容器 docker [container] exec CONTAINER COMMAND：在容器中执行命令 docker [container] rm CONTAINER：删除容器 docker container prune：删除所有已停止的容器 docker export -o xxx.tar CONTAINER：将容器CONTAINER导出到本地文件xxx.tar中 docker import xxx.tar image_name:tag：将本地文件xxx.tar导入成镜像，并将镜像命名为image_name:tag docker export/import与docker save/load的区别： export/import会丢弃历史记录和元数据信息，仅保存容器当时的快照状态 save/load会保存完整记录，体积更大 docker top CONTAINER：查看某个容器内的所有进程 docker stats：查看所有容器的统计信息，包括CPU、内存、存储、网络等信息 docker cp xxx CONTAINER:xxx 或 docker cp CONTAINER:xxx xxx：在本地和容器间复制文件 docker rename CONTAINER1 CONTAINER2：重命名容器 docker update CONTAINER --memory 500MB：修改容器限制 \"},\"223\":{\"h\":\"例子\",\"a\":\"例子\"},\"224\":{\"t\":\"创建 运行镜像 docker run -p 20000:22 --name my_docker_server -itd docker_lesson:1.0 \"},\"225\":{\"h\":\"mysql\",\"a\":\"mysql\"},\"226\":{\"h\":\"导出完整数据库\",\"a\":\"导出完整数据库\"},\"227\":{\"t\":\"用mysqldump命令导出数据库（此命令的路径即mysql的安装路径） mysqldump -u用户名 -p 数据库名 > 数据库名.sql \"},\"228\":{\"t\":\"例如\"},\"229\":{\"t\":\"/usr/local/mysql/bin mysqldump -uroot -p aaa > aaa.sql \"},\"230\":{\"t\":\"2、只导出表结构 如果只需要导出表结构\"},\"231\":{\"t\":\"mysqldump -u用户名 -p -d 数据库名 > 数据库名.sql \"},\"232\":{\"t\":\"例如\"},\"233\":{\"t\":\"mysqldump -uroot -p -d aaa >aaa.sql 可以使用以下命令找到导出的数据库 find / -name 数据库名.sql \"},\"234\":{\"h\":\"导入数据库\",\"a\":\"导入数据库\"},\"235\":{\"t\":\"1、使用mysql命令导入 mysql -u用户名 -p 数据库名 < 数据库名.sql 例如\"},\"236\":{\"t\":\"mysql -uroot -p aaa < aaa.sql \"},\"237\":{\"t\":\"2、使用sources命令导入 先进入到mysql中\"},\"238\":{\"t\":\"mysql> create databases aaa; #创建新的数据库 mysql> use aaa; #使用已创建的数据库 mysql> set names utf-8; #设置编码 mysql> source /aaa.sql #导入sql文件，注意sql的路径 \"},\"239\":{\"h\":\"vim\",\"a\":\"vim\"},\"240\":{\"t\":\"(1) i：进入编辑模式 (2) ESC：进入一般命令模式 (3) h 或 左箭头键：光标向左移动一个字符 (4) j 或 向下箭头：光标向下移动一个字符 (5) k 或 向上箭头：光标向上移动一个字符 (6) l 或 向右箭头：光标向右移动一个字符 (7) n<Space>：n表示数字，按下数字后再按空格，光标会向右移动这一行的n个字符 (8) 0 或 功能键[Home]：光标移动到本行开头 (9) $ 或 功能键[End]：光标移动到本行末尾 (10) G：光标移动到最后一行 (11) :n 或 nG：n为数字，光标移动到第n行 (12) gg：光标移动到第一行，相当于1G (13) n<Enter>：n为数字，光标向下移动n行 (14) /word：向光标之下寻找第一个值为word的字符串。 (15) ?word：向光标之上寻找第一个值为word的字符串。 (16) n：重复前一个查找操作 (17) N：反向重复前一个查找操作 (18) :n1,n2s/word1/word2/g：n1与n2为数字，在第n1行与n2行之间寻找word1这个字符串，并将该字符串替换为word2 (19) :1,$s/word1/word2/g：将全文的word1替换为word2 (20) :1,$s/word1/word2/gc：将全文的word1替换为word2，且在替换前要求用户确认。 (21) v：选中文本 (22) d：删除选中的文本 (23) dd: 删除当前行 (24) y：复制选中的文本 (25) yy: 复制当前行 (26) p: 将复制的数据在光标的下一行/下一个位置粘贴 (27) u：撤销 (28) Ctrl + r：取消撤销 (29) 大于号 >：将选中的文本整体向右缩进一次 (30) 小于号 <：将选中的文本整体向左缩进一次 (31) :w 保存 (32) :w! 强制保存 (33) :q 退出 (34) :q! 强制退出 (35) :wq 保存并退出 (36) :set paste 设置成粘贴模式，取消代码自动缩进 (37) :set nopaste 取消粘贴模式，开启代码自动缩进 (38) :set nu 显示行号 (39) :set nonu 隐藏行号 (40) gg=G：将全文代码格式化 (41) :noh 关闭查找关键词高亮 (42) Ctrl + q：当vim卡死时，可以取消当前正在执行的命令 \"},\"241\":{\"h\":\"ssh 免密登录\",\"a\":\"ssh-免密登录\"},\"242\":{\"t\":\"ssh-keygen 先生成一对密钥 ssh-keygen -R 127.0.0.1 清除公钥信息 ssh-copy-id 127.0.0.1 发送公钥 /.ssh 下创建config文件 Host 别名 Hostname 127.0.0.1 User 登录名 最后即可使用ssh 别名登录 \"},\"243\":{\"c\":[\"使用指南\"]},\"244\":{\"c\":[\"Markdown\"]},\"245\":{\"h\":\"Mysql\"},\"246\":{\"t\":\"哔哩哔哩_bilibili\"},\"247\":{\"t\":\"utf8mb4: 编码格式\"},\"248\":{\"h\":\"insert\",\"a\":\"insert\"},\"249\":{\"t\":\"给指定字段添加值\"},\"250\":{\"t\":\"insert into 表名 (字段1，字段2..) values(值1，值2..); \"},\"251\":{\"t\":\"给指定字段批量添加值\"},\"252\":{\"t\":\"insert into 表名 (字段1，字段2..) values(值1，值2..),(值1，值2..),(值1，值2..); insert into 表名 values(值1，值2..),(值1，值2..),(值1，值2..); \"},\"253\":{\"t\":\"给全部字段添加值\"},\"254\":{\"t\":\"insert into 表名 values(值1，值2..); \"},\"255\":{\"h\":\"update\",\"a\":\"update\"},\"256\":{\"t\":\"update 表名 set 字段1=值1，字段2=值2... [where 条件]; \"},\"257\":{\"t\":\"不写条件 更新所有\"},\"258\":{\"h\":\"delete\",\"a\":\"delete\"},\"259\":{\"t\":\"delete from 表名 [where 条件]; \"},\"260\":{\"t\":\"delete from 表名 删除所有数据\"},\"261\":{\"h\":\"select\",\"a\":\"select\"},\"262\":{\"t\":\"select [字段列表] from [表名列表] where [条件列表] group by [分组字段列表] having [分组后条件列表] order by [排序字段列表] limit [分页] \"},\"263\":{\"t\":\"条件查询(where)、聚合查询(count,max,min,avg,sum)、分组查询(group by)、排序查询(order by)、分页查询(limit)\"},\"264\":{\"h\":\"基本查询\",\"a\":\"基本查询\"},\"265\":{\"t\":\"起别名\"},\"266\":{\"t\":\"select name as '姓名' from 表名; 或者 select name '姓名' from 表名; \"},\"267\":{\"t\":\"不重复\"},\"268\":{\"t\":\"select distinct name from 表名; \"},\"269\":{\"h\":\"条件查询\",\"a\":\"条件查询\"},\"270\":{\"t\":\"比较运算符\"},\"271\":{\"t\":\"功能\"},\"272\":{\"t\":\">\"},\"273\":{\"t\":\">=\"},\"274\":{\"t\":\"<\"},\"275\":{\"t\":\"<=\"},\"276\":{\"t\":\"=\"},\"277\":{\"t\":\"<>或!=\"},\"278\":{\"t\":\"不等于\"},\"279\":{\"t\":\"between...and...\"},\"280\":{\"t\":\"某个范围之内 []\"},\"281\":{\"t\":\"in(..)\"},\"282\":{\"t\":\"列表中的值，多选一\"},\"283\":{\"t\":\"like 占位符\"},\"284\":{\"t\":\"模糊匹配（_单个字符、%任意个字符）\"},\"285\":{\"t\":\"is null\"},\"286\":{\"t\":\"为空\"},\"287\":{\"t\":\"and 或 &&\"},\"288\":{\"t\":\"并且\"},\"289\":{\"t\":\"or或 ||\"},\"290\":{\"t\":\"或者\"},\"291\":{\"t\":\"not 或 ！\"},\"292\":{\"t\":\"非\"},\"293\":{\"h\":\"聚合函数\",\"a\":\"聚合函数\"},\"294\":{\"t\":\"null 不参与计算\"},\"295\":{\"t\":\"sum\"},\"296\":{\"t\":\"select sum(*) from 表名; \"},\"297\":{\"t\":\"avg\"},\"298\":{\"t\":\"select agv(age) from 表名; \"},\"299\":{\"t\":\"max | min\"},\"300\":{\"t\":\"select max(age) from 表名; select min(age) from 表名; \"},\"301\":{\"h\":\"分组查询\",\"a\":\"分组查询\"},\"302\":{\"t\":\"分组后的列只有待分组的字段和聚合函数\"},\"303\":{\"t\":\"study\"},\"304\":{\"t\":\"select sex,count(sex) from s group by sex having avg(age) > 50; \"},\"305\":{\"h\":\"排序查询\",\"a\":\"排序查询\"},\"306\":{\"t\":\"ASC 升序（默认）\"},\"307\":{\"t\":\"DESC 降序\"},\"308\":{\"t\":\"多字段排序，先按第一个排序，然后相同的按照第二个方式排序\"},\"309\":{\"t\":\"select * from s order by age asc , id desc; \"},\"310\":{\"h\":\"分页查询\",\"a\":\"分页查询\"},\"311\":{\"t\":\"select * from 表名 limit 起始索引，查询记录数 \"},\"312\":{\"t\":\"起始索引从0开始， 起始索引 = （查询页码-1）* 每页记录数\"},\"313\":{\"t\":\"select * from s limit 0,10; select * from s limit 10,10; \"},\"314\":{\"h\":\"函数\",\"a\":\"函数\"},\"315\":{\"h\":\"字符串函数\",\"a\":\"字符串函数\"},\"316\":{\"t\":\"-- concat select concat(\\\"hello\\\",\\\"world\\\"); -- lower select lower(\\\"HELLO\\\"); -- upper select upper(\\\"hello\\\"); -- trim 去除首尾空格 -- substring 截取 update 表名 set name = upper(name) where id = 51; \"},\"317\":{\"h\":\"数值函数\",\"a\":\"数值函数\"},\"318\":{\"t\":\"-- ceil 向上取整 -- floor 向下取整 -- mod(x,y) 返回x/y的模 -- rand() 返回0-1的随机小数 -- round(x,y) 求参数x的四舍五入的值 保留y位小数 select round(5.456871865468,3); --> 5.457 \"},\"319\":{\"h\":\"日期函数\",\"a\":\"日期函数\"},\"320\":{\"t\":\"-- curdate() 返回当前日期 -- curtime() 返回当前时间 -- now() 返回当前日期和时间 -- year(date) 获得指定year的年 -- month(date) -- day(date) -- date_add() 返回一个日期加上某个时间后的日期 select date_add(now(),interval 110 day); select date_add(now(),interval 110 year); -- datediff(date1,date2) 时间间隔 \"},\"321\":{\"h\":\"约束\",\"a\":\"约束\"},\"322\":{\"t\":\"default: 默认约束\"},\"323\":{\"t\":\"not null: 非空约束\"},\"324\":{\"t\":\"unique: 唯一约束\"},\"325\":{\"t\":\"primary key: 主键约束\"},\"326\":{\"t\":\"foreign key: 外键约束\"},\"327\":{\"h\":\"外键约束\",\"a\":\"外键约束\"},\"328\":{\"t\":\"命令\"},\"329\":{\"t\":\"b为父表 s为子表 s表的字段(b_id)外键到b表的（id） alter table s add constraint fk_s_b_id foreign key (b_id) references b(id); \"},\"330\":{\"t\":\"删除/更新行为 \"},\"331\":{\"t\":\"RESTRICT：父表数据被删除，会阻止删除。默认就是这一项。\"},\"332\":{\"t\":\"NO ACTION：在MySQL中，同RESTRICT。\"},\"333\":{\"t\":\"CASCADE：级联删除。\"},\"334\":{\"t\":\"SET NULL：父表数据被删除，子表数据会设置为NULL。\"},\"335\":{\"h\":\"多表查询\",\"a\":\"多表查询\"},\"336\":{\"t\":\"笛卡尔积：两个表的所有组合 s(5个字段)，b(3个字段) s X b = 15\"},\"337\":{\"t\":\"可以使用两个表之间的联系去除无用数据\"},\"338\":{\"h\":\"内连接\",\"a\":\"内连接\"},\"339\":{\"t\":\"相当与查询A,B交集部分数据\"},\"340\":{\"t\":\"select s.name,b.name from s,b where s.b_id = b.id; 隐式内连接 select s.name,b.name from s inner join b on s.b_id = b.id; 显式内连接 \"},\"341\":{\"h\":\"左外连接\",\"a\":\"左外连接\"},\"342\":{\"t\":\"查询左表全部数据，以及两张表交集部分\"},\"343\":{\"t\":\"select s.*,b.name from s left outer join b on s.b_id = b.id; select s.*,b.name from s left join b on s.b_id = b.id; s表的全部 以及b表的name \"},\"344\":{\"h\":\"右外连接\",\"a\":\"右外连接\"},\"345\":{\"t\":\"查询右表。。。。\"},\"346\":{\"h\":\"自连接\",\"a\":\"自连接\"},\"347\":{\"t\":\"当前表与自身的连接查询，子链接必须使用表别名\"},\"348\":{\"t\":\"select 字段列表 from 表A 别名a join 表B 别名b on 条件 ...\"},\"349\":{\"h\":\"联合查询\",\"a\":\"联合查询\"},\"350\":{\"t\":\"比如要求：将年龄低于50和性别为’男‘的人 全部查出来 就要用到联合查询了\"},\"351\":{\"t\":\"列数必须保持一致，字段类型也一致。\"},\"352\":{\"t\":\"select * from s where age < 50 union all select * from s where sex = '男' ; 不去重 select * from s where age < 50 union select * from s where sex = '男' ; 去重 \"},\"353\":{\"h\":\"子查询\",\"a\":\"子查询\"},\"354\":{\"t\":\"43. 基础-多表查询-子查询介绍_哔哩哔哩_bilibili\"},\"355\":{\"h\":\"事务\",\"a\":\"事务\"},\"356\":{\"c\":[\"使用指南\"]},\"357\":{\"c\":[\"Markdown\"]},\"358\":{\"h\":\"Mybatis\"},\"359\":{\"t\":\"官网学习地址\"},\"360\":{\"t\":\"依赖\"},\"361\":{\"t\":\"<!-- https://mvnrepository.com/artifact/org.mybatis/mybatis --> <dependency> <groupId>org.mybatis</groupId> <artifactId>mybatis</artifactId> <version>3.5.5</version> </dependency> \"},\"362\":{\"t\":\"xml配置详解 \"},\"363\":{\"h\":\"添加-主键返回\",\"a\":\"添加-主键返回\"},\"364\":{\"t\":\"int i = mapper.update(test1); 可以把id拿出来 \"},\"365\":{\"t\":\" <insert id=\\\"update\\\" useGeneratedKeys=\\\"true\\\" keyProperty=\\\"id\\\"> insert into test1 (id, name, views, up) values ( #{id}, #{name}, #{views}, #{up} ); </insert> \"},\"366\":{\"h\":\"动态条件查询\",\"a\":\"动态条件查询\"},\"367\":{\"t\":\"if\"},\"368\":{\"t\":\"<select id=\\\"findActiveBlogLike\\\" resultType=\\\"Blog\\\"> SELECT * FROM BLOG WHERE state = ‘ACTIVE’ <if test=\\\"title != null\\\"> AND title like #{title} </if> <if test=\\\"author != null and author.name != null\\\"> AND author_name like #{author.name} </if> </select> \"},\"369\":{\"t\":\"choose\"},\"370\":{\"t\":\"<select id=\\\"findActiveBlogLike\\\" resultType=\\\"Blog\\\"> SELECT * FROM BLOG WHERE state = ‘ACTIVE’ <choose> <when test=\\\"title != null\\\"> AND title like #{title} </when> <when test=\\\"author != null and author.name != null\\\"> AND author_name like #{author.name} </when> <otherwise> AND featured = 1 </otherwise> </choose> </select> \"},\"371\":{\"t\":\"trim\"},\"372\":{\"t\":\"<select id=\\\"findActiveBlogLike\\\" resultType=\\\"Blog\\\"> SELECT * FROM BLOG WHERE <if test=\\\"state != null\\\"> state = #{state} </if> <if test=\\\"title != null\\\"> AND title like #{title} </if> <if test=\\\"author != null and author.name != null\\\"> AND author_name like #{author.name} </if> </select> \"},\"373\":{\"c\":[\"使用指南\"]},\"374\":{\"c\":[\"Markdown\"]},\"375\":{\"h\":\"Mybatis Plus\"},\"376\":{\"h\":\"Mybatis Plus\",\"a\":\"mybatis-plus\"},\"377\":{\"t\":\"MyBatis-Plus（简称 MP）是一个 MyBatis 的增强工具，在 MyBatis 的基础上只做增强不做改变，为简化开发、提高效率而生。\"},\"378\":{\"t\":\"【尚硅谷】2022版MyBatisPlus教程（一套玩转mybatis-plus）_哔哩哔哩_bilibili\"},\"379\":{\"t\":\"无侵入、损耗小、强大的CRUD操作\"},\"380\":{\"t\":\"支持Lambda形式调用，支持多种数据库\"},\"381\":{\"t\":\"支持主键自动生成，支持ActiveRecord模式\"},\"382\":{\"t\":\"支持自定义全局通用操作，支持关键词自动转义\"},\"383\":{\"t\":\"内置代码生成器、内置分页插件、内置性能分析插件\"},\"384\":{\"t\":\"内置全局拦截插件、内置SQL注入剥离器\"},\"385\":{\"h\":\"BaseMapper\",\"a\":\"basemapper\"},\"386\":{\"t\":\"public interface BaseMapper<T> extends Mapper<T> { int insert(T entity); int deleteById(Serializable id); int deleteByMap(@Param(\\\"cm\\\") Map<String, Object> columnMap); int delete(@Param(\\\"ew\\\") Wrapper<T> queryWrapper); int deleteBatchIds(@Param(\\\"coll\\\") Collection<? extends Serializable> idList); int updateById(@Param(\\\"et\\\") T entity); int update(@Param(\\\"et\\\") T entity, @Param(\\\"ew\\\") Wrapper<T> updateWrapper); T selectById(Serializable id); List<T> selectBatchIds(@Param(\\\"coll\\\") Collection<? extends Serializable> idList); List<T> selectByMap(@Param(\\\"cm\\\") Map<String, Object> columnMap); T selectOne(@Param(\\\"ew\\\") Wrapper<T> queryWrapper); Integer selectCount(@Param(\\\"ew\\\") Wrapper<T> queryWrapper); List<T> selectList(@Param(\\\"ew\\\") Wrapper<T> queryWrapper); List<Map<String, Object>> selectMaps(@Param(\\\"ew\\\") Wrapper<T> queryWrapper); List<Object> selectObjs(@Param(\\\"ew\\\") Wrapper<T> queryWrapper); <E extends IPage<T>> E selectPage(E page, @Param(\\\"ew\\\") Wrapper<T> queryWrapper); <E extends IPage<Map<String, Object>>> E selectMapsPage(E page, @Param(\\\"ew\\\") Wrapper<T> queryWrapper); } \"},\"387\":{\"h\":\"CURD\",\"a\":\"curd\"},\"388\":{\"t\":\"使用mapper继承BaseMapper<T>即可开箱即用\"},\"389\":{\"t\":\" @Test void TestInsert(){ user user = new user(); user.setId(880); user.setAccount(\\\"天天学习\\\"); user.setPassword(\\\"hhh\\\"); int res = UserMapper.insert(user); System.out.println(res); } @Test void TestDelete(){ // 一： // int res = UserMapper.deleteById(1); // System.out.println(res); // 二: // delete from user where account = ? and password = ? // HashMap<String, Object> map = new HashMap<>(); // map.put(\\\"account\\\",\\\"jkl\\\"); // map.put(\\\"password\\\",\\\"123root\\\"); // UserMapper.deleteByMap(map); // 三: // 删除多个 // DELETE FROM user WHERE id IN ( ? , ? ) List<Integer> list = Arrays.asList(80,880); UserMapper.deleteBatchIds(list); } @Test void TestUpdata(){ user user = new user(); user.setAccount(\\\"改了\\\"); UpdateWrapper<user> q = new UpdateWrapper<>(); q.eq(\\\"password\\\",\\\"666\\\"); // 不屑password 不被修改 UserMapper.update(user,q); } @Test void TestSelect(){ // 通过id查询信息 // user user = UserMapper.selectById(2); // System.out.println(user.toString().isEmpty()); // 通过多个id进行查询 // List<Integer> list = Arrays.asList(3,2); // List<user> users = UserMapper.selectBatchIds(list); // users.forEach(System.out::println); // 通过map查询 // HashMap<String, Object> map = new HashMap<>(); // map.put(\\\"account\\\",666); // List<user> users = UserMapper.selectByMap(map); // users.forEach(System.out::println); // 所有的数据 // List<user> users = UserMapper.selectList(null); // users.forEach(System.out::println); } \"},\"390\":{\"h\":\"wapper条件构造器\",\"a\":\"wapper条件构造器\"},\"391\":{\"t\":\"Description\"},\"392\":{\"h\":\"注解说明\",\"a\":\"注解说明\"},\"393\":{\"t\":\"@TableName 表名\"},\"394\":{\"t\":\"@TableId 主键\"},\"395\":{\"t\":\"---@TableId(type= IdType.AUTO) 自增\"},\"396\":{\"t\":\"---@TableId(type= IdType.NONE) 雪花算法 赋值\"},\"397\":{\"t\":\"@TableField 把表中字段和实体类对应\"},\"398\":{\"t\":\"---@TableField(value=\\\"name\\\") 映射\"},\"399\":{\"t\":\"---@TableField(exist=false) 不是数据库中字段\"},\"400\":{\"t\":\"---@TableField(select = false) 不会参与查询 返回值为null\"},\"401\":{\"h\":\"MybatisX\",\"a\":\"mybatisx\"},\"402\":{\"t\":\"MybatisX\"},\"403\":{\"t\":\"Description\"},\"404\":{\"h\":\"分页\",\"a\":\"分页\"},\"405\":{\"t\":\"config\"},\"406\":{\"t\":\"@Configuration public class MybatisConfig { @Bean public MybatisPlusInterceptor mybatisPlusInterceptor(){ MybatisPlusInterceptor interceptor = new MybatisPlusInterceptor(); interceptor.addInnerInterceptor(new PaginationInnerInterceptor(DbType.MYSQL)); return interceptor; } } \"},\"407\":{\"t\":\"使用\"},\"408\":{\"t\":\" @Override public JSONObject userList(Integer page) { IPage<Record> recordIPage = new Page<>(page,10); QueryWrapper<Record> queryWrapper = new QueryWrapper<>(); queryWrapper.orderByAsc(\\\"id\\\"); List<Record> list = recordMapper.selectPage(recordIPage,queryWrapper).getRecords(); JSONObject resp = new JSONObject(); resp.put(\\\"records\\\",list); resp.put(\\\"count\\\",recordMapper.selectCount(null)); return resp; } \"},\"409\":{\"h\":\"Mybatis+字段+1\",\"a\":\"mybatis-字段-1\"},\"410\":{\"t\":\" UpdateWrapper<article> updateWrapper = new UpdateWrapper<>(); updateWrapper.setSql(\\\"up = up + 1\\\").eq(\\\"id\\\",21); System.out.println(articleMapper.update(null, updateWrapper)); \"},\"411\":{\"t\":\" LambdaUpdateWrapper<article> q = new LambdaUpdateWrapper<>(); q.setSql(\\\"up = up + 1\\\"); q.setSql(\\\"views = views + 1\\\"); q.eq(article::getId,22); System.out.println(articleMapper.update(null, q)); \"},\"412\":{\"h\":\"事务\",\"a\":\"事务\"},\"413\":{\"t\":\"测试时加入@Transactional 不会改变数据，不会污染数据，不管如何都会回滚\"},\"414\":{\"t\":\"事务主要的作用体现在以下几个方面：\"},\"415\":{\"t\":\"数据一致性：事务可以确保多个操作在一个逻辑单元中执行，要么全部执行成功，要么全部失败回滚。在多个操作之间存在依赖关系的情况下，事务可以确保数据的一致性，防止数据冲突和数据丢失等问题。\"},\"416\":{\"t\":\"错误回滚：事务可以在发生错误或异常时回滚到之前的状态，保证数据的完整性。如果在多个操作中发生了错误，事务会自动将所有操作撤消，将数据回滚至操作之前的状态。\"},\"417\":{\"t\":\"并发控制：事务可以解决数据库并发访问的问题。当多个用户同时对同一数据进行操作时，事务可以通过锁机制来控制这些操作的执行顺序，以避免并发访问引起的数据冲突和错误。\"},\"418\":{\"t\":\"提高性能：事务可以优化数据库操作的性能。如果在多个操作中涉及到较多的I/O操作或网络传输，将所有操作合并到一个事务中可以减少I/O操作和网络传输，提高数据库操作的性能。\"},\"419\":{\"t\":\"因此，事务对于确保数据的正确性、完整性和一致性非常重要，是保证数据库安全和稳定运行的基本手段。\"},\"420\":{\"t\":\"默认形况下、只有出现RuntimeException才回滚异常。rollbackFor属性用于控制出现何种异常类型，回滚事务。\"},\"421\":{\"t\":\"@Transactional(rollbackFor = Exception.class)任何异常都回滚\"},\"422\":{\"t\":\"@Service public class UserServiceImpl implements UserService { @Autowired private UserMapper userMapper; @Override @Transactional(rollbackFor = Exception.class) public boolean addUser(User user) { try { // 添加用户 userMapper.insert(user); // 手动抛出异常，模拟事务回滚 throw new RuntimeException(\\\"添加用户时出现异常\\\"); } catch (Exception e) { // 捕获异常，并打印异常信息 e.printStackTrace(); // 抛出运行时异常，使事务回滚 throw new RuntimeException(\\\"添加用户时出现异常\\\"); } } } \"},\"423\":{\"c\":[\"使用指南\"]},\"424\":{\"c\":[\"Markdown\"]},\"425\":{\"h\":\"RabbitMQ\"},\"426\":{\"t\":\"安装地址 Docker安装RabbitMQ详细步骤 - 逊老头 - 博客园 (cnblogs.com) 学习地址 MQ的引言和不同MQ的特点_哔哩哔哩_bilibili\"},\"427\":{\"h\":\"simple简单模式\",\"a\":\"simple简单模式\"},\"428\":{\"t\":\"study\"},\"429\":{\"t\":\"消息产生者将消息放入队列\"},\"430\":{\"t\":\"消息的消费者(consumer) 监听(while) 消息队列,如果队列中有消息,就消费掉,消息被拿走后,自动从队列中删除(隐患 消息可能没有被消费者正确处理,已经从队列中消失了,造成消息的丢失)应用场景:聊天(中间有一个过度的服务器;p端,c端)\"},\"431\":{\"h\":\"生产消息\",\"a\":\"生产消息\"},\"432\":{\"t\":\"//生产者 @Test void send() throws IOException, TimeoutException { // 创建MQ的连接工厂对象 ConnectionFactory connectionFactory = new ConnectionFactory(); // 设置连接mq主机 connectionFactory.setHost(\\\"127.0.0.1\\\"); // 端口号 connectionFactory.setPort(5672); // 设置连接哪一个虚拟主机 connectionFactory.setVirtualHost(\\\"/ems\\\"); // 设置用户名和密码 connectionFactory.setUsername(\\\"ems\\\"); connectionFactory.setPassword(\\\"ems\\\"); // 获取连接对象 Connection connection = connectionFactory.newConnection(); // 获取连接中的通道 Channel channel = connection.createChannel(); // 通道绑定对应的消息队列 // s：队列名称 b:队列是否持久化 b1:是否独占队列(其他的连接不可用) // b2: 是否消费结束后自动删除 map: channel.queueDeclare(\\\"hello\\\",false,false,false,null); // 发布消息 // s： 交换机名称 s1:通道名称 b: MessageProperties.MINIMAL_PERSISTENT_BASIC（ 重启消息也在 ) // 最后：内容 channel.basicPublish(\\\"\\\",\\\"hello\\\",null,\\\"hello rabbit\\\".getBytes()); channel.close(); connection.close(); } \"},\"433\":{\"h\":\"消费消息\",\"a\":\"消费消息\"},\"434\":{\"t\":\" // 消费者 @Test void getMessage() throws IOException, TimeoutException { // 创建MQ的连接工厂对象 ConnectionFactory connectionFactory = new ConnectionFactory(); // 设置连接mq主机 connectionFactory.setHost(\\\"127.0.0.1\\\"); // 端口号 connectionFactory.setPort(5672); // 设置连接哪一个虚拟主机 connectionFactory.setVirtualHost(\\\"/ems\\\"); // 设置用户名和密码 connectionFactory.setUsername(\\\"ems\\\"); connectionFactory.setPassword(\\\"ems\\\"); // 获取连接对象 Connection connection = connectionFactory.newConnection(); // 获取连接中的通道 Channel channel = connection.createChannel(); // 通道绑定对应的消息队列 // s：队列名称 b:队列是否持久化 b1:是否独占队列(其他的连接不可用) // b2: 是否消费结束后自动删除 map: channel.queueDeclare(\\\"hello\\\",false,false,false,null); // 消费消息 // s： 交换机名称 s1:开始消息的自动确认机制 最后：消费时的回调接口 channel.basicConsume(\\\"hello\\\",true, new DefaultConsumer(channel){ @Override public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException { System.out.println(\\\"new String (body) = \\\" + new String (body)); } }); //不关闭 为了一直消费信息 // channel.close(); // connection.close(); } \"},\"435\":{\"h\":\"实现工具类\",\"a\":\"实现工具类\"},\"436\":{\"t\":\"public class RabbitMQConnection { private static ConnectionFactory connectionFactory; //静态代码块 只执行一次 static { connectionFactory = new ConnectionFactory(); connectionFactory.setHost(\\\"127.0.0.1\\\"); // 设置连接mq主机 connectionFactory.setPort(5672);// 端口号 connectionFactory.setVirtualHost(\\\"/ems\\\");// 设置连接哪一个虚拟主机 connectionFactory.setUsername(\\\"ems\\\");// 设置用户名和密码 connectionFactory.setPassword(\\\"ems\\\"); } // 获取 连接对象方法 public static Connection getConnection() throws IOException, TimeoutException { // 获取连接对象 return connectionFactory.newConnection(); } // 关闭通道和连接 public void closeChannelAndConnection(Connection con, Channel channel){ try { if(con!=null)con.close(); if(channel!=null)channel.close(); } catch (IOException | TimeoutException e) { e.printStackTrace(); } } } \"},\"437\":{\"h\":\"任务模型\",\"a\":\"任务模型\"},\"438\":{\"t\":\"study\"},\"439\":{\"t\":\"两个消费者 消费同一个队列 默认会平均分配内容 叫做循环\"},\"440\":{\"t\":\"目前要求能者多劳！！！\"},\"441\":{\"t\":\"设置通道一次只能消费一个消息\"},\"442\":{\"t\":\"关闭消息的自动确认，开始手动确认消息\"},\"443\":{\"h\":\"Consumer\",\"a\":\"consumer\"},\"444\":{\"t\":\"public class consumer2 { public static void main(String[] args) throws IOException, TimeoutException { Connection connection = RabbitMQConnection.getConnection(); Channel channel = connection.createChannel(); channel.queueDeclare(\\\"word\\\",false,false,false,null); channel.basicQos(1);// 每次消费一个 // false 关闭自动确定 channel.basicConsume(\\\"word\\\",false, new DefaultConsumer(channel){ @SneakyThrows @Override public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException { Thread.sleep(1000);//模拟执行的漫 System.out.println(\\\"new String (body) = \\\" + new String (body)); /** * 参数 * - 手动确认的表示 * - false 是否开启多个消息同时确认 */ channel.basicAck(envelope.getDeliveryTag(),false); } }); } } \"},\"445\":{\"h\":\"广播\",\"a\":\"广播\"},\"446\":{\"t\":\" 流程如下：\"},\"447\":{\"t\":\"有多个消费者\"},\"448\":{\"t\":\"每个消费者有自己的队列\"},\"449\":{\"t\":\"每个队列都绑定了交换机\"},\"450\":{\"t\":\"生产者只能向交换机发送消息，再有交换机发给队列，生产者无权决定\"},\"451\":{\"t\":\"交换机吧消息发给和自己绑定的队列\"},\"452\":{\"t\":\"队列中的消费者都可以拿到消息\"},\"453\":{\"h\":\"生产者\",\"a\":\"生产者\"},\"454\":{\"t\":\"public class producer { public static void main(String[] args) throws IOException, TimeoutException { // 创建连接对象 Connection connection = RabbitMQConnection.getConnection(); Channel channel = connection.createChannel(); // 将通道声明到交换机 (交换机名称，类型) channel.exchangeDeclare(\\\"one\\\",\\\"fanout\\\"); channel.basicPublish(\\\"one\\\",\\\"\\\",null,\\\"hello world\\\".getBytes()); channel.close(); connection.close(); } } \"},\"455\":{\"h\":\"消费者\",\"a\":\"消费者\"},\"456\":{\"t\":\"public class consumerOne { public static void main(String[] args) throws IOException, TimeoutException { Connection connection = RabbitMQConnection.getConnection(); Channel channel = connection.createChannel(); // 通道绑定交换机 channel.exchangeDeclare(\\\"one\\\",\\\"fanout\\\"); // 临时队列 String queue = channel.queueDeclare().getQueue(); // 交换机和队列绑定 channel.queueBind(queue,\\\"one\\\",\\\"\\\"); // 消费消息 channel.basicConsume(queue,true,new DefaultConsumer(channel){ @Override public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException { System.out.println(\\\"new String(body) = \\\" + new String(body)); } }); } } \"},\"457\":{\"h\":\"路由模型\",\"a\":\"路由模型\"},\"458\":{\"h\":\"直连\",\"a\":\"直连\"},\"459\":{\"t\":\"Description\"},\"460\":{\"t\":\"在fanout的模式下，一条消息，会被订阅的队列消费。但有时我们希望不同的消息被不同的队列消费，\"},\"461\":{\"t\":\"此时就用到了 Direct类型的Exchange\"},\"462\":{\"t\":\"队列与交换机绑定，不再是任意绑定了，而是要指定一个RoutingKey(路由key)\"},\"463\":{\"t\":\"消息 的发送方在向exchang发送消息时，也必须要指定一个RoutingKey\"},\"464\":{\"t\":\"Exchange在发送消息时，会根据指定的RoutingKey进行判断，只有队列的RoutingKey与消息的RoutingKey完全一致，才会收到消息\"},\"465\":{\"h\":\"生产者\",\"a\":\"生产者-1\"},\"466\":{\"t\":\"public class producer { public static void main(String[] args) throws IOException, TimeoutException { Connection connection = RabbitMQConnection.getConnection(); Channel channel = connection.createChannel(); channel.exchangeDeclare(\\\"name_direct\\\",\\\"direct\\\"); String RoutingKey = \\\"warn\\\"; channel.basicPublish(\\\"name_direct\\\", RoutingKey,null, \\\"这是direct发布于的\\\".getBytes()); channel.close(); connection.close(); } } \"},\"467\":{\"h\":\"消费者\",\"a\":\"消费者-1\"},\"468\":{\"t\":\"public class consumerOne { public static void main(String[] args) throws IOException, TimeoutException { Connection connection = RabbitMQConnection.getConnection(); Channel channel = connection.createChannel(); // 通道绑定交换机 channel.exchangeDeclare(\\\"name_direct\\\",\\\"direct\\\"); // 临时队列 String queue = channel.queueDeclare().getQueue(); // 交换机和队列绑定和 RoutingKey channel.queueBind(queue,\\\"name_direct\\\",\\\"error\\\"); channel.queueBind(queue,\\\"name_direct\\\",\\\"info\\\"); channel.queueBind(queue,\\\"name_direct\\\",\\\"warn\\\"); // 消费消息 channel.basicConsume(queue,true,new DefaultConsumer(channel){ @Override public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException { System.out.println(\\\"error \\\" + new String(body)); } }); } } \"},\"469\":{\"t\":\"public class consumerTwo { public static void main(String[] args) throws IOException, TimeoutException { Connection connection = RabbitMQConnection.getConnection(); Channel channel = connection.createChannel(); // 通道绑定交换机 channel.exchangeDeclare(\\\"name_direct\\\",\\\"direct\\\"); // 临时队列 String queue = channel.queueDeclare().getQueue(); // 交换机和队列绑定和 RoutingKey channel.queueBind(queue,\\\"name_direct\\\",\\\"warn\\\"); // 消费消息 channel.basicConsume(queue,true,new DefaultConsumer(channel){ @Override public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException { System.out.println(\\\"info \\\" + new String(body)); } }); } } \"},\"470\":{\"h\":\"动态\",\"a\":\"动态\"},\"471\":{\"t\":\"Description\"},\"472\":{\"t\":\"Topic类型的Exchange与Direct 相比，都是可以根据Routinghey把消息路由到不同的队列。只不过Topic 类型Exchange可以让队列在绑定Routing key的时候使用通配符!这种模型Routingkey一般都是由一个或多个单词组成，多个单词之间以\\\". \\\"分割，例如:item.insert\"},\"473\":{\"t\":\"* 匹配不多不少恰好一个单词\"},\"474\":{\"t\":\"admin.* --> admin.hh.abc | admin.hh\"},\"475\":{\"t\":\"# 匹配一个或多个单词\"},\"476\":{\"t\":\"admin.# --> admin.hh\"},\"477\":{\"h\":\"代码\",\"a\":\"代码\"},\"478\":{\"t\":\"public class producer { public static void main(String[] args) throws IOException, TimeoutException { Connection connection = RabbitMQConnection.getConnection(); Channel channel = connection.createChannel(); channel.exchangeDeclare(\\\"name_topic\\\",\\\"topic\\\"); String RoutingKey = \\\"warn.js\\\"; channel.basicPublish(\\\"name_direct\\\", RoutingKey,null, \\\"这是direct发布于的\\\".getBytes()); channel.close(); connection.close(); } } \"},\"479\":{\"t\":\"public class consumerOne { public static void main(String[] args) throws IOException, TimeoutException { Connection connection = RabbitMQConnection.getConnection(); Channel channel = connection.createChannel(); // 通道绑定交换机 channel.exchangeDeclare(\\\"name_topic\\\",\\\"topic\\\"); // 临时队列 String queue = channel.queueDeclare().getQueue(); // 交换机和队列绑定和 RoutingKey channel.queueBind(queue,\\\"name_topic\\\",\\\"error.*\\\"); //error.xxx | error.aaa channel.queueBind(queue,\\\"name_topic\\\",\\\"info.#\\\");//info.gag.agsdga | info.gas.gas.g.asg. channel.queueBind(queue,\\\"name_topic\\\",\\\"warn\\\"); // 消费消息 channel.basicConsume(queue,true,new DefaultConsumer(channel){ @Override public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException { System.out.println(\\\"error \\\" + new String(body)); } }); } } \"},\"480\":{\"h\":\"spring boot 整合\",\"a\":\"spring-boot-整合\"},\"481\":{\"t\":\" <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-amqp</artifactId> </dependency> \"},\"482\":{\"t\":\"spring: rabbitmq: host: 127.0.0.1 port: 5672 username: ems password: ems virtual-host: /ems \"},\"483\":{\"h\":\"Test\",\"a\":\"test\"},\"484\":{\"t\":\"@SpringBootTest public class rabbitMQTest { @Autowired private RabbitTemplate rabbitTemplate; // hello @Test void test(){ rabbitTemplate.convertAndSend(\\\"hello\\\",\\\"hello world\\\"); } // work @Test void work(){ for (int i = 0; i < 10; i++) { rabbitTemplate.convertAndSend(\\\"work\\\",\\\"hello work\\\"); } } //fanout @Test void fanout(){ rabbitTemplate.convertAndSend(\\\"fanout\\\",\\\"\\\",\\\"hello fanout\\\"); } // route @Test void direct(){ rabbitTemplate.convertAndSend(\\\"direct\\\",\\\"warn\\\",\\\"hello direct\\\"); } // 动态路由 @Test void Topic(){ rabbitTemplate.convertAndSend(\\\"topic\\\",\\\"user.hh.gash\\\",\\\"hello topic\\\"); } } \"},\"485\":{\"h\":\"简单\",\"a\":\"简单\"},\"486\":{\"t\":\"@Component //默认队列持久化 非独占 不是autodelete @RabbitListener(queuesToDeclare = @Queue(value = \\\"hello\\\")) public class RabbitMQ { // 第一种模式 @RabbitHandler public void recrive(String message){ System.out.println(\\\"message = \\\" + message); } } \"},\"487\":{\"h\":\"任务\",\"a\":\"任务\"},\"488\":{\"t\":\"@Component public class workConsumer { //公平消费 @RabbitListener(queuesToDeclare = @Queue(\\\"work\\\")) public void work1(String message){ System.out.println(\\\"message1 = \\\" + message); } @RabbitListener(queuesToDeclare = @Queue(\\\"work\\\")) public void work2(String message){ System.out.println(\\\"message2 = \\\" + message); } } \"},\"489\":{\"h\":\"广播\",\"a\":\"广播-1\"},\"490\":{\"t\":\"@Component public class fanoutConsumer { @RabbitListener(bindings = { @QueueBinding( value = @Queue, exchange = @Exchange(value = \\\"fanout\\\",type = \\\"fanout\\\") ) }) public void fanout1(String message){ System.out.println(\\\"message1 = \\\" + message); } @RabbitListener(bindings = { @QueueBinding( value = @Queue, exchange = @Exchange(value = \\\"fanout\\\",type = \\\"fanout\\\") ) }) public void fanout2(String message){ System.out.println(\\\"message2 = \\\" + message); } } \"},\"491\":{\"h\":\"静态路由\",\"a\":\"静态路由\"},\"492\":{\"t\":\"@Component public class routeConsumer { @RabbitListener(bindings = { @QueueBinding( value = @Queue, exchange = @Exchange(value = \\\"direct\\\",type = \\\"direct\\\"), key = {\\\"info\\\",\\\"warn\\\"} ) }) public void route1(String message){ System.out.println(\\\"message1 = \\\" + message); } @RabbitListener(bindings = { @QueueBinding( value = @Queue, exchange = @Exchange(value = \\\"direct\\\",type = \\\"direct\\\"), key = {\\\"warn\\\",\\\"message\\\"} ) }) public void route2(String message){ System.out.println(\\\"message2 = \\\" + message); } } \"},\"493\":{\"h\":\"动态路由\",\"a\":\"动态路由\"},\"494\":{\"t\":\"@Component public class topicConsumer { @RabbitListener(bindings = { @QueueBinding( value = @Queue, exchange = @Exchange(value = \\\"topic\\\",type = \\\"topic\\\"), key = {\\\"user.*\\\",\\\"user.#\\\"} ) }) public void topic1(String message){ System.out.println(\\\"message1 = \\\" + message); } @RabbitListener(bindings = { @QueueBinding( value = @Queue, exchange = @Exchange(value = \\\"topic\\\",type = \\\"topic\\\"), key = {\\\"user.*\\\",\\\"message\\\"} ) }) public void topic2(String message){ System.out.println(\\\"message2 = \\\" + message); } } \"},\"495\":{\"h\":\"延迟队列\",\"a\":\"延迟队列\"},\"496\":{\"t\":\"安装插件以及使用 config\"},\"497\":{\"t\":\"@Configuration public class TestDelayQueueConfig { public static final String DEAD_EXCHANGE = \\\"delay_exchange\\\"; public static final String DEAD_QUEUE = \\\"delay_queue\\\"; public static final String DEAD_ROUTING = \\\"delay_key\\\"; @Bean public CustomExchange delayExchange() { Map<String, Object> args = new HashMap<String, Object>(); args.put(\\\"x-delayed-type\\\", \\\"direct\\\"); return new CustomExchange(DEAD_EXCHANGE, \\\"x-delayed-message\\\", true, false, args); } /** * 延迟消息队列 * @return */ @Bean public Queue delayQueue() { return new Queue(DEAD_QUEUE, true); } @Bean public Binding deplyBinding() { return BindingBuilder .bind(delayQueue()) .to(delayExchange()) .with(DEAD_ROUTING) .noargs(); } } \"},\"498\":{\"h\":\"生产者\",\"a\":\"生产者-2\"},\"499\":{\"t\":\"@Component public class DeplyProducer { @Resource RabbitTemplate rabbitTemplate; public void send(String msg, Integer delayTime){ // MessageProperties messageProperties = new MessageProperties(); // messageProperties.setDelay(delayTime); // Message message = new Message(msg.getBytes(), messageProperties); // rabbitTemplate.convertAndSend(DEAD_EXCHANGE, DEAD_ROUTING, message); rabbitTemplate.convertAndSend(DEAD_EXCHANGE, DEAD_ROUTING, msg, message1 -> { message1.getMessageProperties().setDelay(delayTime); return message1;} ); } } \"},\"500\":{\"h\":\"消费者\",\"a\":\"消费者-2\"},\"501\":{\"t\":\"@Component public class DeplyConsumer { @RabbitListener(queues = DEAD_QUEUE) public void onMessage(String msg) { System.out.println(\\\"收到信息了 msg = \\\" + msg); } } \"},\"502\":{\"c\":[\"使用指南\"]},\"503\":{\"c\":[\"Markdown\"]},\"504\":{\"h\":\"Redis\"},\"505\":{\"t\":\"Redis详细解释\"},\"506\":{\"h\":\"安装\",\"a\":\"安装\"},\"507\":{\"t\":\"sudo apt update sudo apt install redis-server redis-cli 启动命令 \"},\"508\":{\"h\":\"基本命令\",\"a\":\"基本命令\"},\"509\":{\"t\":\"bdsize 当前数据库大小 select 数据库切换 flushdb 清空当前数据库 flushall 清空所有数据库 type name 查看key的类型 \"},\"510\":{\"h\":\"五大数据类型\",\"a\":\"五大数据类型\"},\"511\":{\"h\":\"Redsi-Key\",\"a\":\"redsi-key\"},\"512\":{\"t\":\"keys * 打印所有的key set name hhh 设置k-v(\\\"name\\\",\\\"hh\\\") get name 打印name的value exists name 判断key是否存在 move name 1 将name移入到数据库1中 expire name 5 设置name 5s 过期 ttl name 查看name剩余过期时间 \"},\"513\":{\"h\":\"String\",\"a\":\"string\"},\"514\":{\"t\":\"append name \\\"world\\\" #value后面增加world strlen name #value的长度 incr age #实现自增 incrby age 20 #增加20 decr age #实现自减 dectby age 20 #减少20 getrange name 0 3 #串的截取 mget mset #批量set或get setnx #如果存在则不创建 getset #找不到就创建 找到就设置 \"},\"515\":{\"h\":\"List\",\"a\":\"list\"},\"516\":{\"t\":\"lpush list hello #往list中加入hello lrange list 0 -1 #打印所有 lpop/rpop list #删除左右头部 lindex list 1 # 打印下标1的值 llen list # 长度 lrem list 1 hello # 删除一个hello ltrim list 2 4 # 截取 剩余2-4 lset list 0 hello # 指定下标值替换为hello \"},\"517\":{\"h\":\"set\",\"a\":\"set\"},\"518\":{\"t\":\"sadd: 向集合中添加元素。例如：sadd myset \\\"element1\\\" \\\"element2\\\" smembers: 返回集合中所有元素。例如：smembers myset sismember: 判断元素是否在集合中。例如：sismember myset \\\"element1\\\" scard: 返回集合中元素的数量。例如：scard myset srem: 从集合中删除元素。例如：srem myset \\\"element1\\\" spop: 从集合中弹出一个随机元素。例如：spop myset sunion: 返回多个集合的并集。例如：sunion set1 set2 set3 sdiff: 返回多个集合的差集。例如：sdiff set1 set2 set3 sinter: 返回多个集合的交集。例如：sinter set1 set2 set3 srandmember: 随机返回集合中的一个元素。例如：srandmember myset \"},\"519\":{\"h\":\"Hash\",\"a\":\"hash\"},\"520\":{\"t\":\"hset key field value : 在key对应的hash中设置field对应的value。如果key不存在，则新建一个。 例如:hset user:1 name \\\"tom\\\" hget key field : 获取key对应的hash中field对应的value。 例如: hget user:1 name hgetall key : 获取key对应的hash中所有的键值对。 例如: hgetall user:1 hdel key field [field ...] : 删除key对应的hash中的一个或多个field。 例如: hdel user:1 name hlen key : 获取key对应的hash中field的数量。 例如: hlen user:1 hexists key field : 检查key对应的hash中是否存在field。 例如: hexists user:1 name hkeys key : 获取key对应的hash中所有的field。 例如: hkeys user:1 hvals key : 获取key对应的hash中所有的value。 例如: hvals user:1 这里是一些基本的Redis Hash命令。实际上还有许多其他的命令可供使用，如hincrby、hmset、hmget等。 \"},\"521\":{\"h\":\"Sorted sets\",\"a\":\"sorted-sets\"},\"522\":{\"t\":\"zadd: 向有序集合中添加元素，支持指定分数。例如：zadd mysortedset 1 \\\"element1\\\" 2 \\\"element2\\\" zrange: 返回有序集合中指定范围的元素。例如：zrange mysortedset 0 -1 zrangebyscore: 返回有序集合中指定分数范围的元素。例如：zrangebyscore mysortedset 1 2 zrank: 返回有序集合中指定元素的排名。例如：zrank mysortedset \\\"element1\\\" zrem: 从有序集合中删除元素。例如：zrem mysortedset \\\"element1\\\" zcount: 返回有序集合中指定分数范围的元素数量。例如：zcount mysortedset 1 2 zincrby: 对有序集合中指定元素的分数进行增加/减少操作。例如：zincrby mysortedset 2 \\\"element1\\\" zcard: 返回有序集合中元素的数量。例如：zcard mysortedset zunionstore: 计算多个有序集合的并集，并将结果存储到新的有序集合中。例如：zunionstore new_sortedset 2 sortedset1 sortedset2 zinterstore: 计算多个有序集合的交集，并将结果存储到新的有序集合中。例如：zinterstore new_sortedset 2 sortedset1 sortedset2 \"},\"523\":{\"h\":\"序列化\",\"a\":\"序列化\"},\"524\":{\"t\":\"Redis是一种内存数据库，为了更有效地使用内存，它需要对存储的数据进行序列化，使数据占用的空间更小。序列化是指将数据结构转换为字节流的过程。\"},\"525\":{\"t\":\"Redis支持多种序列化格式，如二进制协议（Redis默认使用的序列化格式）、JSON、MessagePack等。二进制协议是Redis自定义的序列化格式，它可以最大程度地减少数据占用的空间。JSON和MessagePack是常用的序列化格式，它们可以方便地与其他语言和系统进行交互。\"},\"526\":{\"h\":\"实现\",\"a\":\"实现\"},\"527\":{\"t\":\"stu.java\"},\"528\":{\"t\":\"public class stu implements Serializable { private Integer id; private String name; } \"},\"529\":{\"t\":\"RedisConfig.java\"},\"530\":{\"t\":\"@Configuration public class RedisConfig{ @Bean //配置redisTemplate // 默认情况下的模板只能支持 RedisTemplate<String,String>， // 只能存入字符串，很多时候，我们需要自定义 RedisTemplate ，设置序列化器 public RedisTemplate<String,Object> redisTemplate(RedisConnectionFactory factory){ RedisTemplate<String,Object> template = new RedisTemplate <>(); template.setConnectionFactory(factory); Jackson2JsonRedisSerializer jackson2JsonRedisSerializer = new Jackson2JsonRedisSerializer(Object.class); ObjectMapper om = new ObjectMapper(); om.setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.ANY); om.enableDefaultTyping(ObjectMapper.DefaultTyping.NON_FINAL); jackson2JsonRedisSerializer.setObjectMapper(om); StringRedisSerializer stringRedisSerializer = new StringRedisSerializer(); // key采用String的序列化方式 template.setKeySerializer(stringRedisSerializer); template.setValueSerializer(stringRedisSerializer); // hash的key也采用String的序列化方式 template.setHashKeySerializer(stringRedisSerializer); // value序列化方式采用jackson template.setValueSerializer(jackson2JsonRedisSerializer); // hash的value序列化方式采用jackson template.setHashValueSerializer(jackson2JsonRedisSerializer); template.afterPropertiesSet(); return template; } } \"},\"531\":{\"h\":\"测试\",\"a\":\"测试\"},\"532\":{\"t\":\" @Autowired private RedisTemplate redisTemplate; @Test void contextLoads() { stu stu = new stu(1, \\\"liming\\\"); redisTemplate.opsForValue().set(\\\"hh\\\",stu); System.out.println(redisTemplate.opsForValue().get(\\\"hh\\\")); } \"},\"533\":{\"h\":\"持久化\",\"a\":\"持久化\"},\"534\":{\"h\":\"RDB\",\"a\":\"rdb\"},\"535\":{\"t\":\"RDB 是 Redis Database 文件的缩写，它是 Redis 的默认数据持久化方式。RDB 文件是在指定的时间间隔内（通常是每几秒或几分钟）自动生成的快照文件。这种方式可以在损失一定数据的情况下更快地恢复数据库。\"},\"536\":{\"h\":\"触发\",\"a\":\"触发\"},\"537\":{\"t\":\"保存配置： -- save：只管保存，其他不管，全部阻塞。 -- bgsave：Redis 会在后台异步进行快照操作，快照同时还可以响应客户端请求。 -- lastsave：获取最后一次成功执行快照的时间。\"},\"538\":{\"t\":\"执行 flushall 命令，也会产生 dump.rdb 文件，但里面是空的，无意义 。\"},\"539\":{\"t\":\"退出的时候也会产生 dump.rdb 文件。\"},\"540\":{\"h\":\"AOF\",\"a\":\"aof\"},\"541\":{\"t\":\"AOF 是 Append-Only File 的缩写，它是 Redis 的另一种数据持久化方式。AOF 文件是将 Redis 所有写操作命令追加到文件的过程，因此可以保证数据的完整性。\"},\"542\":{\"t\":\"# 是否以append only模式作为持久化方式，默认使用的是rdb方式持久化，这种方式在许多应用中已经足够用了 appendonly no # appendfilename AOF 文件名称 appendfilename \\\"appendonly.aof\\\" # appendfsync aof持久化策略的配置： # no：不执行fsync，由操作系统保证数据同步到磁盘，速度最快。 # always：每次写入都执行fsync，以保证数据同步到磁盘。 # everysec：每秒执行一次fsync，可能会导致丢失这1s数据。 appendfsync everysec # 重写时是否可以运用Appendfsync，用默认no即可，保证数据安全性 No-appendfsync-on-rewrite # 设置重写的基准值 Auto-aof-rewrite-min-size # 设置重写的基准值 Auto-aof-rewrite-percentage \"},\"543\":{\"c\":[\"使用指南\"]},\"544\":{\"c\":[\"Markdown\"]},\"545\":{\"h\":\"Spring SpringMVC\"},\"546\":{\"h\":\"Spring\",\"a\":\"spring\"},\"547\":{\"t\":\"Spring-01-初识Spring_哔哩哔哩_bilibili\"},\"548\":{\"h\":\"IoC\",\"a\":\"ioc\"},\"549\":{\"t\":\"Ioc—Inversion of Control\"},\"550\":{\"t\":\"一种思想。 创建对象、管理对象\"},\"551\":{\"t\":\"一般对象都是直接通过new出来 ，交由IoC管理后，IoC容器来控制对象的创建\"},\"552\":{\"t\":\"配置实在是多\"},\"553\":{\"t\":\"pom.xml\"},\"554\":{\"t\":\"<dependency> <!-- 1.导入--> <groupId>org.springframework</groupId> <artifactId>spring-context</artifactId> <version>5.3.23</version> </dependency> \"},\"555\":{\"t\":\"applicationContext.xml\"},\"556\":{\"t\":\"<!-- 2.配置Bean--> <bean id=\\\"bookDao\\\" class=\\\"com.beink.dao.Impl.bookDaoImpl\\\"/> <bean id=\\\"bookService\\\" class=\\\"com.beink.service.Impl.bookServiceImpl\\\"/> \"},\"557\":{\"t\":\"Main.java\"},\"558\":{\"t\":\"public class Main { public static void main(String[] args) { // 3.获取容器 ApplicationContext atx = new ClassPathXmlApplicationContext(\\\"applicationContext.xml\\\"); // 4. 获取bean bookDao bookDao = (bookDao) atx.getBean(\\\"bookDao\\\"); bookDao.save(); // 等同于 bookDao bookDao1 = new bookDaoImpl(); bookDao1.save(); } } \"},\"559\":{\"h\":\"Bean\",\"a\":\"bean\"},\"560\":{\"t\":\"被构造 调用的是无参构造 生命周期： ``` public void init(){ System.out.println(\\\"init\\\"); } public void destory(){ System.out.println(\\\"destory\\\"); } 配置 <bean init-method=\\\"init\\\" destroy-method=\\\"destory\\\"/> 或者 直接 implements InitializingBean, DisposableBean 同样效果 ``` \"},\"561\":{\"h\":\"依赖注入\",\"a\":\"依赖注入\"},\"562\":{\"h\":\"setter\",\"a\":\"setter\"},\"563\":{\"t\":\".xml <bean id=\\\"bookDao\\\" class=\\\"com.beink.dao.Impl.bookDaoImpl\\\"> <property name=\\\"a\\\" value=\\\"123\\\"/> <property name=\\\"s\\\" value=\\\"true\\\"/> </bean> Impl.java private String s; private int a; \"},\"564\":{\"h\":\"构造器\",\"a\":\"构造器\"},\"565\":{\"t\":\"<bean id=\\\"bookDao\\\" class=\\\"com.beink.dao.Impl.bookDaoImpl\\\"> <constructor-arg name=\\\"a\\\" value=\\\"6\\\"/> <constructor-arg name=\\\"s\\\" value=\\\"true\\\"/> </bean> <bean id=\\\"bookService\\\" class=\\\"com.beink.service.Impl.bookServiceImpl\\\"> <!--red对应ID--> <constructor-arg name=\\\"bookdao\\\" ref=\\\"bookDao\\\"/> </bean> \"},\"566\":{\"t\":\"依赖注入\"},\"567\":{\"t\":\"private bookDao book_dao; public void setBookdao(bookDao bookdao){ this.book_dao = bookdao; } \"},\"568\":{\"t\":\"一般 注入\"},\"569\":{\"t\":\"private String s; private int a; public bookDaoImpl(String s, int a) { this.s = s; this.a = a; } \"},\"570\":{\"h\":\"集合注入\",\"a\":\"集合注入\"},\"571\":{\"t\":\" <bean id=\\\"bookDao\\\" class=\\\"com.beink.dao.Impl.bookDaoImpl\\\"> <property name=\\\"list\\\"> <array> <value>hello </value> <value>world</value> </array> </property> <property name=\\\"map\\\"> <map> <entry key=\\\"hello\\\" value=\\\"world\\\"></entry> </map> </property> </bean> \"},\"572\":{\"h\":\"注解开发\",\"a\":\"注解开发\"},\"573\":{\"t\":\"@Component(\\\"名字\\\") 定义Bean\"},\"574\":{\"t\":\"---@Service\"},\"575\":{\"t\":\"---@Controller(同样效果 只是便于理解)\"},\"576\":{\"t\":\"---@Repository\"},\"577\":{\"t\":\"@Configuration 设置位配置类 类似于applicationContext.xml @ComponentScan(\\\"com.beink\\\") 扫描路径 自动装配到spring的bean @Scope(\\\"singleton\\\") 单例 @PostConstruct 生命周期-初始化 @PreDestroy 生命周期-销毁 @Autowired 自动装配 === private bookDao bookdao = new bookDaoImpl(); @Value(\\\"${name}\\\") 简单类型注入 private String s; @PropertySource(\\\"xxx.yml\\\") 数据源 内容--（name=hello world） \"},\"578\":{\"h\":\"AOP\",\"a\":\"aop\"},\"579\":{\"t\":\"不改变原始设计 将功能增强\"},\"580\":{\"h\":\"举例\",\"a\":\"举例\"},\"581\":{\"t\":\"@Component @Aspect //这是个aop public class MyAop { // 在哪里执行 @Pointcut(\\\"execution(void com.beink.dao.bookDao.save())\\\") private void ss(){} // 绑定 @AfterReturning(\\\"ss()\\\") public void set(){ System.out.println(\\\"AOP\\\"); } } \"},\"582\":{\"h\":\"切入点表达式\",\"a\":\"切入点表达式\"},\"583\":{\"t\":\"使用*通配符即可 @Pointcut(\\\"execution( * * com.beink.dao.*)\\\") \"},\"584\":{\"h\":\"通知类型\",\"a\":\"通知类型\"},\"585\":{\"t\":\"public class MyAop { @Pointcut(\\\"execution(void com.beink.dao.bookDao.save())\\\") private void ss(){} @AfterReturning(\\\"ss()\\\") public void set(){ System.out.println(\\\"AOP\\\"); } // 环绕 @Around(\\\"ss()\\\") public void round(ProceedingJoinPoint e) throws Throwable { System.out.println(\\\"qian\\\"); e.proceed();/*调用原始操作*/ System.out.println(\\\"hou\\\"); // 如果有返回值 返回对象必须是Object } // @AfterReturning // @AfterThrowing } \"},\"586\":{\"h\":\"获取通知数据\",\"a\":\"获取通知数据\"},\"587\":{\"t\":\"public class MyAop { @Pointcut(\\\"execution(void com.beink.dao.bookDao.save(..))\\\") private void ss(){} // 环绕 @Around(\\\"ss()\\\") public Object round(ProceedingJoinPoint e) throws Throwable { Object[] args = e.getArgs(); e.proceed();/*调用原始操作*/ System.out.println(Arrays.toString(args));/*获取参数*/ // 修改参数 args[0] = 666; Object ret = e.proceed(args); return ret; } } \"},\"588\":{\"h\":\"SpringMVC\",\"a\":\"springmvc\"},\"589\":{\"t\":\"SpringMVC-02-SpringMVC入门案例_哔哩哔哩_bilibili\"},\"590\":{\"h\":\"创建使用\",\"a\":\"创建使用\"},\"591\":{\"t\":\"pom.xml\"},\"592\":{\"t\":\" <dependencies> <dependency> <groupId>javax.servlet</groupId> <artifactId>javax.servlet-api</artifactId> <version>4.0.1</version> <scope>provided</scope> </dependency> <dependency> <groupId>org.springframework</groupId> <artifactId>spring-webmvc</artifactId> <version>5.3.23</version> </dependency> </dependencies> \"},\"593\":{\"t\":\"userControler类\"},\"594\":{\"t\":\"@Controller //定义Bean public class userController { // 访问路径 @RequestMapping(\\\"/save\\\") // 返回值类型 @ResponseBody public String save(){ System.out.println(\\\"hhh\\\"); return \\\"hello world\\\"; } } \"},\"595\":{\"t\":\"config类\"},\"596\":{\"t\":\"servletinitConfig.java //定义一个servlet启动配置，在里面加载spring配置 public class servletinitConfig extends AbstractDispatcherServletInitializer { // 加载springMVC配置 @Override protected WebApplicationContext createServletApplicationContext() { AnnotationConfigWebApplicationContext ctx = new AnnotationConfigWebApplicationContext(); ctx.register(springMVCConfig.class); return ctx; } //设置那些请求归springMVC处理 @Override protected String[] getServletMappings() { return new String[]{\\\"/\\\"}; } //加载spring配置 @Override protected WebApplicationContext createRootApplicationContext() { return null; } } springMVCConfig.java //加载对应的Bean @ComponentScan(\\\"com.beink.controller\\\") //加载配置 @Configuration public class springMVCConfig { } \"},\"597\":{\"t\":\"配置Tomcat启动即可。。\"},\"598\":{\"h\":\"请求\",\"a\":\"请求\"},\"599\":{\"h\":\"get\",\"a\":\"get\"},\"600\":{\"t\":\"/save?name=name\"},\"601\":{\"t\":\" @RequestMapping(\\\"/save\\\") @ResponseBody public String save(String name){ System.out.println(name); return \\\"hello world\\\"; } \"},\"602\":{\"h\":\"post\",\"a\":\"post\"},\"603\":{\"t\":\" @RequestMapping(\\\"/save\\\") @ResponseBody public String save(String name,String id){ System.out.println(name + id); return \\\"hello world\\\"; } \"},\"604\":{\"h\":\"post乱码处理\",\"a\":\"post乱码处理\"},\"605\":{\"t\":\"img\"},\"606\":{\"h\":\"参数类型\",\"a\":\"参数类型\"},\"607\":{\"t\":\"SpringMVC-09-json数据传递参数_哔哩哔哩_bilibili\"},\"608\":{\"t\":\" @ResponseBody public String save(@RequestParam(\\\"name\\\") String userName, String id){ // 一： 会把地址中的name映射给userName // 二： save(User user) 当名字一样使 会自动把属性放进去 // 三：Map List.....@RequestParam List<String> // 四：JSON // 五：时间 // 六：。。。 System.out.println(userName + id); return \\\"hello world\\\"; } \"},\"609\":{\"h\":\"响应\",\"a\":\"响应\"},\"610\":{\"t\":\" @RequestMapping(\\\"topage\\\") public String toapage(){ // 跳转到index.jsp页面 return \\\"index.jsp\\\"; } @RequestMapping(\\\"ttt\\\") @ResponseBody public String toattpage(){ // 返回一个串“index.jsp” return \\\"index.jsp\\\"; } \"},\"611\":{\"h\":\"Rest风格\",\"a\":\"rest风格\"},\"612\":{\"t\":\"访问形式： /put/5 /get/6\"},\"613\":{\"t\":\"SpringMVC-14-RESTful快速开发_哔哩哔哩_bilibili\"},\"614\":{\"t\":\" @RequestMapping(value = \\\"/put/{id}\\\",method = RequestMethod.PUT) @ResponseBody public void put(@PathVariable String id){ System.out.println(id); } @RequestMapping(value = \\\"/get/{id}\\\",method = RequestMethod.GET) @ResponseBody public void get(@PathVariable String id){ System.out.println(id); } POST DELETE .... \"},\"615\":{\"h\":\"注解说明\",\"a\":\"注解说明\"},\"616\":{\"t\":\"@Controller //定义Bean @RequestMapping(\\\"/save\\\") // 访问路径 @ResponseBody //返回值 @RequestParam //用于接收url地址参数 /get?id=5 @ResponseBody //用于接收JSON数据 @PathVariable //接受url地址参数 /get/ @RestController //= @Controller + @ResponseBody @GetMapping(\\\"/get/{id}\\\") // == @RequestMapping(value = \\\"/get/{id}\\\",method = RequestMethod.GET) \"},\"617\":{\"h\":\"其他\",\"a\":\"其他\"},\"618\":{\"h\":\"自定义注解为属性赋值\",\"a\":\"自定义注解为属性赋值\"},\"619\":{\"t\":\"使用场景： 把用户传过来的token，解析出来用户信息， 为属性赋值。\"},\"620\":{\"h\":\"1.创建自定义注解\",\"a\":\"_1-创建自定义注解\"},\"621\":{\"t\":\"@Target({ElementType.PARAMETER}) @Documented @Retention(RetentionPolicy.RUNTIME) public @interface UserInfo { } \"},\"622\":{\"h\":\"2.创建拦截器 ,获得token,存入作用域中\",\"a\":\"_2-创建拦截器-获得token-存入作用域中\"},\"623\":{\"t\":\"public class GlobalInterceptor implements HandlerInterceptor { @Override public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception { String token = request.getHeader(\\\"Authorization\\\").substring(7); request.getSession().setAttribute(\\\"account\\\", JwtUtil.parseJWT(token).getSubject()); return true; } } \"},\"624\":{\"h\":\"3.配置拦截器\",\"a\":\"_3-配置拦截器\"},\"625\":{\"t\":\"@Configuration public class interceptor extends WebMvcConfigurationSupport { @Override protected void addArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) { argumentResolvers.add(new UserInfoImpl()); } @Override protected void addInterceptors(InterceptorRegistry registry) { registry.addInterceptor(new GlobalInterceptor()).addPathPatterns(\\\"/user/account/color/\\\"); super.addInterceptors(registry); } } \"},\"626\":{\"h\":\"4.实现自定义注解\",\"a\":\"_4-实现自定义注解\"},\"627\":{\"t\":\"public class UserInfoImpl implements HandlerMethodArgumentResolver { @Override public boolean supportsParameter(MethodParameter methodParameter) { return methodParameter.getParameterAnnotation(UserInfo.class)!=null; } @Override public Object resolveArgument(MethodParameter methodParameter, ModelAndViewContainer modelAndViewContainer, NativeWebRequest nativeWebRequest, WebDataBinderFactory webDataBinderFactory) throws Exception { HttpServletRequest nativeRequest = (HttpServletRequest) nativeWebRequest.getNativeRequest(); return nativeRequest.getSession().getAttribute(\\\"account\\\"); } } \"},\"628\":{\"h\":\"5.使用\",\"a\":\"_5-使用\"},\"629\":{\"t\":\" @PostMapping(\\\"/user/account/color/\\\") public Result setColor(@UserInfo String account, @RequestParam Map<String,String>map){ String color = map.get(\\\"backImg\\\"); String list = map.get(\\\"list\\\"); return colorService.setColor(account,color,list); } \"},\"630\":{\"h\":\"拦截器\",\"a\":\"拦截器\"},\"631\":{\"t\":\"HttpServletRequest request 发送过来的信息 HttpServletResponse response 发送走的信息\"},\"632\":{\"h\":\"1.先实现一个拦截对象\",\"a\":\"_1-先实现一个拦截对象\"},\"633\":{\"t\":\"@Component public class MyInterceptor implements HandlerInterceptor { // 被拦截的操作之前运行 @Override public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception { System.out.println(\\\"preHandle...\\\"); // true 通行 // false 拦截 return true; } // 被拦截的操作之后运行 @Override public void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView) throws Exception { System.out.println(\\\"postHandle...\\\"); } // 也是后面 也在posthandle之后 @Override public void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex) throws Exception { System.out.println(\\\"afterCompletion...\\\"); } } \"},\"634\":{\"h\":\"2.配置\",\"a\":\"_2-配置\"},\"635\":{\"t\":\"@Configuration public class Support extends WebMvcConfigurationSupport { //implements WebMvcConfigurer 也行 // 拦截器对象 @Autowired private MyInterceptor myInterceptor; /** * * @param registry */ @Override protected void addInterceptors(InterceptorRegistry registry) { // 拦截路径 registry.addInterceptor(myInterceptor).addPathPatterns(\\\"/user\\\",\\\"/user*\\\"); } } \"},\"636\":{\"h\":\"过滤器\",\"a\":\"过滤器\"},\"637\":{\"h\":\"枚举\",\"a\":\"枚举\"},\"638\":{\"c\":[\"使用指南\"]},\"639\":{\"c\":[\"Markdown\"]},\"640\":{\"h\":\"Oother\"},\"641\":{\"h\":\"Other\"},\"642\":{\"h\":\"Springboot\"}},\"dirtCount\":0,\"index\":[[\"枚举\",{\"0\":{\"637\":1}}],[\"过滤器\",{\"0\":{\"636\":1}}],[\"过期\",{\"1\":{\"512\":1}}],[\"拦截路径\",{\"1\":{\"635\":1}}],[\"拦截\",{\"1\":{\"633\":1}}],[\"拦截器对象\",{\"1\":{\"635\":1}}],[\"拦截器\",{\"0\":{\"630\":1}}],[\"被拦截的操作之后运行\",{\"1\":{\"633\":1}}],[\"被拦截的操作之前运行\",{\"1\":{\"633\":1}}],[\"被构造\",{\"1\":{\"560\":1}}],[\"存入作用域中\",{\"0\":{\"622\":1}}],[\"存储\",{\"1\":{\"222\":1}}],[\"解析出来用户信息\",{\"1\":{\"619\":1}}],[\"解绑\",{\"1\":{\"76\":1}}],[\"接受url地址参数\",{\"1\":{\"616\":1}}],[\"访问形式\",{\"1\":{\"612\":1}}],[\"访问路径\",{\"1\":{\"594\":1,\"616\":1}}],[\"跳转到index\",{\"1\":{\"610\":1}}],[\"响应\",{\"0\":{\"609\":1}}],[\"修改参数\",{\"1\":{\"587\":1}}],[\"修改容器限制\",{\"1\":{\"222\":1}}],[\"调用原始操作\",{\"1\":{\"585\":1,\"587\":1}}],[\"调用的是无参构造\",{\"1\":{\"560\":1}}],[\"环绕\",{\"1\":{\"585\":1,\"587\":1}}],[\"切入点表达式\",{\"0\":{\"582\":1}}],[\"切换为分支xxx\",{\"1\":{\"66\":1}}],[\"绑定\",{\"1\":{\"581\":1}}],[\"举例\",{\"0\":{\"580\":1}}],[\"销毁\",{\"1\":{\"577\":1}}],[\"单例\",{\"1\":{\"577\":1}}],[\"单个字符\",{\"1\":{\"284\":1}}],[\"扫描路径\",{\"1\":{\"577\":1}}],[\"类似于applicationcontext\",{\"1\":{\"577\":1}}],[\"类型exchange可以让队列在绑定routing\",{\"1\":{\"472\":1}}],[\"类型\",{\"1\":{\"454\":1}}],[\"定义一个servlet启动配置\",{\"1\":{\"596\":1}}],[\"定义bean\",{\"1\":{\"573\":1,\"594\":1,\"616\":1}}],[\"定时任务\",{\"0\":{\"167\":1}}],[\"名字\",{\"1\":{\"573\":1}}],[\"集合注入\",{\"0\":{\"570\":1}}],[\"构造器\",{\"0\":{\"564\":1}}],[\"同样效果\",{\"1\":{\"560\":1,\"575\":1}}],[\"同restrict\",{\"1\":{\"332\":1}}],[\"```\",{\"1\":{\"560\":2}}],[\"等同于\",{\"1\":{\"558\":1}}],[\"交由ioc管理后\",{\"1\":{\"551\":1}}],[\"交换机和队列绑定和\",{\"1\":{\"468\":1,\"469\":1,\"479\":1}}],[\"交换机和队列绑定\",{\"1\":{\"456\":1}}],[\"交换机吧消息发给和自己绑定的队列\",{\"1\":{\"451\":1}}],[\"交换机名称\",{\"1\":{\"432\":1,\"434\":1,\"454\":1}}],[\"管理对象\",{\"1\":{\"550\":1}}],[\"初识spring\",{\"1\":{\"547\":1}}],[\"初始化\",{\"1\":{\"68\":1,\"577\":1}}],[\"速度最快\",{\"1\":{\"542\":1}}],[\"由操作系统保证数据同步到磁盘\",{\"1\":{\"542\":1}}],[\"由于sockjs在不支持websocket的浏览器中使用的是长轮询技术\",{\"1\":{\"156\":1}}],[\"所有写操作命令追加到文件的过程\",{\"1\":{\"541\":1}}],[\"所有的数据\",{\"1\":{\"389\":1}}],[\"无意义\",{\"1\":{\"538\":1}}],[\"无侵入\",{\"1\":{\"379\":1}}],[\"也行\",{\"1\":{\"635\":1}}],[\"也在posthandle之后\",{\"1\":{\"633\":1}}],[\"也是后面\",{\"1\":{\"633\":1}}],[\"也会产生\",{\"1\":{\"538\":1}}],[\"也必须要指定一个routingkey\",{\"1\":{\"463\":1}}],[\"执行\",{\"1\":{\"538\":1}}],[\"执行完此操作后\",{\"1\":{\"218\":1}}],[\"快照同时还可以响应客户端请求\",{\"1\":{\"537\":1}}],[\"全部阻塞\",{\"1\":{\"537\":1}}],[\"全部查出来\",{\"1\":{\"350\":1}}],[\"触发\",{\"0\":{\"536\":1}}],[\"持久化\",{\"0\":{\"533\":1}}],[\"我们需要自定义\",{\"1\":{\"530\":1}}],[\"很多时候\",{\"1\":{\"530\":1}}],[\"序列化是指将数据结构转换为字节流的过程\",{\"1\":{\"524\":1}}],[\"序列化\",{\"0\":{\"523\":1}}],[\"计算多个有序集合的交集\",{\"1\":{\"522\":1}}],[\"计算多个有序集合的并集\",{\"1\":{\"522\":1}}],[\"减少操作\",{\"1\":{\"522\":1}}],[\"减少20\",{\"1\":{\"514\":1}}],[\"zinterstore\",{\"1\":{\"522\":2}}],[\"zincrby\",{\"1\":{\"522\":2}}],[\"zunionstore\",{\"1\":{\"522\":2}}],[\"zcard\",{\"1\":{\"522\":2}}],[\"zcount\",{\"1\":{\"522\":2}}],[\"zrem\",{\"1\":{\"522\":2}}],[\"zrank\",{\"1\":{\"522\":2}}],[\"zrangebyscore\",{\"1\":{\"522\":2}}],[\"zrange\",{\"1\":{\"522\":2}}],[\"zadd\",{\"1\":{\"522\":2}}],[\"检查key对应的hash中是否存在field\",{\"1\":{\"520\":1}}],[\"随机返回集合中的一个元素\",{\"1\":{\"518\":1}}],[\"指定下标值替换为hello\",{\"1\":{\"516\":1}}],[\"指定名称和邮箱\",{\"0\":{\"63\":1}}],[\"剩余2\",{\"1\":{\"516\":1}}],[\"长度\",{\"1\":{\"516\":1}}],[\"长连接\",{\"1\":{\"149\":1}}],[\"往list中加入hello\",{\"1\":{\"516\":1}}],[\"找到就设置\",{\"1\":{\"514\":1}}],[\"找不到就创建\",{\"1\":{\"514\":1}}],[\"批量set或get\",{\"1\":{\"514\":1}}],[\"串的截取\",{\"1\":{\"514\":1}}],[\"增加20\",{\"1\":{\"514\":1}}],[\"判断元素是否在集合中\",{\"1\":{\"518\":1}}],[\"判断key是否存在\",{\"1\":{\"512\":1}}],[\"判断是否是图片类型\",{\"1\":{\"188\":1}}],[\"打印下标1的值\",{\"1\":{\"516\":1}}],[\"打印所有\",{\"1\":{\"516\":1}}],[\"打印所有的key\",{\"1\":{\"512\":1}}],[\"打印name的value\",{\"1\":{\"512\":1}}],[\"打包\",{\"1\":{\"85\":1,\"99\":1}}],[\"启动命令\",{\"1\":{\"507\":1}}],[\"启动容器\",{\"1\":{\"222\":1}}],[\"收到信息了\",{\"1\":{\"501\":1}}],[\"收件人\",{\"1\":{\"164\":2}}],[\"延迟消息队列\",{\"1\":{\"497\":1}}],[\"延迟队列\",{\"0\":{\"495\":1}}],[\"延迟5s启动\",{\"1\":{\"173\":1}}],[\"公平消费\",{\"1\":{\"488\":1}}],[\"第一种模式\",{\"1\":{\"486\":1}}],[\"第一次\",{\"1\":{\"76\":1}}],[\"整合\",{\"0\":{\"480\":1}}],[\"代码\",{\"0\":{\"477\":1}}],[\"匹配一个或多个单词\",{\"1\":{\"475\":1}}],[\"匹配不多不少恰好一个单词\",{\"1\":{\"473\":1}}],[\"都是可以根据routinghey把消息路由到不同的队列\",{\"1\":{\"472\":1}}],[\"都是书本上的呀\",{\"1\":{\"209\":1}}],[\"相比\",{\"1\":{\"472\":1}}],[\"相当与查询a\",{\"1\":{\"339\":1}}],[\"相当于1g\",{\"1\":{\"240\":1}}],[\"动态路由\",{\"0\":{\"493\":1},\"1\":{\"484\":1}}],[\"动态\",{\"0\":{\"470\":1}}],[\"动态条件查询\",{\"0\":{\"366\":1}}],[\"这是个aop\",{\"1\":{\"581\":1}}],[\"这是direct发布于的\",{\"1\":{\"466\":1,\"478\":1}}],[\"这种方式在许多应用中已经足够用了\",{\"1\":{\"542\":1}}],[\"这种方式可以在损失一定数据的情况下更快地恢复数据库\",{\"1\":{\"535\":1}}],[\"这种模型routingkey一般都是由一个或多个单词组成\",{\"1\":{\"472\":1}}],[\"这里是一些基本的redis\",{\"1\":{\"520\":1}}],[\"这只不过是一个测试而已\",{\"1\":{\"166\":3}}],[\"才会收到消息\",{\"1\":{\"464\":1}}],[\"才可以省去sudo权限\",{\"1\":{\"218\":1}}],[\"会自动把属性放进去\",{\"1\":{\"608\":1}}],[\"会把地址中的name映射给username\",{\"1\":{\"608\":1}}],[\"会在后台异步进行快照操作\",{\"1\":{\"537\":1}}],[\"会根据指定的routingkey进行判断\",{\"1\":{\"464\":1}}],[\"会被订阅的队列消费\",{\"1\":{\"460\":1}}],[\"会阻止删除\",{\"1\":{\"331\":1}}],[\"直接\",{\"1\":{\"560\":1}}],[\"直接删除\",{\"1\":{\"74\":1}}],[\"直连\",{\"0\":{\"458\":1}}],[\"路由key\",{\"1\":{\"462\":1}}],[\"路由模型\",{\"0\":{\"457\":1}}],[\"路径导航\",{\"1\":{\"17\":1,\"50\":1}}],[\"临时队列\",{\"1\":{\"456\":1,\"468\":1,\"469\":1,\"479\":1}}],[\"有多个消费者\",{\"1\":{\"447\":1}}],[\"流程如下\",{\"1\":{\"446\":1}}],[\"广播\",{\"0\":{\"445\":1,\"489\":1}}],[\"手动确认的表示\",{\"1\":{\"444\":1}}],[\"手动抛出异常\",{\"1\":{\"422\":1}}],[\"参数类型\",{\"0\":{\"606\":1}}],[\"参数\",{\"1\":{\"444\":1}}],[\"目前要求能者多劳\",{\"1\":{\"440\":1}}],[\"目录必须为空\",{\"1\":{\"125\":1}}],[\"目录列表\",{\"0\":{\"122\":1}}],[\"目录\",{\"0\":{\"9\":1},\"1\":{\"119\":1}}],[\"叫做循环\",{\"1\":{\"439\":1}}],[\"连接对象方法\",{\"1\":{\"436\":1}}],[\"连接不稳定\",{\"1\":{\"156\":1}}],[\"静态路由\",{\"0\":{\"491\":1}}],[\"静态代码块\",{\"1\":{\"436\":1}}],[\"静态资源访问\",{\"0\":{\"129\":1}}],[\"开始手动确认消息\",{\"1\":{\"442\":1}}],[\"开始消息的自动确认机制\",{\"1\":{\"434\":1}}],[\"开启代码自动缩进\",{\"1\":{\"240\":1}}],[\"消费同一个队列\",{\"1\":{\"439\":1}}],[\"消费时的回调接口\",{\"1\":{\"434\":1}}],[\"消费者\",{\"0\":{\"455\":1,\"467\":1,\"500\":1},\"1\":{\"434\":1}}],[\"消费消息\",{\"0\":{\"433\":1},\"1\":{\"434\":1,\"456\":1,\"468\":1,\"469\":1,\"479\":1}}],[\"消息\",{\"1\":{\"463\":1}}],[\"消息可能没有被消费者正确处理\",{\"1\":{\"430\":1}}],[\"消息被拿走后\",{\"1\":{\"430\":1}}],[\"消息队列\",{\"1\":{\"430\":1}}],[\"消息的消费者\",{\"1\":{\"430\":1}}],[\"消息产生者将消息放入队列\",{\"1\":{\"429\":1}}],[\"发布消息\",{\"1\":{\"432\":1}}],[\"发送走的信息\",{\"1\":{\"631\":1}}],[\"发送过来的信息\",{\"1\":{\"631\":1}}],[\"发送公钥\",{\"1\":{\"242\":1}}],[\"发送带附件的邮件\",{\"1\":{\"164\":1}}],[\"发送者\",{\"1\":{\"164\":1}}],[\"发送邮件\",{\"0\":{\"157\":1}}],[\"其他\",{\"0\":{\"617\":1}}],[\"其他不管\",{\"1\":{\"537\":1}}],[\"其他的连接不可用\",{\"1\":{\"432\":1,\"434\":1}}],[\"其它region请按实际情况填写\",{\"1\":{\"121\":1}}],[\"队列与交换机绑定\",{\"1\":{\"462\":1}}],[\"队列中的消费者都可以拿到消息\",{\"1\":{\"452\":1}}],[\"队列是否持久化\",{\"1\":{\"432\":1,\"434\":1}}],[\"队列名称\",{\"1\":{\"432\":1,\"434\":1}}],[\"通行\",{\"1\":{\"633\":1}}],[\"通知类型\",{\"0\":{\"584\":1}}],[\"通配符即可\",{\"1\":{\"583\":1}}],[\"通常是每几秒或几分钟\",{\"1\":{\"535\":1}}],[\"通道绑定交换机\",{\"1\":{\"456\":1,\"468\":1,\"469\":1,\"479\":1}}],[\"通道绑定对应的消息队列\",{\"1\":{\"432\":1,\"434\":1}}],[\"通道名称\",{\"1\":{\"432\":1}}],[\"通过map查询\",{\"1\":{\"389\":1}}],[\"通过多个id进行查询\",{\"1\":{\"389\":1}}],[\"通过id查询信息\",{\"1\":{\"389\":1}}],[\"通过get方法停止任务\",{\"1\":{\"177\":1}}],[\"端口号\",{\"1\":{\"432\":1,\"434\":1,\"436\":1}}],[\"生命周期\",{\"1\":{\"560\":1,\"577\":2}}],[\"生产者无权决定\",{\"1\":{\"450\":1}}],[\"生产者只能向交换机发送消息\",{\"1\":{\"450\":1}}],[\"生产者\",{\"0\":{\"453\":1,\"465\":1,\"498\":1},\"1\":{\"432\":1}}],[\"生产消息\",{\"0\":{\"431\":1}}],[\"生成\",{\"1\":{\"68\":1}}],[\"聊天\",{\"1\":{\"430\":1}}],[\"造成消息的丢失\",{\"1\":{\"430\":1}}],[\"已经从队列中消失了\",{\"1\":{\"430\":1}}],[\"监听\",{\"1\":{\"430\":1}}],[\"学习地址\",{\"1\":{\"426\":1}}],[\"学习与记录\",{\"0\":{\"8\":1}}],[\"博客园\",{\"1\":{\"426\":1}}],[\"逊老头\",{\"1\":{\"426\":1}}],[\"抛出运行时异常\",{\"1\":{\"422\":1}}],[\"捕获异常\",{\"1\":{\"422\":1}}],[\"任务\",{\"0\":{\"487\":1}}],[\"任务模型\",{\"0\":{\"437\":1}}],[\"任何异常都回滚\",{\"1\":{\"421\":1}}],[\"任意个字符\",{\"1\":{\"284\":1}}],[\"回滚事务\",{\"1\":{\"420\":1}}],[\"回退版本\",{\"1\":{\"72\":1}}],[\"完整性和一致性非常重要\",{\"1\":{\"419\":1}}],[\"以保证数据同步到磁盘\",{\"1\":{\"542\":1}}],[\"以避免并发访问引起的数据冲突和错误\",{\"1\":{\"417\":1}}],[\"以及b表的name\",{\"1\":{\"343\":1}}],[\"以及两张表交集部分\",{\"1\":{\"342\":1}}],[\"防止数据冲突和数据丢失等问题\",{\"1\":{\"415\":1}}],[\"要么全部失败回滚\",{\"1\":{\"415\":1}}],[\"要么全部执行成功\",{\"1\":{\"415\":1}}],[\"映射\",{\"1\":{\"398\":1}}],[\"赋值\",{\"1\":{\"396\":1}}],[\"雪花算法\",{\"1\":{\"396\":1}}],[\"改了\",{\"1\":{\"389\":1}}],[\"天天学习\",{\"1\":{\"389\":1}}],[\"支持指定分数\",{\"1\":{\"522\":1}}],[\"支持关键词自动转义\",{\"1\":{\"382\":1}}],[\"支持自定义全局通用操作\",{\"1\":{\"382\":1}}],[\"支持activerecord模式\",{\"1\":{\"381\":1}}],[\"支持主键自动生成\",{\"1\":{\"381\":1}}],[\"支持多种数据库\",{\"1\":{\"380\":1}}],[\"支持lambda形式调用\",{\"1\":{\"380\":1}}],[\"支持性\",{\"1\":{\"148\":1,\"152\":1}}],[\"损耗小\",{\"1\":{\"379\":1}}],[\"尚硅谷\",{\"1\":{\"378\":1}}],[\"官网学习地址\",{\"1\":{\"359\":1}}],[\"事务对于确保数据的正确性\",{\"1\":{\"419\":1}}],[\"事务会自动将所有操作撤消\",{\"1\":{\"416\":1}}],[\"事务可以优化数据库操作的性能\",{\"1\":{\"418\":1}}],[\"事务可以通过锁机制来控制这些操作的执行顺序\",{\"1\":{\"417\":1}}],[\"事务可以解决数据库并发访问的问题\",{\"1\":{\"417\":1}}],[\"事务可以在发生错误或异常时回滚到之前的状态\",{\"1\":{\"416\":1}}],[\"事务可以确保数据的一致性\",{\"1\":{\"415\":1}}],[\"事务可以确保多个操作在一个逻辑单元中执行\",{\"1\":{\"415\":1}}],[\"事务主要的作用体现在以下几个方面\",{\"1\":{\"414\":1}}],[\"事务\",{\"0\":{\"355\":1,\"412\":1}}],[\"基本命令\",{\"0\":{\"508\":1}}],[\"基本查询\",{\"0\":{\"264\":1}}],[\"基础\",{\"1\":{\"354\":1}}],[\"去重\",{\"1\":{\"352\":1}}],[\"去除首尾空格\",{\"1\":{\"316\":1}}],[\"男\",{\"1\":{\"350\":1,\"352\":2}}],[\"比如要求\",{\"1\":{\"350\":1}}],[\"比较运算符\",{\"1\":{\"270\":1}}],[\"联合查询\",{\"0\":{\"349\":1}}],[\"子查询介绍\",{\"1\":{\"354\":1}}],[\"子查询\",{\"0\":{\"353\":1}}],[\"子链接必须使用表别名\",{\"1\":{\"347\":1}}],[\"子表数据会设置为null\",{\"1\":{\"334\":1}}],[\"右外连接\",{\"0\":{\"344\":1}}],[\"左外连接\",{\"0\":{\"341\":1}}],[\"左箭头键\",{\"1\":{\"240\":1}}],[\"显式内连接\",{\"1\":{\"340\":1}}],[\"显示行号\",{\"1\":{\"240\":1}}],[\"隐患\",{\"1\":{\"430\":1}}],[\"隐式内连接\",{\"1\":{\"340\":1}}],[\"隐藏行号\",{\"1\":{\"240\":1}}],[\"两个消费者\",{\"1\":{\"439\":1}}],[\"两个表的所有组合\",{\"1\":{\"336\":1}}],[\"两者都应用广泛\",{\"1\":{\"141\":1}}],[\"笛卡尔积\",{\"1\":{\"336\":1}}],[\"级联删除\",{\"1\":{\"333\":1}}],[\"父表数据被删除\",{\"1\":{\"331\":1,\"334\":1}}],[\"外键到b表的\",{\"1\":{\"329\":1}}],[\"外键约束\",{\"0\":{\"327\":1},\"1\":{\"326\":1}}],[\"命令\",{\"1\":{\"328\":1,\"538\":1}}],[\"唯一约束\",{\"1\":{\"324\":1}}],[\"约束\",{\"0\":{\"321\":1}}],[\"获得token\",{\"0\":{\"622\":1}}],[\"获得指定year的年\",{\"1\":{\"320\":1}}],[\"获取参数\",{\"1\":{\"587\":1}}],[\"获取通知数据\",{\"0\":{\"586\":1}}],[\"获取bean\",{\"1\":{\"558\":1}}],[\"获取容器\",{\"1\":{\"558\":1}}],[\"获取最后一次成功执行快照的时间\",{\"1\":{\"537\":1}}],[\"获取key对应的hash中所有的value\",{\"1\":{\"520\":1}}],[\"获取key对应的hash中所有的field\",{\"1\":{\"520\":1}}],[\"获取key对应的hash中所有的键值对\",{\"1\":{\"520\":1}}],[\"获取key对应的hash中field的数量\",{\"1\":{\"520\":1}}],[\"获取key对应的hash中field对应的value\",{\"1\":{\"520\":1}}],[\"获取\",{\"1\":{\"436\":1}}],[\"获取连接中的通道\",{\"1\":{\"432\":1,\"434\":1}}],[\"获取连接对象\",{\"1\":{\"432\":1,\"434\":1,\"436\":1}}],[\"获取选择的文件\",{\"1\":{\"188\":1}}],[\"求参数x的四舍五入的值\",{\"1\":{\"318\":1}}],[\"数值函数\",{\"0\":{\"317\":1}}],[\"数据源\",{\"1\":{\"577\":1}}],[\"数据库切换\",{\"1\":{\"509\":1}}],[\"数据库名\",{\"1\":{\"227\":2,\"231\":2,\"233\":1,\"235\":2}}],[\"数据一致性\",{\"1\":{\"415\":1}}],[\"数据校验\",{\"0\":{\"179\":1}}],[\"数据格式紧凑\",{\"1\":{\"145\":1}}],[\"截取\",{\"1\":{\"316\":1,\"516\":1}}],[\"字符串函数\",{\"0\":{\"315\":1}}],[\"字段类型也一致\",{\"1\":{\"351\":1}}],[\"字段列表\",{\"1\":{\"262\":1,\"348\":1}}],[\"字段2=值2\",{\"1\":{\"256\":1}}],[\"字段2\",{\"1\":{\"250\":1,\"252\":1}}],[\"字段1=值1\",{\"1\":{\"256\":1}}],[\"字段1\",{\"1\":{\"250\":1,\"252\":1}}],[\"函数\",{\"0\":{\"314\":1}}],[\"每秒执行一次fsync\",{\"1\":{\"542\":1}}],[\"每次写入都执行fsync\",{\"1\":{\"542\":1}}],[\"每次消费一个\",{\"1\":{\"444\":1}}],[\"每个队列都绑定了交换机\",{\"1\":{\"449\":1}}],[\"每个消费者有自己的队列\",{\"1\":{\"448\":1}}],[\"每页记录数\",{\"1\":{\"312\":1}}],[\"每天中午12点执行任务\",{\"1\":{\"176\":1}}],[\"查询右表\",{\"1\":{\"345\":1}}],[\"查询左表全部数据\",{\"1\":{\"342\":1}}],[\"查询页码\",{\"1\":{\"312\":1}}],[\"查询记录数\",{\"1\":{\"311\":1}}],[\"查看name剩余过期时间\",{\"1\":{\"512\":1}}],[\"查看key的类型\",{\"1\":{\"509\":1}}],[\"查看所有容器的统计信息\",{\"1\":{\"222\":1}}],[\"查看某个容器内的所有进程\",{\"1\":{\"222\":1}}],[\"查看本地的所有容器\",{\"1\":{\"222\":1}}],[\"查看远程库的详细信息\",{\"1\":{\"76\":1}}],[\"查看远程库的信息\",{\"1\":{\"76\":1}}],[\"查看远程仓库信息\",{\"1\":{\"76\":1}}],[\"查看工作区中文件当前状态\",{\"1\":{\"72\":1}}],[\"查看文件内容\",{\"1\":{\"72\":1}}],[\"查看每一次修改历史\",{\"1\":{\"72\":1}}],[\"查看提交历史记录\",{\"1\":{\"72\":1}}],[\"查看当前目录\",{\"1\":{\"68\":1}}],[\"查看分支\",{\"1\":{\"66\":1}}],[\"起始索引从0开始\",{\"1\":{\"312\":1}}],[\"起始索引\",{\"1\":{\"311\":1,\"312\":1}}],[\"起别名\",{\"1\":{\"265\":1}}],[\"然后相同的按照第二个方式排序\",{\"1\":{\"308\":1}}],[\"然后每隔5s运行一次\",{\"1\":{\"173\":1}}],[\"多个单词之间以\",{\"1\":{\"472\":1}}],[\"多表查询\",{\"0\":{\"335\":1},\"1\":{\"354\":1}}],[\"多字段排序\",{\"1\":{\"308\":1}}],[\"多选一\",{\"1\":{\"282\":1}}],[\"降序\",{\"1\":{\"307\":1}}],[\"升序\",{\"1\":{\"306\":1}}],[\"|\",{\"1\":{\"299\":1,\"436\":1,\"474\":1,\"479\":2}}],[\"||\",{\"1\":{\"289\":1}}],[\"聚合函数\",{\"0\":{\"293\":1}}],[\"聚合查询\",{\"1\":{\"263\":1}}],[\"非独占\",{\"1\":{\"486\":1}}],[\"非空约束\",{\"1\":{\"323\":1}}],[\"非\",{\"1\":{\"292\":1}}],[\"非常方便\",{\"1\":{\"88\":1}}],[\"模拟执行的漫\",{\"1\":{\"444\":1}}],[\"模拟事务回滚\",{\"1\":{\"422\":1}}],[\"模拟实现\",{\"1\":{\"141\":1}}],[\"模糊匹配\",{\"1\":{\"284\":1}}],[\"占位符\",{\"1\":{\"283\":1}}],[\"某个范围之内\",{\"1\":{\"280\":1}}],[\"功能\",{\"1\":{\"271\":1}}],[\"功能键\",{\"1\":{\"240\":2}}],[\"姓名\",{\"1\":{\"266\":2}}],[\"排序查询\",{\"0\":{\"305\":1},\"1\":{\"263\":1}}],[\"排序字段列表\",{\"1\":{\"262\":1}}],[\"排除依赖\",{\"0\":{\"92\":1}}],[\"不改变原始设计\",{\"1\":{\"579\":1}}],[\"不执行fsync\",{\"1\":{\"542\":1}}],[\"不是autodelete\",{\"1\":{\"486\":1}}],[\"不是数据库中字段\",{\"1\":{\"399\":1}}],[\"不再是任意绑定了\",{\"1\":{\"462\":1}}],[\"不关闭\",{\"1\":{\"434\":1}}],[\"不管如何都会回滚\",{\"1\":{\"413\":1}}],[\"不会污染数据\",{\"1\":{\"413\":1}}],[\"不会改变数据\",{\"1\":{\"413\":1}}],[\"不会参与查询\",{\"1\":{\"400\":1}}],[\"不被修改\",{\"1\":{\"389\":1}}],[\"不屑password\",{\"1\":{\"389\":1}}],[\"不去重\",{\"1\":{\"352\":1}}],[\"不参与计算\",{\"1\":{\"294\":1}}],[\"不等于\",{\"1\":{\"278\":1}}],[\"不重复\",{\"1\":{\"267\":1}}],[\"不写条件\",{\"1\":{\"257\":1}}],[\"不想使用其中的某个依赖\",{\"1\":{\"93\":1}}],[\"条件查询\",{\"0\":{\"269\":1},\"1\":{\"263\":1}}],[\"条件列表\",{\"1\":{\"262\":1}}],[\"条件\",{\"1\":{\"256\":1,\"259\":1,\"348\":1}}],[\"给全部字段添加值\",{\"1\":{\"253\":1}}],[\"给指定字段批量添加值\",{\"1\":{\"251\":1}}],[\"给指定字段添加值\",{\"1\":{\"249\":1}}],[\"值2\",{\"1\":{\"250\":1,\"252\":6,\"254\":1}}],[\"值1\",{\"1\":{\"250\":1,\"252\":6,\"254\":1}}],[\"表b\",{\"1\":{\"348\":1}}],[\"表a\",{\"1\":{\"348\":1}}],[\"表名列表\",{\"1\":{\"262\":1}}],[\"表名\",{\"1\":{\"250\":1,\"252\":2,\"254\":1,\"256\":1,\"259\":1,\"260\":1,\"266\":2,\"268\":1,\"296\":1,\"298\":1,\"300\":2,\"311\":1,\"316\":1,\"393\":1}}],[\"表示正文是html格式\",{\"1\":{\"164\":1}}],[\"编码格式\",{\"1\":{\"247\":1}}],[\"编译\",{\"1\":{\"85\":1}}],[\"哔哩哔哩\",{\"1\":{\"246\":1,\"354\":1,\"378\":1,\"426\":1,\"547\":1,\"589\":1,\"607\":1,\"613\":1}}],[\"最后\",{\"1\":{\"432\":1,\"434\":1}}],[\"最后即可使用ssh\",{\"1\":{\"242\":1}}],[\"最大\",{\"1\":{\"136\":1}}],[\"登录名\",{\"1\":{\"242\":1}}],[\"别名b\",{\"1\":{\"348\":1}}],[\"别名a\",{\"1\":{\"348\":1}}],[\"别名登录\",{\"1\":{\"242\":1}}],[\"别名\",{\"1\":{\"242\":1}}],[\"清空所有数据库\",{\"1\":{\"509\":1}}],[\"清空当前数据库\",{\"1\":{\"509\":1}}],[\"清除公钥信息\",{\"1\":{\"242\":1}}],[\"清理\",{\"1\":{\"85\":1}}],[\"免密登录\",{\"0\":{\"241\":1}}],[\"当名字一样使\",{\"1\":{\"608\":1}}],[\"当前数据库大小\",{\"1\":{\"509\":1}}],[\"当前表与自身的连接查询\",{\"1\":{\"347\":1}}],[\"当多个用户同时对同一数据进行操作时\",{\"1\":{\"417\":1}}],[\"当vim卡死时\",{\"1\":{\"240\":1}}],[\"当别的项目引用这个jar包\",{\"1\":{\"90\":1}}],[\"关闭自动确定\",{\"1\":{\"444\":1}}],[\"关闭消息的自动确认\",{\"1\":{\"442\":1}}],[\"关闭通道和连接\",{\"1\":{\"436\":1}}],[\"关闭查找关键词高亮\",{\"1\":{\"240\":1}}],[\"关联\",{\"1\":{\"76\":1}}],[\"取消粘贴模式\",{\"1\":{\"240\":1}}],[\"取消代码自动缩进\",{\"1\":{\"240\":1}}],[\"取消撤销\",{\"1\":{\"240\":1}}],[\"设置那些请求归springmvc处理\",{\"1\":{\"596\":1}}],[\"设置位配置类\",{\"1\":{\"577\":1}}],[\"设置重写的基准值\",{\"1\":{\"542\":2}}],[\"设置序列化器\",{\"1\":{\"530\":1}}],[\"设置name\",{\"1\":{\"512\":1}}],[\"设置k\",{\"1\":{\"512\":1}}],[\"设置通道一次只能消费一个消息\",{\"1\":{\"441\":1}}],[\"设置用户名和密码\",{\"1\":{\"432\":1,\"434\":1,\"436\":1}}],[\"设置连接哪一个虚拟主机\",{\"1\":{\"432\":1,\"434\":1,\"436\":1}}],[\"设置连接mq主机\",{\"1\":{\"432\":1,\"434\":1,\"436\":1}}],[\"设置成粘贴模式\",{\"1\":{\"240\":1}}],[\"设置编码\",{\"1\":{\"238\":1}}],[\"退出的时候也会产生\",{\"1\":{\"539\":1}}],[\"退出\",{\"1\":{\"240\":1}}],[\"强大的crud操作\",{\"1\":{\"379\":1}}],[\"强制退出\",{\"1\":{\"240\":1}}],[\"强制保存\",{\"1\":{\"240\":1}}],[\"强烈建议您创建并使用ram用户进行api访问或日常运维\",{\"1\":{\"121\":1}}],[\"小于号\",{\"1\":{\"240\":1}}],[\"大于号\",{\"1\":{\"240\":1}}],[\"撤销\",{\"1\":{\"240\":1}}],[\"复制当前行\",{\"1\":{\"240\":1}}],[\"复制选中的文本\",{\"1\":{\"240\":1}}],[\"选中文本\",{\"1\":{\"240\":1}}],[\"选择文件\",{\"1\":{\"134\":1}}],[\"且在替换前要求用户确认\",{\"1\":{\"240\":1}}],[\"反向重复前一个查找操作\",{\"1\":{\"240\":1}}],[\"光标移动到第一行\",{\"1\":{\"240\":1}}],[\"光标移动到第n行\",{\"1\":{\"240\":1}}],[\"光标移动到最后一行\",{\"1\":{\"240\":1}}],[\"光标移动到本行末尾\",{\"1\":{\"240\":1}}],[\"光标移动到本行开头\",{\"1\":{\"240\":1}}],[\"光标会向右移动这一行的n个字符\",{\"1\":{\"240\":1}}],[\"光标向下移动n行\",{\"1\":{\"240\":1}}],[\"光标向下移动一个字符\",{\"1\":{\"240\":1}}],[\"光标向右移动一个字符\",{\"1\":{\"240\":1}}],[\"光标向上移动一个字符\",{\"1\":{\"240\":1}}],[\"光标向左移动一个字符\",{\"1\":{\"240\":1}}],[\"按下数字后再按空格\",{\"1\":{\"240\":1}}],[\"7\",{\"1\":{\"240\":1,\"623\":1}}],[\"向有序集合中添加元素\",{\"1\":{\"522\":1}}],[\"向集合中添加元素\",{\"1\":{\"518\":1}}],[\"向下取整\",{\"1\":{\"318\":1}}],[\"向下箭头\",{\"1\":{\"240\":1}}],[\"向上取整\",{\"1\":{\"318\":1}}],[\"向上箭头\",{\"1\":{\"240\":1}}],[\"向光标之上寻找第一个值为word的字符串\",{\"1\":{\"240\":1}}],[\"向光标之下寻找第一个值为word的字符串\",{\"1\":{\"240\":1}}],[\"向右箭头\",{\"1\":{\"240\":1}}],[\"k\",{\"1\":{\"240\":1}}],[\"key=\",{\"1\":{\"571\":1}}],[\"key采用string的序列化方式\",{\"1\":{\"530\":1}}],[\"keys\",{\"1\":{\"512\":1}}],[\"key的时候使用通配符\",{\"1\":{\"472\":1}}],[\"keyproperty=\",{\"1\":{\"365\":1}}],[\"key\",{\"0\":{\"511\":1},\"1\":{\"76\":1,\"197\":5,\"325\":1,\"326\":1,\"329\":1,\"492\":2,\"494\":2,\"497\":1,\"520\":8}}],[\"keygen\",{\"1\":{\"76\":1,\"242\":2}}],[\"注解开发\",{\"0\":{\"572\":1}}],[\"注解说明\",{\"0\":{\"392\":1,\"615\":1}}],[\"注入\",{\"1\":{\"568\":1}}],[\"注意sql的路径\",{\"1\":{\"238\":1}}],[\"注释之前的内容被视为文章摘要\",{\"1\":{\"34\":1}}],[\"先实现一个拦截对象\",{\"0\":{\"632\":1}}],[\"先按第一个排序\",{\"1\":{\"308\":1}}],[\"先按ctrl\",{\"1\":{\"222\":1}}],[\"先生成一对密钥\",{\"1\":{\"242\":1}}],[\"先进入到mysql中\",{\"1\":{\"237\":1}}],[\"只是便于理解\",{\"1\":{\"575\":1}}],[\"只管保存\",{\"1\":{\"537\":1}}],[\"只能存入字符串\",{\"1\":{\"530\":1}}],[\"只不过topic\",{\"1\":{\"472\":1}}],[\"只有队列的routingkey与消息的routingkey完全一致\",{\"1\":{\"464\":1}}],[\"只有出现runtimeexception才回滚异常\",{\"1\":{\"420\":1}}],[\"只执行一次\",{\"1\":{\"436\":1}}],[\"只导出表结构\",{\"1\":{\"230\":1}}],[\"只需建立连接\",{\"1\":{\"144\":1}}],[\"此时就用到了\",{\"1\":{\"461\":1}}],[\"此命令的路径即mysql的安装路径\",{\"1\":{\"227\":1}}],[\"此页面应当包含\",{\"1\":{\"49\":1}}],[\"用于接收json数据\",{\"1\":{\"616\":1}}],[\"用于接收url地址参数\",{\"1\":{\"616\":1}}],[\"用默认no即可\",{\"1\":{\"542\":1}}],[\"用mysqldump命令导出数据库\",{\"1\":{\"227\":1}}],[\"用户名已存在\",{\"1\":{\"197\":1}}],[\"用户名不能为空\",{\"1\":{\"197\":2}}],[\"用户给收件人发出邮件的同时把该邮件抄送给另外的人\",{\"1\":{\"164\":1}}],[\"运行镜像\",{\"1\":{\"224\":1}}],[\"运行目录下\",{\"1\":{\"135\":1}}],[\"例子\",{\"0\":{\"223\":1}}],[\"例如\",{\"1\":{\"228\":1,\"232\":1,\"235\":1,\"472\":1,\"518\":10,\"520\":8,\"522\":10}}],[\"例如断开连接或网络故障\",{\"1\":{\"156\":1}}],[\"例如examplebucket\",{\"1\":{\"121\":1}}],[\"例如a依赖了b\",{\"1\":{\"88\":1}}],[\"网络等信息\",{\"1\":{\"222\":1}}],[\"内置sql注入剥离器\",{\"1\":{\"384\":1}}],[\"内置全局拦截插件\",{\"1\":{\"384\":1}}],[\"内置性能分析插件\",{\"1\":{\"383\":1}}],[\"内置分页插件\",{\"1\":{\"383\":1}}],[\"内置代码生成器\",{\"1\":{\"383\":1}}],[\"内连接\",{\"0\":{\"338\":1}}],[\"内存\",{\"1\":{\"222\":1}}],[\"内容\",{\"1\":{\"164\":1,\"432\":1,\"577\":1}}],[\"包括cpu\",{\"1\":{\"222\":1}}],[\"包括锁定\",{\"1\":{\"192\":1}}],[\"体积更大\",{\"1\":{\"222\":1}}],[\"仅保存容器当时的快照状态\",{\"1\":{\"222\":1}}],[\"再有交换机发给队列\",{\"1\":{\"450\":1}}],[\"再按ctrl\",{\"1\":{\"222\":1}}],[\"再重新登录回来\",{\"1\":{\"218\":1}}],[\"进入一般命令模式\",{\"1\":{\"240\":1}}],[\"进入编辑模式\",{\"1\":{\"240\":1}}],[\"进入容器\",{\"1\":{\"222\":1}}],[\"进行引用\",{\"1\":{\"44\":1,\"45\":1}}],[\"重写时是否可以运用appendfsync\",{\"1\":{\"542\":1}}],[\"重启消息也在\",{\"1\":{\"432\":1}}],[\"重启容器\",{\"1\":{\"222\":1}}],[\"重复前一个查找操作\",{\"1\":{\"240\":1}}],[\"重命名容器\",{\"1\":{\"222\":1}}],[\"重命名\",{\"1\":{\"135\":1}}],[\"停止容器\",{\"1\":{\"222\":1}}],[\"利用镜像ubuntu\",{\"1\":{\"222\":1}}],[\"容器\",{\"0\":{\"221\":1}}],[\"或者\",{\"1\":{\"266\":1,\"290\":1,\"560\":1}}],[\"或\",{\"1\":{\"220\":1,\"222\":1,\"240\":7,\"287\":1,\"291\":1}}],[\"列数必须保持一致\",{\"1\":{\"351\":1}}],[\"列表中的值\",{\"1\":{\"282\":1}}],[\"列出本地所有镜像\",{\"1\":{\"220\":1}}],[\"列举文件\",{\"1\":{\"123\":1}}],[\"拉取一个镜像\",{\"1\":{\"220\":1}}],[\"拉取远程分支xxx\",{\"1\":{\"66\":1}}],[\"镜像\",{\"0\":{\"219\":1}}],[\"中间有一个过度的服务器\",{\"1\":{\"430\":1}}],[\"中安装\",{\"1\":{\"216\":1}}],[\"中设置页面信息\",{\"1\":{\"36\":1}}],[\"如二进制协议\",{\"1\":{\"525\":1}}],[\"如hincrby\",{\"1\":{\"520\":1}}],[\"如何在\",{\"1\":{\"216\":1}}],[\"如果有返回值\",{\"1\":{\"585\":1}}],[\"如果key不存在\",{\"1\":{\"520\":1}}],[\"如果存在则不创建\",{\"1\":{\"514\":1}}],[\"如果队列中有消息\",{\"1\":{\"430\":1}}],[\"如果在多个操作中涉及到较多的i\",{\"1\":{\"418\":1}}],[\"如果在多个操作中发生了错误\",{\"1\":{\"416\":1}}],[\"如果只需要导出表结构\",{\"1\":{\"230\":1}}],[\"如果服务器端不能正常关闭连接\",{\"1\":{\"149\":1}}],[\"如果要删除目录\",{\"1\":{\"125\":1}}],[\"如果设置keyprefix\",{\"1\":{\"123\":1}}],[\"如果不设置keyprefix\",{\"1\":{\"123\":1}}],[\"为属性赋值\",{\"1\":{\"619\":1}}],[\"为了更有效地使用内存\",{\"1\":{\"524\":1}}],[\"为了一直消费信息\",{\"1\":{\"434\":1}}],[\"为了避免每次使用docker命令都需要加上sudo权限\",{\"1\":{\"215\":1}}],[\"为简化开发\",{\"1\":{\"377\":1}}],[\"为空\",{\"1\":{\"286\":1}}],[\"为例\",{\"1\":{\"121\":1}}],[\"将功能增强\",{\"1\":{\"579\":1}}],[\"将name移入到数据库1中\",{\"1\":{\"512\":1}}],[\"将通道声明到交换机\",{\"1\":{\"454\":1}}],[\"将所有操作合并到一个事务中可以减少i\",{\"1\":{\"418\":1}}],[\"将数据回滚至操作之前的状态\",{\"1\":{\"416\":1}}],[\"将年龄低于50和性别为\",{\"1\":{\"350\":1}}],[\"将全文代码格式化\",{\"1\":{\"240\":1}}],[\"将全文的word1替换为word2\",{\"1\":{\"240\":2}}],[\"将选中的文本整体向左缩进一次\",{\"1\":{\"240\":1}}],[\"将选中的文本整体向右缩进一次\",{\"1\":{\"240\":1}}],[\"将复制的数据在光标的下一行\",{\"1\":{\"240\":1}}],[\"将本地文件xxx\",{\"1\":{\"222\":1}}],[\"将本地内容推送到远程仓库\",{\"1\":{\"76\":2}}],[\"将容器container导出到本地文件xxx\",{\"1\":{\"222\":1}}],[\"将镜像ubuntu\",{\"1\":{\"220\":2}}],[\"将当前用户添加到docker用户组\",{\"0\":{\"214\":1}}],[\"根本不需要的描述\",{\"1\":{\"209\":1}}],[\"搭建\",{\"0\":{\"207\":1}}],[\"666\",{\"1\":{\"389\":2,\"587\":1}}],[\"6379\",{\"1\":{\"203\":1}}],[\"6\",{\"1\":{\"201\":1,\"240\":1,\"565\":1,\"612\":1}}],[\"引入\",{\"1\":{\"200\":1}}],[\"你好\",{\"1\":{\"197\":2}}],[\"你可以通过主题选项和页面\",{\"1\":{\"59\":1}}],[\"你可以通过设置页面的\",{\"1\":{\"13\":1}}],[\"你可以将图片和\",{\"1\":{\"44\":1}}],[\"你可以自由在这里书写你的\",{\"1\":{\"42\":1}}],[\"你可以在\",{\"1\":{\"36\":1}}],[\"qian\",{\"1\":{\"585\":1}}],[\"queues\",{\"1\":{\"501\":1}}],[\"queuestodeclare\",{\"1\":{\"486\":1,\"488\":2}}],[\"queuebinding\",{\"1\":{\"490\":2,\"492\":2,\"494\":2}}],[\"queuebind\",{\"1\":{\"456\":1,\"468\":3,\"469\":1,\"479\":3}}],[\"queue\",{\"1\":{\"456\":3,\"468\":5,\"469\":3,\"479\":5,\"486\":1,\"488\":2,\"490\":2,\"492\":2,\"494\":2,\"497\":5,\"501\":1}}],[\"queuedeclare\",{\"1\":{\"432\":1,\"434\":1,\"444\":1,\"456\":1,\"468\":1,\"469\":1,\"479\":1}}],[\"querywrapper<>\",{\"1\":{\"408\":1}}],[\"querywrapper<record>\",{\"1\":{\"408\":1}}],[\"querywrapper<web>\",{\"1\":{\"197\":2}}],[\"querywrapper\",{\"1\":{\"197\":3,\"386\":8,\"408\":3}}],[\"q\",{\"1\":{\"240\":3,\"389\":3,\"411\":5}}],[\"q可以挂起容器\",{\"1\":{\"222\":1}}],[\"qq\",{\"1\":{\"160\":2,\"166\":3}}],[\"密码长度不能超过50\",{\"1\":{\"197\":1}}],[\"密码不能为空\",{\"1\":{\"197\":1}}],[\"密码加密的文章\",{\"0\":{\"27\":1}}],[\"避免了锁过期的问题\",{\"1\":{\"194\":1}}],[\"保证数据安全性\",{\"1\":{\"542\":1}}],[\"保证数据的完整性\",{\"1\":{\"416\":1}}],[\"保证了锁的操作原子性\",{\"1\":{\"193\":1}}],[\"保留y位小数\",{\"1\":{\"318\":1}}],[\"保存配置\",{\"1\":{\"537\":1}}],[\"保存并退出\",{\"1\":{\"240\":1}}],[\"保存临时位置\",{\"1\":{\"136\":1}}],[\"保存\",{\"1\":{\"135\":1,\"240\":1}}],[\"需要退出服务器\",{\"1\":{\"218\":1}}],[\"需要自己实现保证操作的原子性\",{\"1\":{\"193\":1}}],[\"需要使用polyfill或其他技术\",{\"1\":{\"148\":1}}],[\"使数据占用的空间更小\",{\"1\":{\"524\":1}}],[\"使事务回滚\",{\"1\":{\"422\":1}}],[\"使得锁的使用变得简单\",{\"1\":{\"192\":1}}],[\"使用场景\",{\"1\":{\"619\":1}}],[\"使用mapper继承basemapper<t>即可开箱即用\",{\"1\":{\"388\":1}}],[\"使用mysql命令导入\",{\"1\":{\"235\":1}}],[\"使用已创建的数据库\",{\"1\":{\"238\":1}}],[\"使用sources命令导入\",{\"1\":{\"237\":1}}],[\"使用cron表达式指定执行时间\",{\"0\":{\"175\":1}}],[\"使用ram用户访问密钥发起请求\",{\"1\":{\"119\":1}}],[\"使用ram访问\",{\"0\":{\"116\":1}}],[\"使用坐标主动排除掉\",{\"1\":{\"93\":1}}],[\"使用\",{\"0\":{\"628\":1},\"1\":{\"68\":1,\"172\":1,\"204\":1,\"407\":1,\"583\":1}}],[\"使用指南\",{\"1\":{\"39\":1,\"40\":1},\"2\":{\"5\":1,\"11\":1,\"25\":1,\"31\":1,\"60\":1,\"61\":1,\"77\":1,\"112\":1,\"126\":1,\"210\":1,\"243\":1,\"356\":1,\"373\":1,\"423\":1,\"502\":1,\"543\":1,\"638\":1}}],[\"并打印异常信息\",{\"1\":{\"422\":1}}],[\"并发控制\",{\"1\":{\"417\":1}}],[\"并将结果存储到新的有序集合中\",{\"1\":{\"522\":2}}],[\"并将该字符串替换为word2\",{\"1\":{\"240\":1}}],[\"并将镜像命名为image\",{\"1\":{\"222\":1}}],[\"并提供了api接口\",{\"1\":{\"192\":1}}],[\"并且\",{\"1\":{\"288\":1}}],[\"并且传递的依赖是没有数量和层级的限制的\",{\"1\":{\"88\":1}}],[\"并且切换过去\",{\"1\":{\"66\":1}}],[\"释放锁等\",{\"1\":{\"192\":1}}],[\"但里面是空的\",{\"1\":{\"538\":1}}],[\"但有时我们希望不同的消息被不同的队列消费\",{\"1\":{\"460\":1}}],[\"但它们之间有以下区别\",{\"0\":{\"190\":1}}],[\"但是你需要使用相对链接\",{\"1\":{\"44\":1}}],[\"分割\",{\"1\":{\"472\":1}}],[\"分页查询\",{\"0\":{\"310\":1},\"1\":{\"263\":1}}],[\"分页\",{\"0\":{\"404\":1},\"1\":{\"262\":1}}],[\"分组后的列只有待分组的字段和聚合函数\",{\"1\":{\"302\":1}}],[\"分组后条件列表\",{\"1\":{\"262\":1}}],[\"分组查询\",{\"0\":{\"301\":1},\"1\":{\"263\":1}}],[\"分组字段列表\",{\"1\":{\"262\":1}}],[\"分布式锁\",{\"0\":{\"189\":1}}],[\"分类为\",{\"1\":{\"39\":1}}],[\"读取图片文件\",{\"1\":{\"188\":1}}],[\"对有序集合中指定元素的分数进行增加\",{\"1\":{\"522\":1}}],[\"对象\",{\"1\":{\"188\":1}}],[\"对于老的浏览器\",{\"1\":{\"148\":1}}],[\"对于\",{\"1\":{\"45\":1}}],[\"预览图片的\",{\"1\":{\"188\":1}}],[\"自定义注解为属性赋值\",{\"0\":{\"618\":1}}],[\"自定义它们\",{\"1\":{\"59\":1}}],[\"自动装配\",{\"1\":{\"577\":1}}],[\"自动装配到spring的bean\",{\"1\":{\"577\":1}}],[\"自动生成的快照文件\",{\"1\":{\"535\":1}}],[\"自动从队列中删除\",{\"1\":{\"430\":1}}],[\"自增\",{\"1\":{\"395\":1}}],[\"自连接\",{\"0\":{\"346\":1}}],[\"自启动\",{\"1\":{\"177\":1}}],[\"5s\",{\"1\":{\"512\":1}}],[\"5672\",{\"1\":{\"432\":1,\"434\":1,\"436\":1,\"482\":1}}],[\"5个字段\",{\"1\":{\"336\":1}}],[\"51\",{\"1\":{\"316\":1}}],[\"50\",{\"1\":{\"304\":1,\"352\":2}}],[\"500mb\",{\"1\":{\"222\":1}}],[\"5000ms\",{\"1\":{\"178\":1}}],[\"5000l\",{\"1\":{\"178\":1}}],[\"5000\",{\"1\":{\"174\":2}}],[\"5\",{\"0\":{\"628\":1},\"1\":{\"197\":1,\"240\":1,\"318\":2,\"361\":1,\"512\":1,\"612\":1}}],[\"5<\",{\"1\":{\"133\":1,\"201\":1,\"361\":1}}],[\"配置拦截器\",{\"0\":{\"624\":1}}],[\"配置tomcat启动即可\",{\"1\":{\"597\":1}}],[\"配置bean\",{\"1\":{\"556\":1}}],[\"配置实在是多\",{\"1\":{\"552\":1}}],[\"配置redistemplate\",{\"1\":{\"530\":1}}],[\"配置\",{\"0\":{\"634\":1},\"1\":{\"170\":1,\"182\":1,\"560\":1}}],[\"jackson2jsonredisserializer\",{\"1\":{\"530\":6}}],[\"java\",{\"1\":{\"527\":1,\"529\":1,\"557\":1,\"563\":1,\"596\":2}}],[\"javamailsender\",{\"1\":{\"164\":7}}],[\"javax\",{\"1\":{\"160\":1}}],[\"java上传文件概述和文件下载\",{\"0\":{\"115\":1}}],[\"jsp\",{\"1\":{\"610\":3}}],[\"jsp页面\",{\"1\":{\"610\":1}}],[\"json数据传递参数\",{\"1\":{\"607\":1}}],[\"jsonautodetect\",{\"1\":{\"530\":1}}],[\"json和messagepack是常用的序列化格式\",{\"1\":{\"525\":1}}],[\"json\",{\"1\":{\"525\":1,\"608\":1}}],[\"jsonobject\",{\"1\":{\"408\":3}}],[\"js\",{\"1\":{\"478\":1}}],[\"jkl\",{\"1\":{\"389\":1}}],[\"join\",{\"1\":{\"340\":1,\"343\":2,\"348\":1}}],[\"j\",{\"1\":{\"240\":1}}],[\"jwtutil\",{\"1\":{\"197\":1,\"623\":1}}],[\"jwt\",{\"1\":{\"197\":2}}],[\"jpg\",{\"1\":{\"166\":1}}],[\"43\",{\"1\":{\"354\":1}}],[\"457\",{\"1\":{\"318\":1}}],[\"456871865468\",{\"1\":{\"318\":1}}],[\"42\",{\"1\":{\"240\":1}}],[\"41\",{\"1\":{\"240\":1}}],[\"40\",{\"1\":{\"240\":1}}],[\"4\",{\"0\":{\"626\":1},\"1\":{\"240\":1,\"516\":2,\"558\":1}}],[\"47f4c019880711ebb6edd017c2d2eca2\",{\"1\":{\"166\":1}}],[\"465\",{\"1\":{\"160\":1}}],[\"附带图片\",{\"1\":{\"164\":1}}],[\"知道发件人把该邮件抄送给了另外哪些人\",{\"1\":{\"164\":1}}],[\"在里面加载spring配置\",{\"1\":{\"596\":1}}],[\"在哪里执行\",{\"1\":{\"581\":1}}],[\"在key对应的hash中设置field对应的value\",{\"1\":{\"520\":1}}],[\"在fanout的模式下\",{\"1\":{\"460\":1}}],[\"在多个操作之间存在依赖关系的情况下\",{\"1\":{\"415\":1}}],[\"在\",{\"1\":{\"377\":1}}],[\"在mysql中\",{\"1\":{\"332\":1}}],[\"在第n1行与n2行之间寻找word1这个字符串\",{\"1\":{\"240\":1}}],[\"在本地和容器间复制文件\",{\"1\":{\"222\":1}}],[\"在容器中执行命令\",{\"1\":{\"222\":1}}],[\"在图片文件读取完毕后设置预览图片的\",{\"1\":{\"188\":1}}],[\"在spring\",{\"1\":{\"169\":1}}],[\"在这种抄送方式中\",{\"1\":{\"164\":1}}],[\"在页面禁用功能与布局\",{\"1\":{\"13\":1}}],[\"抄送人\",{\"1\":{\"164\":1}}],[\"抄送\",{\"1\":{\"164\":1}}],[\"x\",{\"1\":{\"318\":2,\"336\":1,\"497\":2}}],[\"xml配置详解\",{\"1\":{\"362\":1}}],[\"xml\",{\"1\":{\"161\":1,\"553\":1,\"555\":1,\"558\":1,\"563\":1,\"577\":1,\"591\":1}}],[\"xxx\",{\"1\":{\"66\":5,\"222\":6,\"479\":1,\"577\":1}}],[\"80\",{\"1\":{\"389\":1}}],[\"880\",{\"1\":{\"389\":2}}],[\"8\",{\"1\":{\"160\":1,\"238\":1,\"240\":1}}],[\"邮件配置\",{\"1\":{\"160\":1}}],[\"导入\",{\"1\":{\"554\":1}}],[\"导入sql文件\",{\"1\":{\"238\":1}}],[\"导入数据库\",{\"0\":{\"234\":1}}],[\"导出完整数据库\",{\"0\":{\"226\":1}}],[\"导致数据传输效率较低\",{\"1\":{\"155\":1}}],[\"导航栏\",{\"1\":{\"15\":1,\"55\":1}}],[\"因为sockjs在不支持websocket的浏览器中使用的是长轮询技术\",{\"1\":{\"155\":1}}],[\"因此可以保证数据的完整性\",{\"1\":{\"541\":1}}],[\"因此可能会遇到连接不稳定的情况\",{\"1\":{\"156\":1}}],[\"因此\",{\"1\":{\"419\":1}}],[\"因此需要发送大量的头部信息\",{\"1\":{\"155\":1}}],[\"因此在不支持websocket的浏览器中也可以使用\",{\"1\":{\"152\":1}}],[\"因此只有在支持html5的浏览器中才能使用\",{\"1\":{\"148\":1}}],[\"因此数据传输的效率非常高\",{\"1\":{\"145\":1}}],[\"头部信息较大\",{\"1\":{\"155\":1}}],[\"甚至包括ie6\",{\"1\":{\"151\":1}}],[\"跨浏览器\",{\"1\":{\"151\":1}}],[\"跨域放行\",{\"1\":{\"119\":1}}],[\"双向通信\",{\"1\":{\"146\":1}}],[\"高效性\",{\"1\":{\"145\":1}}],[\"就消费掉\",{\"1\":{\"430\":1}}],[\"就要用到联合查询了\",{\"1\":{\"350\":1}}],[\"就可以进行双向通信\",{\"1\":{\"144\":1}}],[\"就建一个\",{\"1\":{\"135\":1}}],[\"它是\",{\"1\":{\"535\":1,\"541\":1}}],[\"它们可以方便地与其他语言和系统进行交互\",{\"1\":{\"525\":1}}],[\"它们都有自己的优势和缺点\",{\"1\":{\"142\":1}}],[\"它可以最大程度地减少数据占用的空间\",{\"1\":{\"525\":1}}],[\"它需要对存储的数据进行序列化\",{\"1\":{\"524\":1}}],[\"它实现了浏览器与服务器全双工通信\",{\"1\":{\"141\":1}}],[\"从有序集合中删除元素\",{\"1\":{\"522\":1}}],[\"从集合中弹出一个随机元素\",{\"1\":{\"518\":1}}],[\"从集合中删除元素\",{\"1\":{\"518\":1}}],[\"从而使得浏览器与服务器之间的通信始终保持稳定和高效\",{\"1\":{\"141\":1}}],[\"从最近到最远\",{\"1\":{\"72\":1}}],[\"时间\",{\"1\":{\"608\":1}}],[\"时间间隔\",{\"1\":{\"320\":1}}],[\"时\",{\"1\":{\"141\":1}}],[\"即当浏览器不支持\",{\"1\":{\"141\":1}}],[\"即撤销修改\",{\"1\":{\"72\":1}}],[\"而是要指定一个routingkey\",{\"1\":{\"462\":1}}],[\"而redisson分布式锁是基于redis的redisson分布式框架实现的\",{\"1\":{\"191\":1}}],[\"而\",{\"1\":{\"141\":1}}],[\"是保证数据库安全和稳定运行的基本手段\",{\"1\":{\"419\":1}}],[\"是一个\",{\"1\":{\"377\":1}}],[\"是\",{\"1\":{\"141\":2,\"535\":1,\"541\":1}}],[\"是否以append\",{\"1\":{\"542\":1}}],[\"是否开启多个消息同时确认\",{\"1\":{\"444\":1}}],[\"是否开启上传\",{\"1\":{\"136\":1}}],[\"是否消费结束后自动删除\",{\"1\":{\"432\":1,\"434\":1}}],[\"是否独占队列\",{\"1\":{\"432\":1,\"434\":1}}],[\"是否延迟解析\",{\"1\":{\"136\":1}}],[\"具体应该根据实际情况来选择\",{\"1\":{\"141\":1}}],[\"应用场景\",{\"1\":{\"140\":1,\"430\":1}}],[\"热加载\",{\"0\":{\"137\":1}}],[\"总大小\",{\"1\":{\"136\":1}}],[\"09\",{\"1\":{\"607\":1}}],[\"02\",{\"1\":{\"589\":1}}],[\"01\",{\"1\":{\"547\":1}}],[\"04创建一个容器\",{\"1\":{\"222\":1}}],[\"04从本地文件ubuntu\",{\"1\":{\"220\":1}}],[\"04导出到本地文件ubuntu\",{\"1\":{\"220\":1}}],[\"04\",{\"1\":{\"216\":1,\"220\":9,\"222\":2}}],[\"0<\",{\"1\":{\"208\":1}}],[\"0\",{\"0\":{\"175\":2},\"1\":{\"136\":1,\"176\":2,\"188\":1,\"197\":6,\"203\":1,\"208\":1,\"209\":1,\"224\":1,\"240\":1,\"242\":6,\"313\":1,\"432\":2,\"434\":2,\"436\":2,\"482\":2,\"484\":1,\"514\":1,\"516\":2,\"522\":1,\"587\":1,\"592\":1}}],[\"没有文件夹\",{\"1\":{\"135\":1}}],[\"书本\",{\"0\":{\"128\":1}}],[\"返回一个串\",{\"1\":{\"610\":1}}],[\"返回一个日期加上某个时间后的日期\",{\"1\":{\"320\":1}}],[\"返回值\",{\"1\":{\"616\":1}}],[\"返回值类型\",{\"1\":{\"594\":1}}],[\"返回值为null\",{\"1\":{\"400\":1}}],[\"返回对象必须是object\",{\"1\":{\"585\":1}}],[\"返回有序集合中元素的数量\",{\"1\":{\"522\":1}}],[\"返回有序集合中指定元素的排名\",{\"1\":{\"522\":1}}],[\"返回有序集合中指定分数范围的元素数量\",{\"1\":{\"522\":1}}],[\"返回有序集合中指定分数范围的元素\",{\"1\":{\"522\":1}}],[\"返回有序集合中指定范围的元素\",{\"1\":{\"522\":1}}],[\"返回多个集合的交集\",{\"1\":{\"518\":1}}],[\"返回多个集合的差集\",{\"1\":{\"518\":1}}],[\"返回多个集合的并集\",{\"1\":{\"518\":1}}],[\"返回集合中元素的数量\",{\"1\":{\"518\":1}}],[\"返回集合中所有元素\",{\"1\":{\"518\":1}}],[\"返回当前时间\",{\"1\":{\"320\":1}}],[\"返回当前日期和时间\",{\"1\":{\"320\":1}}],[\"返回当前日期\",{\"1\":{\"320\":1}}],[\"返回0\",{\"1\":{\"318\":1}}],[\"返回x\",{\"1\":{\"318\":1}}],[\"返回路径\",{\"1\":{\"135\":1}}],[\"返回所有的链接\",{\"1\":{\"123\":1}}],[\"返回顶部按钮\",{\"1\":{\"24\":1,\"58\":1}}],[\"填写bucket名称\",{\"1\":{\"121\":1}}],[\"请求\",{\"0\":{\"598\":1}}],[\"请登录ram控制台创建ram用户\",{\"1\":{\"121\":1}}],[\"请使用绝对链接\",{\"1\":{\"45\":1}}],[\"风险很高\",{\"1\":{\"121\":1}}],[\"=null\",{\"1\":{\"436\":2,\"627\":1}}],[\"===\",{\"1\":{\"577\":1}}],[\"==0\",{\"1\":{\"197\":1}}],[\"==\",{\"1\":{\"197\":2,\"616\":1}}],[\"=>\",{\"1\":{\"188\":1}}],[\"=resids\",{\"1\":{\"164\":1}}],[\"=\",{\"0\":{\"175\":1},\"1\":{\"121\":6,\"123\":5,\"125\":2,\"135\":7,\"164\":6,\"174\":2,\"176\":1,\"178\":2,\"183\":4,\"185\":13,\"187\":3,\"188\":4,\"197\":12,\"203\":1,\"205\":3,\"276\":1,\"277\":1,\"312\":1,\"316\":2,\"336\":1,\"340\":2,\"343\":2,\"352\":2,\"364\":1,\"368\":4,\"370\":5,\"372\":5,\"389\":15,\"400\":1,\"406\":1,\"408\":4,\"410\":2,\"411\":3,\"421\":1,\"422\":1,\"432\":3,\"434\":4,\"436\":1,\"444\":3,\"454\":2,\"456\":4,\"466\":3,\"468\":3,\"469\":3,\"478\":3,\"479\":3,\"484\":1,\"486\":3,\"488\":4,\"490\":12,\"492\":14,\"494\":14,\"497\":4,\"499\":2,\"501\":2,\"530\":4,\"532\":1,\"558\":3,\"567\":1,\"569\":2,\"577\":1,\"587\":3,\"596\":1,\"614\":4,\"616\":3,\"623\":1,\"627\":1,\"629\":2}}],[\"杭州\",{\"1\":{\"121\":1}}],[\"③\",{\"1\":{\"119\":1}}],[\"权限\",{\"1\":{\"119\":1}}],[\"上传图片\",{\"0\":{\"120\":1}}],[\"上传\",{\"1\":{\"119\":1,\"134\":1}}],[\"上一篇\",{\"1\":{\"21\":1}}],[\"放行权限\",{\"1\":{\"119\":1}}],[\"②\",{\"1\":{\"119\":1}}],[\"①\",{\"1\":{\"119\":1}}],[\"建议使用子账号\",{\"1\":{\"118\":1}}],[\"警告\",{\"1\":{\"117\":1}}],[\"更新行为\",{\"1\":{\"330\":1}}],[\"更新所有\",{\"1\":{\"257\":1}}],[\"更新时间等页面元信息\",{\"1\":{\"53\":1}}],[\"更新时间\",{\"1\":{\"20\":1}}],[\"更安全\",{\"0\":{\"116\":1}}],[\"阿里云账号accesskey拥有所有api的访问权限\",{\"1\":{\"121\":1}}],[\"阿里云对象存储\",{\"0\":{\"114\":1}}],[\"阿里官方文档\",{\"0\":{\"115\":1}}],[\"阿里镜像\",{\"0\":{\"82\":1}}],[\"默认使用的是rdb方式持久化\",{\"1\":{\"542\":1}}],[\"默认情况下的模板只能支持\",{\"1\":{\"530\":1}}],[\"默认队列持久化\",{\"1\":{\"486\":1}}],[\"默认会平均分配内容\",{\"1\":{\"439\":1}}],[\"默认形况下\",{\"1\":{\"420\":1}}],[\"默认就是这一项\",{\"1\":{\"331\":1}}],[\"默认约束\",{\"1\":{\"322\":1}}],[\"默认\",{\"1\":{\"100\":1,\"306\":1}}],[\"主键\",{\"1\":{\"394\":1}}],[\"主键返回\",{\"0\":{\"363\":1}}],[\"主键约束\",{\"1\":{\"325\":1}}],[\"主题\",{\"1\":{\"164\":1}}],[\"主题包含了一个自定义徽章可以使用\",{\"1\":{\"46\":1}}],[\"主账号accesskey泄露会威胁您所有资源的安全\",{\"1\":{\"118\":1}}],[\"主代码\",{\"1\":{\"97\":1}}],[\"><\",{\"1\":{\"571\":1}}],[\"><img\",{\"1\":{\"166\":1}}],[\">=\",{\"1\":{\"273\":1}}],[\">aaa\",{\"1\":{\"233\":1}}],[\">50\",{\"1\":{\"197\":1}}],[\">\",{\"1\":{\"94\":1,\"134\":3,\"166\":1,\"178\":1,\"188\":4,\"201\":1,\"227\":1,\"229\":1,\"231\":1,\"240\":1,\"272\":1,\"304\":1,\"318\":1,\"361\":1,\"365\":1,\"368\":3,\"370\":3,\"372\":4,\"474\":1,\"476\":1,\"499\":1,\"554\":1,\"556\":3,\"560\":1,\"563\":3,\"565\":6,\"571\":3}}],[\"加载配置\",{\"1\":{\"596\":1}}],[\"加载对应的bean\",{\"1\":{\"596\":1}}],[\"加载spring配置\",{\"1\":{\"596\":1}}],[\"加载springmvc配置\",{\"1\":{\"596\":1}}],[\"加入某个jar包依赖后\",{\"1\":{\"93\":1}}],[\"加参\",{\"1\":{\"72\":1}}],[\"9<\",{\"1\":{\"91\":1}}],[\"9\",{\"1\":{\"91\":1,\"240\":1}}],[\"other\",{\"0\":{\"641\":1}}],[\"otherwise>\",{\"1\":{\"370\":1}}],[\"oother\",{\"0\":{\"640\":1}}],[\"of\",{\"1\":{\"549\":1}}],[\"om\",{\"1\":{\"530\":4}}],[\"o操作和网络传输\",{\"1\":{\"418\":1}}],[\"o操作或网络传输\",{\"1\":{\"418\":1}}],[\"only模式作为持久化方式\",{\"1\":{\"542\":1}}],[\"only\",{\"1\":{\"541\":1}}],[\"onload\",{\"1\":{\"188\":1}}],[\"onmessage\",{\"1\":{\"501\":1}}],[\"one\",{\"1\":{\"454\":2,\"456\":2}}],[\"on\",{\"1\":{\"340\":1,\"343\":2,\"348\":1,\"542\":1}}],[\"org\",{\"1\":{\"361\":1}}],[\"or或\",{\"1\":{\"289\":1}}],[\"orderbyasc\",{\"1\":{\"408\":1}}],[\"order\",{\"1\":{\"262\":1,\"263\":1,\"309\":1}}],[\"originalfilename\",{\"1\":{\"121\":2}}],[\"origin\",{\"1\":{\"66\":3,\"76\":4}}],[\"o\",{\"1\":{\"220\":1,\"222\":1}}],[\"opsforvalue\",{\"1\":{\"197\":1,\"532\":2}}],[\"optional>\",{\"1\":{\"91\":1,\"138\":1}}],[\"optional为true时不让别人知道自己所用依赖\",{\"1\":{\"90\":1}}],[\"objectmapper\",{\"1\":{\"530\":3}}],[\"object\",{\"1\":{\"530\":1,\"587\":3,\"623\":1,\"627\":1,\"633\":3}}],[\"object>>>\",{\"1\":{\"386\":1}}],[\"object>>\",{\"1\":{\"386\":1}}],[\"object>\",{\"1\":{\"386\":2,\"389\":2,\"497\":2,\"530\":2}}],[\"objecterror\",{\"1\":{\"187\":1}}],[\"objectlisting\",{\"1\":{\"123\":3}}],[\"oldname\",{\"1\":{\"135\":3}}],[\"override\",{\"1\":{\"131\":1,\"178\":1,\"205\":1,\"408\":1,\"422\":1,\"434\":1,\"444\":1,\"456\":1,\"468\":1,\"469\":1,\"479\":1,\"596\":3,\"623\":1,\"625\":2,\"627\":2,\"633\":3,\"635\":1}}],[\"oe\",{\"1\":{\"123\":5,\"125\":5}}],[\"outer\",{\"1\":{\"343\":1}}],[\"out\",{\"1\":{\"123\":6,\"125\":5,\"135\":1,\"164\":1,\"174\":1,\"178\":1,\"187\":1,\"197\":2,\"389\":6,\"410\":1,\"411\":1,\"434\":1,\"444\":1,\"456\":1,\"468\":1,\"469\":1,\"479\":1,\"486\":1,\"488\":2,\"490\":2,\"492\":2,\"494\":2,\"501\":1,\"532\":1,\"560\":2,\"581\":1,\"585\":3,\"587\":1,\"594\":1,\"601\":1,\"603\":1,\"608\":1,\"614\":2,\"633\":3}}],[\"our\",{\"1\":{\"94\":1}}],[\"os\",{\"1\":{\"121\":3}}],[\"ossexception\",{\"1\":{\"123\":2,\"125\":2}}],[\"ossobjectsummary\",{\"1\":{\"123\":1}}],[\"ossclient\",{\"1\":{\"123\":4,\"125\":4}}],[\"ossclientbuilder\",{\"1\":{\"121\":1,\"123\":1,\"125\":1}}],[\"oss\",{\"1\":{\"119\":3,\"121\":2,\"123\":2,\"125\":2}}],[\"可能会导致丢失这1s数据\",{\"1\":{\"542\":1}}],[\"可能会导致资源浪费和性能问题\",{\"1\":{\"149\":1}}],[\"可靠性\",{\"1\":{\"153\":1}}],[\"可以把id拿出来\",{\"1\":{\"364\":1}}],[\"可以使用两个表之间的联系去除无用数据\",{\"1\":{\"337\":1}}],[\"可以使用以下命令找到导出的数据库\",{\"1\":{\"233\":1}}],[\"可以取消当前正在执行的命令\",{\"1\":{\"240\":1}}],[\"可以将当前用户加入安装中自动创建的docker用户组\",{\"1\":{\"215\":1}}],[\"可以保证数据的可靠性\",{\"1\":{\"153\":1}}],[\"可以同时在客户端和服务器端发送和接收消息\",{\"1\":{\"146\":1}}],[\"可以自动降级为支持长轮询等传输方式的\",{\"1\":{\"141\":1}}],[\"可以有效降低accesskey泄露的风险\",{\"1\":{\"118\":1}}],[\"可以看到3次\",{\"1\":{\"72\":1}}],[\"可选依赖\",{\"0\":{\"89\":1},\"1\":{\"91\":1}}],[\"像主动依赖了c和d一样使用它们\",{\"1\":{\"88\":1}}],[\"那么你就可以在a中\",{\"1\":{\"88\":1}}],[\"依赖注入\",{\"0\":{\"561\":1},\"1\":{\"566\":1}}],[\"依赖\",{\"1\":{\"180\":1,\"360\":1}}],[\"依赖范围\",{\"0\":{\"95\":1}}],[\"依赖传递\",{\"0\":{\"87\":1}}],[\"依赖管理\",{\"0\":{\"86\":1}}],[\"测试时加入\",{\"1\":{\"413\":1}}],[\"测试代码\",{\"1\":{\"98\":1}}],[\"测试\",{\"0\":{\"531\":1},\"1\":{\"85\":1}}],[\"简称\",{\"1\":{\"377\":1}}],[\"简单类型注入\",{\"1\":{\"577\":1}}],[\"简单\",{\"0\":{\"485\":1}}],[\"简单易用\",{\"1\":{\"144\":1}}],[\"简单命令\",{\"0\":{\"84\":1}}],[\"简洁查看\",{\"1\":{\"72\":1}}],[\"nu\",{\"1\":{\"240\":1}}],[\"null\",{\"1\":{\"123\":2,\"125\":2,\"178\":1,\"197\":2,\"285\":1,\"294\":1,\"323\":1,\"334\":1,\"368\":3,\"370\":3,\"372\":4,\"389\":1,\"408\":1,\"410\":1,\"411\":1,\"432\":2,\"434\":1,\"444\":1,\"454\":1,\"466\":1,\"478\":1,\"596\":1}}],[\"noargs\",{\"1\":{\"497\":1}}],[\"non\",{\"1\":{\"530\":1}}],[\"none\",{\"1\":{\"396\":1}}],[\"nonu\",{\"1\":{\"240\":1}}],[\"no\",{\"1\":{\"332\":1,\"542\":3}}],[\"now\",{\"1\":{\"320\":3}}],[\"not\",{\"1\":{\"291\":1,\"323\":1}}],[\"notnull\",{\"1\":{\"183\":1,\"185\":2}}],[\"noh\",{\"1\":{\"240\":1}}],[\"nopaste\",{\"1\":{\"240\":1}}],[\"n2s\",{\"1\":{\"240\":1}}],[\"n1与n2为数字\",{\"1\":{\"240\":1}}],[\"n1\",{\"1\":{\"240\":1}}],[\"n<enter>\",{\"1\":{\"240\":1}}],[\"n<space>\",{\"1\":{\"240\":1}}],[\"n为数字\",{\"1\":{\"240\":2}}],[\"ng\",{\"1\":{\"240\":1}}],[\"n表示数字\",{\"1\":{\"240\":1}}],[\"n\",{\"1\":{\"197\":2,\"240\":3}}],[\"nativerequest\",{\"1\":{\"627\":2}}],[\"nativewebrequest\",{\"1\":{\"627\":3}}],[\"nanotime\",{\"1\":{\"197\":1}}],[\"names\",{\"1\":{\"238\":1}}],[\"name=name\",{\"1\":{\"600\":1}}],[\"name=hello\",{\"1\":{\"577\":1}}],[\"name=\",{\"1\":{\"134\":1,\"563\":2,\"565\":3,\"571\":2}}],[\"name>\",{\"1\":{\"83\":1}}],[\"name\",{\"1\":{\"64\":2,\"183\":2,\"185\":6,\"197\":1,\"220\":1,\"222\":2,\"224\":1,\"233\":1,\"266\":2,\"268\":1,\"316\":2,\"340\":4,\"343\":2,\"365\":2,\"368\":3,\"370\":3,\"372\":3,\"398\":1,\"466\":2,\"468\":4,\"469\":2,\"478\":2,\"479\":4,\"509\":1,\"512\":7,\"514\":3,\"520\":4,\"528\":1,\"577\":1,\"601\":2,\"603\":2,\"608\":1}}],[\"net\",{\"1\":{\"160\":1}}],[\"newconnection\",{\"1\":{\"432\":1,\"434\":1,\"436\":1}}],[\"newname\",{\"1\":{\"135\":3}}],[\"new\",{\"1\":{\"121\":1,\"123\":2,\"125\":1,\"135\":5,\"164\":5,\"166\":3,\"178\":1,\"187\":1,\"188\":1,\"197\":12,\"203\":1,\"205\":1,\"209\":2,\"389\":5,\"406\":2,\"408\":3,\"410\":1,\"411\":1,\"422\":2,\"432\":1,\"434\":4,\"436\":1,\"444\":3,\"456\":3,\"468\":2,\"469\":2,\"479\":2,\"497\":3,\"499\":2,\"522\":2,\"530\":4,\"532\":1,\"558\":2,\"577\":1,\"596\":2,\"625\":2}}],[\"nexus\",{\"1\":{\"83\":1}}],[\"<map>\",{\"1\":{\"571\":1}}],[\"<mirrorof>central<\",{\"1\":{\"83\":1}}],[\"<mirror>\",{\"1\":{\"83\":1}}],[\"<value>world<\",{\"1\":{\"571\":1}}],[\"<value>hello\",{\"1\":{\"571\":1}}],[\"<version>4\",{\"1\":{\"592\":1}}],[\"<version>5\",{\"1\":{\"554\":1,\"592\":1}}],[\"<version>3\",{\"1\":{\"94\":1,\"201\":1,\"208\":1,\"361\":1}}],[\"<version>$\",{\"1\":{\"94\":1}}],[\"<version>2\",{\"1\":{\"91\":1,\"133\":1}}],[\"<array>\",{\"1\":{\"571\":1}}],[\"<artifactid>javax\",{\"1\":{\"592\":1}}],[\"<artifactid>joda\",{\"1\":{\"91\":1}}],[\"<artifactid>mybatis<\",{\"1\":{\"361\":1}}],[\"<artifactid>redisson<\",{\"1\":{\"201\":1}}],[\"<artifactid>springfox\",{\"1\":{\"208\":1}}],[\"<artifactid>spring\",{\"1\":{\"138\":1,\"162\":1,\"181\":1,\"481\":1,\"554\":1,\"592\":1}}],[\"<artifactid>servlet\",{\"1\":{\"133\":1}}],[\"<artifactid>struts2\",{\"1\":{\"94\":1}}],[\"<artifactid>asm<\",{\"1\":{\"94\":2}}],[\"<constructor\",{\"1\":{\"565\":3}}],[\"<choose>\",{\"1\":{\"370\":1}}],[\"<property\",{\"1\":{\"563\":2,\"571\":2}}],[\"<bean\",{\"1\":{\"556\":2,\"560\":1,\"563\":1,\"565\":2,\"571\":1}}],[\"<>\",{\"1\":{\"530\":1}}],[\"<>或\",{\"1\":{\"277\":1}}],[\"<entry\",{\"1\":{\"571\":1}}],[\"<e\",{\"1\":{\"386\":2}}],[\"<exclusion>\",{\"1\":{\"94\":1}}],[\"<exclusions>\",{\"1\":{\"94\":1}}],[\"<otherwise>\",{\"1\":{\"370\":1}}],[\"<optional>true<\",{\"1\":{\"91\":1,\"138\":1}}],[\"<when\",{\"1\":{\"370\":2}}],[\"<select\",{\"1\":{\"368\":1,\"370\":1,\"372\":1}}],[\"<script>\",{\"1\":{\"188\":1}}],[\"<scope>provided<\",{\"1\":{\"133\":1,\"592\":1}}],[\"<=\",{\"1\":{\"275\":1}}],[\"<dependencies>\",{\"1\":{\"592\":1}}],[\"<dependency>\",{\"1\":{\"91\":1,\"94\":2,\"133\":1,\"138\":1,\"162\":1,\"181\":1,\"201\":1,\"208\":1,\"361\":1,\"481\":1,\"554\":1,\"592\":2}}],[\"<div>\",{\"1\":{\"188\":1}}],[\"<template>\",{\"1\":{\"188\":1}}],[\"<第一步获得的密钥>\",{\"1\":{\"160\":1}}],[\"<if\",{\"1\":{\"368\":2,\"372\":3}}],[\"<insert\",{\"1\":{\"365\":1}}],[\"<input\",{\"1\":{\"134\":2,\"188\":1}}],[\"<img\",{\"1\":{\"166\":1,\"188\":1}}],[\"<id>alimaven<\",{\"1\":{\"83\":1}}],[\"<form\",{\"1\":{\"134\":1}}],[\"<groupid>io\",{\"1\":{\"208\":1}}],[\"<groupid>javax\",{\"1\":{\"133\":1,\"592\":1}}],[\"<groupid>joda\",{\"1\":{\"91\":1}}],[\"<groupid>asm<\",{\"1\":{\"94\":2}}],[\"<groupid>org\",{\"1\":{\"94\":1,\"138\":1,\"162\":1,\"181\":1,\"201\":1,\"361\":1,\"481\":1,\"554\":1,\"592\":1}}],[\"<\",{\"1\":{\"83\":2,\"91\":1,\"94\":6,\"133\":1,\"134\":1,\"138\":1,\"162\":1,\"181\":1,\"188\":5,\"201\":2,\"208\":1,\"235\":1,\"236\":1,\"240\":1,\"274\":1,\"352\":2,\"361\":2,\"365\":1,\"368\":3,\"370\":5,\"372\":4,\"481\":1,\"484\":1,\"554\":2,\"556\":1,\"563\":1,\"565\":3,\"571\":6,\"592\":3}}],[\"<url>http\",{\"1\":{\"83\":1}}],[\"<name>aliyun\",{\"1\":{\"83\":1}}],[\"下创建config文件\",{\"1\":{\"242\":1}}],[\"下一个位置粘贴\",{\"1\":{\"240\":1}}],[\"下一篇\",{\"1\":{\"21\":1}}],[\"下载\",{\"1\":{\"166\":1}}],[\"下载地址中央仓库配置本地仓库\",{\"1\":{\"81\":1}}],[\"安装插件以及使用\",{\"1\":{\"496\":1}}],[\"安装地址\",{\"1\":{\"426\":1}}],[\"安装到本地仓库\",{\"1\":{\"85\":1}}],[\"安装\",{\"0\":{\"80\":1,\"506\":1}}],[\"克隆之后使用和查看\",{\"1\":{\"76\":1}}],[\"克隆远程仓库\",{\"1\":{\"76\":1}}],[\"visibility\",{\"1\":{\"530\":1}}],[\"virtual\",{\"1\":{\"482\":1}}],[\"views\",{\"1\":{\"365\":2,\"411\":2}}],[\"vim\",{\"0\":{\"239\":1}}],[\"validated\",{\"1\":{\"187\":1}}],[\"validationmessages\",{\"1\":{\"182\":1}}],[\"validation<\",{\"1\":{\"181\":1}}],[\"value>\",{\"1\":{\"571\":2}}],[\"value序列化方式采用jackson\",{\"1\":{\"530\":1}}],[\"value的长度\",{\"1\":{\"514\":1}}],[\"value后面增加world\",{\"1\":{\"514\":1}}],[\"values\",{\"1\":{\"250\":1,\"252\":2,\"254\":1,\"365\":1}}],[\"valueoperations\",{\"1\":{\"197\":1}}],[\"valueof\",{\"1\":{\"174\":1,\"205\":1}}],[\"value\",{\"1\":{\"185\":2,\"197\":3,\"486\":1,\"490\":4,\"492\":4,\"494\":4,\"520\":1,\"577\":1,\"614\":2,\"616\":1}}],[\"value=\",{\"1\":{\"134\":2,\"398\":1,\"563\":2,\"565\":2,\"571\":1}}],[\"void\",{\"1\":{\"131\":1,\"164\":3,\"166\":3,\"176\":1,\"178\":2,\"185\":4,\"389\":4,\"432\":1,\"434\":2,\"436\":1,\"444\":2,\"454\":1,\"456\":2,\"466\":1,\"468\":2,\"469\":2,\"478\":1,\"479\":2,\"484\":5,\"486\":1,\"488\":2,\"490\":2,\"492\":2,\"494\":2,\"499\":1,\"501\":1,\"532\":1,\"558\":1,\"560\":2,\"567\":1,\"581\":3,\"585\":4,\"587\":2,\"614\":2,\"625\":2,\"633\":2,\"635\":1}}],[\"version\",{\"1\":{\"94\":2,\"209\":1}}],[\"version>\",{\"1\":{\"91\":1,\"94\":2,\"133\":1,\"201\":1,\"208\":1,\"361\":1,\"554\":1,\"592\":2}}],[\"v\",{\"1\":{\"76\":2,\"197\":3,\"240\":1,\"512\":1}}],[\"vuepress\",{\"1\":{\"2\":1,\"3\":1,\"45\":1}}],[\"之后\",{\"1\":{\"76\":1}}],[\"union\",{\"1\":{\"352\":2}}],[\"unique\",{\"1\":{\"324\":1}}],[\"unlock\",{\"1\":{\"205\":1}}],[\"uroot\",{\"1\":{\"229\":1,\"233\":1,\"236\":1}}],[\"url\",{\"1\":{\"188\":1}}],[\"url>\",{\"1\":{\"83\":1}}],[\"u用户名\",{\"1\":{\"227\":1,\"231\":1,\"235\":1}}],[\"ubuntu\",{\"1\":{\"216\":1,\"220\":6,\"222\":2}}],[\"up\",{\"1\":{\"365\":2,\"410\":2,\"411\":2}}],[\"upper\",{\"1\":{\"316\":3}}],[\"updatewrapper<article>\",{\"1\":{\"410\":1}}],[\"updatewrapper<>\",{\"1\":{\"389\":1,\"410\":1}}],[\"updatewrapper<user>\",{\"1\":{\"389\":1}}],[\"updatewrapper\",{\"1\":{\"386\":1,\"410\":3}}],[\"update\",{\"0\":{\"255\":1},\"1\":{\"222\":1,\"256\":1,\"316\":1,\"364\":1,\"365\":1,\"386\":1,\"389\":1,\"410\":1,\"411\":1,\"507\":1}}],[\"updatebyid\",{\"1\":{\"205\":1,\"386\":1}}],[\"uploadfile\",{\"1\":{\"134\":1,\"135\":5}}],[\"upload\",{\"1\":{\"134\":1,\"135\":2}}],[\"uploadobject\",{\"1\":{\"121\":1}}],[\"utf8mb4\",{\"1\":{\"247\":1}}],[\"utf\",{\"1\":{\"160\":1,\"238\":1}}],[\"uuid\",{\"1\":{\"135\":1,\"197\":1}}],[\"u\",{\"1\":{\"76\":1,\"240\":1}}],[\"usegeneratedkeys=\",{\"1\":{\"365\":1}}],[\"use\",{\"1\":{\"238\":1}}],[\"usesingleserver\",{\"1\":{\"203\":1}}],[\"userinfoimpl\",{\"1\":{\"625\":1,\"627\":1}}],[\"userinfo\",{\"1\":{\"621\":1,\"627\":1,\"629\":1}}],[\"usercontroler类\",{\"1\":{\"593\":1}}],[\"usercontroller\",{\"1\":{\"187\":1,\"594\":1}}],[\"userlist\",{\"1\":{\"408\":1}}],[\"usermapper\",{\"1\":{\"389\":9,\"422\":3}}],[\"usermod\",{\"1\":{\"217\":1}}],[\"userservice\",{\"1\":{\"422\":1}}],[\"userserviceimpl\",{\"1\":{\"422\":1}}],[\"users\",{\"1\":{\"166\":2,\"389\":6}}],[\"username\",{\"1\":{\"160\":1,\"482\":1,\"608\":2}}],[\"user\",{\"1\":{\"64\":2,\"183\":4,\"185\":6,\"187\":2,\"242\":1,\"389\":17,\"422\":3,\"484\":1,\"494\":3,\"520\":8,\"608\":2,\"625\":1,\"629\":1,\"635\":2}}],[\"usr\",{\"1\":{\"3\":1,\"229\":1}}],[\"sdiff\",{\"1\":{\"518\":2}}],[\"sdf\",{\"1\":{\"135\":2}}],[\"spop\",{\"1\":{\"518\":2}}],[\"springboot\",{\"0\":{\"642\":1}}],[\"springboottest\",{\"1\":{\"484\":1}}],[\"springmvcconfig\",{\"1\":{\"596\":3}}],[\"springmvc入门案例\",{\"1\":{\"589\":1}}],[\"springmvc\",{\"0\":{\"545\":1,\"588\":1},\"1\":{\"589\":1,\"607\":1,\"613\":1}}],[\"springfox<\",{\"1\":{\"208\":1}}],[\"springframework<\",{\"1\":{\"554\":1,\"592\":1}}],[\"springframework\",{\"1\":{\"138\":1,\"162\":1,\"181\":1,\"481\":1}}],[\"spring\",{\"0\":{\"480\":1,\"545\":1,\"546\":1},\"1\":{\"130\":1,\"136\":1,\"160\":1,\"482\":1,\"547\":1}}],[\"srandmember\",{\"1\":{\"518\":2}}],[\"srem\",{\"1\":{\"518\":2}}],[\"src\",{\"1\":{\"188\":1}}],[\"srcpath\",{\"1\":{\"164\":3}}],[\"smembers\",{\"1\":{\"518\":2}}],[\"smtp\",{\"1\":{\"160\":2}}],[\"sleep\",{\"1\":{\"444\":1}}],[\"sneakythrows\",{\"1\":{\"444\":1}}],[\"s1\",{\"1\":{\"432\":1,\"434\":1}}],[\"s表的全部\",{\"1\":{\"343\":1}}],[\"s表的字段\",{\"1\":{\"329\":1}}],[\"s为子表\",{\"1\":{\"329\":1}}],[\"s为图片的名字\",{\"1\":{\"125\":1}}],[\"sql\",{\"1\":{\"227\":1,\"229\":1,\"231\":1,\"233\":2,\"235\":1,\"236\":1,\"238\":1}}],[\"sadd\",{\"1\":{\"518\":2}}],[\"save\",{\"1\":{\"220\":1,\"222\":2,\"537\":1,\"558\":2,\"581\":1,\"585\":1,\"587\":1,\"594\":2,\"600\":1,\"601\":2,\"603\":2,\"608\":2,\"616\":1}}],[\"same\",{\"1\":{\"94\":1}}],[\"swaggerconfig\",{\"1\":{\"209\":1}}],[\"swagger2<\",{\"1\":{\"208\":1}}],[\"swagger\",{\"0\":{\"206\":1},\"1\":{\"209\":1}}],[\"swap\",{\"0\":{\"137\":1}}],[\"scard\",{\"1\":{\"518\":2}}],[\"script>\",{\"1\":{\"188\":1}}],[\"schedulewithfixeddelay\",{\"1\":{\"178\":1}}],[\"schedulecontroller\",{\"1\":{\"178\":1}}],[\"scheduledfuture\",{\"1\":{\"178\":4}}],[\"scheduledfuture<\",{\"1\":{\"178\":1}}],[\"scheduled\",{\"0\":{\"175\":1},\"1\":{\"174\":1,\"176\":1}}],[\"scheduledtasksconfig\",{\"1\":{\"171\":1}}],[\"scheduled注解标记的定时任务是在应用程序启动时自动启动的\",{\"1\":{\"169\":1}}],[\"schedul\",{\"1\":{\"174\":1}}],[\"scope>\",{\"1\":{\"133\":1,\"592\":1}}],[\"scope\",{\"1\":{\"96\":1,\"577\":1}}],[\"serializable>\",{\"1\":{\"386\":2}}],[\"serializable\",{\"1\":{\"386\":2,\"528\":1}}],[\"server\",{\"1\":{\"224\":1,\"507\":1}}],[\"service\",{\"1\":{\"163\":1,\"164\":1,\"422\":1,\"556\":1,\"565\":1,\"574\":1}}],[\"servletinitconfig\",{\"1\":{\"596\":2}}],[\"servlet\",{\"1\":{\"136\":1,\"592\":1}}],[\"servlet<\",{\"1\":{\"133\":1,\"592\":1}}],[\"sex\",{\"1\":{\"304\":3,\"352\":2}}],[\"selectpage\",{\"1\":{\"386\":1,\"408\":1}}],[\"selectobjs\",{\"1\":{\"386\":1}}],[\"selectone\",{\"1\":{\"386\":1}}],[\"selectmapspage\",{\"1\":{\"386\":1}}],[\"selectmaps\",{\"1\":{\"386\":1}}],[\"selectcount\",{\"1\":{\"386\":1,\"408\":1}}],[\"selectbymap\",{\"1\":{\"386\":1,\"389\":1}}],[\"selectbyid\",{\"1\":{\"205\":1,\"386\":1,\"389\":1}}],[\"selectbatchids\",{\"1\":{\"386\":1,\"389\":1}}],[\"select>\",{\"1\":{\"368\":1,\"370\":1,\"372\":1}}],[\"select\",{\"0\":{\"261\":1},\"1\":{\"209\":1,\"262\":1,\"266\":2,\"268\":1,\"296\":1,\"298\":1,\"300\":2,\"304\":1,\"309\":1,\"311\":1,\"313\":2,\"316\":3,\"318\":1,\"320\":2,\"340\":2,\"343\":2,\"348\":1,\"352\":4,\"368\":1,\"370\":1,\"372\":1,\"400\":1,\"509\":1}}],[\"selectlist\",{\"1\":{\"197\":1,\"386\":1,\"389\":1}}],[\"seconds\",{\"1\":{\"197\":1}}],[\"sendimgmail\",{\"1\":{\"166\":1}}],[\"sendmailimg\",{\"1\":{\"164\":1,\"166\":1}}],[\"sendfailmail\",{\"1\":{\"164\":1,\"166\":2}}],[\"send\",{\"1\":{\"164\":3,\"432\":1,\"499\":1}}],[\"sendsimplemail\",{\"1\":{\"164\":1,\"166\":2}}],[\"setcolor\",{\"1\":{\"629\":2}}],[\"setconnectionfactory\",{\"1\":{\"530\":1}}],[\"setbookdao\",{\"1\":{\"567\":1}}],[\"setbackimg\",{\"1\":{\"197\":1}}],[\"sethashvalueserializer\",{\"1\":{\"530\":1}}],[\"sethashkeyserializer\",{\"1\":{\"530\":1}}],[\"sethost\",{\"1\":{\"432\":1,\"434\":1,\"436\":1}}],[\"setvalueserializer\",{\"1\":{\"530\":2}}],[\"setvisibility\",{\"1\":{\"530\":1}}],[\"setvirtualhost\",{\"1\":{\"432\":1,\"434\":1,\"436\":1}}],[\"setviews\",{\"1\":{\"205\":1}}],[\"setkeyserializer\",{\"1\":{\"530\":1}}],[\"setobjectmapper\",{\"1\":{\"530\":1}}],[\"set3\",{\"1\":{\"518\":3}}],[\"set2\",{\"1\":{\"518\":3}}],[\"set1\",{\"1\":{\"518\":3}}],[\"setnx\",{\"1\":{\"514\":1}}],[\"setname\",{\"1\":{\"185\":1}}],[\"setdelay\",{\"1\":{\"499\":2}}],[\"setdatabase\",{\"1\":{\"203\":1}}],[\"setdate\",{\"1\":{\"197\":1}}],[\"setusername\",{\"1\":{\"432\":1,\"434\":1,\"436\":1}}],[\"setport\",{\"1\":{\"432\":1,\"434\":1,\"436\":1}}],[\"setpassword\",{\"1\":{\"197\":1,\"389\":1,\"432\":1,\"434\":1,\"436\":1}}],[\"sets\",{\"0\":{\"521\":1}}],[\"setsql\",{\"1\":{\"410\":1,\"411\":2}}],[\"setsubject\",{\"1\":{\"164\":3}}],[\"setid\",{\"1\":{\"389\":1}}],[\"setifabsent\",{\"1\":{\"197\":1}}],[\"set\",{\"0\":{\"517\":1},\"1\":{\"238\":1,\"240\":4,\"256\":1,\"316\":1,\"334\":1,\"512\":1,\"532\":1,\"581\":1,\"585\":1}}],[\"setlist\",{\"1\":{\"197\":1}}],[\"setemail\",{\"1\":{\"185\":1}}],[\"setattribute\",{\"1\":{\"623\":1}}],[\"setaccount\",{\"1\":{\"197\":1,\"389\":2}}],[\"setage\",{\"1\":{\"185\":1}}],[\"setaddress\",{\"1\":{\"185\":1,\"203\":1}}],[\"setter\",{\"0\":{\"562\":1}}],[\"settext\",{\"1\":{\"164\":3}}],[\"setto\",{\"1\":{\"164\":3}}],[\"setfrom\",{\"1\":{\"164\":3}}],[\"ss\",{\"1\":{\"581\":2,\"585\":3,\"587\":2}}],[\"sslsocketfactory\",{\"1\":{\"160\":1}}],[\"ssl\",{\"1\":{\"160\":1}}],[\"ssh\",{\"0\":{\"241\":1},\"1\":{\"76\":1,\"242\":4}}],[\"sortedset2\",{\"1\":{\"522\":2}}],[\"sortedset1\",{\"1\":{\"522\":2}}],[\"sortedset\",{\"1\":{\"522\":2}}],[\"sorted\",{\"0\":{\"521\":1}}],[\"source\",{\"1\":{\"238\":1}}],[\"socketfactory\",{\"1\":{\"160\":1}}],[\"sockjs的缺点\",{\"0\":{\"154\":1}}],[\"sockjs的优势\",{\"0\":{\"150\":1}}],[\"sockjs在不支持websocket的浏览器中使用的是长轮询技术\",{\"1\":{\"153\":1}}],[\"sockjs可以通过polyfill模拟websocket的功能\",{\"1\":{\"152\":1}}],[\"sockjs可以在所有支持javascript的浏览器中运行\",{\"1\":{\"151\":1}}],[\"sockjs\",{\"0\":{\"139\":1},\"1\":{\"141\":3}}],[\"some\",{\"1\":{\"123\":1,\"125\":1}}],[\"singleton\",{\"1\":{\"577\":1}}],[\"sinter\",{\"1\":{\"518\":2}}],[\"sismember\",{\"1\":{\"518\":2}}],[\"simple简单模式\",{\"0\":{\"427\":1}}],[\"simplemailmessage\",{\"1\":{\"164\":2}}],[\"simpledateformat\",{\"1\":{\"135\":2}}],[\"size\",{\"1\":{\"136\":3,\"183\":2,\"185\":4,\"542\":1}}],[\"support\",{\"1\":{\"635\":1}}],[\"supportsparameter\",{\"1\":{\"627\":1}}],[\"super\",{\"1\":{\"625\":1}}],[\"sunion\",{\"1\":{\"518\":2}}],[\"sum\",{\"1\":{\"263\":1,\"295\":1,\"296\":1}}],[\"sums\",{\"1\":{\"123\":2}}],[\"sudo\",{\"1\":{\"217\":1,\"507\":2}}],[\"success\",{\"1\":{\"197\":1,\"205\":1}}],[\"subject\",{\"1\":{\"164\":6}}],[\"substring\",{\"1\":{\"135\":1,\"316\":1,\"623\":1}}],[\"submit\",{\"1\":{\"134\":1}}],[\"system\",{\"1\":{\"123\":6,\"125\":5,\"135\":1,\"164\":1,\"174\":1,\"178\":1,\"187\":1,\"197\":3,\"389\":6,\"410\":1,\"411\":1,\"434\":1,\"444\":1,\"456\":1,\"468\":1,\"469\":1,\"479\":1,\"486\":1,\"488\":2,\"490\":2,\"492\":2,\"494\":2,\"501\":1,\"532\":1,\"560\":2,\"581\":1,\"585\":3,\"587\":1,\"594\":1,\"601\":1,\"603\":1,\"608\":1,\"614\":2,\"633\":3}}],[\"s\",{\"1\":{\"123\":3,\"125\":2,\"304\":1,\"309\":1,\"313\":2,\"329\":2,\"336\":2,\"340\":6,\"343\":6,\"352\":4,\"432\":2,\"434\":2,\"563\":2,\"565\":1,\"569\":4,\"577\":1}}],[\"showbyid\",{\"1\":{\"205\":1}}],[\"show\",{\"1\":{\"197\":1}}],[\"should\",{\"1\":{\"94\":1}}],[\"shutdown\",{\"1\":{\"121\":1,\"123\":1,\"125\":1}}],[\"stu\",{\"1\":{\"527\":1,\"528\":1,\"532\":4}}],[\"study\",{\"1\":{\"158\":1,\"303\":1,\"428\":1,\"438\":1}}],[\"style=\",{\"1\":{\"188\":1}}],[\"stop\",{\"1\":{\"178\":3,\"222\":1}}],[\"startswith\",{\"1\":{\"188\":1}}],[\"start\",{\"1\":{\"178\":1,\"222\":1}}],[\"starter\",{\"1\":{\"162\":1,\"181\":1,\"481\":1}}],[\"state\",{\"1\":{\"368\":1,\"370\":1,\"372\":3}}],[\"stats\",{\"1\":{\"222\":1}}],[\"statichandles\",{\"1\":{\"131\":1}}],[\"static\",{\"1\":{\"130\":4,\"131\":2,\"436\":3,\"444\":1,\"454\":1,\"456\":1,\"466\":1,\"468\":1,\"469\":1,\"478\":1,\"479\":1,\"497\":3,\"558\":1}}],[\"status\",{\"1\":{\"72\":1}}],[\"strlen\",{\"1\":{\"514\":1}}],[\"stringredisserializer\",{\"1\":{\"530\":6}}],[\"stringredistemplate\",{\"1\":{\"197\":3}}],[\"string>map\",{\"1\":{\"629\":1}}],[\"string>\",{\"1\":{\"530\":1}}],[\"string\",{\"0\":{\"513\":1},\"1\":{\"121\":5,\"125\":1,\"135\":6,\"164\":14,\"166\":2,\"174\":2,\"178\":1,\"185\":9,\"197\":8,\"205\":1,\"434\":3,\"444\":4,\"454\":1,\"456\":5,\"466\":2,\"468\":4,\"469\":4,\"478\":2,\"479\":4,\"486\":1,\"488\":2,\"490\":2,\"492\":2,\"494\":2,\"497\":3,\"499\":1,\"501\":1,\"528\":1,\"558\":1,\"563\":1,\"569\":2,\"577\":1,\"594\":1,\"596\":2,\"601\":2,\"603\":3,\"608\":3,\"610\":2,\"614\":2,\"623\":1,\"629\":3}}],[\"struts\",{\"1\":{\"94\":1}}],[\"struts<\",{\"1\":{\"94\":1}}],[\"远程仓库\",{\"0\":{\"75\":1}}],[\"六\",{\"0\":{\"75\":1},\"1\":{\"608\":1}}],[\"恢复\",{\"1\":{\"74\":1}}],[\"删错了\",{\"1\":{\"74\":1}}],[\"删除key对应的hash中的一个或多个field\",{\"1\":{\"520\":1}}],[\"删除一个hello\",{\"1\":{\"516\":1}}],[\"删除左右头部\",{\"1\":{\"516\":1}}],[\"删除多个\",{\"1\":{\"389\":1}}],[\"删除所有数据\",{\"1\":{\"260\":1}}],[\"删除所有已停止的容器\",{\"1\":{\"222\":1}}],[\"删除当前行\",{\"1\":{\"240\":1}}],[\"删除选中的文本\",{\"1\":{\"240\":1}}],[\"删除容器\",{\"1\":{\"222\":1}}],[\"删除镜像ubuntu\",{\"1\":{\"220\":1}}],[\"删除图片\",{\"0\":{\"124\":1}}],[\"删除\",{\"1\":{\"119\":1,\"330\":1}}],[\"删除远程仓库\",{\"1\":{\"76\":1}}],[\"删除文件或目录\",{\"1\":{\"125\":1}}],[\"删除文件\",{\"0\":{\"73\":1}}],[\"删除本地分支xxx\",{\"1\":{\"66\":1}}],[\"rdb\",{\"0\":{\"534\":1},\"1\":{\"535\":2,\"538\":1,\"539\":1}}],[\"rpop\",{\"1\":{\"516\":1}}],[\"routing\",{\"1\":{\"497\":2,\"499\":2}}],[\"routingkey\",{\"1\":{\"466\":2,\"468\":1,\"469\":1,\"478\":2,\"479\":1}}],[\"route2\",{\"1\":{\"492\":1}}],[\"route1\",{\"1\":{\"492\":1}}],[\"routeconsumer\",{\"1\":{\"492\":1}}],[\"route\",{\"1\":{\"484\":1}}],[\"round\",{\"1\":{\"318\":2,\"585\":1,\"587\":1}}],[\"rollbackfor\",{\"1\":{\"421\":1,\"422\":1}}],[\"rollbackfor属性用于控制出现何种异常类型\",{\"1\":{\"420\":1}}],[\"r\",{\"1\":{\"240\":1,\"242\":1}}],[\"rlock\",{\"1\":{\"205\":1}}],[\"run\",{\"1\":{\"178\":1,\"222\":1,\"224\":1}}],[\"runnable\",{\"1\":{\"178\":1}}],[\"runtimeexception\",{\"1\":{\"135\":1,\"422\":2}}],[\"runtime\",{\"1\":{\"109\":1,\"621\":1}}],[\"rabbithandler\",{\"1\":{\"486\":1}}],[\"rabbitlistener\",{\"1\":{\"486\":1,\"488\":2,\"490\":2,\"492\":2,\"494\":2,\"501\":1}}],[\"rabbittemplate\",{\"1\":{\"484\":7,\"499\":4}}],[\"rabbit\",{\"1\":{\"432\":1}}],[\"rabbitmqtest\",{\"1\":{\"484\":1}}],[\"rabbitmqconnection\",{\"1\":{\"436\":1,\"444\":1,\"454\":1,\"456\":1,\"466\":1,\"468\":1,\"469\":1,\"478\":1,\"479\":1}}],[\"rabbitmq\",{\"0\":{\"425\":1},\"1\":{\"482\":1,\"486\":1}}],[\"rand\",{\"1\":{\"318\":1}}],[\"randomuuid\",{\"1\":{\"135\":1,\"197\":1}}],[\"ram用户\",{\"1\":{\"118\":1}}],[\"rsa\",{\"1\":{\"76\":1}}],[\"rmi\",{\"1\":{\"220\":1}}],[\"rm\",{\"1\":{\"74\":2,\"76\":1,\"220\":1,\"222\":1}}],[\"retentionpolicy\",{\"1\":{\"621\":1}}],[\"retention\",{\"1\":{\"621\":1}}],[\"ret\",{\"1\":{\"587\":2}}],[\"return\",{\"1\":{\"121\":1,\"123\":2,\"125\":2,\"135\":1,\"164\":1,\"174\":1,\"178\":1,\"185\":4,\"187\":1,\"197\":7,\"203\":1,\"205\":1,\"209\":2,\"406\":1,\"408\":1,\"436\":1,\"497\":4,\"499\":1,\"530\":1,\"587\":1,\"594\":1,\"596\":3,\"601\":1,\"603\":1,\"608\":1,\"610\":2,\"623\":1,\"627\":2,\"629\":1,\"633\":1}}],[\"repository\",{\"1\":{\"576\":1}}],[\"repositories\",{\"1\":{\"83\":1}}],[\"rewrite\",{\"1\":{\"542\":3}}],[\"red对应id\",{\"1\":{\"565\":1}}],[\"redsi\",{\"0\":{\"511\":1}}],[\"redisconnectionfactory\",{\"1\":{\"530\":1}}],[\"redisconfig\",{\"1\":{\"529\":1,\"530\":1}}],[\"redistemplate\",{\"1\":{\"530\":3,\"532\":4}}],[\"redistemplate<string\",{\"1\":{\"530\":3}}],[\"redis默认使用的序列化格式\",{\"1\":{\"525\":1}}],[\"redis支持多种序列化格式\",{\"1\":{\"525\":1}}],[\"redis是一种内存数据库\",{\"1\":{\"524\":1}}],[\"redis详细解释\",{\"1\":{\"505\":1}}],[\"redis\",{\"0\":{\"504\":1},\"1\":{\"203\":1,\"507\":2,\"535\":2,\"537\":1,\"541\":2}}],[\"redissonclient\",{\"1\":{\"203\":1,\"205\":3}}],[\"redissonconfig\",{\"1\":{\"202\":1,\"203\":1}}],[\"redisson<\",{\"1\":{\"201\":1}}],[\"redisson学习地址\",{\"1\":{\"199\":1}}],[\"redisson\",{\"0\":{\"198\":1},\"1\":{\"201\":1,\"203\":2}}],[\"redisson分布式锁使用redlock算法避免了死锁的问题\",{\"1\":{\"195\":1}}],[\"redisson分布式锁内部封装了锁的自动续期机制\",{\"1\":{\"194\":1}}],[\"redisson分布式锁内部封装了redis的单线程模型\",{\"1\":{\"193\":1}}],[\"redisson分布式锁封装了锁逻辑\",{\"1\":{\"192\":1}}],[\"redis分布式锁\",{\"0\":{\"196\":1}}],[\"redis分布式锁在高并发场景下可能存在死锁的问题\",{\"1\":{\"195\":1}}],[\"redis分布式锁在锁定后需要手动维护锁的超时时间\",{\"1\":{\"194\":1}}],[\"redis分布式锁在进行锁定和解锁操作时\",{\"1\":{\"193\":1}}],[\"redis分布式锁需要手动编写锁逻辑代码\",{\"1\":{\"192\":1}}],[\"redis分布式锁是基于redis的setnx命令实现的\",{\"1\":{\"191\":1}}],[\"redis分布式锁和redisson分布式锁都是用于实现分布式系统中的分布式锁\",{\"0\":{\"190\":1}}],[\"recrive\",{\"1\":{\"486\":1}}],[\"records\",{\"1\":{\"408\":1}}],[\"recordmapper\",{\"1\":{\"408\":2}}],[\"recordipage\",{\"1\":{\"408\":2}}],[\"rename\",{\"1\":{\"222\":1}}],[\"register\",{\"1\":{\"596\":1}}],[\"registry\",{\"1\":{\"131\":2,\"625\":3,\"635\":3}}],[\"regasdgsdgister\",{\"1\":{\"197\":1}}],[\"references\",{\"1\":{\"329\":1}}],[\"ref=\",{\"1\":{\"188\":1,\"565\":1}}],[\"reflog\",{\"1\":{\"72\":1}}],[\"readasdataurl\",{\"1\":{\"188\":1}}],[\"reader\",{\"1\":{\"188\":4}}],[\"readme\",{\"1\":{\"166\":1}}],[\"realpath\",{\"1\":{\"135\":3}}],[\"reason\",{\"1\":{\"123\":1,\"125\":1}}],[\"req\",{\"1\":{\"135\":5}}],[\"requestmethod\",{\"1\":{\"614\":2,\"616\":1}}],[\"requestmapping\",{\"1\":{\"594\":1,\"601\":1,\"603\":1,\"610\":2,\"614\":2,\"616\":2}}],[\"requestparam\",{\"1\":{\"608\":2,\"616\":1,\"629\":1}}],[\"requesthandlerselectors\",{\"1\":{\"209\":1}}],[\"request\",{\"1\":{\"123\":2,\"125\":2,\"136\":1,\"623\":3,\"631\":1,\"633\":3}}],[\"resp\",{\"1\":{\"408\":4}}],[\"responsebody\",{\"1\":{\"594\":1,\"601\":1,\"603\":1,\"608\":1,\"610\":1,\"614\":2,\"616\":3}}],[\"response\",{\"1\":{\"123\":1,\"125\":1,\"623\":1,\"631\":1,\"633\":3}}],[\"restful快速开发\",{\"1\":{\"613\":1}}],[\"rest风格\",{\"0\":{\"611\":1}}],[\"restrict\",{\"1\":{\"331\":1}}],[\"restart\",{\"1\":{\"222\":1}}],[\"restcontroller\",{\"1\":{\"135\":1,\"178\":1,\"187\":1,\"616\":1}}],[\"resulttype=\",{\"1\":{\"368\":1,\"370\":1,\"372\":1}}],[\"result\",{\"1\":{\"188\":1,\"197\":7,\"205\":2,\"629\":1}}],[\"res\",{\"1\":{\"164\":2,\"197\":2,\"389\":4}}],[\"resids\",{\"1\":{\"164\":2}}],[\"resolveargument\",{\"1\":{\"627\":1}}],[\"resolve\",{\"1\":{\"136\":1}}],[\"resource\",{\"1\":{\"499\":1}}],[\"resourcehandlerregistry\",{\"1\":{\"131\":1}}],[\"resources\",{\"1\":{\"130\":1}}],[\"reset\",{\"1\":{\"72\":2}}],[\"rejected\",{\"1\":{\"123\":1,\"125\":1}}],[\"remote\",{\"1\":{\"76\":5}}],[\"remove\",{\"1\":{\"74\":1}}],[\"五大数据类型\",{\"0\":{\"510\":1}}],[\"五\",{\"0\":{\"73\":1},\"1\":{\"608\":1}}],[\"则新建一个\",{\"1\":{\"520\":1}}],[\"则列举包含指定前缀的文件\",{\"1\":{\"123\":1}}],[\"则列举存储空间下的所有文件\",{\"1\":{\"123\":1}}],[\"则回退\",{\"1\":{\"72\":1}}],[\"则使用ls\",{\"1\":{\"68\":1}}],[\"若已提交\",{\"1\":{\"72\":1}}],[\"若该文件隐藏\",{\"1\":{\"68\":1}}],[\"丢弃暂存区的修改\",{\"1\":{\"72\":1}}],[\"丢弃工作区的修改\",{\"1\":{\"72\":1}}],[\"ioc容器来控制对象的创建\",{\"1\":{\"551\":1}}],[\"ioc\",{\"0\":{\"548\":1},\"1\":{\"549\":1}}],[\"ioexception\",{\"1\":{\"121\":1,\"135\":1,\"432\":1,\"434\":2,\"436\":2,\"444\":2,\"454\":1,\"456\":2,\"466\":1,\"468\":2,\"469\":2,\"478\":1,\"479\":2}}],[\"ipage<record>\",{\"1\":{\"408\":1}}],[\"ipage<map<string\",{\"1\":{\"386\":1}}],[\"ipage<t>>\",{\"1\":{\"386\":1}}],[\"is\",{\"1\":{\"285\":1}}],[\"isempty\",{\"1\":{\"197\":1,\"389\":1}}],[\"isdirectory\",{\"1\":{\"135\":1}}],[\"impl\",{\"1\":{\"556\":2,\"563\":2,\"565\":2,\"571\":1}}],[\"implements\",{\"1\":{\"131\":1,\"178\":1,\"422\":1,\"528\":1,\"560\":1,\"623\":1,\"627\":1,\"633\":1,\"635\":1}}],[\"import会丢弃历史记录和元数据信息\",{\"1\":{\"222\":1}}],[\"import与docker\",{\"1\":{\"222\":1}}],[\"import\",{\"1\":{\"222\":1}}],[\"img\",{\"1\":{\"188\":1,\"605\":1}}],[\"images\",{\"0\":{\"219\":1},\"1\":{\"220\":1}}],[\"image\",{\"1\":{\"188\":2,\"220\":2,\"222\":1}}],[\"i\",{\"1\":{\"164\":2,\"174\":1,\"205\":1,\"220\":1,\"240\":1,\"364\":1,\"484\":2}}],[\"i++\",{\"1\":{\"164\":1,\"174\":1,\"484\":1}}],[\"i<srcpath\",{\"1\":{\"164\":1}}],[\"i=0\",{\"1\":{\"164\":1}}],[\"if>\",{\"1\":{\"368\":2,\"372\":3}}],[\"if\",{\"1\":{\"123\":1,\"125\":1,\"135\":1,\"164\":1,\"178\":1,\"187\":1,\"188\":1,\"197\":7,\"367\":1,\"436\":2}}],[\"item\",{\"1\":{\"472\":1}}],[\"itd\",{\"1\":{\"222\":1,\"224\":1}}],[\"it\",{\"1\":{\"94\":1,\"123\":1,\"125\":1,\"222\":1}}],[\"index\",{\"1\":{\"610\":3}}],[\"inversion\",{\"1\":{\"549\":1}}],[\"incrby\",{\"1\":{\"514\":1}}],[\"incr\",{\"1\":{\"514\":1}}],[\"info\",{\"1\":{\"468\":1,\"469\":1,\"479\":3,\"492\":1}}],[\"inner\",{\"1\":{\"340\":1}}],[\"in\",{\"1\":{\"281\":1,\"389\":1}}],[\"insert>\",{\"1\":{\"365\":1}}],[\"insert\",{\"0\":{\"248\":1},\"1\":{\"197\":2,\"250\":1,\"252\":2,\"254\":1,\"365\":1,\"386\":1,\"389\":1,\"422\":1,\"472\":1}}],[\"install\",{\"1\":{\"85\":1,\"507\":1}}],[\"input\",{\"1\":{\"188\":1}}],[\"interceptorregistry\",{\"1\":{\"625\":1,\"635\":1}}],[\"interceptor\",{\"1\":{\"406\":3,\"625\":1}}],[\"interface\",{\"1\":{\"386\":1,\"621\":1}}],[\"interval\",{\"1\":{\"320\":2}}],[\"integer\",{\"1\":{\"185\":3,\"205\":1,\"386\":1,\"408\":1,\"499\":1,\"528\":1}}],[\"into\",{\"1\":{\"250\":1,\"252\":2,\"254\":1,\"365\":1}}],[\"int\",{\"1\":{\"164\":1,\"205\":1,\"364\":1,\"386\":7,\"389\":2,\"484\":1,\"563\":1,\"569\":2}}],[\"initializingbean\",{\"1\":{\"560\":1}}],[\"initialdelay\",{\"1\":{\"174\":1}}],[\"init\",{\"1\":{\"68\":1,\"560\":4}}],[\"idtype\",{\"1\":{\"395\":1,\"396\":1}}],[\"idlist\",{\"1\":{\"386\":2}}],[\"id=5\",{\"1\":{\"616\":1}}],[\"id=\",{\"1\":{\"365\":1,\"368\":1,\"370\":1,\"372\":1,\"556\":2,\"563\":1,\"565\":2,\"571\":1}}],[\"id>\",{\"1\":{\"83\":1}}],[\"id\",{\"1\":{\"72\":1,\"123\":2,\"125\":2,\"205\":3,\"242\":1,\"309\":1,\"316\":1,\"329\":5,\"340\":4,\"343\":4,\"365\":3,\"386\":2,\"389\":1,\"408\":1,\"410\":1,\"528\":1,\"603\":2,\"608\":2,\"614\":6,\"616\":2}}],[\"hmget等\",{\"1\":{\"520\":1}}],[\"hmset\",{\"1\":{\"520\":1}}],[\"hvals\",{\"1\":{\"520\":2}}],[\"hkeys\",{\"1\":{\"520\":2}}],[\"hlen\",{\"1\":{\"520\":2}}],[\"hdel\",{\"1\":{\"520\":2}}],[\"hgetall\",{\"1\":{\"520\":2}}],[\"hget\",{\"1\":{\"520\":2}}],[\"hset\",{\"1\":{\"520\":2}}],[\"hh\",{\"1\":{\"474\":2,\"476\":1,\"484\":1,\"512\":1,\"532\":2}}],[\"hhh\",{\"1\":{\"389\":1,\"512\":1,\"594\":1}}],[\"h\",{\"1\":{\"240\":1}}],[\"hexists\",{\"1\":{\"520\":2}}],[\"height\",{\"1\":{\"188\":1}}],[\"here\",{\"1\":{\"176\":1}}],[\"hello\",{\"1\":{\"164\":1,\"316\":3,\"432\":3,\"434\":2,\"454\":1,\"484\":7,\"486\":1,\"516\":3,\"571\":1,\"594\":1,\"601\":1,\"603\":1,\"608\":1}}],[\"helper\",{\"1\":{\"164\":12}}],[\"head\",{\"1\":{\"72\":1}}],[\"head~100\",{\"1\":{\"72\":1}}],[\"head^\",{\"1\":{\"72\":1}}],[\"html5\",{\"1\":{\"141\":1}}],[\"httpservletresponse\",{\"1\":{\"623\":1,\"631\":1,\"633\":3}}],[\"httpservletrequest\",{\"1\":{\"135\":1,\"623\":1,\"627\":2,\"631\":1,\"633\":3}}],[\"https\",{\"1\":{\"121\":1,\"361\":1}}],[\"handlermethodargumentresolver\",{\"1\":{\"627\":1}}],[\"handler\",{\"1\":{\"623\":1,\"633\":3}}],[\"handlerinterceptor\",{\"1\":{\"623\":1,\"633\":1}}],[\"handledelivery\",{\"1\":{\"434\":1,\"444\":1,\"456\":1,\"468\":1,\"469\":1,\"479\":1}}],[\"hangzhou\",{\"1\":{\"121\":1}}],[\"hash的value序列化方式采用jackson\",{\"1\":{\"530\":1}}],[\"hash的key也采用string的序列化方式\",{\"1\":{\"530\":1}}],[\"hash命令\",{\"1\":{\"520\":1}}],[\"hash\",{\"0\":{\"519\":1}}],[\"hashmap<>\",{\"1\":{\"389\":2}}],[\"hashmap<string\",{\"1\":{\"389\":2,\"497\":1}}],[\"haserrors\",{\"1\":{\"187\":1}}],[\"having\",{\"1\":{\"262\":1,\"304\":1}}],[\"hard\",{\"1\":{\"72\":1}}],[\"hou\",{\"1\":{\"585\":1}}],[\"hot\",{\"0\":{\"137\":1}}],[\"hostname\",{\"1\":{\"242\":1}}],[\"host\",{\"1\":{\"123\":1,\"125\":1,\"160\":1,\"242\":1,\"482\":2}}],[\"hope\",{\"1\":{\"37\":1}}],[\"home\",{\"0\":{\"0\":1},\"1\":{\"240\":1},\"2\":{\"6\":1}}],[\"四\",{\"0\":{\"71\":1},\"1\":{\"608\":1}}],[\"3个字段\",{\"1\":{\"336\":1}}],[\"39\",{\"1\":{\"240\":1}}],[\"38\",{\"1\":{\"240\":1}}],[\"37\",{\"1\":{\"240\":1}}],[\"36\",{\"1\":{\"240\":1}}],[\"35\",{\"1\":{\"240\":1}}],[\"34\",{\"1\":{\"240\":1}}],[\"33\",{\"1\":{\"240\":1}}],[\"32\",{\"1\":{\"240\":1}}],[\"31\",{\"1\":{\"240\":1}}],[\"30\",{\"1\":{\"240\":1}}],[\"3\",{\"0\":{\"624\":1},\"1\":{\"70\":1,\"94\":1,\"240\":1,\"318\":1,\"389\":1,\"514\":1,\"554\":1,\"558\":1,\"592\":1}}],[\"提高数据库操作的性能\",{\"1\":{\"418\":1}}],[\"提高性能\",{\"1\":{\"418\":1}}],[\"提高效率而生\",{\"1\":{\"377\":1}}],[\"提交\",{\"1\":{\"70\":1}}],[\"提示\",{\"1\":{\"43\":1,\"168\":1}}],[\"warn\",{\"1\":{\"466\":1,\"468\":1,\"469\":1,\"478\":1,\"479\":1,\"484\":1,\"492\":2}}],[\"wapper条件构造器\",{\"0\":{\"390\":1}}],[\"was\",{\"1\":{\"123\":1,\"125\":1}}],[\"wrapper<t>\",{\"1\":{\"386\":9}}],[\"wrote\",{\"1\":{\"70\":1}}],[\"while\",{\"1\":{\"430\":1}}],[\"which\",{\"1\":{\"123\":1,\"125\":1}}],[\"when>\",{\"1\":{\"370\":2}}],[\"where\",{\"1\":{\"256\":1,\"259\":1,\"262\":1,\"263\":1,\"316\":1,\"340\":1,\"352\":4,\"368\":1,\"370\":1,\"372\":1,\"389\":2}}],[\"wq\",{\"1\":{\"240\":1}}],[\"w\",{\"1\":{\"240\":2}}],[\"work2\",{\"1\":{\"488\":1}}],[\"work1\",{\"1\":{\"488\":1}}],[\"workconsumer\",{\"1\":{\"488\":1}}],[\"work\",{\"1\":{\"484\":4,\"488\":2}}],[\"word2\",{\"1\":{\"240\":3}}],[\"word1\",{\"1\":{\"240\":3}}],[\"word\",{\"1\":{\"240\":2,\"444\":2}}],[\"world\",{\"1\":{\"164\":1,\"316\":1,\"454\":1,\"484\":1,\"514\":1,\"571\":1,\"577\":1,\"594\":1,\"601\":1,\"603\":1,\"608\":1}}],[\"width\",{\"1\":{\"188\":1}}],[\"withmethodannotation\",{\"1\":{\"209\":1}}],[\"with\",{\"1\":{\"3\":1,\"123\":1,\"125\":1,\"497\":1}}],[\"webdatabinderfactory\",{\"1\":{\"627\":2}}],[\"webapplicationcontext\",{\"1\":{\"596\":2}}],[\"web1\",{\"1\":{\"197\":7}}],[\"webmvcconfigurationsupport\",{\"1\":{\"625\":1,\"635\":1}}],[\"webmvcconfigurer\",{\"1\":{\"131\":1,\"635\":1}}],[\"webmvc<\",{\"1\":{\"592\":1}}],[\"webmapper\",{\"1\":{\"197\":2}}],[\"webs\",{\"1\":{\"197\":2}}],[\"websocket在连接建立后会一直保持连接\",{\"1\":{\"149\":1}}],[\"websocket是html5标准的一部分\",{\"1\":{\"148\":1}}],[\"websocket是一个非常简单的协议\",{\"1\":{\"144\":1}}],[\"websocket提供了双向通信的功能\",{\"1\":{\"146\":1}}],[\"websocket的缺点\",{\"0\":{\"147\":1}}],[\"websocket的头部信息非常小\",{\"1\":{\"145\":1}}],[\"websocket的优势\",{\"0\":{\"143\":1}}],[\"websocket和sockjs都是在web应用程序中使用实时通信的协议\",{\"1\":{\"142\":1}}],[\"websocket\",{\"0\":{\"139\":1},\"1\":{\"141\":5}}],[\"web\",{\"1\":{\"130\":1,\"197\":2}}],[\"we\",{\"1\":{\"94\":1}}],[\"添加用户时出现异常\",{\"1\":{\"422\":2}}],[\"添加用户\",{\"1\":{\"422\":1}}],[\"添加apioperiation注解的被扫描\",{\"1\":{\"209\":1}}],[\"添加\",{\"0\":{\"363\":1},\"1\":{\"70\":1}}],[\"把用户传过来的token\",{\"1\":{\"619\":1}}],[\"把表中字段和实体类对应\",{\"1\":{\"397\":1}}],[\"把文件添加add和提交commit到版本库\",{\"0\":{\"69\":1}}],[\"把新建的分支yyy上传\",{\"1\":{\"66\":1}}],[\"三\",{\"0\":{\"69\":1},\"1\":{\"389\":1,\"608\":1}}],[\"abstractdispatcherservletinitializer\",{\"1\":{\"596\":1}}],[\"abc\",{\"1\":{\"474\":1}}],[\"aftercompletion\",{\"1\":{\"633\":2}}],[\"afterthrowing\",{\"1\":{\"585\":1}}],[\"afterreturning\",{\"1\":{\"581\":1,\"585\":2}}],[\"afterpropertiesset\",{\"1\":{\"530\":1}}],[\"aop\",{\"0\":{\"578\":1},\"1\":{\"581\":1,\"585\":1}}],[\"aof持久化策略的配置\",{\"1\":{\"542\":1}}],[\"aof\",{\"0\":{\"540\":1},\"1\":{\"541\":2,\"542\":4}}],[\"atx\",{\"1\":{\"558\":2}}],[\"attach\",{\"1\":{\"222\":1}}],[\"amqp<\",{\"1\":{\"481\":1}}],[\"amqp\",{\"1\":{\"434\":1,\"444\":1,\"456\":1,\"468\":1,\"469\":1,\"479\":1}}],[\"auto\",{\"1\":{\"395\":1,\"542\":2}}],[\"autowired\",{\"1\":{\"164\":1,\"166\":1,\"178\":1,\"205\":1,\"422\":1,\"484\":1,\"532\":1,\"577\":1,\"635\":1}}],[\"authorization\",{\"1\":{\"623\":1}}],[\"author\",{\"1\":{\"368\":4,\"370\":4,\"372\":4}}],[\"aspect\",{\"1\":{\"581\":1}}],[\"asg\",{\"1\":{\"479\":1}}],[\"aslist\",{\"1\":{\"389\":2}}],[\"asc\",{\"1\":{\"306\":1,\"309\":1}}],[\"as\",{\"1\":{\"266\":1}}],[\"avg\",{\"1\":{\"263\":1,\"297\":1,\"304\":1}}],[\"aaa\",{\"1\":{\"229\":2,\"233\":1,\"236\":2,\"238\":3,\"479\":1}}],[\"agsdga\",{\"1\":{\"479\":1}}],[\"agv\",{\"1\":{\"298\":1}}],[\"ag\",{\"1\":{\"217\":1}}],[\"age\",{\"1\":{\"183\":2,\"185\":7,\"298\":1,\"300\":2,\"304\":1,\"309\":1,\"352\":2,\"514\":4}}],[\"always\",{\"1\":{\"542\":1}}],[\"all\",{\"1\":{\"352\":1,\"530\":1}}],[\"allerrors\",{\"1\":{\"187\":2}}],[\"alter\",{\"1\":{\"329\":1}}],[\"aliyuncs\",{\"1\":{\"121\":1}}],[\"aliyun\",{\"1\":{\"83\":1}}],[\"admin\",{\"1\":{\"474\":3,\"476\":2}}],[\"administrator\",{\"1\":{\"166\":2}}],[\"adress\",{\"1\":{\"183\":1}}],[\"addpathpatterns\",{\"1\":{\"625\":1,\"635\":1}}],[\"addargumentresolvers\",{\"1\":{\"625\":1}}],[\"addattachment\",{\"1\":{\"164\":1}}],[\"addinterceptor\",{\"1\":{\"625\":1,\"635\":1}}],[\"addinterceptors\",{\"1\":{\"625\":2,\"635\":1}}],[\"addinnerinterceptor\",{\"1\":{\"406\":1}}],[\"addinline\",{\"1\":{\"164\":1}}],[\"adduser\",{\"1\":{\"187\":2,\"422\":1}}],[\"address\",{\"1\":{\"183\":1,\"185\":6}}],[\"addresourcelocations\",{\"1\":{\"131\":1}}],[\"addresourcehandler\",{\"1\":{\"131\":1}}],[\"addresourcehandlers\",{\"1\":{\"131\":1}}],[\"add\",{\"1\":{\"70\":2,\"76\":1,\"123\":1,\"187\":1,\"320\":3,\"329\":1,\"625\":1}}],[\"appendfsync\",{\"1\":{\"542\":3}}],[\"appendfilename\",{\"1\":{\"542\":2}}],[\"appendonly\",{\"1\":{\"542\":2}}],[\"append\",{\"1\":{\"514\":1,\"541\":1}}],[\"applicationcontext\",{\"1\":{\"555\":1,\"558\":2}}],[\"application\",{\"1\":{\"159\":1}}],[\"apt\",{\"1\":{\"507\":2}}],[\"apioperation\",{\"1\":{\"209\":1}}],[\"apis\",{\"1\":{\"209\":1}}],[\"apiinfobuilder\",{\"1\":{\"209\":1}}],[\"apiinfo\",{\"1\":{\"209\":4}}],[\"api<\",{\"1\":{\"133\":1,\"592\":1}}],[\"apache\",{\"1\":{\"94\":1}}],[\"annotationconfigwebapplicationcontext\",{\"1\":{\"596\":2}}],[\"and\",{\"1\":{\"279\":1,\"287\":1,\"368\":3,\"370\":4,\"372\":3,\"389\":1}}],[\"any\",{\"1\":{\"209\":1,\"530\":1}}],[\"an\",{\"1\":{\"123\":2,\"125\":2}}],[\"around\",{\"1\":{\"585\":1,\"587\":1}}],[\"argumentresolvers\",{\"1\":{\"625\":2}}],[\"arg\",{\"1\":{\"565\":3}}],[\"args\",{\"1\":{\"444\":1,\"454\":1,\"456\":1,\"466\":1,\"468\":1,\"469\":1,\"478\":1,\"479\":1,\"497\":3,\"558\":1,\"587\":4}}],[\"array>\",{\"1\":{\"571\":1}}],[\"arrays\",{\"1\":{\"389\":2,\"587\":1}}],[\"arraylist<>\",{\"1\":{\"123\":1,\"187\":1}}],[\"arraylist<string>\",{\"1\":{\"123\":1,\"187\":1}}],[\"artifact\",{\"1\":{\"361\":1}}],[\"artifactid>\",{\"1\":{\"91\":1,\"94\":3,\"133\":1,\"138\":1,\"162\":1,\"181\":1,\"201\":1,\"208\":1,\"361\":1,\"481\":1,\"554\":1,\"592\":2}}],[\"articlemapper\",{\"1\":{\"205\":2,\"410\":1,\"411\":1}}],[\"article\",{\"1\":{\"205\":6,\"411\":1}}],[\"active\",{\"1\":{\"368\":1,\"370\":1}}],[\"action=\",{\"1\":{\"134\":1}}],[\"action\",{\"1\":{\"119\":1,\"332\":1}}],[\"actions\",{\"1\":{\"2\":1,\"4\":1}}],[\"account\",{\"1\":{\"197\":11,\"389\":3,\"623\":1,\"625\":1,\"627\":1,\"629\":3}}],[\"accept=\",{\"1\":{\"188\":1}}],[\"accesskeysecert\",{\"1\":{\"123\":1,\"125\":1}}],[\"accesskeysecret\",{\"1\":{\"121\":2}}],[\"accesskeyid\",{\"1\":{\"121\":2,\"123\":1,\"125\":1}}],[\"accesskey进行操作\",{\"1\":{\"118\":1}}],[\"akgit\",{\"1\":{\"76\":2}}],[\"a\",{\"1\":{\"70\":1,\"222\":1,\"563\":2,\"565\":1,\"569\":4}}],[\"ah\",{\"1\":{\"68\":1}}],[\"创建拦截器\",{\"0\":{\"622\":1}}],[\"创建自定义注解\",{\"0\":{\"620\":1}}],[\"创建使用\",{\"0\":{\"590\":1}}],[\"创建对象\",{\"1\":{\"550\":1}}],[\"创建连接对象\",{\"1\":{\"454\":1}}],[\"创建mq的连接工厂对象\",{\"1\":{\"432\":1,\"434\":1}}],[\"创建新的数据库\",{\"1\":{\"238\":1}}],[\"创建并启动一个容器\",{\"1\":{\"222\":1}}],[\"创建某个container的镜像\",{\"1\":{\"220\":1}}],[\"创建ssh\",{\"1\":{\"76\":1}}],[\"创建\",{\"1\":{\"68\":1,\"188\":1,\"224\":1}}],[\"创建版本库\",{\"0\":{\"67\":1}}],[\"ltrim\",{\"1\":{\"516\":1}}],[\"lts\",{\"1\":{\"216\":1}}],[\"lrem\",{\"1\":{\"516\":1}}],[\"lrange\",{\"1\":{\"516\":1}}],[\"llen\",{\"1\":{\"516\":1}}],[\"lpop\",{\"1\":{\"516\":1}}],[\"lpush\",{\"1\":{\"516\":1}}],[\"l\",{\"1\":{\"240\":1}}],[\"left\",{\"1\":{\"343\":2}}],[\"lesson\",{\"1\":{\"224\":1}}],[\"length\",{\"1\":{\"164\":3,\"197\":3}}],[\"learngit\",{\"1\":{\"68\":2}}],[\"lastsave\",{\"1\":{\"537\":1}}],[\"lastindexof\",{\"1\":{\"135\":1}}],[\"lambdaupdatewrapper<>\",{\"1\":{\"411\":1}}],[\"lambdaupdatewrapper<article>\",{\"1\":{\"411\":1}}],[\"lazily\",{\"1\":{\"136\":1}}],[\"lower\",{\"1\":{\"316\":2}}],[\"load会保存完整记录\",{\"1\":{\"222\":1}}],[\"load的区别\",{\"1\":{\"222\":1}}],[\"load\",{\"1\":{\"220\":1}}],[\"local\",{\"1\":{\"229\":1}}],[\"localhost\",{\"1\":{\"203\":1}}],[\"location\",{\"1\":{\"136\":1}}],[\"locations\",{\"1\":{\"130\":1}}],[\"lock\",{\"1\":{\"197\":1,\"205\":4}}],[\"log\",{\"1\":{\"72\":2}}],[\"liming\",{\"1\":{\"532\":1}}],[\"limit\",{\"1\":{\"262\":1,\"263\":1,\"311\":1,\"313\":2}}],[\"lindex\",{\"1\":{\"516\":1}}],[\"linux\",{\"0\":{\"212\":1},\"1\":{\"10\":1}}],[\"like\",{\"1\":{\"283\":1,\"368\":2,\"370\":2,\"372\":2}}],[\"list<handlermethodargumentresolver>\",{\"1\":{\"625\":1}}],[\"list<record>\",{\"1\":{\"408\":1}}],[\"list<user>\",{\"1\":{\"389\":3}}],[\"list<integer>\",{\"1\":{\"389\":2}}],[\"list<map<string\",{\"1\":{\"386\":1}}],[\"list<t>\",{\"1\":{\"386\":3}}],[\"list<web>\",{\"1\":{\"197\":1}}],[\"list<object>\",{\"1\":{\"386\":1}}],[\"list<objecterror>\",{\"1\":{\"187\":1}}],[\"list<ossobjectsummary>\",{\"1\":{\"123\":1}}],[\"list<string>\",{\"1\":{\"187\":1,\"608\":1}}],[\"list\",{\"0\":{\"515\":1},\"1\":{\"121\":1,\"123\":4,\"125\":1,\"389\":4,\"408\":2,\"516\":8,\"571\":1,\"608\":1,\"629\":3}}],[\"listobjects\",{\"1\":{\"119\":1,\"123\":1}}],[\"lset\",{\"1\":{\"516\":1}}],[\"ls\",{\"1\":{\"76\":1}}],[\"新建本地分支\",{\"1\":{\"66\":1}}],[\"新建分支xxx\",{\"1\":{\"66\":1}}],[\"year\",{\"1\":{\"320\":2}}],[\"y的模\",{\"1\":{\"318\":1}}],[\"yy\",{\"1\":{\"240\":1}}],[\"yyyy\",{\"1\":{\"135\":1}}],[\"yyy\",{\"1\":{\"66\":1}}],[\"yml\",{\"1\":{\"159\":1,\"577\":1}}],[\"y\",{\"1\":{\"101\":1,\"102\":1,\"103\":1,\"105\":1,\"107\":1,\"108\":1,\"110\":1,\"240\":1,\"318\":2}}],[\"youraccesskeysecret\",{\"1\":{\"121\":1}}],[\"youraccesskeyid\",{\"1\":{\"121\":1}}],[\"youremail\",{\"1\":{\"76\":1}}],[\"your\",{\"1\":{\"64\":1,\"123\":1,\"125\":1,\"176\":1}}],[\"仍然删除分支xxx\",{\"1\":{\"66\":1}}],[\"忽略修改\",{\"1\":{\"66\":1}}],[\"dump\",{\"1\":{\"538\":1,\"539\":1}}],[\"dbtype\",{\"1\":{\"406\":1}}],[\"disposablebean\",{\"1\":{\"560\":1}}],[\"distinct\",{\"1\":{\"268\":1}}],[\"direct\",{\"1\":{\"466\":3,\"468\":5,\"469\":3,\"478\":1,\"484\":3,\"492\":4,\"497\":1}}],[\"direct类型的exchange\",{\"1\":{\"461\":1}}],[\"div>\",{\"1\":{\"188\":1}}],[\"documented\",{\"1\":{\"621\":1}}],[\"documentationtype\",{\"1\":{\"209\":1}}],[\"docker安装rabbitmq详细步骤\",{\"1\":{\"426\":1}}],[\"docker\",{\"0\":{\"213\":1},\"1\":{\"216\":2,\"217\":1,\"220\":7,\"222\":19,\"224\":3}}],[\"docket\",{\"1\":{\"209\":2}}],[\"dotask\",{\"1\":{\"176\":1}}],[\"dd\",{\"1\":{\"135\":1,\"240\":1}}],[\"dao\",{\"1\":{\"556\":1,\"563\":1,\"565\":1,\"567\":2,\"571\":1,\"581\":1,\"583\":1,\"585\":1,\"587\":1}}],[\"day\",{\"1\":{\"320\":2}}],[\"date2\",{\"1\":{\"320\":1}}],[\"date1\",{\"1\":{\"320\":1}}],[\"datediff\",{\"1\":{\"320\":1}}],[\"date\",{\"1\":{\"135\":1,\"197\":2,\"320\":6}}],[\"database\",{\"1\":{\"535\":1}}],[\"databases\",{\"1\":{\"238\":1}}],[\"data\",{\"1\":{\"134\":1}}],[\"daisy\",{\"1\":{\"76\":2}}],[\"destroy\",{\"1\":{\"560\":1}}],[\"destory\",{\"1\":{\"560\":3}}],[\"desc\",{\"1\":{\"307\":1,\"309\":1}}],[\"description\",{\"1\":{\"209\":1,\"391\":1,\"403\":1,\"459\":1,\"471\":1}}],[\"dectby\",{\"1\":{\"514\":1}}],[\"decr\",{\"1\":{\"514\":1}}],[\"decimalmax\",{\"1\":{\"185\":1}}],[\"decimalmin\",{\"1\":{\"185\":1}}],[\"dependencies>\",{\"1\":{\"592\":1}}],[\"dependency>\",{\"1\":{\"91\":1,\"94\":2,\"133\":1,\"138\":1,\"162\":1,\"181\":1,\"201\":1,\"208\":1,\"361\":1,\"481\":1,\"554\":1,\"592\":2}}],[\"deplyconsumer\",{\"1\":{\"501\":1}}],[\"deplyproducer\",{\"1\":{\"499\":1}}],[\"deplybinding\",{\"1\":{\"497\":1}}],[\"delaytime\",{\"1\":{\"499\":3}}],[\"delayqueue\",{\"1\":{\"497\":2}}],[\"delayed\",{\"1\":{\"497\":2}}],[\"delayexchange\",{\"1\":{\"497\":2}}],[\"delay\",{\"1\":{\"497\":3}}],[\"deletebatchids\",{\"1\":{\"386\":1,\"389\":1}}],[\"deletebymap\",{\"1\":{\"386\":1,\"389\":1}}],[\"deletebyid\",{\"1\":{\"386\":1,\"389\":1}}],[\"delete\",{\"0\":{\"258\":1},\"1\":{\"197\":1,\"259\":1,\"260\":1,\"386\":1,\"389\":2,\"614\":1}}],[\"deleteobject\",{\"1\":{\"119\":1,\"125\":2}}],[\"dead\",{\"1\":{\"497\":6,\"499\":4,\"501\":1}}],[\"debug\",{\"1\":{\"160\":1}}],[\"defaulttyping\",{\"1\":{\"530\":1}}],[\"defaultconsumer\",{\"1\":{\"434\":1,\"444\":1,\"456\":1,\"468\":1,\"469\":1,\"479\":1}}],[\"default\",{\"1\":{\"160\":1,\"188\":1,\"322\":1}}],[\"devtools<\",{\"1\":{\"138\":1}}],[\"d\",{\"1\":{\"66\":2,\"231\":1,\"233\":1,\"240\":1}}],[\"ctx\",{\"1\":{\"596\":3}}],[\"ctrl\",{\"1\":{\"240\":2}}],[\"customexchange\",{\"1\":{\"497\":2}}],[\"curd\",{\"0\":{\"387\":1}}],[\"curdate\",{\"1\":{\"320\":1}}],[\"curtime\",{\"1\":{\"320\":1}}],[\"c端\",{\"1\":{\"430\":1}}],[\"cm\",{\"1\":{\"386\":2}}],[\"ceil\",{\"1\":{\"318\":1}}],[\"central\",{\"1\":{\"83\":1}}],[\"cp\",{\"1\":{\"222\":2}}],[\"channel\",{\"1\":{\"432\":5,\"434\":6,\"436\":4,\"444\":7,\"454\":5,\"456\":7,\"466\":5,\"468\":9,\"469\":7,\"478\":5,\"479\":9}}],[\"change=\",{\"1\":{\"188\":1}}],[\"choose>\",{\"1\":{\"370\":1}}],[\"choose\",{\"1\":{\"369\":1}}],[\"checkout\",{\"1\":{\"66\":2,\"72\":1,\"74\":1}}],[\"chenkout\",{\"1\":{\"66\":1}}],[\"createrootapplicationcontext\",{\"1\":{\"596\":1}}],[\"createservletapplicationcontext\",{\"1\":{\"596\":1}}],[\"createchannel\",{\"1\":{\"432\":1,\"434\":1,\"444\":1,\"454\":1,\"456\":1,\"466\":1,\"468\":1,\"469\":1,\"478\":1,\"479\":1}}],[\"create\",{\"1\":{\"203\":1,\"222\":1,\"238\":1}}],[\"createjwt\",{\"1\":{\"197\":1}}],[\"createmimemessage\",{\"1\":{\"164\":2}}],[\"cron\",{\"0\":{\"175\":1},\"1\":{\"176\":1}}],[\"cc\",{\"1\":{\"164\":1}}],[\"cascade\",{\"1\":{\"333\":1}}],[\"cancel\",{\"1\":{\"178\":1}}],[\"caught\",{\"1\":{\"123\":1,\"125\":1}}],[\"catch\",{\"1\":{\"123\":1,\"125\":1,\"135\":1,\"422\":1,\"436\":1}}],[\"cat\",{\"1\":{\"72\":1}}],[\"cnblogs\",{\"1\":{\"426\":1}}],[\"cn\",{\"1\":{\"121\":1}}],[\"cli\",{\"1\":{\"507\":1}}],[\"closechannelandconnection\",{\"1\":{\"436\":1}}],[\"close\",{\"1\":{\"432\":2,\"434\":2,\"436\":2,\"454\":2,\"466\":2,\"478\":2}}],[\"clone\",{\"1\":{\"76\":1}}],[\"class=\",{\"1\":{\"556\":2,\"563\":1,\"565\":2,\"571\":1}}],[\"class\",{\"1\":{\"131\":1,\"135\":1,\"160\":1,\"164\":1,\"171\":1,\"178\":2,\"185\":1,\"187\":1,\"203\":1,\"209\":2,\"406\":1,\"421\":1,\"422\":2,\"436\":1,\"444\":1,\"454\":1,\"456\":1,\"466\":1,\"468\":1,\"469\":1,\"478\":1,\"479\":1,\"484\":1,\"486\":1,\"488\":1,\"490\":1,\"492\":1,\"494\":1,\"497\":1,\"499\":1,\"501\":1,\"528\":1,\"530\":2,\"558\":1,\"581\":1,\"585\":1,\"587\":1,\"594\":1,\"596\":3,\"623\":1,\"625\":1,\"627\":2,\"633\":1,\"635\":1}}],[\"classpathxmlapplicationcontext\",{\"1\":{\"558\":1}}],[\"classpath\",{\"1\":{\"130\":1,\"131\":1}}],[\"clean\",{\"1\":{\"85\":1}}],[\"c\",{\"1\":{\"76\":1,\"166\":3}}],[\"cd\",{\"1\":{\"68\":1,\"76\":1}}],[\"colorservice\",{\"1\":{\"629\":1}}],[\"color\",{\"1\":{\"625\":1,\"629\":3}}],[\"collection<\",{\"1\":{\"386\":2}}],[\"coll\",{\"1\":{\"386\":2}}],[\"columnmap\",{\"1\":{\"386\":2}}],[\"count\",{\"1\":{\"263\":1,\"304\":1,\"408\":1}}],[\"copy\",{\"1\":{\"242\":1}}],[\"core<\",{\"1\":{\"94\":1}}],[\"convertandsend\",{\"1\":{\"484\":5,\"499\":2}}],[\"con\",{\"1\":{\"436\":3}}],[\"connection\",{\"1\":{\"432\":4,\"434\":4,\"436\":2,\"444\":3,\"454\":4,\"456\":3,\"466\":4,\"468\":3,\"469\":3,\"478\":4,\"479\":3}}],[\"connectionfactory\",{\"1\":{\"432\":9,\"434\":9,\"436\":10}}],[\"consumertwo\",{\"1\":{\"469\":1}}],[\"consumertag\",{\"1\":{\"434\":1,\"444\":1,\"456\":1,\"468\":1,\"469\":1,\"479\":1}}],[\"consumerone\",{\"1\":{\"456\":1,\"468\":1,\"479\":1}}],[\"consumer2\",{\"1\":{\"444\":1}}],[\"consumer\",{\"0\":{\"443\":1},\"1\":{\"430\":1}}],[\"constraint\",{\"1\":{\"329\":1}}],[\"const\",{\"1\":{\"188\":2}}],[\"concat\",{\"1\":{\"316\":2}}],[\"control\",{\"1\":{\"549\":1}}],[\"controller\",{\"1\":{\"186\":1,\"575\":1,\"594\":1,\"596\":1,\"616\":2}}],[\"context<\",{\"1\":{\"554\":1}}],[\"contextloads\",{\"1\":{\"532\":1}}],[\"content\",{\"1\":{\"83\":1,\"164\":6,\"197\":2}}],[\"contaienr\",{\"1\":{\"222\":1}}],[\"container2\",{\"1\":{\"222\":1}}],[\"container1\",{\"1\":{\"222\":1}}],[\"container\",{\"0\":{\"221\":1},\"1\":{\"220\":2,\"222\":19}}],[\"config类\",{\"1\":{\"595\":1}}],[\"configuration\",{\"1\":{\"131\":1,\"171\":1,\"203\":1,\"209\":1,\"406\":1,\"497\":1,\"530\":1,\"577\":1,\"596\":1,\"625\":1,\"635\":1}}],[\"config\",{\"1\":{\"64\":2,\"203\":5,\"405\":1,\"496\":1}}],[\"command\",{\"1\":{\"222\":1}}],[\"commit\",{\"1\":{\"70\":2,\"72\":1,\"74\":1,\"220\":1}}],[\"componentscan\",{\"1\":{\"577\":1,\"596\":1}}],[\"component\",{\"1\":{\"486\":1,\"488\":1,\"490\":1,\"492\":1,\"494\":1,\"499\":1,\"501\":1,\"573\":1,\"581\":1,\"633\":1}}],[\"compose\",{\"1\":{\"216\":1}}],[\"compile\",{\"1\":{\"85\":1,\"100\":1}}],[\"com\",{\"1\":{\"64\":1,\"76\":3,\"83\":1,\"121\":1,\"160\":2,\"166\":6,\"361\":1,\"426\":1,\"556\":2,\"563\":1,\"565\":2,\"571\":1,\"577\":1,\"581\":1,\"583\":1,\"585\":1,\"587\":1,\"596\":1}}],[\"code\",{\"1\":{\"3\":1,\"123\":1,\"125\":1,\"176\":1}}],[\"backimg\",{\"1\":{\"629\":1}}],[\"basicack\",{\"1\":{\"444\":1}}],[\"basicqos\",{\"1\":{\"444\":1}}],[\"basicproperties\",{\"1\":{\"434\":1,\"444\":1,\"456\":1,\"468\":1,\"469\":1,\"479\":1}}],[\"basicpublish\",{\"1\":{\"432\":1,\"454\":1,\"466\":1,\"478\":1}}],[\"basicconsume\",{\"1\":{\"434\":1,\"444\":1,\"456\":1,\"468\":1,\"469\":1,\"479\":1}}],[\"basic\",{\"1\":{\"432\":1}}],[\"basemapper<t>\",{\"1\":{\"386\":1}}],[\"basemapper\",{\"0\":{\"385\":1}}],[\"bgsave\",{\"1\":{\"537\":1}}],[\"bdsize\",{\"1\":{\"509\":1}}],[\"body\",{\"1\":{\"434\":3,\"444\":3,\"456\":3,\"468\":2,\"469\":2,\"479\":2}}],[\"book\",{\"1\":{\"567\":2}}],[\"bookserviceimpl\",{\"1\":{\"556\":1,\"565\":1}}],[\"bookservice\",{\"1\":{\"556\":1,\"565\":1}}],[\"bookdao1\",{\"1\":{\"558\":2}}],[\"bookdaoimpl\",{\"1\":{\"556\":1,\"558\":1,\"563\":1,\"565\":1,\"569\":1,\"571\":1,\"577\":1}}],[\"bookdao\",{\"1\":{\"556\":1,\"558\":6,\"563\":1,\"565\":3,\"567\":4,\"571\":1,\"577\":2,\"581\":1,\"585\":1,\"587\":1}}],[\"boolean\",{\"1\":{\"197\":1,\"422\":1,\"623\":1,\"627\":1,\"633\":1}}],[\"boot应用程序中使用\",{\"1\":{\"169\":1}}],[\"boot\",{\"0\":{\"480\":1},\"1\":{\"138\":1,\"162\":1,\"181\":1,\"481\":1}}],[\"boot<\",{\"1\":{\"138\":1,\"162\":1,\"181\":1,\"481\":1}}],[\"b2\",{\"1\":{\"432\":1,\"434\":1}}],[\"b1\",{\"1\":{\"432\":1,\"434\":1}}],[\"blog\",{\"1\":{\"368\":2,\"370\":2,\"372\":2}}],[\"b交集部分数据\",{\"1\":{\"339\":1}}],[\"b为父表\",{\"1\":{\"329\":1}}],[\"byte\",{\"1\":{\"434\":1,\"444\":1,\"456\":1,\"468\":1,\"469\":1,\"479\":1}}],[\"by\",{\"1\":{\"262\":2,\"263\":2,\"304\":1,\"309\":1}}],[\"bilibili\",{\"1\":{\"246\":1,\"354\":1,\"378\":1,\"426\":1,\"547\":1,\"589\":1,\"607\":1,\"613\":1}}],[\"bind\",{\"1\":{\"497\":1}}],[\"bindingbuilder\",{\"1\":{\"497\":1}}],[\"binding\",{\"1\":{\"497\":1}}],[\"bindings\",{\"1\":{\"490\":2,\"492\":2,\"494\":2}}],[\"bindingresult\",{\"1\":{\"187\":4}}],[\"bin\",{\"1\":{\"3\":1,\"229\":1}}],[\"but\",{\"1\":{\"123\":1,\"125\":1}}],[\"bucket\",{\"1\":{\"123\":1,\"125\":1}}],[\"bucketname\",{\"1\":{\"121\":2}}],[\"build\",{\"1\":{\"121\":1,\"123\":1,\"125\":1,\"209\":2}}],[\"beink\",{\"1\":{\"556\":2,\"563\":1,\"565\":2,\"571\":1,\"577\":1,\"581\":1,\"583\":1,\"585\":1,\"587\":1,\"596\":1}}],[\"between\",{\"1\":{\"279\":1}}],[\"bean>\",{\"1\":{\"563\":1,\"565\":2,\"571\":1}}],[\"bean\",{\"0\":{\"559\":1},\"1\":{\"203\":1,\"209\":1,\"406\":1,\"497\":3,\"530\":1}}],[\"be\",{\"1\":{\"94\":1}}],[\"b依赖了c和d\",{\"1\":{\"88\":1}}],[\"b\",{\"1\":{\"66\":2,\"329\":4,\"336\":2,\"340\":8,\"343\":8,\"432\":2,\"434\":1}}],[\"branch\",{\"1\":{\"66\":3}}],[\"二进制协议是redis自定义的序列化格式\",{\"1\":{\"525\":1}}],[\"二\",{\"0\":{\"65\":1,\"67\":1},\"1\":{\"389\":1,\"608\":1}}],[\"everysec\",{\"1\":{\"542\":2}}],[\"event\",{\"1\":{\"188\":2}}],[\"elementtype\",{\"1\":{\"621\":1}}],[\"element2\",{\"1\":{\"518\":1,\"522\":1}}],[\"element1\",{\"1\":{\"518\":3,\"522\":4}}],[\"ems\",{\"1\":{\"432\":3,\"434\":3,\"436\":3,\"482\":3}}],[\"email\",{\"1\":{\"64\":2,\"183\":2,\"185\":7}}],[\"et\",{\"1\":{\"386\":2}}],[\"ew\",{\"1\":{\"386\":9}}],[\"esc\",{\"1\":{\"240\":1}}],[\"equals\",{\"1\":{\"197\":1}}],[\"eq\",{\"1\":{\"197\":1,\"389\":1,\"410\":1,\"411\":1}}],[\"e\",{\"1\":{\"135\":2,\"136\":1,\"166\":1,\"187\":4,\"386\":4,\"422\":2,\"436\":2,\"585\":2,\"587\":4}}],[\"entry>\",{\"1\":{\"571\":1}}],[\"entity\",{\"1\":{\"386\":3}}],[\"envelope\",{\"1\":{\"434\":2,\"444\":3,\"456\":2,\"468\":2,\"469\":2,\"479\":2}}],[\"end\",{\"1\":{\"240\":1}}],[\"endpoint\",{\"1\":{\"121\":2,\"123\":1,\"125\":1}}],[\"endpoint以华东1\",{\"1\":{\"121\":1}}],[\"enableswagger2\",{\"1\":{\"209\":1}}],[\"enablescheduling\",{\"1\":{\"171\":1}}],[\"enabledefaulttyping\",{\"1\":{\"530\":1}}],[\"enabled\",{\"1\":{\"136\":1}}],[\"encode\",{\"1\":{\"197\":1}}],[\"encoding\",{\"1\":{\"160\":1}}],[\"enctype=\",{\"1\":{\"134\":1}}],[\"error\",{\"1\":{\"123\":3,\"125\":3,\"187\":3,\"468\":2,\"479\":4}}],[\"ex\",{\"1\":{\"633\":1}}],[\"exchange\",{\"1\":{\"490\":4,\"492\":4,\"494\":4,\"497\":3,\"499\":2}}],[\"exchange在发送消息时\",{\"1\":{\"464\":1}}],[\"exchangedeclare\",{\"1\":{\"454\":1,\"456\":1,\"466\":1,\"468\":1,\"469\":1,\"478\":1,\"479\":1}}],[\"exception\",{\"1\":{\"421\":1,\"422\":2,\"623\":1,\"627\":1,\"633\":4}}],[\"exclusions>\",{\"1\":{\"94\":1}}],[\"exclusion>\",{\"1\":{\"94\":1}}],[\"exists\",{\"1\":{\"512\":1}}],[\"exist=false\",{\"1\":{\"399\":1}}],[\"exit\",{\"1\":{\"3\":1}}],[\"extends\",{\"1\":{\"386\":5,\"596\":1,\"625\":1,\"635\":1}}],[\"execution\",{\"1\":{\"581\":1,\"583\":1,\"585\":1,\"587\":1}}],[\"executing\",{\"1\":{\"178\":1}}],[\"exec\",{\"1\":{\"222\":1}}],[\"expire\",{\"1\":{\"197\":1,\"512\":1}}],[\"export\",{\"1\":{\"188\":1,\"222\":3}}],[\"explicit\",{\"1\":{\"94\":1}}],[\"examplebucket\",{\"1\":{\"121\":1}}],[\"example\",{\"1\":{\"64\":1,\"76\":1}}],[\"gash\",{\"1\":{\"484\":1}}],[\"gas\",{\"1\":{\"479\":2}}],[\"gag\",{\"1\":{\"479\":1}}],[\"group\",{\"1\":{\"262\":1,\"263\":1,\"304\":1}}],[\"groupid>\",{\"1\":{\"91\":1,\"94\":3,\"133\":1,\"138\":1,\"162\":1,\"181\":1,\"201\":1,\"208\":1,\"361\":1,\"481\":1,\"554\":1,\"592\":2}}],[\"gc\",{\"1\":{\"240\":1}}],[\"gg=g\",{\"1\":{\"240\":1}}],[\"gg\",{\"1\":{\"240\":1}}],[\"g\",{\"1\":{\"240\":3,\"479\":1}}],[\"getnativerequest\",{\"1\":{\"627\":1}}],[\"getname\",{\"1\":{\"164\":1,\"185\":1}}],[\"getparameterannotation\",{\"1\":{\"627\":1}}],[\"getheader\",{\"1\":{\"623\":1}}],[\"gethostid\",{\"1\":{\"123\":1,\"125\":1}}],[\"getbean\",{\"1\":{\"558\":1}}],[\"getbytes\",{\"1\":{\"432\":1,\"454\":1,\"466\":1,\"478\":1,\"499\":1}}],[\"getrange\",{\"1\":{\"514\":1}}],[\"getrecords\",{\"1\":{\"408\":1}}],[\"getrealpath\",{\"1\":{\"135\":1}}],[\"getrequestid\",{\"1\":{\"123\":1,\"125\":1}}],[\"getqueue\",{\"1\":{\"456\":1,\"468\":1,\"469\":1,\"479\":1}}],[\"getdeliverytag\",{\"1\":{\"444\":1}}],[\"getdefaultmessage\",{\"1\":{\"187\":3}}],[\"getconnection\",{\"1\":{\"436\":1,\"444\":1,\"454\":1,\"456\":1,\"466\":1,\"468\":1,\"469\":1,\"478\":1,\"479\":1}}],[\"getmessageproperties\",{\"1\":{\"499\":1}}],[\"getmessage\",{\"1\":{\"434\":1}}],[\"getmapping\",{\"1\":{\"178\":1,\"616\":1}}],[\"getid\",{\"1\":{\"411\":1}}],[\"getinputstream\",{\"1\":{\"121\":1}}],[\"getviews\",{\"1\":{\"205\":1}}],[\"getlock\",{\"1\":{\"205\":1}}],[\"getlist\",{\"1\":{\"121\":1,\"123\":1,\"125\":1}}],[\"get\",{\"0\":{\"599\":1},\"1\":{\"197\":1,\"512\":1,\"532\":1,\"612\":1,\"614\":3,\"616\":5,\"629\":2}}],[\"getemail\",{\"1\":{\"185\":1}}],[\"geterrorcode\",{\"1\":{\"123\":1,\"125\":1}}],[\"geterrormessage\",{\"1\":{\"123\":1,\"125\":1}}],[\"getattribute\",{\"1\":{\"627\":1}}],[\"getargs\",{\"1\":{\"587\":1}}],[\"getallerrors\",{\"1\":{\"187\":1}}],[\"getage\",{\"1\":{\"185\":1}}],[\"getaddress\",{\"1\":{\"185\":1}}],[\"getsubject\",{\"1\":{\"623\":1}}],[\"getscheme\",{\"1\":{\"135\":1}}],[\"getset\",{\"1\":{\"514\":1}}],[\"getservletmappings\",{\"1\":{\"596\":1}}],[\"getservletcontext\",{\"1\":{\"135\":1}}],[\"getserverport\",{\"1\":{\"135\":1}}],[\"getservername\",{\"1\":{\"135\":1}}],[\"getsession\",{\"1\":{\"135\":1,\"623\":1,\"627\":1}}],[\"getkey\",{\"1\":{\"123\":2}}],[\"getobjectsummaries\",{\"1\":{\"123\":1}}],[\"getoriginalfilename\",{\"1\":{\"121\":1,\"135\":1}}],[\"globalinterceptor\",{\"1\":{\"623\":1,\"625\":1}}],[\"global\",{\"1\":{\"64\":2}}],[\"gitskills\",{\"1\":{\"76\":1}}],[\"git文件\",{\"1\":{\"68\":1}}],[\"git安装后\",{\"0\":{\"63\":1}}],[\"git\",{\"1\":{\"3\":1,\"64\":2,\"66\":8,\"68\":1,\"70\":3,\"72\":7,\"74\":3,\"76\":12,\"197\":2}}],[\"gitworkflows\",{\"1\":{\"3\":1}}],[\"github\",{\"1\":{\"2\":1,\"4\":1,\"76\":2}}],[\"$s\",{\"1\":{\"240\":2}}],[\"$user\",{\"1\":{\"217\":1}}],[\"$refs\",{\"1\":{\"188\":1}}],[\"$\",{\"1\":{\"64\":2,\"68\":4,\"70\":3,\"72\":8,\"74\":4,\"76\":11,\"240\":1,\"577\":1}}],[\"一般\",{\"1\":{\"568\":1}}],[\"一般对象都是直接通过new出来\",{\"1\":{\"551\":1}}],[\"一种思想\",{\"1\":{\"550\":1}}],[\"一条消息\",{\"1\":{\"460\":1}}],[\"一套玩转mybatis\",{\"1\":{\"378\":1}}],[\"一次性提交多个文件\",{\"1\":{\"70\":1}}],[\"一分支管理\",{\"0\":{\"65\":1}}],[\"一\",{\"0\":{\"63\":1},\"1\":{\"389\":1,\"608\":1}}],[\"版本控制\",{\"0\":{\"62\":1,\"71\":1}}],[\"ttt\",{\"1\":{\"610\":1}}],[\"ttl\",{\"1\":{\"512\":1}}],[\"title\",{\"1\":{\"197\":3,\"209\":1,\"368\":3,\"370\":3,\"372\":3}}],[\"timeoutexception\",{\"1\":{\"432\":1,\"434\":1,\"436\":2,\"444\":1,\"454\":1,\"456\":1,\"466\":1,\"468\":1,\"469\":1,\"478\":1,\"479\":1}}],[\"timeunit\",{\"1\":{\"197\":1}}],[\"time<\",{\"1\":{\"91\":2}}],[\"type\",{\"1\":{\"188\":1,\"490\":2,\"492\":2,\"494\":2,\"497\":1,\"509\":1}}],[\"type=\",{\"1\":{\"134\":2,\"188\":1,\"395\":1,\"396\":1}}],[\"tablefield\",{\"1\":{\"397\":1,\"398\":1,\"399\":1,\"400\":1}}],[\"tableid\",{\"1\":{\"394\":1,\"395\":1,\"396\":1}}],[\"tablename\",{\"1\":{\"393\":1}}],[\"table\",{\"1\":{\"329\":1}}],[\"tar导入成镜像\",{\"1\":{\"222\":1}}],[\"tar中加载出来\",{\"1\":{\"220\":1}}],[\"tar中\",{\"1\":{\"220\":1,\"222\":1}}],[\"tar\",{\"1\":{\"220\":2,\"222\":2}}],[\"target\",{\"1\":{\"188\":1,\"621\":1}}],[\"tag\",{\"1\":{\"220\":1,\"222\":2}}],[\"taskscheduler\",{\"1\":{\"178\":3}}],[\"task\",{\"1\":{\"176\":1,\"178\":1}}],[\"template\",{\"1\":{\"530\":9}}],[\"template>\",{\"1\":{\"188\":1}}],[\"temp\",{\"1\":{\"136\":1}}],[\"testdelayqueueconfig\",{\"1\":{\"497\":1}}],[\"testdelete\",{\"1\":{\"389\":1}}],[\"testselect\",{\"1\":{\"389\":1}}],[\"testupdata\",{\"1\":{\"389\":1}}],[\"testinsert\",{\"1\":{\"389\":1}}],[\"test=\",{\"1\":{\"368\":2,\"370\":2,\"372\":3}}],[\"test1\",{\"1\":{\"364\":1,\"365\":1}}],[\"test\",{\"0\":{\"483\":1},\"1\":{\"70\":2,\"72\":3,\"74\":4,\"85\":1,\"104\":1,\"165\":1,\"166\":6,\"389\":4,\"432\":1,\"434\":1,\"484\":6,\"532\":1}}],[\"transactional\",{\"1\":{\"413\":1,\"421\":1,\"422\":1}}],[\"transferto\",{\"1\":{\"135\":1}}],[\"trim\",{\"1\":{\"197\":1,\"316\":1,\"371\":1}}],[\"true\",{\"1\":{\"136\":1,\"160\":1,\"164\":3,\"178\":1,\"197\":1,\"365\":1,\"434\":1,\"456\":1,\"468\":1,\"469\":1,\"479\":1,\"497\":2,\"563\":1,\"565\":1,\"623\":1,\"633\":2}}],[\"try\",{\"1\":{\"123\":1,\"125\":1,\"135\":1,\"205\":1,\"422\":1,\"436\":1}}],[\"token\",{\"1\":{\"623\":2}}],[\"toattpage\",{\"1\":{\"610\":1}}],[\"toapage\",{\"1\":{\"610\":1}}],[\"tom\",{\"1\":{\"520\":1}}],[\"topage\",{\"1\":{\"610\":1}}],[\"topic2\",{\"1\":{\"494\":1}}],[\"topic1\",{\"1\":{\"494\":1}}],[\"topicconsumer\",{\"1\":{\"494\":1}}],[\"topic\",{\"1\":{\"478\":2,\"479\":5,\"484\":3,\"494\":4}}],[\"topic类型的exchange与direct\",{\"1\":{\"472\":1}}],[\"top\",{\"1\":{\"222\":1}}],[\"totryeverything\",{\"1\":{\"160\":1,\"166\":4}}],[\"tostring\",{\"1\":{\"135\":1,\"197\":1,\"389\":1,\"587\":1}}],[\"to\",{\"1\":{\"123\":1,\"125\":1,\"164\":6,\"497\":1}}],[\"toc\",{\"1\":{\"52\":1}}],[\"thread\",{\"1\":{\"444\":1}}],[\"threshold\",{\"1\":{\"136\":1}}],[\"throwable\",{\"1\":{\"585\":1,\"587\":1}}],[\"throw\",{\"1\":{\"135\":1,\"422\":2}}],[\"throws\",{\"1\":{\"121\":1,\"164\":2,\"166\":2,\"432\":1,\"434\":2,\"436\":1,\"444\":2,\"454\":1,\"456\":2,\"466\":1,\"468\":2,\"469\":2,\"478\":1,\"479\":2,\"585\":1,\"587\":1,\"623\":1,\"627\":1,\"633\":3}}],[\"this\",{\"1\":{\"125\":1,\"185\":4,\"188\":1,\"567\":1,\"569\":2}}],[\"though\",{\"1\":{\"94\":1}}],[\"the\",{\"1\":{\"3\":1,\"94\":1}}],[\"t\",{\"1\":{\"76\":1,\"123\":1,\"386\":5}}],[\"txt\",{\"1\":{\"70\":1,\"72\":3,\"74\":4}}],[\"标签\",{\"1\":{\"188\":1}}],[\"标签用于选择图片\",{\"1\":{\"188\":1}}],[\"标签为\",{\"1\":{\"40\":1}}],[\"标题和页面信息\",{\"1\":{\"51\":1}}],[\"徽章\",{\"1\":{\"47\":1}}],[\"徽章文字\",{\"1\":{\"47\":1}}],[\"percentage\",{\"1\":{\"542\":1}}],[\"persistent\",{\"1\":{\"432\":1}}],[\"p端\",{\"1\":{\"430\":1}}],[\"plus\",{\"0\":{\"375\":1,\"376\":1},\"1\":{\"377\":1,\"378\":1}}],[\"p\",{\"1\":{\"222\":1,\"224\":1,\"227\":1,\"229\":1,\"231\":1,\"233\":1,\"235\":1,\"236\":1,\"240\":1}}],[\"ps\",{\"1\":{\"222\":1}}],[\"p2\",{\"1\":{\"166\":1}}],[\"p1\",{\"1\":{\"166\":1}}],[\"png\",{\"1\":{\"166\":1}}],[\"pictures\",{\"1\":{\"166\":2}}],[\"pointcut\",{\"1\":{\"581\":1,\"583\":1,\"585\":1,\"587\":1}}],[\"pojo\",{\"1\":{\"184\":1}}],[\"pom\",{\"1\":{\"161\":1,\"553\":1,\"591\":1}}],[\"port\",{\"1\":{\"160\":1,\"482\":1}}],[\"polyfill\",{\"1\":{\"141\":1}}],[\"posthandle\",{\"1\":{\"633\":2}}],[\"post乱码处理\",{\"0\":{\"604\":1}}],[\"postconstruct\",{\"1\":{\"178\":1,\"577\":1}}],[\"postmapping\",{\"1\":{\"135\":1,\"187\":1,\"629\":1}}],[\"post\",{\"0\":{\"602\":1},\"1\":{\"134\":1,\"614\":1}}],[\"parsejwt\",{\"1\":{\"623\":1}}],[\"parameter\",{\"1\":{\"621\":1}}],[\"param\",{\"1\":{\"386\":15,\"635\":1}}],[\"paginationinnerinterceptor\",{\"1\":{\"406\":1}}],[\"page<>\",{\"1\":{\"408\":1}}],[\"page\",{\"1\":{\"386\":2,\"408\":2}}],[\"paste\",{\"1\":{\"240\":1}}],[\"pass\",{\"1\":{\"197\":2}}],[\"passwordencoder\",{\"1\":{\"197\":1}}],[\"password\",{\"1\":{\"160\":1,\"197\":4,\"389\":3,\"482\":1}}],[\"pattern\",{\"1\":{\"130\":1,\"183\":1,\"185\":1}}],[\"pathvariable\",{\"1\":{\"614\":2,\"616\":1}}],[\"pathselectors\",{\"1\":{\"209\":1}}],[\"paths\",{\"1\":{\"209\":1}}],[\"path\",{\"1\":{\"130\":1}}],[\"package\",{\"1\":{\"85\":1}}],[\"prune\",{\"1\":{\"222\":1}}],[\"printstacktrace\",{\"1\":{\"422\":1,\"436\":1}}],[\"println\",{\"1\":{\"123\":6,\"125\":5,\"135\":1,\"164\":1,\"174\":1,\"178\":1,\"187\":1,\"197\":2,\"389\":6,\"410\":1,\"411\":1,\"434\":1,\"444\":1,\"456\":1,\"468\":1,\"469\":1,\"479\":1,\"486\":1,\"488\":2,\"490\":2,\"492\":2,\"494\":2,\"501\":1,\"532\":1,\"560\":2,\"581\":1,\"585\":3,\"587\":1,\"594\":1,\"601\":1,\"603\":1,\"608\":1,\"614\":2,\"633\":3}}],[\"primary\",{\"1\":{\"325\":1}}],[\"private\",{\"1\":{\"166\":1,\"178\":3,\"185\":4,\"209\":1,\"422\":1,\"436\":1,\"484\":1,\"528\":2,\"532\":1,\"563\":2,\"567\":1,\"569\":2,\"577\":2,\"581\":1,\"585\":1,\"587\":1,\"635\":1}}],[\"protected\",{\"1\":{\"596\":3,\"625\":2,\"635\":1}}],[\"proceed\",{\"1\":{\"585\":1,\"587\":2}}],[\"proceedingjoinpoint\",{\"1\":{\"585\":1,\"587\":1}}],[\"process\",{\"1\":{\"3\":1}}],[\"propertysource\",{\"1\":{\"577\":1}}],[\"property>\",{\"1\":{\"571\":2}}],[\"propertyaccessor\",{\"1\":{\"530\":1}}],[\"properties\",{\"1\":{\"160\":1,\"182\":1,\"434\":1,\"444\":1,\"456\":1,\"468\":1,\"469\":1,\"479\":1}}],[\"producer\",{\"1\":{\"454\":1,\"466\":1,\"478\":1}}],[\"productapi\",{\"1\":{\"209\":1}}],[\"provided\",{\"1\":{\"106\":1}}],[\"prehandle\",{\"1\":{\"623\":1,\"633\":2}}],[\"predestroy\",{\"1\":{\"577\":1}}],[\"previewimg\",{\"1\":{\"188\":2}}],[\"previewimage\",{\"1\":{\"188\":2}}],[\"prefer\",{\"1\":{\"94\":1}}],[\"pretty=oneline\",{\"1\":{\"72\":1}}],[\"pwd\",{\"1\":{\"68\":1}}],[\"put\",{\"1\":{\"389\":3,\"408\":2,\"497\":1,\"612\":1,\"614\":3}}],[\"putobject\",{\"1\":{\"119\":1,\"121\":1}}],[\"pull\",{\"1\":{\"220\":1}}],[\"push\",{\"1\":{\"66\":1,\"76\":2}}],[\"publicmapper\",{\"1\":{\"197\":1}}],[\"public\",{\"1\":{\"45\":1,\"121\":1,\"123\":1,\"125\":1,\"131\":2,\"135\":2,\"164\":4,\"171\":1,\"174\":1,\"176\":1,\"178\":4,\"185\":9,\"187\":2,\"197\":2,\"203\":1,\"205\":1,\"209\":2,\"386\":1,\"406\":2,\"408\":1,\"422\":2,\"434\":1,\"436\":3,\"444\":3,\"454\":2,\"456\":3,\"466\":2,\"468\":3,\"469\":3,\"478\":2,\"479\":3,\"484\":1,\"486\":2,\"488\":3,\"490\":3,\"492\":3,\"494\":3,\"497\":7,\"499\":2,\"501\":2,\"528\":1,\"530\":2,\"558\":2,\"560\":2,\"567\":1,\"569\":1,\"581\":2,\"585\":3,\"587\":2,\"594\":2,\"596\":2,\"601\":1,\"603\":1,\"608\":1,\"610\":2,\"614\":2,\"621\":1,\"623\":2,\"625\":1,\"627\":3,\"629\":1,\"633\":4,\"635\":1}}],[\"和远程分支连接起来\",{\"1\":{\"66\":1}}],[\"和\",{\"0\":{\"139\":1},\"1\":{\"40\":1,\"141\":1,\"216\":1}}],[\"日期函数\",{\"0\":{\"319\":1}}],[\"日\",{\"1\":{\"38\":1}}],[\"月\",{\"1\":{\"38\":1}}],[\"年\",{\"1\":{\"38\":1}}],[\"写作日期为\",{\"1\":{\"38\":1}}],[\"作者设置为\",{\"1\":{\"37\":1}}],[\"的另一种数据持久化方式\",{\"1\":{\"541\":1}}],[\"的缩写\",{\"1\":{\"541\":1}}],[\"的默认数据持久化方式\",{\"1\":{\"535\":1}}],[\"的发送方在向exchang发送消息时\",{\"1\":{\"463\":1}}],[\"的基础上只做增强不做改变\",{\"1\":{\"377\":1}}],[\"的增强工具\",{\"1\":{\"377\":1}}],[\"的人\",{\"1\":{\"350\":1}}],[\"的一个\",{\"1\":{\"141\":1}}],[\"的一种新协议\",{\"1\":{\"141\":1}}],[\"的\",{\"1\":{\"36\":1}}],[\"mget\",{\"1\":{\"514\":1}}],[\"mq的引言和不同mq的特点\",{\"1\":{\"426\":1}}],[\"mp\",{\"1\":{\"377\":1}}],[\"move\",{\"1\":{\"512\":1}}],[\"month\",{\"1\":{\"320\":1}}],[\"modelandview\",{\"1\":{\"633\":2}}],[\"modelandviewcontainer\",{\"1\":{\"627\":2}}],[\"mod\",{\"1\":{\"318\":1}}],[\"more\",{\"1\":{\"34\":1}}],[\"myinterceptor\",{\"1\":{\"633\":1,\"635\":3}}],[\"myaop\",{\"1\":{\"581\":1,\"585\":1,\"587\":1}}],[\"mysortedset\",{\"1\":{\"522\":8}}],[\"myset\",{\"1\":{\"518\":7}}],[\"mysql>\",{\"1\":{\"238\":4}}],[\"mysqldump\",{\"1\":{\"227\":1,\"229\":1,\"231\":1,\"233\":1}}],[\"mysql\",{\"0\":{\"225\":1,\"245\":1},\"1\":{\"229\":1,\"235\":1,\"236\":1,\"406\":1}}],[\"mybatis+字段+1\",{\"0\":{\"409\":1}}],[\"mybatisplusinterceptor\",{\"1\":{\"406\":4}}],[\"mybatisconfig\",{\"1\":{\"406\":1}}],[\"mybatisx\",{\"0\":{\"401\":1},\"1\":{\"402\":1}}],[\"mybatis<\",{\"1\":{\"361\":1}}],[\"mybatis\",{\"0\":{\"358\":1,\"375\":1,\"376\":1},\"1\":{\"361\":2,\"377\":3}}],[\"my\",{\"1\":{\"224\":1}}],[\"mytask\",{\"1\":{\"178\":2}}],[\"md\",{\"1\":{\"166\":1}}],[\"minimal\",{\"1\":{\"432\":1}}],[\"min\",{\"1\":{\"185\":1,\"263\":1,\"299\":1,\"300\":1,\"542\":1}}],[\"mimemessagehelper\",{\"1\":{\"164\":4}}],[\"mimemessage\",{\"1\":{\"164\":2}}],[\"mirror>\",{\"1\":{\"83\":1}}],[\"mirrorof>\",{\"1\":{\"83\":1}}],[\"mm\",{\"1\":{\"135\":1}}],[\"multipart\",{\"1\":{\"134\":1,\"136\":1}}],[\"multipartfile\",{\"1\":{\"121\":1,\"135\":1}}],[\"mvc\",{\"1\":{\"130\":1}}],[\"mvnrepository\",{\"1\":{\"361\":1}}],[\"mvn\",{\"1\":{\"85\":5}}],[\"memory\",{\"1\":{\"222\":1}}],[\"methodparameter\",{\"1\":{\"627\":5}}],[\"method\",{\"1\":{\"614\":2,\"616\":1}}],[\"methods\",{\"1\":{\"188\":1}}],[\"method=\",{\"1\":{\"134\":1,\"560\":2}}],[\"messagingexception\",{\"1\":{\"164\":2,\"166\":2}}],[\"messagepack等\",{\"1\":{\"525\":1}}],[\"messageproperties\",{\"1\":{\"432\":1,\"499\":5}}],[\"message2\",{\"1\":{\"488\":1,\"490\":1,\"492\":1,\"494\":1}}],[\"message1\",{\"1\":{\"488\":1,\"490\":1,\"492\":1,\"494\":1,\"499\":3}}],[\"message\",{\"1\":{\"123\":1,\"125\":1,\"185\":5,\"486\":3,\"488\":4,\"490\":4,\"492\":5,\"494\":5,\"497\":1,\"499\":4}}],[\"means\",{\"1\":{\"123\":1,\"125\":1}}],[\"m\",{\"1\":{\"70\":2,\"74\":1}}],[\"mkdirs\",{\"1\":{\"135\":1}}],[\"mkdir\",{\"1\":{\"68\":1}}],[\"mset\",{\"1\":{\"514\":1}}],[\"msg\",{\"1\":{\"164\":12,\"499\":3,\"501\":3}}],[\"ms\",{\"1\":{\"37\":1}}],[\"main\",{\"1\":{\"444\":1,\"454\":1,\"456\":1,\"466\":1,\"468\":1,\"469\":1,\"478\":1,\"479\":1,\"557\":1,\"558\":2}}],[\"mailservice\",{\"1\":{\"164\":1,\"166\":5}}],[\"mail<\",{\"1\":{\"162\":1}}],[\"mail\",{\"1\":{\"160\":2}}],[\"map>\",{\"1\":{\"571\":1}}],[\"map\",{\"1\":{\"389\":7,\"432\":1,\"434\":1,\"571\":1,\"608\":1,\"629\":2}}],[\"map<string\",{\"1\":{\"386\":2,\"497\":1,\"629\":1}}],[\"mapper<t>\",{\"1\":{\"386\":1}}],[\"mapper\",{\"1\":{\"364\":1}}],[\"max\",{\"1\":{\"136\":2,\"185\":1,\"188\":2,\"263\":1,\"299\":1,\"300\":1}}],[\"made\",{\"1\":{\"123\":1,\"125\":1}}],[\"maven<\",{\"1\":{\"83\":1}}],[\"maven\",{\"0\":{\"79\":1},\"1\":{\"83\":1}}],[\"maven中央仓库\",{\"1\":{\"1\":1}}],[\"master\",{\"1\":{\"76\":2}}],[\"markdown\",{\"1\":{\"36\":1,\"42\":1,\"44\":1},\"2\":{\"78\":1,\"113\":1,\"127\":1,\"211\":1,\"244\":1,\"357\":1,\"374\":1,\"424\":1,\"503\":1,\"544\":1,\"639\":1}}],[\"文章标题列表\",{\"1\":{\"52\":1}}],[\"文章加密\",{\"2\":{\"32\":1}}],[\"文件名称\",{\"1\":{\"542\":1}}],[\"文件是将\",{\"1\":{\"541\":1}}],[\"文件是在指定的时间间隔内\",{\"1\":{\"535\":1}}],[\"文件\",{\"1\":{\"538\":1,\"539\":1}}],[\"文件的缩写\",{\"1\":{\"535\":1}}],[\"文件上传\",{\"0\":{\"132\":1}}],[\"文件夹的图片\",{\"1\":{\"45\":1}}],[\"文件放置在一起\",{\"1\":{\"44\":1}}],[\"文字结尾应该有深蓝色的\",{\"1\":{\"47\":1}}],[\"文字\",{\"1\":{\"29\":1,\"30\":1}}],[\"文字段落\",{\"1\":{\"29\":11,\"30\":13}}],[\"29\",{\"1\":{\"240\":1}}],[\"28\",{\"1\":{\"240\":1}}],[\"27\",{\"1\":{\"240\":1}}],[\"26\",{\"1\":{\"240\":1}}],[\"25\",{\"1\":{\"240\":1}}],[\"24\",{\"1\":{\"240\":1}}],[\"23<\",{\"1\":{\"554\":1,\"592\":1}}],[\"23\",{\"1\":{\"240\":1}}],[\"21\",{\"1\":{\"240\":1,\"410\":1}}],[\"22\",{\"1\":{\"216\":1,\"224\":1,\"240\":1,\"411\":1}}],[\"2022版mybatisplus教程\",{\"1\":{\"378\":1}}],[\"2020\",{\"1\":{\"38\":1}}],[\"20000\",{\"1\":{\"224\":1}}],[\"20\",{\"1\":{\"220\":11,\"222\":3,\"240\":1,\"514\":2}}],[\"20l\",{\"1\":{\"197\":1}}],[\"2\",{\"0\":{\"622\":1,\"634\":1},\"1\":{\"30\":14,\"166\":1,\"185\":1,\"209\":1,\"230\":1,\"237\":1,\"240\":1,\"389\":2,\"516\":1,\"522\":6,\"556\":1}}],[\"段落\",{\"1\":{\"29\":1,\"30\":1}}],[\"实际上还有许多其他的命令可供使用\",{\"1\":{\"520\":1}}],[\"实际的文章内容\",{\"1\":{\"28\":1}}],[\"实现自定义注解\",{\"0\":{\"626\":1}}],[\"实现自减\",{\"1\":{\"514\":1}}],[\"实现自增\",{\"1\":{\"514\":1}}],[\"实现工具类\",{\"0\":{\"435\":1}}],[\"实现\",{\"0\":{\"526\":1},\"1\":{\"141\":1}}],[\"实现了客户端与服务器端的实时通信\",{\"1\":{\"141\":1}}],[\"实现博客自动部署\",{\"1\":{\"2\":1}}],[\"禁用\",{\"2\":{\"26\":1}}],[\"禁用了如下功能\",{\"1\":{\"14\":1}}],[\"页面结构\",{\"0\":{\"48\":1}}],[\"页面内容\",{\"0\":{\"41\":1}}],[\"页面配置\",{\"0\":{\"33\":1},\"1\":{\"40\":1},\"2\":{\"61\":1}}],[\"页面信息\",{\"0\":{\"35\":1},\"1\":{\"18\":1}}],[\"页脚\",{\"1\":{\"23\":1,\"57\":1}}],[\"评论\",{\"1\":{\"22\":1,\"54\":1}}],[\"链接\",{\"1\":{\"21\":1}}],[\"贡献者\",{\"1\":{\"19\":1,\"53\":1}}],[\"侧边栏\",{\"1\":{\"16\":1,\"56\":1}}],[\"本页面就是一个示例\",{\"1\":{\"14\":1}}],[\"flushall\",{\"1\":{\"509\":1,\"538\":1}}],[\"flushdb\",{\"1\":{\"509\":1}}],[\"floor\",{\"1\":{\"318\":1}}],[\"featured\",{\"1\":{\"370\":1}}],[\"fetch\",{\"1\":{\"66\":1}}],[\"fk\",{\"1\":{\"329\":1}}],[\"from\",{\"1\":{\"164\":6,\"259\":1,\"260\":1,\"262\":1,\"266\":2,\"268\":1,\"296\":1,\"298\":1,\"300\":2,\"304\":1,\"309\":1,\"311\":1,\"313\":2,\"340\":2,\"343\":2,\"348\":1,\"352\":4,\"368\":1,\"370\":1,\"372\":1,\"389\":2}}],[\"frontmatter\",{\"1\":{\"13\":1,\"36\":1,\"59\":1}}],[\"factory\",{\"1\":{\"530\":2}}],[\"fanout2\",{\"1\":{\"490\":1}}],[\"fanout1\",{\"1\":{\"490\":1}}],[\"fanoutconsumer\",{\"1\":{\"490\":1}}],[\"fanout\",{\"1\":{\"454\":1,\"456\":1,\"484\":4,\"490\":4}}],[\"false\",{\"1\":{\"136\":1,\"400\":1,\"432\":3,\"434\":3,\"444\":7,\"497\":1,\"633\":1}}],[\"failed\",{\"1\":{\"3\":1}}],[\"folder\",{\"1\":{\"135\":4}}],[\"foreach\",{\"1\":{\"389\":3}}],[\"foreign\",{\"1\":{\"326\":1,\"329\":1}}],[\"format\",{\"1\":{\"135\":4}}],[\"form>\",{\"1\":{\"134\":1}}],[\"form\",{\"1\":{\"134\":1}}],[\"for\",{\"1\":{\"123\":2,\"125\":1,\"164\":1,\"187\":1,\"484\":1}}],[\"field\",{\"1\":{\"520\":5}}],[\"findactivebloglike\",{\"1\":{\"368\":1,\"370\":1,\"372\":1}}],[\"find\",{\"1\":{\"233\":1}}],[\"final\",{\"1\":{\"197\":2,\"497\":3,\"530\":1}}],[\"finally\",{\"1\":{\"123\":1,\"125\":1,\"205\":1}}],[\"fixedrate\",{\"1\":{\"174\":1}}],[\"filereader\",{\"1\":{\"188\":2}}],[\"filepath\",{\"1\":{\"135\":2}}],[\"fileuploadcontroller\",{\"1\":{\"135\":1}}],[\"filesystemresource\",{\"1\":{\"164\":2}}],[\"files\",{\"1\":{\"70\":1,\"188\":1}}],[\"file\",{\"1\":{\"70\":1,\"121\":3,\"134\":1,\"135\":3,\"136\":2,\"164\":5,\"166\":1,\"188\":4,\"541\":1}}],[\"first\",{\"1\":{\"66\":2}}],[\"布局与功能禁用\",{\"0\":{\"12\":1}}],[\"幻灯片页\",{\"0\":{\"7\":1}}],[\"1的随机小数\",{\"1\":{\"318\":1}}],[\"19\",{\"1\":{\"240\":1}}],[\"19138084894\",{\"1\":{\"166\":3}}],[\"18\",{\"1\":{\"240\":1}}],[\"17\",{\"1\":{\"240\":1}}],[\"16\",{\"1\":{\"240\":1}}],[\"163\",{\"1\":{\"166\":3}}],[\"15\",{\"1\":{\"240\":1,\"336\":1}}],[\"14\",{\"1\":{\"240\":1,\"613\":1}}],[\"13\",{\"1\":{\"240\":1}}],[\"110\",{\"1\":{\"320\":2}}],[\"11\",{\"1\":{\"240\":1}}],[\"1000\",{\"1\":{\"444\":1}}],[\"100\",{\"1\":{\"185\":1,\"188\":2}}],[\"10\",{\"1\":{\"185\":1,\"240\":1,\"313\":3,\"408\":1,\"484\":1}}],[\"10mb\",{\"1\":{\"136\":2}}],[\"123\",{\"1\":{\"563\":1}}],[\"123root\",{\"1\":{\"389\":1}}],[\"127\",{\"1\":{\"242\":3,\"432\":1,\"434\":1,\"436\":1,\"482\":1}}],[\"12\",{\"0\":{\"175\":1},\"1\":{\"176\":1,\"240\":1}}],[\"1<\",{\"1\":{\"94\":1,\"592\":1}}],[\"1\",{\"0\":{\"620\":1,\"632\":1},\"1\":{\"3\":1,\"29\":12,\"38\":2,\"185\":1,\"197\":2,\"205\":1,\"209\":1,\"224\":1,\"235\":1,\"240\":3,\"242\":3,\"312\":1,\"370\":1,\"389\":1,\"410\":1,\"411\":2,\"432\":1,\"434\":1,\"436\":1,\"444\":1,\"482\":1,\"512\":1,\"516\":3,\"520\":8,\"522\":4,\"532\":1,\"554\":1}}],[\"错误回滚\",{\"1\":{\"416\":1}}],[\"错误\",{\"1\":{\"3\":1}}],[\"部署vue项目\",{\"1\":{\"4\":1}}],[\"部署\",{\"1\":{\"3\":1}}],[\"+1\",{\"1\":{\"205\":1}}],[\"+999999\",{\"1\":{\"197\":1}}],[\"+\",{\"1\":{\"2\":1,\"123\":6,\"125\":5,\"135\":9,\"166\":1,\"187\":1,\"197\":4,\"240\":2,\"410\":1,\"411\":2,\"434\":1,\"444\":1,\"456\":1,\"468\":1,\"469\":1,\"479\":1,\"486\":1,\"488\":2,\"490\":2,\"492\":2,\"494\":2,\"501\":1,\"603\":1,\"608\":1,\"616\":1}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,kt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n}})=>{e==="suggest"?self.postMessage(it(t,I[s],n)):e==="search"?self.postMessage(ot(t,I[s],n)):self.postMessage({suggestions:it(t,I[s],n),results:ot(t,I[s],n)})};
//# sourceMappingURL=index.js.map
