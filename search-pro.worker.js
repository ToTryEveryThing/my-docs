const rt="ENTRIES",W="KEYS",$="VALUES",F="";class M{constructor(t,s){const n=t._tree,u=Array.from(n.keys());this.set=t,this._type=s,this._path=u.length>0?[{node:n,keys:u}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=C(this._path);if(C(s)===F)return{done:!1,value:this.result()};const n=t.get(C(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=C(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>C(t)).filter(t=>t!==F).join("")}value(){return C(this._path).node.get(F)}result(){switch(this._type){case $:return this.value();case W:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const C=e=>e[e.length-1],ct=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const u=t.length+1,o=u+s,i=new Uint8Array(o*u).fill(s+1);for(let r=0;r<u;++r)i[r]=r;for(let r=1;r<o;++r)i[r*u]=r;return R(e,t,s,n,i,1,u,""),n},R=(e,t,s,n,u,o,i,r)=>{const h=o*i;t:for(const c of e.keys())if(c===F){const a=u[h-1];a<=s&&n.set(r,[e.get(c),a])}else{let a=o;for(let l=0;l<c.length;++l,++a){const m=c[l],g=i*a,f=g-i;let d=u[g];const p=Math.max(0,a-s-1),_=Math.min(i-1,a+s);for(let A=p;A<_;++A){const O=m!==t[A],x=u[f+A]+ +O,y=u[f+A+1]+1,k=u[g+A]+1,T=u[g+A+1]=Math.min(x,y,k);T<d&&(d=T)}if(d>s)continue t}R(e.get(c),t,s,n,u,a,i,r+c)}};let q=class w{constructor(t=new Map,s=""){this._size=void 0,this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=v(this._tree,t.slice(this._prefix.length));if(s===void 0){const[u,o]=j(n);for(const i of u.keys())if(i!==F&&i.startsWith(o)){const r=new Map;return r.set(i.slice(o.length),u.get(i)),new w(r,t)}}return new w(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,lt(this._tree,t)}entries(){return new M(this,rt)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return ct(this._tree,t,s)}get(t){const s=B(this._tree,t);return s!==void 0?s.get(F):void 0}has(t){const s=B(this._tree,t);return s!==void 0&&s.has(F)}keys(){return new M(this,W)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,S(this._tree,t).set(F,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=S(this._tree,t);return n.set(F,s(n.get(F))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=S(this._tree,t);let u=n.get(F);return u===void 0&&n.set(F,u=s()),u}values(){return new M(this,$)}[Symbol.iterator](){return this.entries()}static from(t){const s=new w;for(const[n,u]of t)s.set(n,u);return s}static fromObject(t){return w.from(Object.entries(t))}};const v=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==F&&t.startsWith(n))return s.push([e,n]),v(e.get(n),t.slice(n.length),s);return s.push([e,t]),v(void 0,"",s)},B=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==F&&t.startsWith(s))return B(e.get(s),t.slice(s.length))},S=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const o of e.keys())if(o!==F&&t[n]===o[0]){const i=Math.min(s-n,o.length);let r=1;for(;r<i&&t[n+r]===o[r];)++r;const h=e.get(o);if(r===o.length)e=h;else{const c=new Map;c.set(o.slice(r),h),e.set(t.slice(n,n+r),c),e.delete(o),e=c}n+=r;continue t}const u=new Map;return e.set(t.slice(n),u),u}return e},lt=(e,t)=>{const[s,n]=v(e,t);if(s!==void 0){if(s.delete(F),s.size===0)P(n);else if(s.size===1){const[u,o]=s.entries().next().value;N(n,u,o)}}},P=e=>{if(e.length===0)return;const[t,s]=j(e);if(t.delete(s),t.size===0)P(e.slice(0,-1));else if(t.size===1){const[n,u]=t.entries().next().value;n!==F&&N(e.slice(0,-1),n,u)}},N=(e,t,s)=>{if(e.length===0)return;const[n,u]=j(e);n.set(u+t,s),n.delete(u)},j=e=>e[e.length-1],ht=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,L="or",G="and",dt="and_not",at=(e,t)=>{e.includes(t)||e.push(t)},J=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},U=({score:e},{score:t})=>t-e,ft=()=>new Map,b=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},H=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,gt={[L]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:u,terms:o,match:i}=t.get(s);n.score=n.score+u,n.match=Object.assign(n.match,i),J(n.terms,o)}}return e},[G]:(e,t)=>{const s=new Map;for(const n of t.keys()){const u=e.get(n);if(u==null)continue;const{score:o,terms:i,match:r}=t.get(n);J(u.terms,i),s.set(n,{score:u.score+o,terms:u.terms,match:Object.assign(u.match,r)})}return s},[dt]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},pt=(e,t,s,n,u,o)=>{const{k:i,b:r,d:h}=o;return Math.log(1+(s-t+.5)/(t+.5))*(h+e*(i+1)/(e+i*(1-r+r*n/u)))},mt=e=>(t,s,n)=>{const u=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,o=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:u,prefix:o}},Ft={k:1.2,b:.7,d:.5},_t={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(ht),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof(console==null?void 0:console[e])=="function"&&console[e](t)},autoVacuum:!0},K={combineWith:L,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:Ft},At={combineWith:G,prefix:(e,t,s)=>t===s.length-1},yt={batchSize:1e3,batchWait:10},X={minDirtFactor:.1,minDirtCount:20},Ct={...yt,...X};class zt{constructor(t){if((t==null?void 0:t.fields)==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?Ct:t.autoVacuum;this._options={..._t,...t,autoVacuum:s,searchOptions:{...K,...t.searchOptions||{}},autoSuggestOptions:{...At,...t.autoSuggestOptions||{}}},this._index=new q,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=X,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const u={};for(const[o,i]of n)u[o]=Object.fromEntries(i);t.push([s,u])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const Y=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},Q=(e,t,s,n)=>{for(const u of Object.keys(e._fieldIds))if(e._fieldIds[u]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${u}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},Et=(e,t,s,n)=>{if(!e._index.has(n)){Q(e,s,t,n);return}const u=e._index.fetch(n,ft),o=u.get(t);o==null||o.get(s)==null?Q(e,s,t,n):o.get(s)<=1?o.size<=1?u.delete(t):o.delete(s):o.set(s,o.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},Z=(e,t=L)=>{if(e.length===0)return new Map;const s=t.toLowerCase();return e.reduce(gt[s])||new Map},V=(e,t,s,n,u,o,i,r,h=new Map)=>{if(u==null)return h;for(const c of Object.keys(o)){const a=o[c],l=e._fieldIds[c],m=u.get(l);if(m==null)continue;let g=m.size;const f=e._avgFieldLength[l];for(const d of m.keys()){if(!e._documentIds.has(d)){Et(e,l,d,s),g-=1;continue}const p=i?i(e._documentIds.get(d),s,e._storedFields.get(d)):1;if(!p)continue;const _=m.get(d),A=e._fieldLength.get(d)[l],O=pt(_,g,e._documentCount,A,f,r),x=n*a*p*O,y=h.get(d);if(y){y.score+=x,at(y.terms,t);const k=H(y.match,s);k?k.push(c):y.match[s]=[c]}else h.set(d,{score:x,terms:[t],match:{[s]:[c]}})}}return h},wt=(e,t,s)=>{const n={...e._options.searchOptions,...s},u=(n.fields||e._options.fields).reduce((d,p)=>({...d,[p]:H(n.boost,p)||1}),{}),{boostDocument:o,weights:i,maxFuzzy:r,bm25:h}=n,{fuzzy:c,prefix:a}={...K.weights,...i},l=e._index.get(t.term),m=V(e,t.term,t.term,1,l,u,o,h);let g,f;if(t.prefix&&(g=e._index.atPrefix(t.term)),t.fuzzy){const d=t.fuzzy===!0?.2:t.fuzzy,p=d<1?Math.min(r,Math.round(t.term.length*d)):d;p&&(f=e._index.fuzzyGet(t.term,p))}if(g)for(const[d,p]of g){const _=d.length-t.term.length;if(!_)continue;f==null||f.delete(d);const A=a*d.length/(d.length+.3*_);V(e,t.term,d,A,p,u,o,h,m)}if(f)for(const d of f.keys()){const[p,_]=f.get(d);if(!_)continue;const A=c*d.length/(d.length+_);V(e,t.term,d,A,p,u,o,h,m)}return m},tt=(e,t,s={})=>{if(typeof t!="string"){const a={...s,...t,queries:void 0},l=t.queries.map(m=>tt(e,m,a));return Z(l,a.combineWith)}const{tokenize:n,processTerm:u,searchOptions:o}=e._options,i={tokenize:n,processTerm:u,...o,...s},{tokenize:r,processTerm:h}=i,c=r(t).flatMap(a=>h(a)).filter(a=>!!a).map(mt(i)).map(a=>wt(e,a,i));return Z(c,i.combineWith)},et=(e,t,s={})=>{const n=tt(e,t,s),u=[];for(const[o,{score:i,terms:r,match:h}]of n){const c=r.length,a={id:e._documentIds.get(o),score:i*c,terms:Object.keys(h),match:h};Object.assign(a,e._storedFields.get(o)),(s.filter==null||s.filter(a))&&u.push(a)}return u.sort(U),u},xt=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:o,terms:i}of et(e,t,s)){const r=i.join(" "),h=n.get(r);h!=null?(h.score+=o,h.count+=1):n.set(r,{score:o,terms:i,count:1})}const u=[];for(const[o,{score:i,terms:r,count:h}]of n)u.push({suggestion:o,terms:r,score:i/h});return u.sort(U),u},kt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:u,fieldLength:o,averageFieldLength:i,storedFields:r,dirtCount:h,serializationVersion:c},a)=>{if(c!==1&&c!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const l=new zt(a);l._documentCount=t,l._nextId=s,l._documentIds=b(n),l._idToShortId=new Map,l._fieldIds=u,l._fieldLength=b(o),l._avgFieldLength=i,l._storedFields=b(r),l._dirtCount=h||0,l._index=new q;for(const[m,g]of l._documentIds)l._idToShortId.set(g,m);for(const[m,g]of e){const f=new Map;for(const d of Object.keys(g)){let p=g[d];c===1&&(p=p.ds),f.set(parseInt(d,10),b(p))}l._index.set(m,f)}return l},st=Object.entries,vt=Object.fromEntries,z=100,E=20,D=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),u=[];let o=0,i=0;const r=(c,a=!1)=>{let l="";i===0?l=c.length>E?`… ${c.slice(-E)}`:c:a?l=c.length+i>z?`${c.slice(0,z-i)}… `:c:l=c.length>E?`${c.slice(0,E)} … ${c.slice(-E)}`:c,l&&u.push(l),i+=l.length,a||(u.push(["mark",t]),i+=t.length,i>=z&&u.push(" …"))};let h=s.indexOf(n,o);if(h===-1)return null;for(;h>=0;){const c=h+n.length;if(r(e.slice(o,h)),o=c,i>z)break;h=s.indexOf(n,o)}return i<z&&r(e.slice(o),!0),u},nt=/[\u4e00-\u9fa5]/g,ut=(e={})=>({fuzzy:.2,prefix:!0,processTerm:t=>{const s=t.match(nt)||[],n=t.replace(nt,"").toLowerCase();return n?[n,...s]:[...s]},...e}),ot=(e,t,s={})=>{const n={};return et(t,e,ut({boost:{h:2,t:1,c:4},...s})).forEach(u=>{const{id:o,terms:i,score:r}=u,h=o.includes("/"),c=!h&&o.includes("#"),a=o.includes("@"),[l,m]=o.split(/[#@]/),{contents:g}=n[l]??={title:"",contents:[]};if(c)g.push([{type:"heading",key:l,anchor:u.a,display:i.map(f=>D(u.h,f)).filter(f=>f!==null)},r]);else if(h){const[f]=m.split("/"),{h:d="",a:p=""}=Y(t,`${l}#${f}`)||{};g.push([{type:"text",key:l,header:d,anchor:p,display:i.map(_=>D(u.t,_)).filter(_=>_!==null)},r])}else a?g.push([{type:"customField",key:l,index:m,display:i.map(f=>u.c.map(d=>D(d,f))).flat().filter(f=>f!==null)},r]):g.push([{type:"title",key:l,display:i.map(f=>D(u.h,f)).filter(f=>f!==null)},r])}),st(n).sort(([,u],[,o])=>o.contents.reduce((i,[,r])=>i+r,0)-u.contents.reduce((i,[,r])=>i+r,0)).map(([u,{title:o,contents:i}])=>{if(!o){const r=Y(t,u);r&&(o=r.h)}return{title:o,contents:i.map(([r])=>r)}})},it=(e,t,s={})=>xt(t,e,ut(s)).map(({suggestion:n})=>n),I=vt(st(JSON.parse("{\"/\":{\"documentCount\":612,\"nextId\":612,\"documentIds\":{\"0\":\"v-8daa1a0e\",\"1\":\"v-8daa1a0e#0/0\",\"2\":\"v-8daa1a0e#0/1\",\"3\":\"v-8daa1a0e#0/2\",\"4\":\"v-8daa1a0e#0/3\",\"5\":\"v-2e3eac9e\",\"6\":\"v-145ac574\",\"7\":\"v-145ac574#1\",\"8\":\"v-145ac574#1/0\",\"9\":\"v-75f5fc4b\",\"10\":\"v-75f5fc4b#0/0\",\"11\":\"v-75f5fc4b#0/1\",\"12\":\"v-75f5fc4b#0/2\",\"13\":\"v-75f5fc4b#0/3\",\"14\":\"v-75f5fc4b#0/4\",\"15\":\"v-75f5fc4b#0/5\",\"16\":\"v-75f5fc4b#0/6\",\"17\":\"v-75f5fc4b#0/7\",\"18\":\"v-75f5fc4b#0/8\",\"19\":\"v-75f5fc4b#0/9\",\"20\":\"v-75f5fc4b#0/10\",\"21\":\"v-75f5fc4b#0/11\",\"22\":\"v-3c8012ee\",\"23\":\"v-3c8012ee#0/0\",\"24\":\"v-3c8012ee#0/1\",\"25\":\"v-3c8012ee#0/2\",\"26\":\"v-6cb33ee0\",\"27\":\"v-6cb33ee0#0/0\",\"28\":\"v-6cb33ee0#1\",\"29\":\"v-6cb33ee0#1/0\",\"30\":\"v-6cb33ee0#1/1\",\"31\":\"v-6cb33ee0#1/2\",\"32\":\"v-6cb33ee0#1/3\",\"33\":\"v-6cb33ee0#1/4\",\"34\":\"v-6cb33ee0#2\",\"35\":\"v-6cb33ee0#2/0\",\"36\":\"v-6cb33ee0#2/1\",\"37\":\"v-6cb33ee0#2/2\",\"38\":\"v-6cb33ee0#2/3\",\"39\":\"v-6cb33ee0#2/4\",\"40\":\"v-6cb33ee0#2/5\",\"41\":\"v-6cb33ee0#3\",\"42\":\"v-6cb33ee0#3/0\",\"43\":\"v-6cb33ee0#3/1\",\"44\":\"v-6cb33ee0#3/2\",\"45\":\"v-6cb33ee0#3/3\",\"46\":\"v-6cb33ee0#3/4\",\"47\":\"v-6cb33ee0#3/5\",\"48\":\"v-6cb33ee0#3/6\",\"49\":\"v-6cb33ee0#3/7\",\"50\":\"v-6cb33ee0#3/8\",\"51\":\"v-6cb33ee0#3/9\",\"52\":\"v-6cb33ee0#3/10\",\"53\":\"v-2bcb26fa\",\"54\":\"v-2bcb26fa#1\",\"55\":\"v-2bcb26fa#1/0\",\"56\":\"v-2bcb26fa#2\",\"57\":\"v-2bcb26fa#2/1\",\"58\":\"v-2bcb26fa#3\",\"59\":\"v-2bcb26fa#3/2\",\"60\":\"v-2bcb26fa#4\",\"61\":\"v-2bcb26fa#4/3\",\"62\":\"v-2bcb26fa#5\",\"63\":\"v-2bcb26fa#5/4\",\"64\":\"v-2bcb26fa#6\",\"65\":\"v-2bcb26fa#6/5\",\"66\":\"v-2bcb26fa#7\",\"67\":\"v-2bcb26fa#7/6\",\"68\":\"v-9e67bfbe\",\"69\":\"v-9e67bfbe#1\",\"70\":\"v-9e67bfbe#1/0\",\"71\":\"v-9e67bfbe#2\",\"72\":\"v-9e67bfbe#2/0\",\"73\":\"v-9e67bfbe#3\",\"74\":\"v-9e67bfbe#3/1\",\"75\":\"v-9e67bfbe#4\",\"76\":\"v-9e67bfbe#5\",\"77\":\"v-9e67bfbe#5/2\",\"78\":\"v-9e67bfbe#6\",\"79\":\"v-9e67bfbe#6/0\",\"80\":\"v-9e67bfbe#6/1\",\"81\":\"v-9e67bfbe#7\",\"82\":\"v-9e67bfbe#7/2\",\"83\":\"v-9e67bfbe#7/3\",\"84\":\"v-9e67bfbe#8\",\"85\":\"v-9e67bfbe#8/4\",\"86\":\"v-9e67bfbe#8/5\",\"87\":\"v-9e67bfbe#8/6\",\"88\":\"v-9e67bfbe#8/7\",\"89\":\"v-9e67bfbe#8/8\",\"90\":\"v-9e67bfbe#8/9\",\"91\":\"v-9e67bfbe#8/10\",\"92\":\"v-9e67bfbe#8/11\",\"93\":\"v-9e67bfbe#8/12\",\"94\":\"v-9e67bfbe#8/13\",\"95\":\"v-9e67bfbe#8/14\",\"96\":\"v-9e67bfbe#8/15\",\"97\":\"v-9e67bfbe#8/16\",\"98\":\"v-9e67bfbe#8/17\",\"99\":\"v-9e67bfbe#8/18\",\"100\":\"v-9e67bfbe#9\",\"101\":\"v-e7d29956\",\"102\":\"v-e7d29956#1\",\"103\":\"v-e7d29956#2\",\"104\":\"v-e7d29956#2/0\",\"105\":\"v-e7d29956#2/1\",\"106\":\"v-e7d29956#2/2\",\"107\":\"v-e7d29956#3\",\"108\":\"v-e7d29956#3/0\",\"109\":\"v-e7d29956#4\",\"110\":\"v-e7d29956#4/1\",\"111\":\"v-e7d29956#5\",\"112\":\"v-e7d29956#5/2\",\"113\":\"v-870b7946\",\"114\":\"v-870b7946#1\",\"115\":\"v-870b7946#1/0\",\"116\":\"v-870b7946#1/1\",\"117\":\"v-870b7946#2\",\"118\":\"v-870b7946#2/2\",\"119\":\"v-870b7946#2/3\",\"120\":\"v-870b7946#2/4\",\"121\":\"v-870b7946#2/5\",\"122\":\"v-870b7946#3\",\"123\":\"v-870b7946#3/6\",\"124\":\"v-870b7946#4\",\"125\":\"v-870b7946#4/7\",\"126\":\"v-870b7946#4/8\",\"127\":\"v-870b7946#4/9\",\"128\":\"v-870b7946#5\",\"129\":\"v-870b7946#5/0\",\"130\":\"v-870b7946#5/1\",\"131\":\"v-870b7946#5/2\",\"132\":\"v-870b7946#6\",\"133\":\"v-870b7946#6/0\",\"134\":\"v-870b7946#6/1\",\"135\":\"v-870b7946#7\",\"136\":\"v-870b7946#7/0\",\"137\":\"v-870b7946#7/1\",\"138\":\"v-870b7946#7/2\",\"139\":\"v-870b7946#8\",\"140\":\"v-870b7946#8/0\",\"141\":\"v-870b7946#8/1\",\"142\":\"v-870b7946#9\",\"143\":\"v-870b7946#9/0\",\"144\":\"v-870b7946#9/1\",\"145\":\"v-870b7946#9/2\",\"146\":\"v-870b7946#9/3\",\"147\":\"v-870b7946#9/4\",\"148\":\"v-870b7946#9/5\",\"149\":\"v-870b7946#9/6\",\"150\":\"v-870b7946#9/7\",\"151\":\"v-870b7946#9/8\",\"152\":\"v-870b7946#10\",\"153\":\"v-870b7946#10/9\",\"154\":\"v-870b7946#10/10\",\"155\":\"v-870b7946#10/11\",\"156\":\"v-870b7946#10/12\",\"157\":\"v-870b7946#10/13\",\"158\":\"v-870b7946#10/14\",\"159\":\"v-870b7946#10/15\",\"160\":\"v-870b7946#11\",\"161\":\"v-870b7946#11/16\",\"162\":\"v-870b7946#11/17\",\"163\":\"v-870b7946#11/18\",\"164\":\"v-870b7946#12\",\"165\":\"v-870b7946#12/19\",\"166\":\"v-870b7946#12/20\",\"167\":\"v-870b7946#12/21\",\"168\":\"v-870b7946#12/22\",\"169\":\"v-870b7946#12/23\",\"170\":\"v-870b7946#12/24\",\"171\":\"v-870b7946#12/25\",\"172\":\"v-870b7946#12/26\",\"173\":\"v-870b7946#12/27\",\"174\":\"v-870b7946#13\",\"175\":\"v-870b7946#14\",\"176\":\"v-870b7946#14/28\",\"177\":\"v-870b7946#14/29\",\"178\":\"v-870b7946#14/30\",\"179\":\"v-870b7946#14/31\",\"180\":\"v-870b7946#14/32\",\"181\":\"v-870b7946#15\",\"182\":\"v-870b7946#15/0\",\"183\":\"v-870b7946#16\",\"184\":\"v-870b7946#16/1\",\"185\":\"v-870b7946#16/2\",\"186\":\"v-870b7946#16/3\",\"187\":\"v-870b7946#16/4\",\"188\":\"v-870b7946#16/5\",\"189\":\"v-870b7946#16/6\",\"190\":\"v-870b7946#16/7\",\"191\":\"v-870b7946#17\",\"192\":\"v-870b7946#18\",\"193\":\"v-870b7946#18/8\",\"194\":\"v-870b7946#18/9\",\"195\":\"v-083f0e38\",\"196\":\"v-083f0e38#1\",\"197\":\"v-083f0e38#2\",\"198\":\"v-083f0e38#2/0\",\"199\":\"v-083f0e38#2/1\",\"200\":\"v-083f0e38#2/2\",\"201\":\"v-083f0e38#2/3\",\"202\":\"v-083f0e38#3\",\"203\":\"v-083f0e38#3/0\",\"204\":\"v-083f0e38#4\",\"205\":\"v-083f0e38#4/1\",\"206\":\"v-083f0e38#5\",\"207\":\"v-083f0e38#5/2\",\"208\":\"v-083f0e38#6\",\"209\":\"v-083f0e38#7\",\"210\":\"v-083f0e38#7/3\",\"211\":\"v-083f0e38#7/4\",\"212\":\"v-083f0e38#7/5\",\"213\":\"v-083f0e38#7/6\",\"214\":\"v-083f0e38#7/7\",\"215\":\"v-083f0e38#7/8\",\"216\":\"v-083f0e38#7/9\",\"217\":\"v-083f0e38#8\",\"218\":\"v-083f0e38#8/10\",\"219\":\"v-083f0e38#8/11\",\"220\":\"v-083f0e38#8/12\",\"221\":\"v-083f0e38#8/13\",\"222\":\"v-083f0e38#9\",\"223\":\"v-083f0e38#9/14\",\"224\":\"v-083f0e38#10\",\"225\":\"v-083f0e38#10/15\",\"226\":\"v-60223b4a\",\"227\":\"v-60223b4a#0/0\",\"228\":\"v-60223b4a#0/1\",\"229\":\"v-60223b4a#1\",\"230\":\"v-60223b4a#1/0\",\"231\":\"v-60223b4a#1/1\",\"232\":\"v-60223b4a#1/2\",\"233\":\"v-60223b4a#1/3\",\"234\":\"v-60223b4a#1/4\",\"235\":\"v-60223b4a#1/5\",\"236\":\"v-60223b4a#2\",\"237\":\"v-60223b4a#2/6\",\"238\":\"v-60223b4a#2/7\",\"239\":\"v-60223b4a#3\",\"240\":\"v-60223b4a#3/0\",\"241\":\"v-60223b4a#3/1\",\"242\":\"v-60223b4a#4\",\"243\":\"v-60223b4a#4/0\",\"244\":\"v-60223b4a#4/1\",\"245\":\"v-60223b4a#5\",\"246\":\"v-60223b4a#5/0\",\"247\":\"v-60223b4a#5/1\",\"248\":\"v-60223b4a#5/2\",\"249\":\"v-60223b4a#5/3\",\"250\":\"v-60223b4a#6\",\"251\":\"v-60223b4a#6/4\",\"252\":\"v-60223b4a#6/5\",\"253\":\"v-60223b4a#6/6\",\"254\":\"v-60223b4a#6/7\",\"255\":\"v-60223b4a#6/8\",\"256\":\"v-60223b4a#6/9\",\"257\":\"v-60223b4a#6/10\",\"258\":\"v-60223b4a#6/11\",\"259\":\"v-60223b4a#6/12\",\"260\":\"v-60223b4a#6/13\",\"261\":\"v-60223b4a#6/14\",\"262\":\"v-60223b4a#6/15\",\"263\":\"v-60223b4a#6/16\",\"264\":\"v-60223b4a#6/17\",\"265\":\"v-60223b4a#6/18\",\"266\":\"v-60223b4a#6/19\",\"267\":\"v-60223b4a#6/20\",\"268\":\"v-60223b4a#6/21\",\"269\":\"v-60223b4a#6/22\",\"270\":\"v-60223b4a#6/23\",\"271\":\"v-60223b4a#6/24\",\"272\":\"v-60223b4a#6/25\",\"273\":\"v-60223b4a#6/26\",\"274\":\"v-60223b4a#7\",\"275\":\"v-60223b4a#7/0\",\"276\":\"v-60223b4a#7/1\",\"277\":\"v-60223b4a#7/2\",\"278\":\"v-60223b4a#7/3\",\"279\":\"v-60223b4a#7/4\",\"280\":\"v-60223b4a#7/5\",\"281\":\"v-60223b4a#7/6\",\"282\":\"v-60223b4a#8\",\"283\":\"v-60223b4a#8/7\",\"284\":\"v-60223b4a#8/8\",\"285\":\"v-60223b4a#8/9\",\"286\":\"v-60223b4a#9\",\"287\":\"v-60223b4a#9/10\",\"288\":\"v-60223b4a#9/11\",\"289\":\"v-60223b4a#9/12\",\"290\":\"v-60223b4a#9/13\",\"291\":\"v-60223b4a#10\",\"292\":\"v-60223b4a#10/14\",\"293\":\"v-60223b4a#10/15\",\"294\":\"v-60223b4a#10/16\",\"295\":\"v-60223b4a#11\",\"296\":\"v-60223b4a#12\",\"297\":\"v-60223b4a#12/17\",\"298\":\"v-60223b4a#13\",\"299\":\"v-60223b4a#13/18\",\"300\":\"v-60223b4a#14\",\"301\":\"v-60223b4a#14/19\",\"302\":\"v-60223b4a#15\",\"303\":\"v-60223b4a#15/20\",\"304\":\"v-60223b4a#15/21\",\"305\":\"v-60223b4a#15/22\",\"306\":\"v-60223b4a#15/23\",\"307\":\"v-60223b4a#15/24\",\"308\":\"v-60223b4a#16\",\"309\":\"v-60223b4a#16/0\",\"310\":\"v-60223b4a#16/1\",\"311\":\"v-60223b4a#16/2\",\"312\":\"v-60223b4a#16/3\",\"313\":\"v-60223b4a#16/4\",\"314\":\"v-60223b4a#16/5\",\"315\":\"v-60223b4a#16/6\",\"316\":\"v-60223b4a#17\",\"317\":\"v-60223b4a#17/7\",\"318\":\"v-60223b4a#17/8\",\"319\":\"v-60223b4a#18\",\"320\":\"v-60223b4a#18/0\",\"321\":\"v-60223b4a#18/1\",\"322\":\"v-60223b4a#19\",\"323\":\"v-60223b4a#19/2\",\"324\":\"v-60223b4a#19/3\",\"325\":\"v-60223b4a#20\",\"326\":\"v-60223b4a#20/4\",\"327\":\"v-60223b4a#21\",\"328\":\"v-60223b4a#21/0\",\"329\":\"v-60223b4a#21/1\",\"330\":\"v-60223b4a#22\",\"331\":\"v-60223b4a#22/0\",\"332\":\"v-60223b4a#22/1\",\"333\":\"v-60223b4a#22/2\",\"334\":\"v-60223b4a#23\",\"335\":\"v-60223b4a#23/3\",\"336\":\"v-60223b4a#24\",\"337\":\"v-0232aca2\",\"338\":\"v-0232aca2#0/0\",\"339\":\"v-0232aca2#0/1\",\"340\":\"v-0232aca2#0/2\",\"341\":\"v-0232aca2#0/3\",\"342\":\"v-0232aca2#1\",\"343\":\"v-0232aca2#1/0\",\"344\":\"v-0232aca2#1/1\",\"345\":\"v-0232aca2#2\",\"346\":\"v-0232aca2#2/2\",\"347\":\"v-0232aca2#2/3\",\"348\":\"v-0232aca2#2/4\",\"349\":\"v-0232aca2#2/5\",\"350\":\"v-0232aca2#2/6\",\"351\":\"v-0232aca2#2/7\",\"352\":\"v-b324bab0\",\"353\":\"v-b324bab0#1\",\"354\":\"v-b324bab0#1/0\",\"355\":\"v-b324bab0#1/1\",\"356\":\"v-b324bab0#1/2\",\"357\":\"v-b324bab0#1/3\",\"358\":\"v-b324bab0#1/4\",\"359\":\"v-b324bab0#1/5\",\"360\":\"v-b324bab0#1/6\",\"361\":\"v-b324bab0#1/7\",\"362\":\"v-b324bab0#2\",\"363\":\"v-b324bab0#2/0\",\"364\":\"v-b324bab0#3\",\"365\":\"v-b324bab0#3/1\",\"366\":\"v-b324bab0#3/2\",\"367\":\"v-b324bab0#4\",\"368\":\"v-b324bab0#4/3\",\"369\":\"v-b324bab0#5\",\"370\":\"v-b324bab0#5/0\",\"371\":\"v-b324bab0#5/1\",\"372\":\"v-b324bab0#5/2\",\"373\":\"v-b324bab0#5/3\",\"374\":\"v-b324bab0#5/4\",\"375\":\"v-b324bab0#5/5\",\"376\":\"v-b324bab0#5/6\",\"377\":\"v-b324bab0#5/7\",\"378\":\"v-b324bab0#6\",\"379\":\"v-b324bab0#6/0\",\"380\":\"v-b324bab0#6/1\",\"381\":\"v-b324bab0#7\",\"382\":\"v-b324bab0#7/0\",\"383\":\"v-b324bab0#7/1\",\"384\":\"v-b324bab0#7/2\",\"385\":\"v-b324bab0#7/3\",\"386\":\"v-b324bab0#8\",\"387\":\"v-b324bab0#8/4\",\"388\":\"v-b324bab0#8/5\",\"389\":\"v-b324bab0#9\",\"390\":\"v-b324bab0#9/6\",\"391\":\"v-b324bab0#9/7\",\"392\":\"v-b324bab0#9/8\",\"393\":\"v-b324bab0#9/9\",\"394\":\"v-b324bab0#9/10\",\"395\":\"v-b324bab0#9/11\",\"396\":\"v-b324bab0#9/12\",\"397\":\"v-b324bab0#9/13\",\"398\":\"v-b324bab0#9/14\",\"399\":\"v-b324bab0#9/15\",\"400\":\"v-4229923f\",\"401\":\"v-4229923f#0/0\",\"402\":\"v-4229923f#1\",\"403\":\"v-4229923f#1/0\",\"404\":\"v-4229923f#1/1\",\"405\":\"v-4229923f#1/2\",\"406\":\"v-4229923f#2\",\"407\":\"v-4229923f#2/0\",\"408\":\"v-4229923f#3\",\"409\":\"v-4229923f#3/1\",\"410\":\"v-4229923f#4\",\"411\":\"v-4229923f#4/2\",\"412\":\"v-4229923f#5\",\"413\":\"v-4229923f#5/3\",\"414\":\"v-4229923f#5/4\",\"415\":\"v-4229923f#5/5\",\"416\":\"v-4229923f#5/6\",\"417\":\"v-4229923f#5/7\",\"418\":\"v-4229923f#6\",\"419\":\"v-4229923f#6/0\",\"420\":\"v-4229923f#7\",\"421\":\"v-4229923f#7/1\",\"422\":\"v-4229923f#7/2\",\"423\":\"v-4229923f#7/3\",\"424\":\"v-4229923f#7/4\",\"425\":\"v-4229923f#7/5\",\"426\":\"v-4229923f#7/6\",\"427\":\"v-4229923f#7/7\",\"428\":\"v-4229923f#8\",\"429\":\"v-4229923f#8/0\",\"430\":\"v-4229923f#9\",\"431\":\"v-4229923f#9/1\",\"432\":\"v-4229923f#10\",\"433\":\"v-4229923f#11\",\"434\":\"v-4229923f#11/2\",\"435\":\"v-4229923f#11/3\",\"436\":\"v-4229923f#11/4\",\"437\":\"v-4229923f#11/5\",\"438\":\"v-4229923f#11/6\",\"439\":\"v-4229923f#11/7\",\"440\":\"v-4229923f#12\",\"441\":\"v-4229923f#12/0\",\"442\":\"v-4229923f#13\",\"443\":\"v-4229923f#13/1\",\"444\":\"v-4229923f#13/2\",\"445\":\"v-4229923f#14\",\"446\":\"v-4229923f#14/3\",\"447\":\"v-4229923f#14/4\",\"448\":\"v-4229923f#14/5\",\"449\":\"v-4229923f#14/6\",\"450\":\"v-4229923f#14/7\",\"451\":\"v-4229923f#14/8\",\"452\":\"v-4229923f#15\",\"453\":\"v-4229923f#15/0\",\"454\":\"v-4229923f#15/1\",\"455\":\"v-4229923f#16\",\"456\":\"v-4229923f#16/2\",\"457\":\"v-4229923f#16/3\",\"458\":\"v-4229923f#17\",\"459\":\"v-4229923f#17/4\",\"460\":\"v-4229923f#18\",\"461\":\"v-4229923f#18/5\",\"462\":\"v-4229923f#19\",\"463\":\"v-4229923f#19/6\",\"464\":\"v-4229923f#20\",\"465\":\"v-4229923f#20/7\",\"466\":\"v-4229923f#21\",\"467\":\"v-4229923f#21/8\",\"468\":\"v-4229923f#22\",\"469\":\"v-4229923f#22/9\",\"470\":\"v-4229923f#23\",\"471\":\"v-4229923f#23/10\",\"472\":\"v-4229923f#23/11\",\"473\":\"v-4229923f#24\",\"474\":\"v-4229923f#24/12\",\"475\":\"v-4229923f#25\",\"476\":\"v-4229923f#25/13\",\"477\":\"v-6c8528da\",\"478\":\"v-6c8528da#0/0\",\"479\":\"v-6c8528da#1\",\"480\":\"v-6c8528da#1/0\",\"481\":\"v-6c8528da#2\",\"482\":\"v-6c8528da#2/1\",\"483\":\"v-6c8528da#3\",\"484\":\"v-6c8528da#4\",\"485\":\"v-6c8528da#4/2\",\"486\":\"v-6c8528da#5\",\"487\":\"v-6c8528da#5/3\",\"488\":\"v-6c8528da#6\",\"489\":\"v-6c8528da#6/4\",\"490\":\"v-6c8528da#7\",\"491\":\"v-6c8528da#7/5\",\"492\":\"v-6c8528da#8\",\"493\":\"v-6c8528da#8/6\",\"494\":\"v-6c8528da#9\",\"495\":\"v-6c8528da#9/7\",\"496\":\"v-6c8528da#10\",\"497\":\"v-6c8528da#10/8\",\"498\":\"v-6c8528da#10/9\",\"499\":\"v-6c8528da#11\",\"500\":\"v-6c8528da#11/0\",\"501\":\"v-6c8528da#11/1\",\"502\":\"v-6c8528da#11/2\",\"503\":\"v-6c8528da#11/3\",\"504\":\"v-6c8528da#12\",\"505\":\"v-6c8528da#12/4\",\"506\":\"v-6c8528da#13\",\"507\":\"v-6c8528da#14\",\"508\":\"v-6c8528da#14/5\",\"509\":\"v-6c8528da#15\",\"510\":\"v-6c8528da#15/0\",\"511\":\"v-6c8528da#15/1\",\"512\":\"v-6c8528da#15/2\",\"513\":\"v-6c8528da#16\",\"514\":\"v-6c8528da#16/0\",\"515\":\"v-6c8528da#16/1\",\"516\":\"v-3eed5af0\",\"517\":\"v-3eed5af0#1\",\"518\":\"v-3eed5af0#1/0\",\"519\":\"v-3eed5af0#2\",\"520\":\"v-3eed5af0#2/0\",\"521\":\"v-3eed5af0#2/1\",\"522\":\"v-3eed5af0#2/2\",\"523\":\"v-3eed5af0#2/3\",\"524\":\"v-3eed5af0#2/4\",\"525\":\"v-3eed5af0#2/5\",\"526\":\"v-3eed5af0#2/6\",\"527\":\"v-3eed5af0#2/7\",\"528\":\"v-3eed5af0#2/8\",\"529\":\"v-3eed5af0#2/9\",\"530\":\"v-3eed5af0#3\",\"531\":\"v-3eed5af0#3/10\",\"532\":\"v-3eed5af0#4\",\"533\":\"v-3eed5af0#5\",\"534\":\"v-3eed5af0#5/0\",\"535\":\"v-3eed5af0#6\",\"536\":\"v-3eed5af0#6/1\",\"537\":\"v-3eed5af0#6/2\",\"538\":\"v-3eed5af0#6/3\",\"539\":\"v-3eed5af0#6/4\",\"540\":\"v-3eed5af0#6/5\",\"541\":\"v-3eed5af0#7\",\"542\":\"v-3eed5af0#7/6\",\"543\":\"v-3eed5af0#8\",\"544\":\"v-3eed5af0#8/7\",\"545\":\"v-3eed5af0#8/8\",\"546\":\"v-3eed5af0#8/9\",\"547\":\"v-3eed5af0#8/10\",\"548\":\"v-3eed5af0#8/11\",\"549\":\"v-3eed5af0#9\",\"550\":\"v-3eed5af0#9/12\",\"551\":\"v-3eed5af0#10\",\"552\":\"v-3eed5af0#10/0\",\"553\":\"v-3eed5af0#11\",\"554\":\"v-3eed5af0#11/1\",\"555\":\"v-3eed5af0#12\",\"556\":\"v-3eed5af0#12/2\",\"557\":\"v-3eed5af0#13\",\"558\":\"v-3eed5af0#13/3\",\"559\":\"v-3eed5af0#14\",\"560\":\"v-3eed5af0#14/4\",\"561\":\"v-3eed5af0#15\",\"562\":\"v-3eed5af0#15/0\",\"563\":\"v-3eed5af0#15/1\",\"564\":\"v-3eed5af0#15/2\",\"565\":\"v-3eed5af0#15/3\",\"566\":\"v-3eed5af0#15/4\",\"567\":\"v-3eed5af0#15/5\",\"568\":\"v-3eed5af0#15/6\",\"569\":\"v-3eed5af0#16\",\"570\":\"v-3eed5af0#17\",\"571\":\"v-3eed5af0#17/0\",\"572\":\"v-3eed5af0#17/1\",\"573\":\"v-3eed5af0#18\",\"574\":\"v-3eed5af0#18/2\",\"575\":\"v-3eed5af0#19\",\"576\":\"v-3eed5af0#19/3\",\"577\":\"v-3eed5af0#20\",\"578\":\"v-3eed5af0#20/0\",\"579\":\"v-3eed5af0#20/1\",\"580\":\"v-3eed5af0#21\",\"581\":\"v-3eed5af0#21/2\",\"582\":\"v-3eed5af0#22\",\"583\":\"v-3eed5af0#22/3\",\"584\":\"v-3eed5af0#22/4\",\"585\":\"v-3eed5af0#22/5\",\"586\":\"v-3eed5af0#23\",\"587\":\"v-3eed5af0#23/6\",\"588\":\"v-3eed5af0#24\",\"589\":\"v-3eed5af0#25\",\"590\":\"v-3eed5af0#25/7\",\"591\":\"v-3eed5af0#26\",\"592\":\"v-3eed5af0#26/0\",\"593\":\"v-3eed5af0#27\",\"594\":\"v-3eed5af0#27/1\",\"595\":\"v-3eed5af0#28\",\"596\":\"v-3eed5af0#28/2\",\"597\":\"v-3eed5af0#29\",\"598\":\"v-3eed5af0#29/3\",\"599\":\"v-3eed5af0#30\",\"600\":\"v-3eed5af0#30/4\",\"601\":\"v-3eed5af0#31\",\"602\":\"v-3eed5af0#31/5\",\"603\":\"v-3eed5af0#32\",\"604\":\"v-3eed5af0#32/0\",\"605\":\"v-3eed5af0#33\",\"606\":\"v-3eed5af0#33/1\",\"607\":\"v-3eed5af0#34\",\"608\":\"v-3eed5af0#35\",\"609\":\"v-3fc7045a\",\"610\":\"v-5e797cda\",\"611\":\"v-d5b928c8\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1],\"1\":[null,1],\"2\":[null,6],\"3\":[null,14],\"4\":[null,3],\"5\":[1],\"6\":[1],\"7\":[1],\"8\":[null,1],\"9\":[1],\"10\":[null,4],\"11\":[null,3],\"12\":[null,1],\"13\":[null,1],\"14\":[null,1],\"15\":[null,1],\"16\":[null,1],\"17\":[null,1],\"18\":[null,3],\"19\":[null,1],\"20\":[null,1],\"21\":[null,1],\"22\":[1],\"23\":[null,2],\"24\":[null,5],\"25\":[null,5],\"26\":[1],\"27\":[null,3],\"28\":[1],\"29\":[null,6],\"30\":[null,4],\"31\":[null,6],\"32\":[null,3],\"33\":[null,5],\"34\":[1],\"35\":[null,3],\"36\":[null,1],\"37\":[null,6],\"38\":[null,7],\"39\":[null,2],\"40\":[null,4],\"41\":[1],\"42\":[null,2],\"43\":[null,1],\"44\":[null,1],\"45\":[null,3],\"46\":[null,2],\"47\":[null,1],\"48\":[null,1],\"49\":[null,1],\"50\":[null,1],\"51\":[null,1],\"52\":[null,4],\"53\":[1],\"54\":[3],\"55\":[null,12],\"56\":[2],\"57\":[null,25],\"58\":[2],\"59\":[null,17],\"60\":[2],\"61\":[null,16],\"62\":[2],\"63\":[null,32],\"64\":[2],\"65\":[null,13],\"66\":[2],\"67\":[null,39],\"68\":[1],\"69\":[1],\"70\":[null,1],\"71\":[1],\"72\":[null,20],\"73\":[1],\"74\":[null,12],\"75\":[1],\"76\":[1],\"77\":[null,7],\"78\":[1],\"79\":[null,2],\"80\":[null,16],\"81\":[1],\"82\":[null,3],\"83\":[null,35],\"84\":[1],\"85\":[null,1],\"86\":[null,1],\"87\":[null,1],\"88\":[null,1],\"89\":[null,3],\"90\":[null,1],\"91\":[null,1],\"92\":[null,1],\"93\":[null,1],\"94\":[null,1],\"95\":[null,1],\"96\":[null,1],\"97\":[null,1],\"98\":[null,1],\"99\":[null,1],\"100\":[1],\"101\":[1],\"102\":[2],\"103\":[2],\"104\":[null,1],\"105\":[null,6],\"106\":[null,15],\"107\":[1],\"108\":[null,45],\"109\":[1],\"110\":[null,75],\"111\":[1],\"112\":[null,63],\"113\":[1],\"114\":[1],\"115\":[null,10],\"116\":[null,16],\"117\":[1],\"118\":[null,15],\"119\":[null,22],\"120\":[null,60],\"121\":[null,24],\"122\":[4],\"123\":[null,14],\"124\":[3],\"125\":[null,1],\"126\":[null,20],\"127\":[null,3],\"128\":[2],\"129\":[null,5],\"130\":[null,5],\"131\":[null,4],\"132\":[2],\"133\":[null,6],\"134\":[null,5],\"135\":[2],\"136\":[null,4],\"137\":[null,4],\"138\":[null,4],\"139\":[2],\"140\":[null,5],\"141\":[null,5],\"142\":[1],\"143\":[null,1],\"144\":[null,2],\"145\":[null,27],\"146\":[null,2],\"147\":[null,13],\"148\":[null,1],\"149\":[null,70],\"150\":[null,1],\"151\":[null,42],\"152\":[1],\"153\":[null,1],\"154\":[null,4],\"155\":[null,1],\"156\":[null,6],\"157\":[null,1],\"158\":[null,2],\"159\":[null,16],\"160\":[7],\"161\":[null,14],\"162\":[null,2],\"163\":[null,38],\"164\":[1],\"165\":[null,1],\"166\":[null,13],\"167\":[null,3],\"168\":[null,11],\"169\":[null,1],\"170\":[null,40],\"171\":[null,1],\"172\":[null,34],\"173\":[null,58],\"174\":[1],\"175\":[3],\"176\":[null,3],\"177\":[null,7],\"178\":[null,5],\"179\":[null,4],\"180\":[null,3],\"181\":[1],\"182\":[null,85],\"183\":[1],\"184\":[null,1],\"185\":[null,1],\"186\":[null,15],\"187\":[null,1],\"188\":[null,22],\"189\":[null,1],\"190\":[null,32],\"191\":[1],\"192\":[1],\"193\":[null,14],\"194\":[null,35],\"195\":[1],\"196\":[1],\"197\":[1],\"198\":[null,2],\"199\":[null,9],\"200\":[null,6],\"201\":[null,5],\"202\":[3],\"203\":[null,31],\"204\":[3],\"205\":[null,76],\"206\":[1],\"207\":[null,15],\"208\":[1],\"209\":[1],\"210\":[null,9],\"211\":[null,1],\"212\":[null,11],\"213\":[null,3],\"214\":[null,8],\"215\":[null,1],\"216\":[null,12],\"217\":[1],\"218\":[null,9],\"219\":[null,7],\"220\":[null,3],\"221\":[null,17],\"222\":[1],\"223\":[null,150],\"224\":[2],\"225\":[null,20],\"226\":[1],\"227\":[null,2],\"228\":[null,2],\"229\":[1],\"230\":[null,1],\"231\":[null,9],\"232\":[null,1],\"233\":[null,9],\"234\":[null,1],\"235\":[null,7],\"236\":[1],\"237\":[null,8],\"238\":[null,2],\"239\":[1],\"240\":[null,6],\"241\":[null,4],\"242\":[1],\"243\":[null,16],\"244\":[null,16],\"245\":[1],\"246\":[null,1],\"247\":[null,8],\"248\":[null,1],\"249\":[null,6],\"250\":[1],\"251\":[null,1],\"252\":[null,1],\"253\":[null,1],\"254\":[null,1],\"255\":[null,1],\"256\":[null,1],\"257\":[null,1],\"258\":[null,2],\"259\":[null,1],\"260\":[null,3],\"261\":[null,2],\"262\":[null,2],\"263\":[null,2],\"264\":[null,2],\"265\":[null,4],\"266\":[null,2],\"267\":[null,1],\"268\":[null,3],\"269\":[null,1],\"270\":[null,2],\"271\":[null,1],\"272\":[null,3],\"273\":[null,1],\"274\":[1],\"275\":[null,2],\"276\":[null,1],\"277\":[null,5],\"278\":[null,1],\"279\":[null,6],\"280\":[null,3],\"281\":[null,7],\"282\":[1],\"283\":[null,1],\"284\":[null,1],\"285\":[null,13],\"286\":[1],\"287\":[null,4],\"288\":[null,2],\"289\":[null,3],\"290\":[null,10],\"291\":[1],\"292\":[null,7],\"293\":[null,6],\"294\":[null,7],\"295\":[1],\"296\":[1],\"297\":[null,20],\"298\":[1],\"299\":[null,22],\"300\":[1],\"301\":[null,21],\"302\":[1],\"303\":[null,2],\"304\":[null,3],\"305\":[null,2],\"306\":[null,3],\"307\":[null,3],\"308\":[1],\"309\":[null,1],\"310\":[null,16],\"311\":[null,3],\"312\":[null,5],\"313\":[null,5],\"314\":[null,3],\"315\":[null,5],\"316\":[1],\"317\":[null,9],\"318\":[null,1],\"319\":[1],\"320\":[null,2],\"321\":[null,14],\"322\":[1],\"323\":[null,2],\"324\":[null,14],\"325\":[1],\"326\":[null,2],\"327\":[1],\"328\":[null,2],\"329\":[null,11],\"330\":[1],\"331\":[null,6],\"332\":[null,3],\"333\":[null,15],\"334\":[1],\"335\":[null,6],\"336\":[1],\"337\":[1],\"338\":[null,1],\"339\":[null,1],\"340\":[null,20],\"341\":[null,2],\"342\":[2],\"343\":[null,8],\"344\":[null,18],\"345\":[1],\"346\":[null,1],\"347\":[null,26],\"348\":[null,1],\"349\":[null,32],\"350\":[null,1],\"351\":[null,25],\"352\":[2],\"353\":[2],\"354\":[null,11],\"355\":[null,7],\"356\":[null,3],\"357\":[null,2],\"358\":[null,2],\"359\":[null,2],\"360\":[null,3],\"361\":[null,2],\"362\":[1],\"363\":[null,53],\"364\":[1],\"365\":[null,1],\"366\":[null,79],\"367\":[1],\"368\":[null,1],\"369\":[1],\"370\":[null,3],\"371\":[null,3],\"372\":[null,6],\"373\":[null,7],\"374\":[null,3],\"375\":[null,5],\"376\":[null,4],\"377\":[null,7],\"378\":[1],\"379\":[null,1],\"380\":[null,1],\"381\":[1],\"382\":[null,1],\"383\":[null,16],\"384\":[null,1],\"385\":[null,30],\"386\":[1],\"387\":[null,19],\"388\":[null,21],\"389\":[1],\"390\":[null,5],\"391\":[null,2],\"392\":[null,8],\"393\":[null,7],\"394\":[null,6],\"395\":[null,8],\"396\":[null,5],\"397\":[null,5],\"398\":[null,7],\"399\":[null,36],\"400\":[1],\"401\":[null,10],\"402\":[1],\"403\":[null,1],\"404\":[null,1],\"405\":[null,19],\"406\":[1],\"407\":[null,65],\"408\":[1],\"409\":[null,78],\"410\":[1],\"411\":[null,50],\"412\":[1],\"413\":[null,1],\"414\":[null,4],\"415\":[null,2],\"416\":[null,1],\"417\":[null,2],\"418\":[1],\"419\":[null,55],\"420\":[1],\"421\":[null,2],\"422\":[null,1],\"423\":[null,1],\"424\":[null,1],\"425\":[null,3],\"426\":[null,1],\"427\":[null,1],\"428\":[1],\"429\":[null,33],\"430\":[1],\"431\":[null,49],\"432\":[1],\"433\":[1],\"434\":[null,1],\"435\":[null,5],\"436\":[null,2],\"437\":[null,5],\"438\":[null,3],\"439\":[null,4],\"440\":[1],\"441\":[null,30],\"442\":[1],\"443\":[null,53],\"444\":[null,52],\"445\":[1],\"446\":[null,1],\"447\":[null,12],\"448\":[null,2],\"449\":[null,5],\"450\":[null,2],\"451\":[null,3],\"452\":[1],\"453\":[null,32],\"454\":[null,61],\"455\":[3],\"456\":[null,13],\"457\":[null,13],\"458\":[1],\"459\":[null,34],\"460\":[1],\"461\":[null,24],\"462\":[1],\"463\":[null,22],\"464\":[1],\"465\":[null,26],\"466\":[1],\"467\":[null,29],\"468\":[1],\"469\":[null,28],\"470\":[1],\"471\":[null,2],\"472\":[null,44],\"473\":[1],\"474\":[null,30],\"475\":[1],\"476\":[null,19],\"477\":[1],\"478\":[null,1],\"479\":[1],\"480\":[null,9],\"481\":[1],\"482\":[null,12],\"483\":[1],\"484\":[2],\"485\":[null,23],\"486\":[1],\"487\":[null,29],\"488\":[1],\"489\":[null,25],\"490\":[1],\"491\":[null,28],\"492\":[1],\"493\":[null,33],\"494\":[2],\"495\":[null,35],\"496\":[1],\"497\":[null,6],\"498\":[null,10],\"499\":[1],\"500\":[null,2],\"501\":[null,11],\"502\":[null,2],\"503\":[null,52],\"504\":[1],\"505\":[null,20],\"506\":[1],\"507\":[1],\"508\":[null,12],\"509\":[1],\"510\":[null,12],\"511\":[null,10],\"512\":[null,5],\"513\":[1],\"514\":[null,13],\"515\":[null,33],\"516\":[2],\"517\":[1],\"518\":[null,5],\"519\":[1],\"520\":[null,4],\"521\":[null,3],\"522\":[null,3],\"523\":[null,1],\"524\":[null,2],\"525\":[null,17],\"526\":[null,2],\"527\":[null,17],\"528\":[null,2],\"529\":[null,26],\"530\":[1],\"531\":[null,23],\"532\":[1],\"533\":[1],\"534\":[null,25],\"535\":[1],\"536\":[null,27],\"537\":[null,1],\"538\":[null,11],\"539\":[null,2],\"540\":[null,10],\"541\":[1],\"542\":[null,32],\"543\":[1],\"544\":[null,4],\"545\":[null,2],\"546\":[null,4],\"547\":[null,2],\"548\":[null,40],\"549\":[1],\"550\":[null,2],\"551\":[1],\"552\":[null,25],\"553\":[1],\"554\":[null,8],\"555\":[1],\"556\":[null,34],\"557\":[1],\"558\":[null,38],\"559\":[1],\"560\":[null,5],\"561\":[1],\"562\":[null,2],\"563\":[null,26],\"564\":[null,1],\"565\":[null,19],\"566\":[null,1],\"567\":[null,34],\"568\":[null,2],\"569\":[1],\"570\":[1],\"571\":[null,3],\"572\":[null,13],\"573\":[1],\"574\":[null,15],\"575\":[1],\"576\":[null,1],\"577\":[1],\"578\":[null,5],\"579\":[null,32],\"580\":[1],\"581\":[null,15],\"582\":[1],\"583\":[null,5],\"584\":[null,5],\"585\":[null,21],\"586\":[1],\"587\":[null,25],\"588\":[1],\"589\":[1],\"590\":[null,5],\"591\":[2],\"592\":[null,11],\"593\":[4],\"594\":[null,32],\"595\":[2],\"596\":[null,26],\"597\":[2],\"598\":[null,32],\"599\":[2],\"600\":[null,20],\"601\":[1],\"602\":[null,6],\"603\":[2],\"604\":[null,36],\"605\":[2],\"606\":[null,26],\"607\":[1],\"608\":[1],\"609\":[1],\"610\":[1],\"611\":[1]},\"averageFieldLength\":[1.2056467982864882,10.563876756857193],\"storedFields\":{\"0\":{\"h\":\"Home\"},\"1\":{\"t\":\"Maven中央仓库\"},\"2\":{\"t\":\"Vuepress + GitHub Actions 实现博客自动部署！\"},\"3\":{\"t\":\"Gitworkflows 部署 vuepress 错误“The process ‘/usr/bin/git‘ failed with exit code 1\"},\"4\":{\"t\":\"Github actions 部署vue项目\"},\"5\":{\"h\":\"幻灯片页\"},\"6\":{\"h\":\"学习与记录\"},\"7\":{\"h\":\"目录\",\"a\":\"目录\"},\"8\":{\"t\":\"Linux\"},\"9\":{\"h\":\"布局与功能禁用\"},\"10\":{\"t\":\"你可以通过设置页面的 Frontmatter，在页面禁用功能与布局。\"},\"11\":{\"t\":\"本页面就是一个示例，禁用了如下功能:\"},\"12\":{\"t\":\"导航栏\"},\"13\":{\"t\":\"侧边栏\"},\"14\":{\"t\":\"路径导航\"},\"15\":{\"t\":\"页面信息\"},\"16\":{\"t\":\"贡献者\"},\"17\":{\"t\":\"更新时间\"},\"18\":{\"t\":\"上一篇/下一篇 链接\"},\"19\":{\"t\":\"评论\"},\"20\":{\"t\":\"页脚\"},\"21\":{\"t\":\"返回顶部按钮\"},\"22\":{\"h\":\"密码加密的文章\"},\"23\":{\"t\":\"实际的文章内容。\"},\"24\":{\"t\":\"段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字。\"},\"25\":{\"t\":\"段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字。\"},\"26\":{\"h\":\"页面配置\"},\"27\":{\"t\":\"more 注释之前的内容被视为文章摘要。\"},\"28\":{\"h\":\"页面信息\",\"a\":\"页面信息\"},\"29\":{\"t\":\"你可以在 Markdown 的 Frontmatter 中设置页面信息。\"},\"30\":{\"t\":\"作者设置为 Ms.Hope。\"},\"31\":{\"t\":\"写作日期为 2020 年 1 月 1 日\"},\"32\":{\"t\":\"分类为 “使用指南”\"},\"33\":{\"t\":\"标签为 “页面配置” 和 “使用指南”\"},\"34\":{\"h\":\"页面内容\",\"a\":\"页面内容\"},\"35\":{\"t\":\"你可以自由在这里书写你的 Markdown。\"},\"36\":{\"t\":\"提示\"},\"37\":{\"t\":\"你可以将图片和 Markdown 文件放置在一起，但是你需要使用相对链接./ 进行引用。\"},\"38\":{\"t\":\"对于 .vuepress/public 文件夹的图片，请使用绝对链接 / 进行引用。\"},\"39\":{\"t\":\"主题包含了一个自定义徽章可以使用:\"},\"40\":{\"t\":\"文字结尾应该有深蓝色的 徽章文字 徽章。 \"},\"41\":{\"h\":\"页面结构\",\"a\":\"页面结构\"},\"42\":{\"t\":\"此页面应当包含:\"},\"43\":{\"t\":\"路径导航\"},\"44\":{\"t\":\"标题和页面信息\"},\"45\":{\"t\":\"TOC (文章标题列表)\"},\"46\":{\"t\":\"贡献者、更新时间等页面元信息\"},\"47\":{\"t\":\"评论\"},\"48\":{\"t\":\"导航栏\"},\"49\":{\"t\":\"侧边栏\"},\"50\":{\"t\":\"页脚\"},\"51\":{\"t\":\"返回顶部按钮\"},\"52\":{\"t\":\"你可以通过主题选项和页面 Frontmatter 自定义它们。\"},\"53\":{\"h\":\"版本控制\"},\"54\":{\"h\":\"一、git安装后-指定名称和邮箱\",\"a\":\"一、git安装后-指定名称和邮箱\"},\"55\":{\"t\":\"$ git config --global user.name \\\"Your Name\\\" $ git config --global user.email \\\"email@example.com\\\" \"},\"56\":{\"h\":\"二.一分支管理\",\"a\":\"二-一分支管理\"},\"57\":{\"t\":\"git branch #查看分支 git chenkout xxx #切换为分支xxx git checkout -b xxx #新建分支xxx 并且切换过去 git branch -d xxx # 删除本地分支xxx git branch -D xxx #忽略修改 仍然删除分支xxx git fetch origin xxx #拉取远程分支xxx git push origin yyy # 把新建的分支yyy上传 git checkout -b first origin/first ##新建本地分支 和远程分支连接起来 \"},\"58\":{\"h\":\"二、创建版本库\",\"a\":\"二、创建版本库\"},\"59\":{\"t\":\"$ mkdir learngit //创建 $ cd learngit //使用 $ pwd //查看当前目录 $ git init //初始化，生成.git文件(若该文件隐藏，则使用ls -ah) \"},\"60\":{\"h\":\"三、把文件添加add和提交commit到版本库\",\"a\":\"三、把文件添加add和提交commit到版本库\"},\"61\":{\"t\":\"$ git add test.txt //添加 $ git commit -m \\\"wrote a test file\\\" //提交 $ git commit -m \\\"add 3 files.\\\" //一次性提交多个文件 \"},\"62\":{\"h\":\"四、版本控制\",\"a\":\"四、版本控制\"},\"63\":{\"t\":\"$ git log //查看提交历史记录，从最近到最远，可以看到3次 $ git log --pretty=oneline //加参，简洁查看 $ git reflog //查看每一次修改历史 $ cat test.txt //查看文件内容 $ git status //查看工作区中文件当前状态 $ git reset --hard HEAD^（HEAD~100）（commit id） //回退版本 $ git checkout -- test.txt //丢弃工作区的修改，即撤销修改 $ git reset HEAD test.txt //丢弃暂存区的修改（若已提交，则回退） \"},\"64\":{\"h\":\"五、删除文件\",\"a\":\"五、删除文件\"},\"65\":{\"t\":\"$ rm test.txt //直接删除 $ git rm test.txt $ git commit -m \\\"remove test.txt\\\" //删错了，恢复 $ git checkout -- test.txt \"},\"66\":{\"h\":\"六、远程仓库\",\"a\":\"六、远程仓库\"},\"67\":{\"t\":\"$ ssh-keygen -t rsa -C \\\"youremail@example.com\\\" //创建SSH Key $ git remote add origin git@github.com:Daisy/AKgit.git //关联 $ git push -u origin master //将本地内容推送到远程仓库（第一次） $ git push origin master //将本地内容推送到远程仓库（之后） $ git remote -v //查看远程仓库信息 $ git remote rm origin //删除远程仓库（解绑） $ git clone git@github.com: Daisy/AKgit.git //克隆远程仓库 //克隆之后使用和查看 $ cd gitskills $ ls $ git remote //查看远程库的信息 $ git remote -v //查看远程库的详细信息 \"},\"68\":{\"h\":\"Maven\"},\"69\":{\"h\":\"安装\",\"a\":\"安装\"},\"70\":{\"t\":\"下载地址中央仓库配置本地仓库\"},\"71\":{\"h\":\"阿里镜像\",\"a\":\"阿里镜像\"},\"72\":{\"t\":\"<mirror> <id>alimaven</id> <mirrorOf>central</mirrorOf> <name>aliyun maven</name> <url>http://maven.aliyun.com/nexus/content/repositories/central/</url> </mirror> \"},\"73\":{\"h\":\"简单命令\",\"a\":\"简单命令\"},\"74\":{\"t\":\"mvn compile #编译 mvn clean #清理 mvn test #测试 mvn package #打包 mvn install #安装到本地仓库 \"},\"75\":{\"h\":\"依赖管理\",\"a\":\"依赖管理\"},\"76\":{\"h\":\"依赖传递\",\"a\":\"依赖传递\"},\"77\":{\"t\":\"例如A依赖了B，B依赖了C和D，那么你就可以在A中，像主动依赖了C和D一样使用它们。并且传递的依赖是没有数量和层级的限制的，非常方便。\"},\"78\":{\"h\":\"可选依赖\",\"a\":\"可选依赖\"},\"79\":{\"t\":\"当别的项目引用这个jar包，optional为true时不让别人知道自己所用依赖\"},\"80\":{\"t\":\" <dependency> <groupId>joda-time</groupId> <artifactId>joda-time</artifactId> <version>2.9.9</version> // 可选依赖 <optional>true</optional> </dependency> \"},\"81\":{\"h\":\"排除依赖\",\"a\":\"排除依赖\"},\"82\":{\"t\":\"加入某个jar包依赖后，不想使用其中的某个依赖，使用坐标主动排除掉\"},\"83\":{\"t\":\"<dependency> <groupId>org.apache.struts</groupId> <artifactId>struts2-core</artifactId> <version>${struts.version}</version> <exclusions> <exclusion> <!-- we prefer our explicit version, though it should be the same --> <groupId>asm</groupId> <artifactId>asm</artifactId> </exclusion> </exclusions> </dependency> <dependency> <groupId>asm</groupId> <artifactId>asm</artifactId> <version>3.3.1</version> </dependency> \"},\"84\":{\"h\":\"依赖范围\",\"a\":\"依赖范围\"},\"85\":{\"t\":\"scope\"},\"86\":{\"t\":\"主代码\"},\"87\":{\"t\":\"测试代码\"},\"88\":{\"t\":\"打包\"},\"89\":{\"t\":\"compile(默认)\"},\"90\":{\"t\":\"Y\"},\"91\":{\"t\":\"Y\"},\"92\":{\"t\":\"Y\"},\"93\":{\"t\":\"test\"},\"94\":{\"t\":\"Y\"},\"95\":{\"t\":\"provided\"},\"96\":{\"t\":\"Y\"},\"97\":{\"t\":\"Y\"},\"98\":{\"t\":\"runtime\"},\"99\":{\"t\":\"Y\"},\"100\":{\"h\":\"\",\"a\":\"\"},\"101\":{\"h\":\"阿里云对象存储\"},\"102\":{\"h\":\"阿里官方文档 Java上传文件概述和文件下载\",\"a\":\"阿里官方文档java上传文件概述和文件下载\"},\"103\":{\"h\":\"使用RAM访问 更安全\",\"a\":\"使用ram访问-更安全\"},\"104\":{\"t\":\"警告\"},\"105\":{\"t\":\"主账号AccessKey泄露会威胁您所有资源的安全。建议使用子账号（RAM用户）AccessKey进行操作，可以有效降低AccessKey泄露的风险。\"},\"106\":{\"t\":\"① 使用RAM用户访问密钥发起请求 ② \\\"Action\\\": [ \\\"oss:PutObject\\\", \\\"oss:ListObjects\\\", \\\"oss:DeleteObject\\\" ],放行权限 上传/目录/删除 权限 ③ 跨域放行\"},\"107\":{\"h\":\"上传图片\",\"a\":\"上传图片\"},\"108\":{\"t\":\"public List uploadObject(MultipartFile file) throws IOException { // Endpoint以华东1（杭州）为例，其它Region请按实际情况填写。 String Endpoint = \\\"https://oss-cn-hangzhou.aliyuncs.com\\\"; // 阿里云账号AccessKey拥有所有API的访问权限，风险很高。强烈建议您创建并使用RAM用户进行API访问或日常运维，请登录RAM控制台创建RAM用户。 String AccessKeyId = \\\"yourAccessKeyId\\\"; String AccessKeySecret = \\\"yourAccessKeySecret\\\"; // 填写Bucket名称，例如examplebucket。 String BucketName = \\\"examplebucket\\\"; String originalFilename = file.getOriginalFilename(); OSS os = new OSSClientBuilder().build( Endpoint , AccessKeyId , AccessKeySecret ); os.putObject( BucketName , originalFilename, file.getInputStream() ); os.shutdown(); return getList(); } \"},\"109\":{\"h\":\"目录列表\",\"a\":\"目录列表\"},\"110\":{\"t\":\"public List getList(){ OSS ossClient = new OSSClientBuilder().build( Endpoint ,AccessKeyId ,AccessKeySecert); try { // 列举文件。如果不设置keyPrefix，则列举存储空间下的所有文件。如果设置keyPrefix，则列举包含指定前缀的文件。 ObjectListing objectListing = ossClient.listObjects(Bucket); List<OSSObjectSummary> sums = objectListing.getObjectSummaries(); ArrayList<String> list = new ArrayList<>(); for (OSSObjectSummary s : sums) { // System.out.println(\\\"\\\\t\\\" + s.getKey()); list.add(s.getKey());//返回所有的链接 } return list; } catch (OSSException oe) { System.out.println(\\\"Caught an OSSException, which means your request made it to OSS, \\\" + \\\"but was rejected with an error response for some reason.\\\"); System.out.println(\\\"Error Message:\\\" + oe.getErrorMessage()); System.out.println(\\\"Error Code:\\\" + oe.getErrorCode()); System.out.println(\\\"Request ID:\\\" + oe.getRequestId()); System.out.println(\\\"Host ID:\\\" + oe.getHostId()); } finally { if (ossClient != null) { ossClient.shutdown(); } } return null; } \"},\"111\":{\"h\":\"删除图片\",\"a\":\"删除图片\"},\"112\":{\"t\":\"public List deleteObject(String s){ //s为图片的名字 OSS ossClient = new OSSClientBuilder().build( Endpoint() ,AccessKeyId() ,AccessKeySecert()); try { // 删除文件或目录。如果要删除目录，目录必须为空。 ossClient.deleteObject(Bucket(), s); return this.getList(); } catch (OSSException oe) { System.out.println(\\\"Caught an OSSException, which means your request made it to OSS, \\\" + \\\"but was rejected with an error response for some reason.\\\"); System.out.println(\\\"Error Message:\\\" + oe.getErrorMessage()); System.out.println(\\\"Error Code:\\\" + oe.getErrorCode()); System.out.println(\\\"Request ID:\\\" + oe.getRequestId()); System.out.println(\\\"Host ID:\\\" + oe.getHostId()); } finally { if (ossClient != null) { ossClient.shutdown(); } } return null; } \"},\"113\":{\"h\":\"书本\"},\"114\":{\"h\":\"静态资源访问\",\"a\":\"静态资源访问\"},\"115\":{\"t\":\"spring: mvc: static-path-pattern: /static/** web: resources: static-locations: classpath:/static/ \"},\"116\":{\"t\":\"@Configuration public class staticHandles implements WebMvcConfigurer { @Override public void addResourceHandlers(ResourceHandlerRegistry registry) { registry.addResourceHandler(\\\"/static/**\\\") .addResourceLocations(\\\"classpath:/static/\\\"); } } \"},\"117\":{\"h\":\"文件上传\",\"a\":\"文件上传\"},\"118\":{\"t\":\" <dependency> <groupId>javax.servlet</groupId> <artifactId>servlet-api</artifactId> <version>2.5</version> <scope>provided</scope> </dependency> \"},\"119\":{\"t\":\" <form action=\\\"/upload\\\" method=\\\"post\\\" enctype=\\\"multipart/form-data\\\"> <input type=\\\"file\\\" name=\\\"uploadFile\\\" value=\\\"选择文件\\\"> <input type=\\\"submit\\\" value=\\\"上传\\\"> </form> \"},\"120\":{\"t\":\"@RestController public class FileUploadController { SimpleDateFormat sdf = new SimpleDateFormat(\\\"yyyy/MM/dd\\\"); @PostMapping(\\\"/upload\\\") public String upload(MultipartFile uploadFile, HttpServletRequest req){ // 运行目录下 没有文件夹 就建一个 String realPath = req.getSession().getServletContext().getRealPath(\\\"/uploadFile/\\\"); System.out.println(realPath); String format = sdf.format(new Date()); File folder = new File(realPath + format); if(!folder.isDirectory()){ folder.mkdirs(); } // 重命名 String oldName = uploadFile.getOriginalFilename(); String newName = UUID.randomUUID().toString() + oldName.substring(oldName.lastIndexOf(\\\".\\\")); try{ // 保存 uploadFile.transferTo(new File(folder,newName)); // 返回路径 String filePath = req.getScheme() + \\\"://\\\" + req.getServerName() + \\\":\\\" + req.getServerPort() + \\\"/uploadFile/\\\" + format + newName; return filePath; } catch (IOException e) { throw new RuntimeException(e); } } } \"},\"121\":{\"t\":\"spring: servlet: multipart: # 是否开启上传 enabled: true file-size-threshold: 0 # 保存临时位置 location: E:\\\\\\\\temp # 最大 max-file-size: 10MB # 总大小 max-request-size: 10MB # 是否延迟解析 resolve-lazily: false \"},\"122\":{\"h\":\"热加载（Hot Swap）\",\"a\":\"热加载-hot-swap\"},\"123\":{\"t\":\" <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-devtools</artifactId> <optional>true</optional> </dependency> \"},\"124\":{\"h\":\"WebSocket 和 SockJS\",\"a\":\"websocket-和-sockjs\"},\"125\":{\"t\":\"应用场景\"},\"126\":{\"t\":\"WebSocket 和 SockJS 两者都应用广泛，具体应该根据实际情况来选择。WebSocket 是 HTML5 的一种新协议，它实现了浏览器与服务器全双工通信，实现了客户端与服务器端的实时通信。而 SockJS 是 WebSocket 的一个 polyfill 实现，即当浏览器不支持 WebSocket 时，SockJS 可以自动降级为支持长轮询等传输方式的 WebSocket 模拟实现，从而使得浏览器与服务器之间的通信始终保持稳定和高效。\"},\"127\":{\"t\":\"WebSocket和SockJS都是在Web应用程序中使用实时通信的协议，它们都有自己的优势和缺点。\"},\"128\":{\"h\":\"WebSocket的优势：\",\"a\":\"websocket的优势\"},\"129\":{\"t\":\"简单易用：WebSocket是一个非常简单的协议，只需建立连接，就可以进行双向通信。\"},\"130\":{\"t\":\"高效性：WebSocket的头部信息非常小，数据格式紧凑，因此数据传输的效率非常高。\"},\"131\":{\"t\":\"双向通信：WebSocket提供了双向通信的功能，可以同时在客户端和服务器端发送和接收消息。\"},\"132\":{\"h\":\"WebSocket的缺点：\",\"a\":\"websocket的缺点\"},\"133\":{\"t\":\"支持性：WebSocket是HTML5标准的一部分，因此只有在支持HTML5的浏览器中才能使用。对于老的浏览器，需要使用polyfill或其他技术。\"},\"134\":{\"t\":\"长连接：WebSocket在连接建立后会一直保持连接，如果服务器端不能正常关闭连接，可能会导致资源浪费和性能问题。\"},\"135\":{\"h\":\"SockJS的优势：\",\"a\":\"sockjs的优势\"},\"136\":{\"t\":\"跨浏览器：SockJS可以在所有支持JavaScript的浏览器中运行，甚至包括IE6。\"},\"137\":{\"t\":\"支持性：SockJS可以通过polyfill模拟WebSocket的功能，因此在不支持WebSocket的浏览器中也可以使用。\"},\"138\":{\"t\":\"可靠性：SockJS在不支持WebSocket的浏览器中使用的是长轮询技术，可以保证数据的可靠性。\"},\"139\":{\"h\":\"SockJS的缺点：\",\"a\":\"sockjs的缺点\"},\"140\":{\"t\":\"头部信息较大：因为SockJS在不支持WebSocket的浏览器中使用的是长轮询技术，因此需要发送大量的头部信息，导致数据传输效率较低。\"},\"141\":{\"t\":\"连接不稳定：由于SockJS在不支持WebSocket的浏览器中使用的是长轮询技术，因此可能会遇到连接不稳定的情况，例如断开连接或网络故障。\"},\"142\":{\"h\":\"发送邮件\",\"a\":\"发送邮件\"},\"143\":{\"t\":\"study\"},\"144\":{\"t\":\"application.yml\"},\"145\":{\"t\":\"spring: # 邮件配置 mail: host: smtp.qq.com port: 465 username: totryeverything@qq.com password:<第一步获得的密钥> default-encoding: utf-8 properties: mail: smtp: socketFactory: class: javax.net.ssl.SSLSocketFactory debug: true \"},\"146\":{\"t\":\"pom.xml\"},\"147\":{\"t\":\" <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-mail</artifactId> </dependency> \"},\"148\":{\"t\":\"Service\"},\"149\":{\"t\":\" @Service public class MailService { @Autowired JavaMailSender javaMailSender; // 抄送（CC），用户给收件人发出邮件的同时把该邮件抄送给另外的人，在这种抄送方式中，“收件人”知道发件人把该邮件抄送给了另外哪些人。 // 发送者 收件人 抄送人 主题 内容 public void sendSimpleMail(String from,String to, String subject,String content){ SimpleMailMessage msg = new SimpleMailMessage(); msg.setFrom(from); msg.setTo(to); msg.setSubject(subject); msg.setText(content); javaMailSender.send(msg); } // 发送带附件的邮件 public void sendFailMail(String from,String to, String subject,String content, File file) throws MessagingException { MimeMessage msg = javaMailSender.createMimeMessage(); MimeMessageHelper helper = new MimeMessageHelper(msg,true); helper.setFrom(from); helper.setTo(to); helper.setText(content); helper.setSubject(subject); helper.addAttachment(file.getName(),file); javaMailSender.send(msg); } // 附带图片 public void sendMailImg(String from,String to, String subject,String content, String[] srcPath, String[] resIds) throws MessagingException { if(srcPath.length!=resIds.length){ System.out.println(\\\"hello world\\\"); return ; } MimeMessage msg = javaMailSender.createMimeMessage(); MimeMessageHelper helper = new MimeMessageHelper(msg, true); helper.setFrom(from); helper.setTo(to); helper.setText(content,true);//表示正文是HTML格式 helper.setSubject(subject); for(int i=0;i<srcPath.length;i++){ FileSystemResource res = new FileSystemResource(new File(srcPath[i])); helper.addInline(resIds[i],res); } javaMailSender.send(msg); } } \"},\"150\":{\"t\":\"Test\"},\"151\":{\"t\":\" @Autowired private MailService mailService; @Test void sendSimpleMail() { mailService.sendSimpleMail(\\\"totryeverything@qq.com\\\",\\\"19138084894@163.com\\\", \\\"Test\\\",\\\"这只不过是一个测试而已\\\"); } @Test void sendFailMail() throws MessagingException { mailService.sendFailMail(\\\"totryeverything@qq.com\\\",\\\"19138084894@163.com\\\", \\\"Test\\\",\\\"这只不过是一个测试而已\\\",new File(\\\"E:\\\\\\\\c\\\\\\\\ToTryEveryThing\\\\\\\\README.md\\\")); } @Test void sendImgMail() throws MessagingException { mailService.sendMailImg(\\\"totryeverything@qq.com\\\",\\\"19138084894@163.com\\\", \\\"Test\\\", \\\"这只不过是一个测试而已\\\" + \\\"<img /><img />\\\", new String []{\\\"C:\\\\\\\\Users\\\\\\\\Administrator\\\\\\\\Pictures\\\\\\\\47f4c019880711ebb6edd017c2d2eca2.jpg\\\",\\\"C:\\\\\\\\Users\\\\\\\\Administrator\\\\\\\\Pictures\\\\\\\\下载 (2).png\\\"}, new String[]{\\\"p1\\\",\\\"p2\\\"} ); } \"},\"152\":{\"h\":\"定时任务\",\"a\":\"定时任务\"},\"153\":{\"t\":\"提示\"},\"154\":{\"t\":\"在Spring Boot应用程序中使用@Scheduled注解标记的定时任务是在应用程序启动时自动启动的。\"},\"155\":{\"t\":\"配置\"},\"156\":{\"t\":\"@Configuration @EnableScheduling public class ScheduledTasksConfig { } \"},\"157\":{\"t\":\"使用\"},\"158\":{\"t\":\"延迟5s启动 然后每隔5s运行一次\"},\"159\":{\"t\":\" @Scheduled(fixedRate = 5000,initialDelay = 5000) public String schedul (){ System.out.println(i++); return String.valueOf(i); } \"},\"160\":{\"h\":\"@Scheduled(cron = \\\"0 0 12 * * ?\\\"): 使用CRON表达式指定执行时间。\",\"a\":\"scheduled-cron-0-0-12-使用cron表达式指定执行时间。\"},\"161\":{\"t\":\"// 每天中午12点执行任务 @Scheduled(cron = \\\"0 0 12 * * ?\\\") public void doTask() { // your task code here } \"},\"162\":{\"t\":\"自启动 通过get方法停止任务\"},\"163\":{\"t\":\"@RestController public class ScheduleController { @Autowired private TaskScheduler taskScheduler; private ScheduledFuture<?> scheduledFuture; @PostConstruct public void start() { scheduledFuture = taskScheduler.scheduleWithFixedDelay(new MyTask(), 5000L);//5000ms } @GetMapping(\\\"/stop\\\") public String stop() { if (scheduledFuture != null) { scheduledFuture.cancel(true); } return \\\"stop\\\"; } private class MyTask implements Runnable { @Override public void run() { System.out.println(\\\"Task executing...\\\"); } } } \"},\"164\":{\"h\":\"数据校验\",\"a\":\"数据校验\"},\"165\":{\"t\":\"依赖\"},\"166\":{\"t\":\" <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-validation</artifactId> </dependency> \"},\"167\":{\"t\":\"配置 ValidationMessages.properties\"},\"168\":{\"t\":\"user.name.size = name user.address.notnull = adress user.age.size = age user.email.pattern = email \"},\"169\":{\"t\":\"pojo\"},\"170\":{\"t\":\"public class User { @Size(min = 2,max = 10, message = \\\"{user.name.size}\\\") private String name; @NotNull(message = \\\"{user.address.notnull}\\\") private String address; @DecimalMin(value = \\\"1\\\" ,message = \\\"{user.age.size}\\\") @DecimalMax(value = \\\"100\\\" ,message = \\\"{user.age.size}\\\") private Integer age; @Email(message = \\\"{user.email.pattern}\\\") private String email; public String getName() { return name; } public void setName(String name) { this.name = name; } public String getAddress() { return address; } public void setAddress(String address) { this.address = address; } public Integer getAge() { return age; } public void setAge(Integer age) { this.age = age; } public String getEmail() { return email; } public void setEmail(String email) { this.email = email; } } \"},\"171\":{\"t\":\"controller\"},\"172\":{\"t\":\"@RestController public class UserController { @PostMapping(\\\"/adduser/\\\") public List<String> addUser(@Validated User user, BindingResult bindingResult){ ArrayList<String> error = new ArrayList<>(); if(bindingResult.hasErrors()){ List<ObjectError> allErrors = bindingResult.getAllErrors(); for(ObjectError e : allErrors){ error.add(e.getDefaultMessage()); System.out.println(\\\"e.getDefaultMessage() = \\\" + e.getDefaultMessage()); } } return error; } } \"},\"173\":{\"t\":\"<template> <div> <!-- input 标签用于选择图片 --> <input type=\\\"file\\\" accept=\\\"image/*\\\" @change=\\\"previewImage\\\"> <!-- 预览图片的 img 标签 --> <img ref=\\\"previewImg\\\" style=\\\"max-width: 100%; max-height: 100%;\\\" /> </div> </template> <script> export default { methods: { previewImage(event) { // 获取选择的文件 const file = event.target.files[0]; // 判断是否是图片类型 if (file.type.startsWith('image/')) { // 创建 FileReader 对象 const reader = new FileReader(); // 读取图片文件 reader.readAsDataURL(file); // 在图片文件读取完毕后设置预览图片的 URL reader.onload = () => { this.$refs.previewImg.src = reader.result; }; } }, }, }; </script> \"},\"174\":{\"h\":\"分布式锁\",\"a\":\"分布式锁\"},\"175\":{\"h\":\"Redis分布式锁和Redisson分布式锁都是用于实现分布式系统中的分布式锁，但它们之间有以下区别：\",\"a\":\"redis分布式锁和redisson分布式锁都是用于实现分布式系统中的分布式锁-但它们之间有以下区别\"},\"176\":{\"t\":\"Redis分布式锁是基于Redis的SETNX命令实现的，而Redisson分布式锁是基于Redis的Redisson分布式框架实现的。\"},\"177\":{\"t\":\"Redis分布式锁需要手动编写锁逻辑代码，包括锁定、释放锁等。Redisson分布式锁封装了锁逻辑，并提供了API接口，使得锁的使用变得简单。\"},\"178\":{\"t\":\"Redis分布式锁在进行锁定和解锁操作时，需要自己实现保证操作的原子性。Redisson分布式锁内部封装了Redis的单线程模型，保证了锁的操作原子性。\"},\"179\":{\"t\":\"Redis分布式锁在锁定后需要手动维护锁的超时时间。Redisson分布式锁内部封装了锁的自动续期机制，避免了锁过期的问题。\"},\"180\":{\"t\":\"Redis分布式锁在高并发场景下可能存在死锁的问题。Redisson分布式锁使用Redlock算法避免了死锁的问题。\"},\"181\":{\"h\":\"redis分布式锁\",\"a\":\"redis分布式锁\"},\"182\":{\"t\":\"public Result regasdgsdgister(String account, String password) { final String key = account + \\\"-lock\\\"; final String value = System.nanoTime() + \\\" \\\" + UUID.randomUUID(); ValueOperations v = stringRedisTemplate.opsForValue(); Boolean res = v.setIfAbsent(key,value); if(res){ stringRedisTemplate.expire(key,20L, TimeUnit.SECONDS); if(account == null){ return new Result(0,\\\"用户名不能为空\\\"); } if(password.length() == 0){ return new Result(0,\\\"密码不能为空\\\"); } account = account.trim(); if(account.length()==0){ return new Result(0,\\\"用户名不能为空\\\"); } if(password.length()>50){ return new Result(0,\\\"密码长度不能超过50\\\"); } QueryWrapper<web> queryWrapper = new QueryWrapper<web>(); queryWrapper.eq(\\\"account\\\",account); List<web> webs = webMapper.selectList(queryWrapper); if(!webs.isEmpty()){ return new Result(0,\\\"用户名已存在\\\"); } String pass = passwordEncoder.encode(password); String jwt = JwtUtil.createJWT(account); web web1 = new web(); web1.setBackimg(\\\"5\\\"); web1.setList(\\\"[]\\\"); web1.setPassword(pass); web1.setAccount(account); web1.setDate(new Date()); webMapper.insert(web1); String git = \\\"[{\\\\\\\"title\\\\\\\":\\\\\\\"你好\\\\\\\",\\\\\\\"name\\\\\\\":1,\\\\\\\"content\\\\\\\":\\\\\\\"## new content\\\\\\\",\\\\\\\"show\\\\\\\":true}]\\\\n\\\" + \\\"\\\\n\\\"; String title = \\\"[\\\\\\\"你好\\\\\\\"]\\\"; System.out.println(publicMapper.insert(new Public(account, title,git))+999999); System.out.println(new Date()); if(value.equals(v.get(key).toString())){ stringRedisTemplate.delete(key); } return new Result(1,\\\"success\\\",jwt); } return null; } \"},\"183\":{\"h\":\"Redisson\",\"a\":\"redisson\"},\"184\":{\"t\":\"Redisson学习地址\"},\"185\":{\"t\":\"引入\"},\"186\":{\"t\":\"<!-- redisson--> <dependency> <groupId>org.redisson</groupId> <artifactId>redisson</artifactId> <version>3.6.5</version> </dependency> \"},\"187\":{\"t\":\"RedissonConfig\"},\"188\":{\"t\":\"@Configuration public class RedissonConfig { @Bean RedissonClient redisson() { Config config = new Config(); config.useSingleServer().setAddress(\\\"redis://localhost:6379\\\").setDatabase(0); return Redisson.create(config); } } \"},\"189\":{\"t\":\"使用\"},\"190\":{\"t\":\" @Autowired RedissonClient redissonClient; @Override public Result showbyid(Integer id) { RLock lock = redissonClient.getLock(String.valueOf(id)); lock.lock(); try{ article article = articleMapper.selectById(id); article.setViews(article.getViews()+1); int i = articleMapper.updateById(article); return new Result(1,\\\"success\\\",article); }finally { lock.unlock(); } } \"},\"191\":{\"h\":\"Swagger\",\"a\":\"swagger\"},\"192\":{\"h\":\"搭建\",\"a\":\"搭建\"},\"193\":{\"t\":\" <dependency> <groupId>io.springfox</groupId> <artifactId>springfox-swagger2</artifactId> <version>3.0.0</version> </dependency> \"},\"194\":{\"t\":\"@Configuration @EnableSwagger2 public class SwaggerConfig { @Bean public Docket productApi() { return new Docket(DocumentationType.SWAGGER_2) .apiInfo(apiInfo()) .select() .apis(RequestHandlerSelectors.withMethodAnnotation(ApiOperation.class)) //添加ApiOperiation注解的被扫描 .paths(PathSelectors.any()) .build(); } private ApiInfo apiInfo() { return new ApiInfoBuilder().title(\\\"都是书本上的呀\\\").description(\\\"根本不需要的描述\\\") .version(\\\"1.0\\\").build(); } } \"},\"195\":{\"h\":\"Linux\"},\"196\":{\"h\":\"docker\",\"a\":\"docker\"},\"197\":{\"h\":\"将当前用户添加到docker用户组\",\"a\":\"将当前用户添加到docker用户组\"},\"198\":{\"t\":\"为了避免每次使用docker命令都需要加上sudo权限，可以将当前用户加入安装中自动创建的docker用户组\"},\"199\":{\"t\":\"如何在 Ubuntu 22.04 LTS 中安装 Docker 和 Docker Compose\"},\"200\":{\"t\":\"sudo usermod -aG docker $USER \"},\"201\":{\"t\":\"执行完此操作后，需要退出服务器，再重新登录回来，才可以省去sudo权限。\"},\"202\":{\"h\":\"镜像（images）\",\"a\":\"镜像-images\"},\"203\":{\"t\":\"docker pull ubuntu:20.04：拉取一个镜像 docker images：列出本地所有镜像 docker image rm ubuntu:20.04 或 docker rmi ubuntu:20.04：删除镜像ubuntu:20.04 docker [container] commit CONTAINER IMAGE_NAME:TAG：创建某个container的镜像 docker save -o ubuntu_20_04.tar ubuntu:20.04：将镜像ubuntu:20.04导出到本地文件ubuntu_20_04.tar中 docker load -i ubuntu_20_04.tar：将镜像ubuntu:20.04从本地文件ubuntu_20_04.tar中加载出来 \"},\"204\":{\"h\":\"容器(container)\",\"a\":\"容器-container\"},\"205\":{\"t\":\"docker [container] create -it ubuntu:20.04：利用镜像ubuntu:20.04创建一个容器。 docker ps -a：查看本地的所有容器 docker [container] start CONTAINER：启动容器 docker [container] stop CONTAINER：停止容器 docker [container] restart CONTAINER：重启容器 docker [contaienr] run -itd ubuntu:20.04：创建并启动一个容器 docker [container] attach CONTAINER：进入容器 先按Ctrl-p，再按Ctrl-q可以挂起容器 docker [container] exec CONTAINER COMMAND：在容器中执行命令 docker [container] rm CONTAINER：删除容器 docker container prune：删除所有已停止的容器 docker export -o xxx.tar CONTAINER：将容器CONTAINER导出到本地文件xxx.tar中 docker import xxx.tar image_name:tag：将本地文件xxx.tar导入成镜像，并将镜像命名为image_name:tag docker export/import与docker save/load的区别： export/import会丢弃历史记录和元数据信息，仅保存容器当时的快照状态 save/load会保存完整记录，体积更大 docker top CONTAINER：查看某个容器内的所有进程 docker stats：查看所有容器的统计信息，包括CPU、内存、存储、网络等信息 docker cp xxx CONTAINER:xxx 或 docker cp CONTAINER:xxx xxx：在本地和容器间复制文件 docker rename CONTAINER1 CONTAINER2：重命名容器 docker update CONTAINER --memory 500MB：修改容器限制 \"},\"206\":{\"h\":\"例子\",\"a\":\"例子\"},\"207\":{\"t\":\"创建 运行镜像 docker run -p 20000:22 --name my_docker_server -itd docker_lesson:1.0 \"},\"208\":{\"h\":\"mysql\",\"a\":\"mysql\"},\"209\":{\"h\":\"导出完整数据库\",\"a\":\"导出完整数据库\"},\"210\":{\"t\":\"用mysqldump命令导出数据库（此命令的路径即mysql的安装路径） mysqldump -u用户名 -p 数据库名 > 数据库名.sql \"},\"211\":{\"t\":\"例如\"},\"212\":{\"t\":\"/usr/local/mysql/bin mysqldump -uroot -p aaa > aaa.sql \"},\"213\":{\"t\":\"2、只导出表结构 如果只需要导出表结构\"},\"214\":{\"t\":\"mysqldump -u用户名 -p -d 数据库名 > 数据库名.sql \"},\"215\":{\"t\":\"例如\"},\"216\":{\"t\":\"mysqldump -uroot -p -d aaa >aaa.sql 可以使用以下命令找到导出的数据库 find / -name 数据库名.sql \"},\"217\":{\"h\":\"导入数据库\",\"a\":\"导入数据库\"},\"218\":{\"t\":\"1、使用mysql命令导入 mysql -u用户名 -p 数据库名 < 数据库名.sql 例如\"},\"219\":{\"t\":\"mysql -uroot -p aaa < aaa.sql \"},\"220\":{\"t\":\"2、使用sources命令导入 先进入到mysql中\"},\"221\":{\"t\":\"mysql> create databases aaa; #创建新的数据库 mysql> use aaa; #使用已创建的数据库 mysql> set names utf-8; #设置编码 mysql> source /aaa.sql #导入sql文件，注意sql的路径 \"},\"222\":{\"h\":\"vim\",\"a\":\"vim\"},\"223\":{\"t\":\"(1) i：进入编辑模式 (2) ESC：进入一般命令模式 (3) h 或 左箭头键：光标向左移动一个字符 (4) j 或 向下箭头：光标向下移动一个字符 (5) k 或 向上箭头：光标向上移动一个字符 (6) l 或 向右箭头：光标向右移动一个字符 (7) n<Space>：n表示数字，按下数字后再按空格，光标会向右移动这一行的n个字符 (8) 0 或 功能键[Home]：光标移动到本行开头 (9) $ 或 功能键[End]：光标移动到本行末尾 (10) G：光标移动到最后一行 (11) :n 或 nG：n为数字，光标移动到第n行 (12) gg：光标移动到第一行，相当于1G (13) n<Enter>：n为数字，光标向下移动n行 (14) /word：向光标之下寻找第一个值为word的字符串。 (15) ?word：向光标之上寻找第一个值为word的字符串。 (16) n：重复前一个查找操作 (17) N：反向重复前一个查找操作 (18) :n1,n2s/word1/word2/g：n1与n2为数字，在第n1行与n2行之间寻找word1这个字符串，并将该字符串替换为word2 (19) :1,$s/word1/word2/g：将全文的word1替换为word2 (20) :1,$s/word1/word2/gc：将全文的word1替换为word2，且在替换前要求用户确认。 (21) v：选中文本 (22) d：删除选中的文本 (23) dd: 删除当前行 (24) y：复制选中的文本 (25) yy: 复制当前行 (26) p: 将复制的数据在光标的下一行/下一个位置粘贴 (27) u：撤销 (28) Ctrl + r：取消撤销 (29) 大于号 >：将选中的文本整体向右缩进一次 (30) 小于号 <：将选中的文本整体向左缩进一次 (31) :w 保存 (32) :w! 强制保存 (33) :q 退出 (34) :q! 强制退出 (35) :wq 保存并退出 (36) :set paste 设置成粘贴模式，取消代码自动缩进 (37) :set nopaste 取消粘贴模式，开启代码自动缩进 (38) :set nu 显示行号 (39) :set nonu 隐藏行号 (40) gg=G：将全文代码格式化 (41) :noh 关闭查找关键词高亮 (42) Ctrl + q：当vim卡死时，可以取消当前正在执行的命令 \"},\"224\":{\"h\":\"ssh 免密登录\",\"a\":\"ssh-免密登录\"},\"225\":{\"t\":\"ssh-keygen 先生成一对密钥 ssh-keygen -R 127.0.0.1 清除公钥信息 ssh-copy-id 127.0.0.1 发送公钥 /.ssh 下创建config文件 Host 别名 Hostname 127.0.0.1 User 登录名 最后即可使用ssh 别名登录 \"},\"226\":{\"h\":\"Mysql\"},\"227\":{\"t\":\"哔哩哔哩_bilibili\"},\"228\":{\"t\":\"utf8mb4: 编码格式\"},\"229\":{\"h\":\"insert\",\"a\":\"insert\"},\"230\":{\"t\":\"给指定字段添加值\"},\"231\":{\"t\":\"insert into 表名 (字段1，字段2..) values(值1，值2..); \"},\"232\":{\"t\":\"给指定字段批量添加值\"},\"233\":{\"t\":\"insert into 表名 (字段1，字段2..) values(值1，值2..),(值1，值2..),(值1，值2..); insert into 表名 values(值1，值2..),(值1，值2..),(值1，值2..); \"},\"234\":{\"t\":\"给全部字段添加值\"},\"235\":{\"t\":\"insert into 表名 values(值1，值2..); \"},\"236\":{\"h\":\"update\",\"a\":\"update\"},\"237\":{\"t\":\"update 表名 set 字段1=值1，字段2=值2... [where 条件]; \"},\"238\":{\"t\":\"不写条件 更新所有\"},\"239\":{\"h\":\"delete\",\"a\":\"delete\"},\"240\":{\"t\":\"delete from 表名 [where 条件]; \"},\"241\":{\"t\":\"delete from 表名 删除所有数据\"},\"242\":{\"h\":\"select\",\"a\":\"select\"},\"243\":{\"t\":\"select [字段列表] from [表名列表] where [条件列表] group by [分组字段列表] having [分组后条件列表] order by [排序字段列表] limit [分页] \"},\"244\":{\"t\":\"条件查询(where)、聚合查询(count,max,min,avg,sum)、分组查询(group by)、排序查询(order by)、分页查询(limit)\"},\"245\":{\"h\":\"基本查询\",\"a\":\"基本查询\"},\"246\":{\"t\":\"起别名\"},\"247\":{\"t\":\"select name as '姓名' from 表名; 或者 select name '姓名' from 表名; \"},\"248\":{\"t\":\"不重复\"},\"249\":{\"t\":\"select distinct name from 表名; \"},\"250\":{\"h\":\"条件查询\",\"a\":\"条件查询\"},\"251\":{\"t\":\"比较运算符\"},\"252\":{\"t\":\"功能\"},\"253\":{\"t\":\">\"},\"254\":{\"t\":\">=\"},\"255\":{\"t\":\"<\"},\"256\":{\"t\":\"<=\"},\"257\":{\"t\":\"=\"},\"258\":{\"t\":\"<>或!=\"},\"259\":{\"t\":\"不等于\"},\"260\":{\"t\":\"between...and...\"},\"261\":{\"t\":\"某个范围之内 []\"},\"262\":{\"t\":\"in(..)\"},\"263\":{\"t\":\"列表中的值，多选一\"},\"264\":{\"t\":\"like 占位符\"},\"265\":{\"t\":\"模糊匹配（_单个字符、%任意个字符）\"},\"266\":{\"t\":\"is null\"},\"267\":{\"t\":\"为空\"},\"268\":{\"t\":\"and 或 &&\"},\"269\":{\"t\":\"并且\"},\"270\":{\"t\":\"or或 ||\"},\"271\":{\"t\":\"或者\"},\"272\":{\"t\":\"not 或 ！\"},\"273\":{\"t\":\"非\"},\"274\":{\"h\":\"聚合函数\",\"a\":\"聚合函数\"},\"275\":{\"t\":\"null 不参与计算\"},\"276\":{\"t\":\"sum\"},\"277\":{\"t\":\"select sum(*) from 表名; \"},\"278\":{\"t\":\"avg\"},\"279\":{\"t\":\"select agv(age) from 表名; \"},\"280\":{\"t\":\"max | min\"},\"281\":{\"t\":\"select max(age) from 表名; select min(age) from 表名; \"},\"282\":{\"h\":\"分组查询\",\"a\":\"分组查询\"},\"283\":{\"t\":\"分组后的列只有待分组的字段和聚合函数\"},\"284\":{\"t\":\"study\"},\"285\":{\"t\":\"select sex,count(sex) from s group by sex having avg(age) > 50; \"},\"286\":{\"h\":\"排序查询\",\"a\":\"排序查询\"},\"287\":{\"t\":\"ASC 升序（默认）\"},\"288\":{\"t\":\"DESC 降序\"},\"289\":{\"t\":\"多字段排序，先按第一个排序，然后相同的按照第二个方式排序\"},\"290\":{\"t\":\"select * from s order by age asc , id desc; \"},\"291\":{\"h\":\"分页查询\",\"a\":\"分页查询\"},\"292\":{\"t\":\"select * from 表名 limit 起始索引，查询记录数 \"},\"293\":{\"t\":\"起始索引从0开始， 起始索引 = （查询页码-1）* 每页记录数\"},\"294\":{\"t\":\"select * from s limit 0,10; select * from s limit 10,10; \"},\"295\":{\"h\":\"函数\",\"a\":\"函数\"},\"296\":{\"h\":\"字符串函数\",\"a\":\"字符串函数\"},\"297\":{\"t\":\"-- concat select concat(\\\"hello\\\",\\\"world\\\"); -- lower select lower(\\\"HELLO\\\"); -- upper select upper(\\\"hello\\\"); -- trim 去除首尾空格 -- substring 截取 update 表名 set name = upper(name) where id = 51; \"},\"298\":{\"h\":\"数值函数\",\"a\":\"数值函数\"},\"299\":{\"t\":\"-- ceil 向上取整 -- floor 向下取整 -- mod(x,y) 返回x/y的模 -- rand() 返回0-1的随机小数 -- round(x,y) 求参数x的四舍五入的值 保留y位小数 select round(5.456871865468,3); --> 5.457 \"},\"300\":{\"h\":\"日期函数\",\"a\":\"日期函数\"},\"301\":{\"t\":\"-- curdate() 返回当前日期 -- curtime() 返回当前时间 -- now() 返回当前日期和时间 -- year(date) 获得指定year的年 -- month(date) -- day(date) -- date_add() 返回一个日期加上某个时间后的日期 select date_add(now(),interval 110 day); select date_add(now(),interval 110 year); -- datediff(date1,date2) 时间间隔 \"},\"302\":{\"h\":\"约束\",\"a\":\"约束\"},\"303\":{\"t\":\"default: 默认约束\"},\"304\":{\"t\":\"not null: 非空约束\"},\"305\":{\"t\":\"unique: 唯一约束\"},\"306\":{\"t\":\"primary key: 主键约束\"},\"307\":{\"t\":\"foreign key: 外键约束\"},\"308\":{\"h\":\"外键约束\",\"a\":\"外键约束\"},\"309\":{\"t\":\"命令\"},\"310\":{\"t\":\"b为父表 s为子表 s表的字段(b_id)外键到b表的（id） alter table s add constraint fk_s_b_id foreign key (b_id) references b(id); \"},\"311\":{\"t\":\"删除/更新行为 \"},\"312\":{\"t\":\"RESTRICT：父表数据被删除，会阻止删除。默认就是这一项。\"},\"313\":{\"t\":\"NO ACTION：在MySQL中，同RESTRICT。\"},\"314\":{\"t\":\"CASCADE：级联删除。\"},\"315\":{\"t\":\"SET NULL：父表数据被删除，子表数据会设置为NULL。\"},\"316\":{\"h\":\"多表查询\",\"a\":\"多表查询\"},\"317\":{\"t\":\"笛卡尔积：两个表的所有组合 s(5个字段)，b(3个字段) s X b = 15\"},\"318\":{\"t\":\"可以使用两个表之间的联系去除无用数据\"},\"319\":{\"h\":\"内连接\",\"a\":\"内连接\"},\"320\":{\"t\":\"相当与查询A,B交集部分数据\"},\"321\":{\"t\":\"select s.name,b.name from s,b where s.b_id = b.id; 隐式内连接 select s.name,b.name from s inner join b on s.b_id = b.id; 显式内连接 \"},\"322\":{\"h\":\"左外连接\",\"a\":\"左外连接\"},\"323\":{\"t\":\"查询左表全部数据，以及两张表交集部分\"},\"324\":{\"t\":\"select s.*,b.name from s left outer join b on s.b_id = b.id; select s.*,b.name from s left join b on s.b_id = b.id; s表的全部 以及b表的name \"},\"325\":{\"h\":\"右外连接\",\"a\":\"右外连接\"},\"326\":{\"t\":\"查询右表。。。。\"},\"327\":{\"h\":\"自连接\",\"a\":\"自连接\"},\"328\":{\"t\":\"当前表与自身的连接查询，子链接必须使用表别名\"},\"329\":{\"t\":\"select 字段列表 from 表A 别名a join 表B 别名b on 条件 ...\"},\"330\":{\"h\":\"联合查询\",\"a\":\"联合查询\"},\"331\":{\"t\":\"比如要求：将年龄低于50和性别为’男‘的人 全部查出来 就要用到联合查询了\"},\"332\":{\"t\":\"列数必须保持一致，字段类型也一致。\"},\"333\":{\"t\":\"select * from s where age < 50 union all select * from s where sex = '男' ; 不去重 select * from s where age < 50 union select * from s where sex = '男' ; 去重 \"},\"334\":{\"h\":\"子查询\",\"a\":\"子查询\"},\"335\":{\"t\":\"43. 基础-多表查询-子查询介绍_哔哩哔哩_bilibili\"},\"336\":{\"h\":\"事务\",\"a\":\"事务\"},\"337\":{\"h\":\"Mybatis\"},\"338\":{\"t\":\"官网学习地址\"},\"339\":{\"t\":\"依赖\"},\"340\":{\"t\":\"<!-- https://mvnrepository.com/artifact/org.mybatis/mybatis --> <dependency> <groupId>org.mybatis</groupId> <artifactId>mybatis</artifactId> <version>3.5.5</version> </dependency> \"},\"341\":{\"t\":\"xml配置详解 \"},\"342\":{\"h\":\"添加-主键返回\",\"a\":\"添加-主键返回\"},\"343\":{\"t\":\"int i = mapper.update(test1); 可以把id拿出来 \"},\"344\":{\"t\":\" <insert id=\\\"update\\\" useGeneratedKeys=\\\"true\\\" keyProperty=\\\"id\\\"> insert into test1 (id, name, views, up) values ( #{id}, #{name}, #{views}, #{up} ); </insert> \"},\"345\":{\"h\":\"动态条件查询\",\"a\":\"动态条件查询\"},\"346\":{\"t\":\"if\"},\"347\":{\"t\":\"<select id=\\\"findActiveBlogLike\\\" resultType=\\\"Blog\\\"> SELECT * FROM BLOG WHERE state = ‘ACTIVE’ <if test=\\\"title != null\\\"> AND title like #{title} </if> <if test=\\\"author != null and author.name != null\\\"> AND author_name like #{author.name} </if> </select> \"},\"348\":{\"t\":\"choose\"},\"349\":{\"t\":\"<select id=\\\"findActiveBlogLike\\\" resultType=\\\"Blog\\\"> SELECT * FROM BLOG WHERE state = ‘ACTIVE’ <choose> <when test=\\\"title != null\\\"> AND title like #{title} </when> <when test=\\\"author != null and author.name != null\\\"> AND author_name like #{author.name} </when> <otherwise> AND featured = 1 </otherwise> </choose> </select> \"},\"350\":{\"t\":\"trim\"},\"351\":{\"t\":\"<select id=\\\"findActiveBlogLike\\\" resultType=\\\"Blog\\\"> SELECT * FROM BLOG WHERE <if test=\\\"state != null\\\"> state = #{state} </if> <if test=\\\"title != null\\\"> AND title like #{title} </if> <if test=\\\"author != null and author.name != null\\\"> AND author_name like #{author.name} </if> </select> \"},\"352\":{\"h\":\"Mybatis Plus\"},\"353\":{\"h\":\"Mybatis Plus\",\"a\":\"mybatis-plus\"},\"354\":{\"t\":\"MyBatis-Plus（简称 MP）是一个 MyBatis 的增强工具，在 MyBatis 的基础上只做增强不做改变，为简化开发、提高效率而生。\"},\"355\":{\"t\":\"【尚硅谷】2022版MyBatisPlus教程（一套玩转mybatis-plus）_哔哩哔哩_bilibili\"},\"356\":{\"t\":\"无侵入、损耗小、强大的CRUD操作\"},\"357\":{\"t\":\"支持Lambda形式调用，支持多种数据库\"},\"358\":{\"t\":\"支持主键自动生成，支持ActiveRecord模式\"},\"359\":{\"t\":\"支持自定义全局通用操作，支持关键词自动转义\"},\"360\":{\"t\":\"内置代码生成器、内置分页插件、内置性能分析插件\"},\"361\":{\"t\":\"内置全局拦截插件、内置SQL注入剥离器\"},\"362\":{\"h\":\"BaseMapper\",\"a\":\"basemapper\"},\"363\":{\"t\":\"public interface BaseMapper<T> extends Mapper<T> { int insert(T entity); int deleteById(Serializable id); int deleteByMap(@Param(\\\"cm\\\") Map<String, Object> columnMap); int delete(@Param(\\\"ew\\\") Wrapper<T> queryWrapper); int deleteBatchIds(@Param(\\\"coll\\\") Collection<? extends Serializable> idList); int updateById(@Param(\\\"et\\\") T entity); int update(@Param(\\\"et\\\") T entity, @Param(\\\"ew\\\") Wrapper<T> updateWrapper); T selectById(Serializable id); List<T> selectBatchIds(@Param(\\\"coll\\\") Collection<? extends Serializable> idList); List<T> selectByMap(@Param(\\\"cm\\\") Map<String, Object> columnMap); T selectOne(@Param(\\\"ew\\\") Wrapper<T> queryWrapper); Integer selectCount(@Param(\\\"ew\\\") Wrapper<T> queryWrapper); List<T> selectList(@Param(\\\"ew\\\") Wrapper<T> queryWrapper); List<Map<String, Object>> selectMaps(@Param(\\\"ew\\\") Wrapper<T> queryWrapper); List<Object> selectObjs(@Param(\\\"ew\\\") Wrapper<T> queryWrapper); <E extends IPage<T>> E selectPage(E page, @Param(\\\"ew\\\") Wrapper<T> queryWrapper); <E extends IPage<Map<String, Object>>> E selectMapsPage(E page, @Param(\\\"ew\\\") Wrapper<T> queryWrapper); } \"},\"364\":{\"h\":\"CURD\",\"a\":\"curd\"},\"365\":{\"t\":\"使用mapper继承BaseMapper<T>即可开箱即用\"},\"366\":{\"t\":\" @Test void TestInsert(){ user user = new user(); user.setId(880); user.setAccount(\\\"天天学习\\\"); user.setPassword(\\\"hhh\\\"); int res = UserMapper.insert(user); System.out.println(res); } @Test void TestDelete(){ // 一： // int res = UserMapper.deleteById(1); // System.out.println(res); // 二: // delete from user where account = ? and password = ? // HashMap<String, Object> map = new HashMap<>(); // map.put(\\\"account\\\",\\\"jkl\\\"); // map.put(\\\"password\\\",\\\"123root\\\"); // UserMapper.deleteByMap(map); // 三: // 删除多个 // DELETE FROM user WHERE id IN ( ? , ? ) List<Integer> list = Arrays.asList(80,880); UserMapper.deleteBatchIds(list); } @Test void TestUpdata(){ user user = new user(); user.setAccount(\\\"改了\\\"); UpdateWrapper<user> q = new UpdateWrapper<>(); q.eq(\\\"password\\\",\\\"666\\\"); // 不屑password 不被修改 UserMapper.update(user,q); } @Test void TestSelect(){ // 通过id查询信息 // user user = UserMapper.selectById(2); // System.out.println(user.toString().isEmpty()); // 通过多个id进行查询 // List<Integer> list = Arrays.asList(3,2); // List<user> users = UserMapper.selectBatchIds(list); // users.forEach(System.out::println); // 通过map查询 // HashMap<String, Object> map = new HashMap<>(); // map.put(\\\"account\\\",666); // List<user> users = UserMapper.selectByMap(map); // users.forEach(System.out::println); // 所有的数据 // List<user> users = UserMapper.selectList(null); // users.forEach(System.out::println); } \"},\"367\":{\"h\":\"wapper条件构造器\",\"a\":\"wapper条件构造器\"},\"368\":{\"t\":\"Description\"},\"369\":{\"h\":\"注解说明\",\"a\":\"注解说明\"},\"370\":{\"t\":\"@TableName 表名\"},\"371\":{\"t\":\"@TableId 主键\"},\"372\":{\"t\":\"---@TableId(type= IdType.AUTO) 自增\"},\"373\":{\"t\":\"---@TableId(type= IdType.NONE) 雪花算法 赋值\"},\"374\":{\"t\":\"@TableField 把表中字段和实体类对应\"},\"375\":{\"t\":\"---@TableField(value=\\\"name\\\") 映射\"},\"376\":{\"t\":\"---@TableField(exist=false) 不是数据库中字段\"},\"377\":{\"t\":\"---@TableField(select = false) 不会参与查询 返回值为null\"},\"378\":{\"h\":\"MybatisX\",\"a\":\"mybatisx\"},\"379\":{\"t\":\"MybatisX\"},\"380\":{\"t\":\"Description\"},\"381\":{\"h\":\"分页\",\"a\":\"分页\"},\"382\":{\"t\":\"config\"},\"383\":{\"t\":\"@Configuration public class MybatisConfig { @Bean public MybatisPlusInterceptor mybatisPlusInterceptor(){ MybatisPlusInterceptor interceptor = new MybatisPlusInterceptor(); interceptor.addInnerInterceptor(new PaginationInnerInterceptor(DbType.MYSQL)); return interceptor; } } \"},\"384\":{\"t\":\"使用\"},\"385\":{\"t\":\" @Override public JSONObject userList(Integer page) { IPage<Record> recordIPage = new Page<>(page,10); QueryWrapper<Record> queryWrapper = new QueryWrapper<>(); queryWrapper.orderByAsc(\\\"id\\\"); List<Record> list = recordMapper.selectPage(recordIPage,queryWrapper).getRecords(); JSONObject resp = new JSONObject(); resp.put(\\\"records\\\",list); resp.put(\\\"count\\\",recordMapper.selectCount(null)); return resp; } \"},\"386\":{\"h\":\"Mybatis+字段+1\",\"a\":\"mybatis-字段-1\"},\"387\":{\"t\":\" UpdateWrapper<article> updateWrapper = new UpdateWrapper<>(); updateWrapper.setSql(\\\"up = up + 1\\\").eq(\\\"id\\\",21); System.out.println(articleMapper.update(null, updateWrapper)); \"},\"388\":{\"t\":\" LambdaUpdateWrapper<article> q = new LambdaUpdateWrapper<>(); q.setSql(\\\"up = up + 1\\\"); q.setSql(\\\"views = views + 1\\\"); q.eq(article::getId,22); System.out.println(articleMapper.update(null, q)); \"},\"389\":{\"h\":\"事务\",\"a\":\"事务\"},\"390\":{\"t\":\"测试时加入@Transactional 不会改变数据，不会污染数据，不管如何都会回滚\"},\"391\":{\"t\":\"事务主要的作用体现在以下几个方面：\"},\"392\":{\"t\":\"数据一致性：事务可以确保多个操作在一个逻辑单元中执行，要么全部执行成功，要么全部失败回滚。在多个操作之间存在依赖关系的情况下，事务可以确保数据的一致性，防止数据冲突和数据丢失等问题。\"},\"393\":{\"t\":\"错误回滚：事务可以在发生错误或异常时回滚到之前的状态，保证数据的完整性。如果在多个操作中发生了错误，事务会自动将所有操作撤消，将数据回滚至操作之前的状态。\"},\"394\":{\"t\":\"并发控制：事务可以解决数据库并发访问的问题。当多个用户同时对同一数据进行操作时，事务可以通过锁机制来控制这些操作的执行顺序，以避免并发访问引起的数据冲突和错误。\"},\"395\":{\"t\":\"提高性能：事务可以优化数据库操作的性能。如果在多个操作中涉及到较多的I/O操作或网络传输，将所有操作合并到一个事务中可以减少I/O操作和网络传输，提高数据库操作的性能。\"},\"396\":{\"t\":\"因此，事务对于确保数据的正确性、完整性和一致性非常重要，是保证数据库安全和稳定运行的基本手段。\"},\"397\":{\"t\":\"默认形况下、只有出现RuntimeException才回滚异常。rollbackFor属性用于控制出现何种异常类型，回滚事务。\"},\"398\":{\"t\":\"@Transactional(rollbackFor = Exception.class)任何异常都回滚\"},\"399\":{\"t\":\"@Service public class UserServiceImpl implements UserService { @Autowired private UserMapper userMapper; @Override @Transactional(rollbackFor = Exception.class) public boolean addUser(User user) { try { // 添加用户 userMapper.insert(user); // 手动抛出异常，模拟事务回滚 throw new RuntimeException(\\\"添加用户时出现异常\\\"); } catch (Exception e) { // 捕获异常，并打印异常信息 e.printStackTrace(); // 抛出运行时异常，使事务回滚 throw new RuntimeException(\\\"添加用户时出现异常\\\"); } } } \"},\"400\":{\"h\":\"RabbitMQ\"},\"401\":{\"t\":\"安装地址 Docker安装RabbitMQ详细步骤 - 逊老头 - 博客园 (cnblogs.com) 学习地址 MQ的引言和不同MQ的特点_哔哩哔哩_bilibili\"},\"402\":{\"h\":\"simple简单模式\",\"a\":\"simple简单模式\"},\"403\":{\"t\":\"study\"},\"404\":{\"t\":\"消息产生者将消息放入队列\"},\"405\":{\"t\":\"消息的消费者(consumer) 监听(while) 消息队列,如果队列中有消息,就消费掉,消息被拿走后,自动从队列中删除(隐患 消息可能没有被消费者正确处理,已经从队列中消失了,造成消息的丢失)应用场景:聊天(中间有一个过度的服务器;p端,c端)\"},\"406\":{\"h\":\"生产消息\",\"a\":\"生产消息\"},\"407\":{\"t\":\"//生产者 @Test void send() throws IOException, TimeoutException { // 创建MQ的连接工厂对象 ConnectionFactory connectionFactory = new ConnectionFactory(); // 设置连接mq主机 connectionFactory.setHost(\\\"127.0.0.1\\\"); // 端口号 connectionFactory.setPort(5672); // 设置连接哪一个虚拟主机 connectionFactory.setVirtualHost(\\\"/ems\\\"); // 设置用户名和密码 connectionFactory.setUsername(\\\"ems\\\"); connectionFactory.setPassword(\\\"ems\\\"); // 获取连接对象 Connection connection = connectionFactory.newConnection(); // 获取连接中的通道 Channel channel = connection.createChannel(); // 通道绑定对应的消息队列 // s：队列名称 b:队列是否持久化 b1:是否独占队列(其他的连接不可用) // b2: 是否消费结束后自动删除 map: channel.queueDeclare(\\\"hello\\\",false,false,false,null); // 发布消息 // s： 交换机名称 s1:通道名称 b: MessageProperties.MINIMAL_PERSISTENT_BASIC（ 重启消息也在 ) // 最后：内容 channel.basicPublish(\\\"\\\",\\\"hello\\\",null,\\\"hello rabbit\\\".getBytes()); channel.close(); connection.close(); } \"},\"408\":{\"h\":\"消费消息\",\"a\":\"消费消息\"},\"409\":{\"t\":\" // 消费者 @Test void getMessage() throws IOException, TimeoutException { // 创建MQ的连接工厂对象 ConnectionFactory connectionFactory = new ConnectionFactory(); // 设置连接mq主机 connectionFactory.setHost(\\\"127.0.0.1\\\"); // 端口号 connectionFactory.setPort(5672); // 设置连接哪一个虚拟主机 connectionFactory.setVirtualHost(\\\"/ems\\\"); // 设置用户名和密码 connectionFactory.setUsername(\\\"ems\\\"); connectionFactory.setPassword(\\\"ems\\\"); // 获取连接对象 Connection connection = connectionFactory.newConnection(); // 获取连接中的通道 Channel channel = connection.createChannel(); // 通道绑定对应的消息队列 // s：队列名称 b:队列是否持久化 b1:是否独占队列(其他的连接不可用) // b2: 是否消费结束后自动删除 map: channel.queueDeclare(\\\"hello\\\",false,false,false,null); // 消费消息 // s： 交换机名称 s1:开始消息的自动确认机制 最后：消费时的回调接口 channel.basicConsume(\\\"hello\\\",true, new DefaultConsumer(channel){ @Override public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException { System.out.println(\\\"new String (body) = \\\" + new String (body)); } }); //不关闭 为了一直消费信息 // channel.close(); // connection.close(); } \"},\"410\":{\"h\":\"实现工具类\",\"a\":\"实现工具类\"},\"411\":{\"t\":\"public class RabbitMQConnection { private static ConnectionFactory connectionFactory; //静态代码块 只执行一次 static { connectionFactory = new ConnectionFactory(); connectionFactory.setHost(\\\"127.0.0.1\\\"); // 设置连接mq主机 connectionFactory.setPort(5672);// 端口号 connectionFactory.setVirtualHost(\\\"/ems\\\");// 设置连接哪一个虚拟主机 connectionFactory.setUsername(\\\"ems\\\");// 设置用户名和密码 connectionFactory.setPassword(\\\"ems\\\"); } // 获取 连接对象方法 public static Connection getConnection() throws IOException, TimeoutException { // 获取连接对象 return connectionFactory.newConnection(); } // 关闭通道和连接 public void closeChannelAndConnection(Connection con, Channel channel){ try { if(con!=null)con.close(); if(channel!=null)channel.close(); } catch (IOException | TimeoutException e) { e.printStackTrace(); } } } \"},\"412\":{\"h\":\"任务模型\",\"a\":\"任务模型\"},\"413\":{\"t\":\"study\"},\"414\":{\"t\":\"两个消费者 消费同一个队列 默认会平均分配内容 叫做循环\"},\"415\":{\"t\":\"目前要求能者多劳！！！\"},\"416\":{\"t\":\"设置通道一次只能消费一个消息\"},\"417\":{\"t\":\"关闭消息的自动确认，开始手动确认消息\"},\"418\":{\"h\":\"Consumer\",\"a\":\"consumer\"},\"419\":{\"t\":\"public class consumer2 { public static void main(String[] args) throws IOException, TimeoutException { Connection connection = RabbitMQConnection.getConnection(); Channel channel = connection.createChannel(); channel.queueDeclare(\\\"word\\\",false,false,false,null); channel.basicQos(1);// 每次消费一个 // false 关闭自动确定 channel.basicConsume(\\\"word\\\",false, new DefaultConsumer(channel){ @SneakyThrows @Override public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException { Thread.sleep(1000);//模拟执行的漫 System.out.println(\\\"new String (body) = \\\" + new String (body)); /** * 参数 * - 手动确认的表示 * - false 是否开启多个消息同时确认 */ channel.basicAck(envelope.getDeliveryTag(),false); } }); } } \"},\"420\":{\"h\":\"广播\",\"a\":\"广播\"},\"421\":{\"t\":\" 流程如下：\"},\"422\":{\"t\":\"有多个消费者\"},\"423\":{\"t\":\"每个消费者有自己的队列\"},\"424\":{\"t\":\"每个队列都绑定了交换机\"},\"425\":{\"t\":\"生产者只能向交换机发送消息，再有交换机发给队列，生产者无权决定\"},\"426\":{\"t\":\"交换机吧消息发给和自己绑定的队列\"},\"427\":{\"t\":\"队列中的消费者都可以拿到消息\"},\"428\":{\"h\":\"生产者\",\"a\":\"生产者\"},\"429\":{\"t\":\"public class producer { public static void main(String[] args) throws IOException, TimeoutException { // 创建连接对象 Connection connection = RabbitMQConnection.getConnection(); Channel channel = connection.createChannel(); // 将通道声明到交换机 (交换机名称，类型) channel.exchangeDeclare(\\\"one\\\",\\\"fanout\\\"); channel.basicPublish(\\\"one\\\",\\\"\\\",null,\\\"hello world\\\".getBytes()); channel.close(); connection.close(); } } \"},\"430\":{\"h\":\"消费者\",\"a\":\"消费者\"},\"431\":{\"t\":\"public class consumerOne { public static void main(String[] args) throws IOException, TimeoutException { Connection connection = RabbitMQConnection.getConnection(); Channel channel = connection.createChannel(); // 通道绑定交换机 channel.exchangeDeclare(\\\"one\\\",\\\"fanout\\\"); // 临时队列 String queue = channel.queueDeclare().getQueue(); // 交换机和队列绑定 channel.queueBind(queue,\\\"one\\\",\\\"\\\"); // 消费消息 channel.basicConsume(queue,true,new DefaultConsumer(channel){ @Override public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException { System.out.println(\\\"new String(body) = \\\" + new String(body)); } }); } } \"},\"432\":{\"h\":\"路由模型\",\"a\":\"路由模型\"},\"433\":{\"h\":\"直连\",\"a\":\"直连\"},\"434\":{\"t\":\"Description\"},\"435\":{\"t\":\"在fanout的模式下，一条消息，会被订阅的队列消费。但有时我们希望不同的消息被不同的队列消费，\"},\"436\":{\"t\":\"此时就用到了 Direct类型的Exchange\"},\"437\":{\"t\":\"队列与交换机绑定，不再是任意绑定了，而是要指定一个RoutingKey(路由key)\"},\"438\":{\"t\":\"消息 的发送方在向exchang发送消息时，也必须要指定一个RoutingKey\"},\"439\":{\"t\":\"Exchange在发送消息时，会根据指定的RoutingKey进行判断，只有队列的RoutingKey与消息的RoutingKey完全一致，才会收到消息\"},\"440\":{\"h\":\"生产者\",\"a\":\"生产者-1\"},\"441\":{\"t\":\"public class producer { public static void main(String[] args) throws IOException, TimeoutException { Connection connection = RabbitMQConnection.getConnection(); Channel channel = connection.createChannel(); channel.exchangeDeclare(\\\"name_direct\\\",\\\"direct\\\"); String RoutingKey = \\\"warn\\\"; channel.basicPublish(\\\"name_direct\\\", RoutingKey,null, \\\"这是direct发布于的\\\".getBytes()); channel.close(); connection.close(); } } \"},\"442\":{\"h\":\"消费者\",\"a\":\"消费者-1\"},\"443\":{\"t\":\"public class consumerOne { public static void main(String[] args) throws IOException, TimeoutException { Connection connection = RabbitMQConnection.getConnection(); Channel channel = connection.createChannel(); // 通道绑定交换机 channel.exchangeDeclare(\\\"name_direct\\\",\\\"direct\\\"); // 临时队列 String queue = channel.queueDeclare().getQueue(); // 交换机和队列绑定和 RoutingKey channel.queueBind(queue,\\\"name_direct\\\",\\\"error\\\"); channel.queueBind(queue,\\\"name_direct\\\",\\\"info\\\"); channel.queueBind(queue,\\\"name_direct\\\",\\\"warn\\\"); // 消费消息 channel.basicConsume(queue,true,new DefaultConsumer(channel){ @Override public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException { System.out.println(\\\"error \\\" + new String(body)); } }); } } \"},\"444\":{\"t\":\"public class consumerTwo { public static void main(String[] args) throws IOException, TimeoutException { Connection connection = RabbitMQConnection.getConnection(); Channel channel = connection.createChannel(); // 通道绑定交换机 channel.exchangeDeclare(\\\"name_direct\\\",\\\"direct\\\"); // 临时队列 String queue = channel.queueDeclare().getQueue(); // 交换机和队列绑定和 RoutingKey channel.queueBind(queue,\\\"name_direct\\\",\\\"warn\\\"); // 消费消息 channel.basicConsume(queue,true,new DefaultConsumer(channel){ @Override public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException { System.out.println(\\\"info \\\" + new String(body)); } }); } } \"},\"445\":{\"h\":\"动态\",\"a\":\"动态\"},\"446\":{\"t\":\"Description\"},\"447\":{\"t\":\"Topic类型的Exchange与Direct 相比，都是可以根据Routinghey把消息路由到不同的队列。只不过Topic 类型Exchange可以让队列在绑定Routing key的时候使用通配符!这种模型Routingkey一般都是由一个或多个单词组成，多个单词之间以\\\". \\\"分割，例如:item.insert\"},\"448\":{\"t\":\"* 匹配不多不少恰好一个单词\"},\"449\":{\"t\":\"admin.* --> admin.hh.abc | admin.hh\"},\"450\":{\"t\":\"# 匹配一个或多个单词\"},\"451\":{\"t\":\"admin.# --> admin.hh\"},\"452\":{\"h\":\"代码\",\"a\":\"代码\"},\"453\":{\"t\":\"public class producer { public static void main(String[] args) throws IOException, TimeoutException { Connection connection = RabbitMQConnection.getConnection(); Channel channel = connection.createChannel(); channel.exchangeDeclare(\\\"name_topic\\\",\\\"topic\\\"); String RoutingKey = \\\"warn.js\\\"; channel.basicPublish(\\\"name_direct\\\", RoutingKey,null, \\\"这是direct发布于的\\\".getBytes()); channel.close(); connection.close(); } } \"},\"454\":{\"t\":\"public class consumerOne { public static void main(String[] args) throws IOException, TimeoutException { Connection connection = RabbitMQConnection.getConnection(); Channel channel = connection.createChannel(); // 通道绑定交换机 channel.exchangeDeclare(\\\"name_topic\\\",\\\"topic\\\"); // 临时队列 String queue = channel.queueDeclare().getQueue(); // 交换机和队列绑定和 RoutingKey channel.queueBind(queue,\\\"name_topic\\\",\\\"error.*\\\"); //error.xxx | error.aaa channel.queueBind(queue,\\\"name_topic\\\",\\\"info.#\\\");//info.gag.agsdga | info.gas.gas.g.asg. channel.queueBind(queue,\\\"name_topic\\\",\\\"warn\\\"); // 消费消息 channel.basicConsume(queue,true,new DefaultConsumer(channel){ @Override public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException { System.out.println(\\\"error \\\" + new String(body)); } }); } } \"},\"455\":{\"h\":\"spring boot 整合\",\"a\":\"spring-boot-整合\"},\"456\":{\"t\":\" <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-amqp</artifactId> </dependency> \"},\"457\":{\"t\":\"spring: rabbitmq: host: 127.0.0.1 port: 5672 username: ems password: ems virtual-host: /ems \"},\"458\":{\"h\":\"Test\",\"a\":\"test\"},\"459\":{\"t\":\"@SpringBootTest public class rabbitMQTest { @Autowired private RabbitTemplate rabbitTemplate; // hello @Test void test(){ rabbitTemplate.convertAndSend(\\\"hello\\\",\\\"hello world\\\"); } // work @Test void work(){ for (int i = 0; i < 10; i++) { rabbitTemplate.convertAndSend(\\\"work\\\",\\\"hello work\\\"); } } //fanout @Test void fanout(){ rabbitTemplate.convertAndSend(\\\"fanout\\\",\\\"\\\",\\\"hello fanout\\\"); } // route @Test void direct(){ rabbitTemplate.convertAndSend(\\\"direct\\\",\\\"warn\\\",\\\"hello direct\\\"); } // 动态路由 @Test void Topic(){ rabbitTemplate.convertAndSend(\\\"topic\\\",\\\"user.hh.gash\\\",\\\"hello topic\\\"); } } \"},\"460\":{\"h\":\"简单\",\"a\":\"简单\"},\"461\":{\"t\":\"@Component //默认队列持久化 非独占 不是autodelete @RabbitListener(queuesToDeclare = @Queue(value = \\\"hello\\\")) public class RabbitMQ { // 第一种模式 @RabbitHandler public void recrive(String message){ System.out.println(\\\"message = \\\" + message); } } \"},\"462\":{\"h\":\"任务\",\"a\":\"任务\"},\"463\":{\"t\":\"@Component public class workConsumer { //公平消费 @RabbitListener(queuesToDeclare = @Queue(\\\"work\\\")) public void work1(String message){ System.out.println(\\\"message1 = \\\" + message); } @RabbitListener(queuesToDeclare = @Queue(\\\"work\\\")) public void work2(String message){ System.out.println(\\\"message2 = \\\" + message); } } \"},\"464\":{\"h\":\"广播\",\"a\":\"广播-1\"},\"465\":{\"t\":\"@Component public class fanoutConsumer { @RabbitListener(bindings = { @QueueBinding( value = @Queue, exchange = @Exchange(value = \\\"fanout\\\",type = \\\"fanout\\\") ) }) public void fanout1(String message){ System.out.println(\\\"message1 = \\\" + message); } @RabbitListener(bindings = { @QueueBinding( value = @Queue, exchange = @Exchange(value = \\\"fanout\\\",type = \\\"fanout\\\") ) }) public void fanout2(String message){ System.out.println(\\\"message2 = \\\" + message); } } \"},\"466\":{\"h\":\"静态路由\",\"a\":\"静态路由\"},\"467\":{\"t\":\"@Component public class routeConsumer { @RabbitListener(bindings = { @QueueBinding( value = @Queue, exchange = @Exchange(value = \\\"direct\\\",type = \\\"direct\\\"), key = {\\\"info\\\",\\\"warn\\\"} ) }) public void route1(String message){ System.out.println(\\\"message1 = \\\" + message); } @RabbitListener(bindings = { @QueueBinding( value = @Queue, exchange = @Exchange(value = \\\"direct\\\",type = \\\"direct\\\"), key = {\\\"warn\\\",\\\"message\\\"} ) }) public void route2(String message){ System.out.println(\\\"message2 = \\\" + message); } } \"},\"468\":{\"h\":\"动态路由\",\"a\":\"动态路由\"},\"469\":{\"t\":\"@Component public class topicConsumer { @RabbitListener(bindings = { @QueueBinding( value = @Queue, exchange = @Exchange(value = \\\"topic\\\",type = \\\"topic\\\"), key = {\\\"user.*\\\",\\\"user.#\\\"} ) }) public void topic1(String message){ System.out.println(\\\"message1 = \\\" + message); } @RabbitListener(bindings = { @QueueBinding( value = @Queue, exchange = @Exchange(value = \\\"topic\\\",type = \\\"topic\\\"), key = {\\\"user.*\\\",\\\"message\\\"} ) }) public void topic2(String message){ System.out.println(\\\"message2 = \\\" + message); } } \"},\"470\":{\"h\":\"延迟队列\",\"a\":\"延迟队列\"},\"471\":{\"t\":\"安装插件以及使用 config\"},\"472\":{\"t\":\"@Configuration public class TestDelayQueueConfig { public static final String DEAD_EXCHANGE = \\\"delay_exchange\\\"; public static final String DEAD_QUEUE = \\\"delay_queue\\\"; public static final String DEAD_ROUTING = \\\"delay_key\\\"; @Bean public CustomExchange delayExchange() { Map<String, Object> args = new HashMap<String, Object>(); args.put(\\\"x-delayed-type\\\", \\\"direct\\\"); return new CustomExchange(DEAD_EXCHANGE, \\\"x-delayed-message\\\", true, false, args); } /** * 延迟消息队列 * @return */ @Bean public Queue delayQueue() { return new Queue(DEAD_QUEUE, true); } @Bean public Binding deplyBinding() { return BindingBuilder .bind(delayQueue()) .to(delayExchange()) .with(DEAD_ROUTING) .noargs(); } } \"},\"473\":{\"h\":\"生产者\",\"a\":\"生产者-2\"},\"474\":{\"t\":\"@Component public class DeplyProducer { @Resource RabbitTemplate rabbitTemplate; public void send(String msg, Integer delayTime){ // MessageProperties messageProperties = new MessageProperties(); // messageProperties.setDelay(delayTime); // Message message = new Message(msg.getBytes(), messageProperties); // rabbitTemplate.convertAndSend(DEAD_EXCHANGE, DEAD_ROUTING, message); rabbitTemplate.convertAndSend(DEAD_EXCHANGE, DEAD_ROUTING, msg, message1 -> { message1.getMessageProperties().setDelay(delayTime); return message1;} ); } } \"},\"475\":{\"h\":\"消费者\",\"a\":\"消费者-2\"},\"476\":{\"t\":\"@Component public class DeplyConsumer { @RabbitListener(queues = DEAD_QUEUE) public void onMessage(String msg) { System.out.println(\\\"收到信息了 msg = \\\" + msg); } } \"},\"477\":{\"h\":\"Redis\"},\"478\":{\"t\":\"Redis详细解释\"},\"479\":{\"h\":\"安装\",\"a\":\"安装\"},\"480\":{\"t\":\"sudo apt update sudo apt install redis-server redis-cli 启动命令 \"},\"481\":{\"h\":\"基本命令\",\"a\":\"基本命令\"},\"482\":{\"t\":\"bdsize 当前数据库大小 select 数据库切换 flushdb 清空当前数据库 flushall 清空所有数据库 type name 查看key的类型 \"},\"483\":{\"h\":\"五大数据类型\",\"a\":\"五大数据类型\"},\"484\":{\"h\":\"Redsi-Key\",\"a\":\"redsi-key\"},\"485\":{\"t\":\"keys * 打印所有的key set name hhh 设置k-v(\\\"name\\\",\\\"hh\\\") get name 打印name的value exists name 判断key是否存在 move name 1 将name移入到数据库1中 expire name 5 设置name 5s 过期 ttl name 查看name剩余过期时间 \"},\"486\":{\"h\":\"String\",\"a\":\"string\"},\"487\":{\"t\":\"append name \\\"world\\\" #value后面增加world strlen name #value的长度 incr age #实现自增 incrby age 20 #增加20 decr age #实现自减 dectby age 20 #减少20 getrange name 0 3 #串的截取 mget mset #批量set或get setnx #如果存在则不创建 getset #找不到就创建 找到就设置 \"},\"488\":{\"h\":\"List\",\"a\":\"list\"},\"489\":{\"t\":\"lpush list hello #往list中加入hello lrange list 0 -1 #打印所有 lpop/rpop list #删除左右头部 lindex list 1 # 打印下标1的值 llen list # 长度 lrem list 1 hello # 删除一个hello ltrim list 2 4 # 截取 剩余2-4 lset list 0 hello # 指定下标值替换为hello \"},\"490\":{\"h\":\"set\",\"a\":\"set\"},\"491\":{\"t\":\"sadd: 向集合中添加元素。例如：sadd myset \\\"element1\\\" \\\"element2\\\" smembers: 返回集合中所有元素。例如：smembers myset sismember: 判断元素是否在集合中。例如：sismember myset \\\"element1\\\" scard: 返回集合中元素的数量。例如：scard myset srem: 从集合中删除元素。例如：srem myset \\\"element1\\\" spop: 从集合中弹出一个随机元素。例如：spop myset sunion: 返回多个集合的并集。例如：sunion set1 set2 set3 sdiff: 返回多个集合的差集。例如：sdiff set1 set2 set3 sinter: 返回多个集合的交集。例如：sinter set1 set2 set3 srandmember: 随机返回集合中的一个元素。例如：srandmember myset \"},\"492\":{\"h\":\"Hash\",\"a\":\"hash\"},\"493\":{\"t\":\"hset key field value : 在key对应的hash中设置field对应的value。如果key不存在，则新建一个。 例如:hset user:1 name \\\"tom\\\" hget key field : 获取key对应的hash中field对应的value。 例如: hget user:1 name hgetall key : 获取key对应的hash中所有的键值对。 例如: hgetall user:1 hdel key field [field ...] : 删除key对应的hash中的一个或多个field。 例如: hdel user:1 name hlen key : 获取key对应的hash中field的数量。 例如: hlen user:1 hexists key field : 检查key对应的hash中是否存在field。 例如: hexists user:1 name hkeys key : 获取key对应的hash中所有的field。 例如: hkeys user:1 hvals key : 获取key对应的hash中所有的value。 例如: hvals user:1 这里是一些基本的Redis Hash命令。实际上还有许多其他的命令可供使用，如hincrby、hmset、hmget等。 \"},\"494\":{\"h\":\"Sorted sets\",\"a\":\"sorted-sets\"},\"495\":{\"t\":\"zadd: 向有序集合中添加元素，支持指定分数。例如：zadd mysortedset 1 \\\"element1\\\" 2 \\\"element2\\\" zrange: 返回有序集合中指定范围的元素。例如：zrange mysortedset 0 -1 zrangebyscore: 返回有序集合中指定分数范围的元素。例如：zrangebyscore mysortedset 1 2 zrank: 返回有序集合中指定元素的排名。例如：zrank mysortedset \\\"element1\\\" zrem: 从有序集合中删除元素。例如：zrem mysortedset \\\"element1\\\" zcount: 返回有序集合中指定分数范围的元素数量。例如：zcount mysortedset 1 2 zincrby: 对有序集合中指定元素的分数进行增加/减少操作。例如：zincrby mysortedset 2 \\\"element1\\\" zcard: 返回有序集合中元素的数量。例如：zcard mysortedset zunionstore: 计算多个有序集合的并集，并将结果存储到新的有序集合中。例如：zunionstore new_sortedset 2 sortedset1 sortedset2 zinterstore: 计算多个有序集合的交集，并将结果存储到新的有序集合中。例如：zinterstore new_sortedset 2 sortedset1 sortedset2 \"},\"496\":{\"h\":\"序列化\",\"a\":\"序列化\"},\"497\":{\"t\":\"Redis是一种内存数据库，为了更有效地使用内存，它需要对存储的数据进行序列化，使数据占用的空间更小。序列化是指将数据结构转换为字节流的过程。\"},\"498\":{\"t\":\"Redis支持多种序列化格式，如二进制协议（Redis默认使用的序列化格式）、JSON、MessagePack等。二进制协议是Redis自定义的序列化格式，它可以最大程度地减少数据占用的空间。JSON和MessagePack是常用的序列化格式，它们可以方便地与其他语言和系统进行交互。\"},\"499\":{\"h\":\"实现\",\"a\":\"实现\"},\"500\":{\"t\":\"stu.java\"},\"501\":{\"t\":\"public class stu implements Serializable { private Integer id; private String name; } \"},\"502\":{\"t\":\"RedisConfig.java\"},\"503\":{\"t\":\"@Configuration public class RedisConfig{ @Bean //配置redisTemplate // 默认情况下的模板只能支持 RedisTemplate<String,String>， // 只能存入字符串，很多时候，我们需要自定义 RedisTemplate ，设置序列化器 public RedisTemplate<String,Object> redisTemplate(RedisConnectionFactory factory){ RedisTemplate<String,Object> template = new RedisTemplate <>(); template.setConnectionFactory(factory); Jackson2JsonRedisSerializer jackson2JsonRedisSerializer = new Jackson2JsonRedisSerializer(Object.class); ObjectMapper om = new ObjectMapper(); om.setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.ANY); om.enableDefaultTyping(ObjectMapper.DefaultTyping.NON_FINAL); jackson2JsonRedisSerializer.setObjectMapper(om); StringRedisSerializer stringRedisSerializer = new StringRedisSerializer(); // key采用String的序列化方式 template.setKeySerializer(stringRedisSerializer); template.setValueSerializer(stringRedisSerializer); // hash的key也采用String的序列化方式 template.setHashKeySerializer(stringRedisSerializer); // value序列化方式采用jackson template.setValueSerializer(jackson2JsonRedisSerializer); // hash的value序列化方式采用jackson template.setHashValueSerializer(jackson2JsonRedisSerializer); template.afterPropertiesSet(); return template; } } \"},\"504\":{\"h\":\"测试\",\"a\":\"测试\"},\"505\":{\"t\":\" @Autowired private RedisTemplate redisTemplate; @Test void contextLoads() { stu stu = new stu(1, \\\"liming\\\"); redisTemplate.opsForValue().set(\\\"hh\\\",stu); System.out.println(redisTemplate.opsForValue().get(\\\"hh\\\")); } \"},\"506\":{\"h\":\"持久化\",\"a\":\"持久化\"},\"507\":{\"h\":\"RDB\",\"a\":\"rdb\"},\"508\":{\"t\":\"RDB 是 Redis Database 文件的缩写，它是 Redis 的默认数据持久化方式。RDB 文件是在指定的时间间隔内（通常是每几秒或几分钟）自动生成的快照文件。这种方式可以在损失一定数据的情况下更快地恢复数据库。\"},\"509\":{\"h\":\"触发\",\"a\":\"触发\"},\"510\":{\"t\":\"保存配置： -- save：只管保存，其他不管，全部阻塞。 -- bgsave：Redis 会在后台异步进行快照操作，快照同时还可以响应客户端请求。 -- lastsave：获取最后一次成功执行快照的时间。\"},\"511\":{\"t\":\"执行 flushall 命令，也会产生 dump.rdb 文件，但里面是空的，无意义 。\"},\"512\":{\"t\":\"退出的时候也会产生 dump.rdb 文件。\"},\"513\":{\"h\":\"AOF\",\"a\":\"aof\"},\"514\":{\"t\":\"AOF 是 Append-Only File 的缩写，它是 Redis 的另一种数据持久化方式。AOF 文件是将 Redis 所有写操作命令追加到文件的过程，因此可以保证数据的完整性。\"},\"515\":{\"t\":\"# 是否以append only模式作为持久化方式，默认使用的是rdb方式持久化，这种方式在许多应用中已经足够用了 appendonly no # appendfilename AOF 文件名称 appendfilename \\\"appendonly.aof\\\" # appendfsync aof持久化策略的配置： # no：不执行fsync，由操作系统保证数据同步到磁盘，速度最快。 # always：每次写入都执行fsync，以保证数据同步到磁盘。 # everysec：每秒执行一次fsync，可能会导致丢失这1s数据。 appendfsync everysec # 重写时是否可以运用Appendfsync，用默认no即可，保证数据安全性 No-appendfsync-on-rewrite # 设置重写的基准值 Auto-aof-rewrite-min-size # 设置重写的基准值 Auto-aof-rewrite-percentage \"},\"516\":{\"h\":\"Spring SpringMVC\"},\"517\":{\"h\":\"Spring\",\"a\":\"spring\"},\"518\":{\"t\":\"Spring-01-初识Spring_哔哩哔哩_bilibili\"},\"519\":{\"h\":\"IoC\",\"a\":\"ioc\"},\"520\":{\"t\":\"Ioc—Inversion of Control\"},\"521\":{\"t\":\"一种思想。 创建对象、管理对象\"},\"522\":{\"t\":\"一般对象都是直接通过new出来 ，交由IoC管理后，IoC容器来控制对象的创建\"},\"523\":{\"t\":\"配置实在是多\"},\"524\":{\"t\":\"pom.xml\"},\"525\":{\"t\":\"<dependency> <!-- 1.导入--> <groupId>org.springframework</groupId> <artifactId>spring-context</artifactId> <version>5.3.23</version> </dependency> \"},\"526\":{\"t\":\"applicationContext.xml\"},\"527\":{\"t\":\"<!-- 2.配置Bean--> <bean id=\\\"bookDao\\\" class=\\\"com.beink.dao.Impl.bookDaoImpl\\\"/> <bean id=\\\"bookService\\\" class=\\\"com.beink.service.Impl.bookServiceImpl\\\"/> \"},\"528\":{\"t\":\"Main.java\"},\"529\":{\"t\":\"public class Main { public static void main(String[] args) { // 3.获取容器 ApplicationContext atx = new ClassPathXmlApplicationContext(\\\"applicationContext.xml\\\"); // 4. 获取bean bookDao bookDao = (bookDao) atx.getBean(\\\"bookDao\\\"); bookDao.save(); // 等同于 bookDao bookDao1 = new bookDaoImpl(); bookDao1.save(); } } \"},\"530\":{\"h\":\"Bean\",\"a\":\"bean\"},\"531\":{\"t\":\"被构造 调用的是无参构造 生命周期： ``` public void init(){ System.out.println(\\\"init\\\"); } public void destory(){ System.out.println(\\\"destory\\\"); } 配置 <bean init-method=\\\"init\\\" destroy-method=\\\"destory\\\"/> 或者 直接 implements InitializingBean, DisposableBean 同样效果 ``` \"},\"532\":{\"h\":\"依赖注入\",\"a\":\"依赖注入\"},\"533\":{\"h\":\"setter\",\"a\":\"setter\"},\"534\":{\"t\":\".xml <bean id=\\\"bookDao\\\" class=\\\"com.beink.dao.Impl.bookDaoImpl\\\"> <property name=\\\"a\\\" value=\\\"123\\\"/> <property name=\\\"s\\\" value=\\\"true\\\"/> </bean> Impl.java private String s; private int a; \"},\"535\":{\"h\":\"构造器\",\"a\":\"构造器\"},\"536\":{\"t\":\"<bean id=\\\"bookDao\\\" class=\\\"com.beink.dao.Impl.bookDaoImpl\\\"> <constructor-arg name=\\\"a\\\" value=\\\"6\\\"/> <constructor-arg name=\\\"s\\\" value=\\\"true\\\"/> </bean> <bean id=\\\"bookService\\\" class=\\\"com.beink.service.Impl.bookServiceImpl\\\"> <!--red对应ID--> <constructor-arg name=\\\"bookdao\\\" ref=\\\"bookDao\\\"/> </bean> \"},\"537\":{\"t\":\"依赖注入\"},\"538\":{\"t\":\"private bookDao book_dao; public void setBookdao(bookDao bookdao){ this.book_dao = bookdao; } \"},\"539\":{\"t\":\"一般 注入\"},\"540\":{\"t\":\"private String s; private int a; public bookDaoImpl(String s, int a) { this.s = s; this.a = a; } \"},\"541\":{\"h\":\"集合注入\",\"a\":\"集合注入\"},\"542\":{\"t\":\" <bean id=\\\"bookDao\\\" class=\\\"com.beink.dao.Impl.bookDaoImpl\\\"> <property name=\\\"list\\\"> <array> <value>hello </value> <value>world</value> </array> </property> <property name=\\\"map\\\"> <map> <entry key=\\\"hello\\\" value=\\\"world\\\"></entry> </map> </property> </bean> \"},\"543\":{\"h\":\"注解开发\",\"a\":\"注解开发\"},\"544\":{\"t\":\"@Component(\\\"名字\\\") 定义Bean\"},\"545\":{\"t\":\"---@Service\"},\"546\":{\"t\":\"---@Controller(同样效果 只是便于理解)\"},\"547\":{\"t\":\"---@Repository\"},\"548\":{\"t\":\"@Configuration 设置位配置类 类似于applicationContext.xml @ComponentScan(\\\"com.beink\\\") 扫描路径 自动装配到spring的bean @Scope(\\\"singleton\\\") 单例 @PostConstruct 生命周期-初始化 @PreDestroy 生命周期-销毁 @Autowired 自动装配 === private bookDao bookdao = new bookDaoImpl(); @Value(\\\"${name}\\\") 简单类型注入 private String s; @PropertySource(\\\"xxx.yml\\\") 数据源 内容--（name=hello world） \"},\"549\":{\"h\":\"AOP\",\"a\":\"aop\"},\"550\":{\"t\":\"不改变原始设计 将功能增强\"},\"551\":{\"h\":\"举例\",\"a\":\"举例\"},\"552\":{\"t\":\"@Component @Aspect //这是个aop public class MyAop { // 在哪里执行 @Pointcut(\\\"execution(void com.beink.dao.bookDao.save())\\\") private void ss(){} // 绑定 @AfterReturning(\\\"ss()\\\") public void set(){ System.out.println(\\\"AOP\\\"); } } \"},\"553\":{\"h\":\"切入点表达式\",\"a\":\"切入点表达式\"},\"554\":{\"t\":\"使用*通配符即可 @Pointcut(\\\"execution( * * com.beink.dao.*)\\\") \"},\"555\":{\"h\":\"通知类型\",\"a\":\"通知类型\"},\"556\":{\"t\":\"public class MyAop { @Pointcut(\\\"execution(void com.beink.dao.bookDao.save())\\\") private void ss(){} @AfterReturning(\\\"ss()\\\") public void set(){ System.out.println(\\\"AOP\\\"); } // 环绕 @Around(\\\"ss()\\\") public void round(ProceedingJoinPoint e) throws Throwable { System.out.println(\\\"qian\\\"); e.proceed();/*调用原始操作*/ System.out.println(\\\"hou\\\"); // 如果有返回值 返回对象必须是Object } // @AfterReturning // @AfterThrowing } \"},\"557\":{\"h\":\"获取通知数据\",\"a\":\"获取通知数据\"},\"558\":{\"t\":\"public class MyAop { @Pointcut(\\\"execution(void com.beink.dao.bookDao.save(..))\\\") private void ss(){} // 环绕 @Around(\\\"ss()\\\") public Object round(ProceedingJoinPoint e) throws Throwable { Object[] args = e.getArgs(); e.proceed();/*调用原始操作*/ System.out.println(Arrays.toString(args));/*获取参数*/ // 修改参数 args[0] = 666; Object ret = e.proceed(args); return ret; } } \"},\"559\":{\"h\":\"SpringMVC\",\"a\":\"springmvc\"},\"560\":{\"t\":\"SpringMVC-02-SpringMVC入门案例_哔哩哔哩_bilibili\"},\"561\":{\"h\":\"创建使用\",\"a\":\"创建使用\"},\"562\":{\"t\":\"pom.xml\"},\"563\":{\"t\":\" <dependencies> <dependency> <groupId>javax.servlet</groupId> <artifactId>javax.servlet-api</artifactId> <version>4.0.1</version> <scope>provided</scope> </dependency> <dependency> <groupId>org.springframework</groupId> <artifactId>spring-webmvc</artifactId> <version>5.3.23</version> </dependency> </dependencies> \"},\"564\":{\"t\":\"userControler类\"},\"565\":{\"t\":\"@Controller //定义Bean public class userController { // 访问路径 @RequestMapping(\\\"/save\\\") // 返回值类型 @ResponseBody public String save(){ System.out.println(\\\"hhh\\\"); return \\\"hello world\\\"; } } \"},\"566\":{\"t\":\"config类\"},\"567\":{\"t\":\"servletinitConfig.java //定义一个servlet启动配置，在里面加载spring配置 public class servletinitConfig extends AbstractDispatcherServletInitializer { // 加载springMVC配置 @Override protected WebApplicationContext createServletApplicationContext() { AnnotationConfigWebApplicationContext ctx = new AnnotationConfigWebApplicationContext(); ctx.register(springMVCConfig.class); return ctx; } //设置那些请求归springMVC处理 @Override protected String[] getServletMappings() { return new String[]{\\\"/\\\"}; } //加载spring配置 @Override protected WebApplicationContext createRootApplicationContext() { return null; } } springMVCConfig.java //加载对应的Bean @ComponentScan(\\\"com.beink.controller\\\") //加载配置 @Configuration public class springMVCConfig { } \"},\"568\":{\"t\":\"配置Tomcat启动即可。。\"},\"569\":{\"h\":\"请求\",\"a\":\"请求\"},\"570\":{\"h\":\"get\",\"a\":\"get\"},\"571\":{\"t\":\"/save?name=name\"},\"572\":{\"t\":\" @RequestMapping(\\\"/save\\\") @ResponseBody public String save(String name){ System.out.println(name); return \\\"hello world\\\"; } \"},\"573\":{\"h\":\"post\",\"a\":\"post\"},\"574\":{\"t\":\" @RequestMapping(\\\"/save\\\") @ResponseBody public String save(String name,String id){ System.out.println(name + id); return \\\"hello world\\\"; } \"},\"575\":{\"h\":\"post乱码处理\",\"a\":\"post乱码处理\"},\"576\":{\"t\":\"img\"},\"577\":{\"h\":\"参数类型\",\"a\":\"参数类型\"},\"578\":{\"t\":\"SpringMVC-09-json数据传递参数_哔哩哔哩_bilibili\"},\"579\":{\"t\":\" @ResponseBody public String save(@RequestParam(\\\"name\\\") String userName, String id){ // 一： 会把地址中的name映射给userName // 二： save(User user) 当名字一样使 会自动把属性放进去 // 三：Map List.....@RequestParam List<String> // 四：JSON // 五：时间 // 六：。。。 System.out.println(userName + id); return \\\"hello world\\\"; } \"},\"580\":{\"h\":\"响应\",\"a\":\"响应\"},\"581\":{\"t\":\" @RequestMapping(\\\"topage\\\") public String toapage(){ // 跳转到index.jsp页面 return \\\"index.jsp\\\"; } @RequestMapping(\\\"ttt\\\") @ResponseBody public String toattpage(){ // 返回一个串“index.jsp” return \\\"index.jsp\\\"; } \"},\"582\":{\"h\":\"Rest风格\",\"a\":\"rest风格\"},\"583\":{\"t\":\"访问形式： /put/5 /get/6\"},\"584\":{\"t\":\"SpringMVC-14-RESTful快速开发_哔哩哔哩_bilibili\"},\"585\":{\"t\":\" @RequestMapping(value = \\\"/put/{id}\\\",method = RequestMethod.PUT) @ResponseBody public void put(@PathVariable String id){ System.out.println(id); } @RequestMapping(value = \\\"/get/{id}\\\",method = RequestMethod.GET) @ResponseBody public void get(@PathVariable String id){ System.out.println(id); } POST DELETE .... \"},\"586\":{\"h\":\"注解说明\",\"a\":\"注解说明\"},\"587\":{\"t\":\"@Controller //定义Bean @RequestMapping(\\\"/save\\\") // 访问路径 @ResponseBody //返回值 @RequestParam //用于接收url地址参数 /get?id=5 @ResponseBody //用于接收JSON数据 @PathVariable //接受url地址参数 /get/ @RestController //= @Controller + @ResponseBody @GetMapping(\\\"/get/{id}\\\") // == @RequestMapping(value = \\\"/get/{id}\\\",method = RequestMethod.GET) \"},\"588\":{\"h\":\"其他\",\"a\":\"其他\"},\"589\":{\"h\":\"自定义注解为属性赋值\",\"a\":\"自定义注解为属性赋值\"},\"590\":{\"t\":\"使用场景： 把用户传过来的token，解析出来用户信息， 为属性赋值。\"},\"591\":{\"h\":\"1.创建自定义注解\",\"a\":\"_1-创建自定义注解\"},\"592\":{\"t\":\"@Target({ElementType.PARAMETER}) @Documented @Retention(RetentionPolicy.RUNTIME) public @interface UserInfo { } \"},\"593\":{\"h\":\"2.创建拦截器 ,获得token,存入作用域中\",\"a\":\"_2-创建拦截器-获得token-存入作用域中\"},\"594\":{\"t\":\"public class GlobalInterceptor implements HandlerInterceptor { @Override public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception { String token = request.getHeader(\\\"Authorization\\\").substring(7); request.getSession().setAttribute(\\\"account\\\", JwtUtil.parseJWT(token).getSubject()); return true; } } \"},\"595\":{\"h\":\"3.配置拦截器\",\"a\":\"_3-配置拦截器\"},\"596\":{\"t\":\"@Configuration public class interceptor extends WebMvcConfigurationSupport { @Override protected void addArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) { argumentResolvers.add(new UserInfoImpl()); } @Override protected void addInterceptors(InterceptorRegistry registry) { registry.addInterceptor(new GlobalInterceptor()).addPathPatterns(\\\"/user/account/color/\\\"); super.addInterceptors(registry); } } \"},\"597\":{\"h\":\"4.实现自定义注解\",\"a\":\"_4-实现自定义注解\"},\"598\":{\"t\":\"public class UserInfoImpl implements HandlerMethodArgumentResolver { @Override public boolean supportsParameter(MethodParameter methodParameter) { return methodParameter.getParameterAnnotation(UserInfo.class)!=null; } @Override public Object resolveArgument(MethodParameter methodParameter, ModelAndViewContainer modelAndViewContainer, NativeWebRequest nativeWebRequest, WebDataBinderFactory webDataBinderFactory) throws Exception { HttpServletRequest nativeRequest = (HttpServletRequest) nativeWebRequest.getNativeRequest(); return nativeRequest.getSession().getAttribute(\\\"account\\\"); } } \"},\"599\":{\"h\":\"5.使用\",\"a\":\"_5-使用\"},\"600\":{\"t\":\" @PostMapping(\\\"/user/account/color/\\\") public Result setColor(@UserInfo String account, @RequestParam Map<String,String>map){ String color = map.get(\\\"backImg\\\"); String list = map.get(\\\"list\\\"); return colorService.setColor(account,color,list); } \"},\"601\":{\"h\":\"拦截器\",\"a\":\"拦截器\"},\"602\":{\"t\":\"HttpServletRequest request 发送过来的信息 HttpServletResponse response 发送走的信息\"},\"603\":{\"h\":\"1.先实现一个拦截对象\",\"a\":\"_1-先实现一个拦截对象\"},\"604\":{\"t\":\"@Component public class MyInterceptor implements HandlerInterceptor { // 被拦截的操作之前运行 @Override public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception { System.out.println(\\\"preHandle...\\\"); // true 通行 // false 拦截 return true; } // 被拦截的操作之后运行 @Override public void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView) throws Exception { System.out.println(\\\"postHandle...\\\"); } // 也是后面 也在posthandle之后 @Override public void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex) throws Exception { System.out.println(\\\"afterCompletion...\\\"); } } \"},\"605\":{\"h\":\"2.配置\",\"a\":\"_2-配置\"},\"606\":{\"t\":\"@Configuration public class Support extends WebMvcConfigurationSupport { //implements WebMvcConfigurer 也行 // 拦截器对象 @Autowired private MyInterceptor myInterceptor; /** * * @param registry */ @Override protected void addInterceptors(InterceptorRegistry registry) { // 拦截路径 registry.addInterceptor(myInterceptor).addPathPatterns(\\\"/user\\\",\\\"/user*\\\"); } } \"},\"607\":{\"h\":\"过滤器\",\"a\":\"过滤器\"},\"608\":{\"h\":\"枚举\",\"a\":\"枚举\"},\"609\":{\"h\":\"Oother\"},\"610\":{\"h\":\"Other\"},\"611\":{\"h\":\"Springboot\"}},\"dirtCount\":0,\"index\":[[\"枚举\",{\"0\":{\"608\":1}}],[\"过滤器\",{\"0\":{\"607\":1}}],[\"过期\",{\"1\":{\"485\":1}}],[\"拦截路径\",{\"1\":{\"606\":1}}],[\"拦截\",{\"1\":{\"604\":1}}],[\"拦截器对象\",{\"1\":{\"606\":1}}],[\"拦截器\",{\"0\":{\"601\":1}}],[\"被拦截的操作之后运行\",{\"1\":{\"604\":1}}],[\"被拦截的操作之前运行\",{\"1\":{\"604\":1}}],[\"被构造\",{\"1\":{\"531\":1}}],[\"存入作用域中\",{\"0\":{\"593\":1}}],[\"存储\",{\"1\":{\"205\":1}}],[\"解析出来用户信息\",{\"1\":{\"590\":1}}],[\"解绑\",{\"1\":{\"67\":1}}],[\"接受url地址参数\",{\"1\":{\"587\":1}}],[\"访问形式\",{\"1\":{\"583\":1}}],[\"访问路径\",{\"1\":{\"565\":1,\"587\":1}}],[\"跳转到index\",{\"1\":{\"581\":1}}],[\"响应\",{\"0\":{\"580\":1}}],[\"修改参数\",{\"1\":{\"558\":1}}],[\"修改容器限制\",{\"1\":{\"205\":1}}],[\"调用原始操作\",{\"1\":{\"556\":1,\"558\":1}}],[\"调用的是无参构造\",{\"1\":{\"531\":1}}],[\"环绕\",{\"1\":{\"556\":1,\"558\":1}}],[\"切入点表达式\",{\"0\":{\"553\":1}}],[\"切换为分支xxx\",{\"1\":{\"57\":1}}],[\"绑定\",{\"1\":{\"552\":1}}],[\"举例\",{\"0\":{\"551\":1}}],[\"销毁\",{\"1\":{\"548\":1}}],[\"单例\",{\"1\":{\"548\":1}}],[\"单个字符\",{\"1\":{\"265\":1}}],[\"扫描路径\",{\"1\":{\"548\":1}}],[\"类似于applicationcontext\",{\"1\":{\"548\":1}}],[\"类型exchange可以让队列在绑定routing\",{\"1\":{\"447\":1}}],[\"类型\",{\"1\":{\"429\":1}}],[\"定义一个servlet启动配置\",{\"1\":{\"567\":1}}],[\"定义bean\",{\"1\":{\"544\":1,\"565\":1,\"587\":1}}],[\"定时任务\",{\"0\":{\"152\":1}}],[\"名字\",{\"1\":{\"544\":1}}],[\"集合注入\",{\"0\":{\"541\":1}}],[\"构造器\",{\"0\":{\"535\":1}}],[\"同样效果\",{\"1\":{\"531\":1,\"546\":1}}],[\"同restrict\",{\"1\":{\"313\":1}}],[\"```\",{\"1\":{\"531\":2}}],[\"等同于\",{\"1\":{\"529\":1}}],[\"交由ioc管理后\",{\"1\":{\"522\":1}}],[\"交换机和队列绑定和\",{\"1\":{\"443\":1,\"444\":1,\"454\":1}}],[\"交换机和队列绑定\",{\"1\":{\"431\":1}}],[\"交换机吧消息发给和自己绑定的队列\",{\"1\":{\"426\":1}}],[\"交换机名称\",{\"1\":{\"407\":1,\"409\":1,\"429\":1}}],[\"管理对象\",{\"1\":{\"521\":1}}],[\"初识spring\",{\"1\":{\"518\":1}}],[\"初始化\",{\"1\":{\"59\":1,\"548\":1}}],[\"速度最快\",{\"1\":{\"515\":1}}],[\"由操作系统保证数据同步到磁盘\",{\"1\":{\"515\":1}}],[\"由于sockjs在不支持websocket的浏览器中使用的是长轮询技术\",{\"1\":{\"141\":1}}],[\"所有写操作命令追加到文件的过程\",{\"1\":{\"514\":1}}],[\"所有的数据\",{\"1\":{\"366\":1}}],[\"无意义\",{\"1\":{\"511\":1}}],[\"无侵入\",{\"1\":{\"356\":1}}],[\"也行\",{\"1\":{\"606\":1}}],[\"也在posthandle之后\",{\"1\":{\"604\":1}}],[\"也是后面\",{\"1\":{\"604\":1}}],[\"也会产生\",{\"1\":{\"511\":1}}],[\"也必须要指定一个routingkey\",{\"1\":{\"438\":1}}],[\"执行\",{\"1\":{\"511\":1}}],[\"执行完此操作后\",{\"1\":{\"201\":1}}],[\"快照同时还可以响应客户端请求\",{\"1\":{\"510\":1}}],[\"全部阻塞\",{\"1\":{\"510\":1}}],[\"全部查出来\",{\"1\":{\"331\":1}}],[\"触发\",{\"0\":{\"509\":1}}],[\"持久化\",{\"0\":{\"506\":1}}],[\"我们需要自定义\",{\"1\":{\"503\":1}}],[\"很多时候\",{\"1\":{\"503\":1}}],[\"序列化是指将数据结构转换为字节流的过程\",{\"1\":{\"497\":1}}],[\"序列化\",{\"0\":{\"496\":1}}],[\"计算多个有序集合的交集\",{\"1\":{\"495\":1}}],[\"计算多个有序集合的并集\",{\"1\":{\"495\":1}}],[\"减少操作\",{\"1\":{\"495\":1}}],[\"减少20\",{\"1\":{\"487\":1}}],[\"zinterstore\",{\"1\":{\"495\":2}}],[\"zincrby\",{\"1\":{\"495\":2}}],[\"zunionstore\",{\"1\":{\"495\":2}}],[\"zcard\",{\"1\":{\"495\":2}}],[\"zcount\",{\"1\":{\"495\":2}}],[\"zrem\",{\"1\":{\"495\":2}}],[\"zrank\",{\"1\":{\"495\":2}}],[\"zrangebyscore\",{\"1\":{\"495\":2}}],[\"zrange\",{\"1\":{\"495\":2}}],[\"zadd\",{\"1\":{\"495\":2}}],[\"检查key对应的hash中是否存在field\",{\"1\":{\"493\":1}}],[\"随机返回集合中的一个元素\",{\"1\":{\"491\":1}}],[\"指定下标值替换为hello\",{\"1\":{\"489\":1}}],[\"指定名称和邮箱\",{\"0\":{\"54\":1}}],[\"剩余2\",{\"1\":{\"489\":1}}],[\"长度\",{\"1\":{\"489\":1}}],[\"长连接\",{\"1\":{\"134\":1}}],[\"往list中加入hello\",{\"1\":{\"489\":1}}],[\"找到就设置\",{\"1\":{\"487\":1}}],[\"找不到就创建\",{\"1\":{\"487\":1}}],[\"批量set或get\",{\"1\":{\"487\":1}}],[\"串的截取\",{\"1\":{\"487\":1}}],[\"增加20\",{\"1\":{\"487\":1}}],[\"判断元素是否在集合中\",{\"1\":{\"491\":1}}],[\"判断key是否存在\",{\"1\":{\"485\":1}}],[\"判断是否是图片类型\",{\"1\":{\"173\":1}}],[\"打印下标1的值\",{\"1\":{\"489\":1}}],[\"打印所有\",{\"1\":{\"489\":1}}],[\"打印所有的key\",{\"1\":{\"485\":1}}],[\"打印name的value\",{\"1\":{\"485\":1}}],[\"打包\",{\"1\":{\"74\":1,\"88\":1}}],[\"启动命令\",{\"1\":{\"480\":1}}],[\"启动容器\",{\"1\":{\"205\":1}}],[\"收到信息了\",{\"1\":{\"476\":1}}],[\"收件人\",{\"1\":{\"149\":2}}],[\"延迟消息队列\",{\"1\":{\"472\":1}}],[\"延迟队列\",{\"0\":{\"470\":1}}],[\"延迟5s启动\",{\"1\":{\"158\":1}}],[\"公平消费\",{\"1\":{\"463\":1}}],[\"第一种模式\",{\"1\":{\"461\":1}}],[\"第一次\",{\"1\":{\"67\":1}}],[\"整合\",{\"0\":{\"455\":1}}],[\"代码\",{\"0\":{\"452\":1}}],[\"匹配一个或多个单词\",{\"1\":{\"450\":1}}],[\"匹配不多不少恰好一个单词\",{\"1\":{\"448\":1}}],[\"都是可以根据routinghey把消息路由到不同的队列\",{\"1\":{\"447\":1}}],[\"都是书本上的呀\",{\"1\":{\"194\":1}}],[\"相比\",{\"1\":{\"447\":1}}],[\"相当与查询a\",{\"1\":{\"320\":1}}],[\"相当于1g\",{\"1\":{\"223\":1}}],[\"动态路由\",{\"0\":{\"468\":1},\"1\":{\"459\":1}}],[\"动态\",{\"0\":{\"445\":1}}],[\"动态条件查询\",{\"0\":{\"345\":1}}],[\"这是个aop\",{\"1\":{\"552\":1}}],[\"这是direct发布于的\",{\"1\":{\"441\":1,\"453\":1}}],[\"这种方式在许多应用中已经足够用了\",{\"1\":{\"515\":1}}],[\"这种方式可以在损失一定数据的情况下更快地恢复数据库\",{\"1\":{\"508\":1}}],[\"这种模型routingkey一般都是由一个或多个单词组成\",{\"1\":{\"447\":1}}],[\"这里是一些基本的redis\",{\"1\":{\"493\":1}}],[\"这只不过是一个测试而已\",{\"1\":{\"151\":3}}],[\"才会收到消息\",{\"1\":{\"439\":1}}],[\"才可以省去sudo权限\",{\"1\":{\"201\":1}}],[\"会自动把属性放进去\",{\"1\":{\"579\":1}}],[\"会把地址中的name映射给username\",{\"1\":{\"579\":1}}],[\"会在后台异步进行快照操作\",{\"1\":{\"510\":1}}],[\"会根据指定的routingkey进行判断\",{\"1\":{\"439\":1}}],[\"会被订阅的队列消费\",{\"1\":{\"435\":1}}],[\"会阻止删除\",{\"1\":{\"312\":1}}],[\"直接\",{\"1\":{\"531\":1}}],[\"直接删除\",{\"1\":{\"65\":1}}],[\"直连\",{\"0\":{\"433\":1}}],[\"路由key\",{\"1\":{\"437\":1}}],[\"路由模型\",{\"0\":{\"432\":1}}],[\"路径导航\",{\"1\":{\"14\":1,\"43\":1}}],[\"临时队列\",{\"1\":{\"431\":1,\"443\":1,\"444\":1,\"454\":1}}],[\"有多个消费者\",{\"1\":{\"422\":1}}],[\"流程如下\",{\"1\":{\"421\":1}}],[\"广播\",{\"0\":{\"420\":1,\"464\":1}}],[\"手动确认的表示\",{\"1\":{\"419\":1}}],[\"手动抛出异常\",{\"1\":{\"399\":1}}],[\"参数类型\",{\"0\":{\"577\":1}}],[\"参数\",{\"1\":{\"419\":1}}],[\"目前要求能者多劳\",{\"1\":{\"415\":1}}],[\"目录必须为空\",{\"1\":{\"112\":1}}],[\"目录列表\",{\"0\":{\"109\":1}}],[\"目录\",{\"0\":{\"7\":1},\"1\":{\"106\":1}}],[\"叫做循环\",{\"1\":{\"414\":1}}],[\"连接对象方法\",{\"1\":{\"411\":1}}],[\"连接不稳定\",{\"1\":{\"141\":1}}],[\"静态路由\",{\"0\":{\"466\":1}}],[\"静态代码块\",{\"1\":{\"411\":1}}],[\"静态资源访问\",{\"0\":{\"114\":1}}],[\"开始手动确认消息\",{\"1\":{\"417\":1}}],[\"开始消息的自动确认机制\",{\"1\":{\"409\":1}}],[\"开启代码自动缩进\",{\"1\":{\"223\":1}}],[\"消费同一个队列\",{\"1\":{\"414\":1}}],[\"消费时的回调接口\",{\"1\":{\"409\":1}}],[\"消费者\",{\"0\":{\"430\":1,\"442\":1,\"475\":1},\"1\":{\"409\":1}}],[\"消费消息\",{\"0\":{\"408\":1},\"1\":{\"409\":1,\"431\":1,\"443\":1,\"444\":1,\"454\":1}}],[\"消息\",{\"1\":{\"438\":1}}],[\"消息可能没有被消费者正确处理\",{\"1\":{\"405\":1}}],[\"消息被拿走后\",{\"1\":{\"405\":1}}],[\"消息队列\",{\"1\":{\"405\":1}}],[\"消息的消费者\",{\"1\":{\"405\":1}}],[\"消息产生者将消息放入队列\",{\"1\":{\"404\":1}}],[\"发布消息\",{\"1\":{\"407\":1}}],[\"发送走的信息\",{\"1\":{\"602\":1}}],[\"发送过来的信息\",{\"1\":{\"602\":1}}],[\"发送公钥\",{\"1\":{\"225\":1}}],[\"发送带附件的邮件\",{\"1\":{\"149\":1}}],[\"发送者\",{\"1\":{\"149\":1}}],[\"发送邮件\",{\"0\":{\"142\":1}}],[\"其他\",{\"0\":{\"588\":1}}],[\"其他不管\",{\"1\":{\"510\":1}}],[\"其他的连接不可用\",{\"1\":{\"407\":1,\"409\":1}}],[\"其它region请按实际情况填写\",{\"1\":{\"108\":1}}],[\"队列与交换机绑定\",{\"1\":{\"437\":1}}],[\"队列中的消费者都可以拿到消息\",{\"1\":{\"427\":1}}],[\"队列是否持久化\",{\"1\":{\"407\":1,\"409\":1}}],[\"队列名称\",{\"1\":{\"407\":1,\"409\":1}}],[\"通行\",{\"1\":{\"604\":1}}],[\"通知类型\",{\"0\":{\"555\":1}}],[\"通配符即可\",{\"1\":{\"554\":1}}],[\"通常是每几秒或几分钟\",{\"1\":{\"508\":1}}],[\"通道绑定交换机\",{\"1\":{\"431\":1,\"443\":1,\"444\":1,\"454\":1}}],[\"通道绑定对应的消息队列\",{\"1\":{\"407\":1,\"409\":1}}],[\"通道名称\",{\"1\":{\"407\":1}}],[\"通过map查询\",{\"1\":{\"366\":1}}],[\"通过多个id进行查询\",{\"1\":{\"366\":1}}],[\"通过id查询信息\",{\"1\":{\"366\":1}}],[\"通过get方法停止任务\",{\"1\":{\"162\":1}}],[\"端口号\",{\"1\":{\"407\":1,\"409\":1,\"411\":1}}],[\"生命周期\",{\"1\":{\"531\":1,\"548\":2}}],[\"生产者无权决定\",{\"1\":{\"425\":1}}],[\"生产者只能向交换机发送消息\",{\"1\":{\"425\":1}}],[\"生产者\",{\"0\":{\"428\":1,\"440\":1,\"473\":1},\"1\":{\"407\":1}}],[\"生产消息\",{\"0\":{\"406\":1}}],[\"生成\",{\"1\":{\"59\":1}}],[\"聊天\",{\"1\":{\"405\":1}}],[\"造成消息的丢失\",{\"1\":{\"405\":1}}],[\"已经从队列中消失了\",{\"1\":{\"405\":1}}],[\"监听\",{\"1\":{\"405\":1}}],[\"学习地址\",{\"1\":{\"401\":1}}],[\"学习与记录\",{\"0\":{\"6\":1}}],[\"博客园\",{\"1\":{\"401\":1}}],[\"逊老头\",{\"1\":{\"401\":1}}],[\"抛出运行时异常\",{\"1\":{\"399\":1}}],[\"捕获异常\",{\"1\":{\"399\":1}}],[\"任务\",{\"0\":{\"462\":1}}],[\"任务模型\",{\"0\":{\"412\":1}}],[\"任何异常都回滚\",{\"1\":{\"398\":1}}],[\"任意个字符\",{\"1\":{\"265\":1}}],[\"回滚事务\",{\"1\":{\"397\":1}}],[\"回退版本\",{\"1\":{\"63\":1}}],[\"完整性和一致性非常重要\",{\"1\":{\"396\":1}}],[\"以保证数据同步到磁盘\",{\"1\":{\"515\":1}}],[\"以避免并发访问引起的数据冲突和错误\",{\"1\":{\"394\":1}}],[\"以及b表的name\",{\"1\":{\"324\":1}}],[\"以及两张表交集部分\",{\"1\":{\"323\":1}}],[\"防止数据冲突和数据丢失等问题\",{\"1\":{\"392\":1}}],[\"要么全部失败回滚\",{\"1\":{\"392\":1}}],[\"要么全部执行成功\",{\"1\":{\"392\":1}}],[\"映射\",{\"1\":{\"375\":1}}],[\"赋值\",{\"1\":{\"373\":1}}],[\"雪花算法\",{\"1\":{\"373\":1}}],[\"改了\",{\"1\":{\"366\":1}}],[\"天天学习\",{\"1\":{\"366\":1}}],[\"支持指定分数\",{\"1\":{\"495\":1}}],[\"支持关键词自动转义\",{\"1\":{\"359\":1}}],[\"支持自定义全局通用操作\",{\"1\":{\"359\":1}}],[\"支持activerecord模式\",{\"1\":{\"358\":1}}],[\"支持主键自动生成\",{\"1\":{\"358\":1}}],[\"支持多种数据库\",{\"1\":{\"357\":1}}],[\"支持lambda形式调用\",{\"1\":{\"357\":1}}],[\"支持性\",{\"1\":{\"133\":1,\"137\":1}}],[\"损耗小\",{\"1\":{\"356\":1}}],[\"尚硅谷\",{\"1\":{\"355\":1}}],[\"官网学习地址\",{\"1\":{\"338\":1}}],[\"事务对于确保数据的正确性\",{\"1\":{\"396\":1}}],[\"事务会自动将所有操作撤消\",{\"1\":{\"393\":1}}],[\"事务可以优化数据库操作的性能\",{\"1\":{\"395\":1}}],[\"事务可以通过锁机制来控制这些操作的执行顺序\",{\"1\":{\"394\":1}}],[\"事务可以解决数据库并发访问的问题\",{\"1\":{\"394\":1}}],[\"事务可以在发生错误或异常时回滚到之前的状态\",{\"1\":{\"393\":1}}],[\"事务可以确保数据的一致性\",{\"1\":{\"392\":1}}],[\"事务可以确保多个操作在一个逻辑单元中执行\",{\"1\":{\"392\":1}}],[\"事务主要的作用体现在以下几个方面\",{\"1\":{\"391\":1}}],[\"事务\",{\"0\":{\"336\":1,\"389\":1}}],[\"基本命令\",{\"0\":{\"481\":1}}],[\"基本查询\",{\"0\":{\"245\":1}}],[\"基础\",{\"1\":{\"335\":1}}],[\"去重\",{\"1\":{\"333\":1}}],[\"去除首尾空格\",{\"1\":{\"297\":1}}],[\"男\",{\"1\":{\"331\":1,\"333\":2}}],[\"比如要求\",{\"1\":{\"331\":1}}],[\"比较运算符\",{\"1\":{\"251\":1}}],[\"联合查询\",{\"0\":{\"330\":1}}],[\"子查询介绍\",{\"1\":{\"335\":1}}],[\"子查询\",{\"0\":{\"334\":1}}],[\"子链接必须使用表别名\",{\"1\":{\"328\":1}}],[\"子表数据会设置为null\",{\"1\":{\"315\":1}}],[\"右外连接\",{\"0\":{\"325\":1}}],[\"左外连接\",{\"0\":{\"322\":1}}],[\"左箭头键\",{\"1\":{\"223\":1}}],[\"显式内连接\",{\"1\":{\"321\":1}}],[\"显示行号\",{\"1\":{\"223\":1}}],[\"隐患\",{\"1\":{\"405\":1}}],[\"隐式内连接\",{\"1\":{\"321\":1}}],[\"隐藏行号\",{\"1\":{\"223\":1}}],[\"两个消费者\",{\"1\":{\"414\":1}}],[\"两个表的所有组合\",{\"1\":{\"317\":1}}],[\"两者都应用广泛\",{\"1\":{\"126\":1}}],[\"笛卡尔积\",{\"1\":{\"317\":1}}],[\"级联删除\",{\"1\":{\"314\":1}}],[\"父表数据被删除\",{\"1\":{\"312\":1,\"315\":1}}],[\"外键到b表的\",{\"1\":{\"310\":1}}],[\"外键约束\",{\"0\":{\"308\":1},\"1\":{\"307\":1}}],[\"命令\",{\"1\":{\"309\":1,\"511\":1}}],[\"唯一约束\",{\"1\":{\"305\":1}}],[\"约束\",{\"0\":{\"302\":1}}],[\"获得token\",{\"0\":{\"593\":1}}],[\"获得指定year的年\",{\"1\":{\"301\":1}}],[\"获取参数\",{\"1\":{\"558\":1}}],[\"获取通知数据\",{\"0\":{\"557\":1}}],[\"获取bean\",{\"1\":{\"529\":1}}],[\"获取容器\",{\"1\":{\"529\":1}}],[\"获取最后一次成功执行快照的时间\",{\"1\":{\"510\":1}}],[\"获取key对应的hash中所有的value\",{\"1\":{\"493\":1}}],[\"获取key对应的hash中所有的field\",{\"1\":{\"493\":1}}],[\"获取key对应的hash中所有的键值对\",{\"1\":{\"493\":1}}],[\"获取key对应的hash中field的数量\",{\"1\":{\"493\":1}}],[\"获取key对应的hash中field对应的value\",{\"1\":{\"493\":1}}],[\"获取\",{\"1\":{\"411\":1}}],[\"获取连接中的通道\",{\"1\":{\"407\":1,\"409\":1}}],[\"获取连接对象\",{\"1\":{\"407\":1,\"409\":1,\"411\":1}}],[\"获取选择的文件\",{\"1\":{\"173\":1}}],[\"求参数x的四舍五入的值\",{\"1\":{\"299\":1}}],[\"数值函数\",{\"0\":{\"298\":1}}],[\"数据源\",{\"1\":{\"548\":1}}],[\"数据库切换\",{\"1\":{\"482\":1}}],[\"数据库名\",{\"1\":{\"210\":2,\"214\":2,\"216\":1,\"218\":2}}],[\"数据一致性\",{\"1\":{\"392\":1}}],[\"数据校验\",{\"0\":{\"164\":1}}],[\"数据格式紧凑\",{\"1\":{\"130\":1}}],[\"截取\",{\"1\":{\"297\":1,\"489\":1}}],[\"字符串函数\",{\"0\":{\"296\":1}}],[\"字段类型也一致\",{\"1\":{\"332\":1}}],[\"字段列表\",{\"1\":{\"243\":1,\"329\":1}}],[\"字段2=值2\",{\"1\":{\"237\":1}}],[\"字段2\",{\"1\":{\"231\":1,\"233\":1}}],[\"字段1=值1\",{\"1\":{\"237\":1}}],[\"字段1\",{\"1\":{\"231\":1,\"233\":1}}],[\"函数\",{\"0\":{\"295\":1}}],[\"每秒执行一次fsync\",{\"1\":{\"515\":1}}],[\"每次写入都执行fsync\",{\"1\":{\"515\":1}}],[\"每次消费一个\",{\"1\":{\"419\":1}}],[\"每个队列都绑定了交换机\",{\"1\":{\"424\":1}}],[\"每个消费者有自己的队列\",{\"1\":{\"423\":1}}],[\"每页记录数\",{\"1\":{\"293\":1}}],[\"每天中午12点执行任务\",{\"1\":{\"161\":1}}],[\"查询右表\",{\"1\":{\"326\":1}}],[\"查询左表全部数据\",{\"1\":{\"323\":1}}],[\"查询页码\",{\"1\":{\"293\":1}}],[\"查询记录数\",{\"1\":{\"292\":1}}],[\"查看name剩余过期时间\",{\"1\":{\"485\":1}}],[\"查看key的类型\",{\"1\":{\"482\":1}}],[\"查看所有容器的统计信息\",{\"1\":{\"205\":1}}],[\"查看某个容器内的所有进程\",{\"1\":{\"205\":1}}],[\"查看本地的所有容器\",{\"1\":{\"205\":1}}],[\"查看远程库的详细信息\",{\"1\":{\"67\":1}}],[\"查看远程库的信息\",{\"1\":{\"67\":1}}],[\"查看远程仓库信息\",{\"1\":{\"67\":1}}],[\"查看工作区中文件当前状态\",{\"1\":{\"63\":1}}],[\"查看文件内容\",{\"1\":{\"63\":1}}],[\"查看每一次修改历史\",{\"1\":{\"63\":1}}],[\"查看提交历史记录\",{\"1\":{\"63\":1}}],[\"查看当前目录\",{\"1\":{\"59\":1}}],[\"查看分支\",{\"1\":{\"57\":1}}],[\"起始索引从0开始\",{\"1\":{\"293\":1}}],[\"起始索引\",{\"1\":{\"292\":1,\"293\":1}}],[\"起别名\",{\"1\":{\"246\":1}}],[\"然后相同的按照第二个方式排序\",{\"1\":{\"289\":1}}],[\"然后每隔5s运行一次\",{\"1\":{\"158\":1}}],[\"多个单词之间以\",{\"1\":{\"447\":1}}],[\"多表查询\",{\"0\":{\"316\":1},\"1\":{\"335\":1}}],[\"多字段排序\",{\"1\":{\"289\":1}}],[\"多选一\",{\"1\":{\"263\":1}}],[\"降序\",{\"1\":{\"288\":1}}],[\"升序\",{\"1\":{\"287\":1}}],[\"|\",{\"1\":{\"280\":1,\"411\":1,\"449\":1,\"454\":2}}],[\"||\",{\"1\":{\"270\":1}}],[\"聚合函数\",{\"0\":{\"274\":1}}],[\"聚合查询\",{\"1\":{\"244\":1}}],[\"非独占\",{\"1\":{\"461\":1}}],[\"非空约束\",{\"1\":{\"304\":1}}],[\"非\",{\"1\":{\"273\":1}}],[\"非常方便\",{\"1\":{\"77\":1}}],[\"模拟执行的漫\",{\"1\":{\"419\":1}}],[\"模拟事务回滚\",{\"1\":{\"399\":1}}],[\"模拟实现\",{\"1\":{\"126\":1}}],[\"模糊匹配\",{\"1\":{\"265\":1}}],[\"占位符\",{\"1\":{\"264\":1}}],[\"某个范围之内\",{\"1\":{\"261\":1}}],[\"功能\",{\"1\":{\"252\":1}}],[\"功能键\",{\"1\":{\"223\":2}}],[\"姓名\",{\"1\":{\"247\":2}}],[\"排序查询\",{\"0\":{\"286\":1},\"1\":{\"244\":1}}],[\"排序字段列表\",{\"1\":{\"243\":1}}],[\"排除依赖\",{\"0\":{\"81\":1}}],[\"不改变原始设计\",{\"1\":{\"550\":1}}],[\"不执行fsync\",{\"1\":{\"515\":1}}],[\"不是autodelete\",{\"1\":{\"461\":1}}],[\"不是数据库中字段\",{\"1\":{\"376\":1}}],[\"不再是任意绑定了\",{\"1\":{\"437\":1}}],[\"不关闭\",{\"1\":{\"409\":1}}],[\"不管如何都会回滚\",{\"1\":{\"390\":1}}],[\"不会污染数据\",{\"1\":{\"390\":1}}],[\"不会改变数据\",{\"1\":{\"390\":1}}],[\"不会参与查询\",{\"1\":{\"377\":1}}],[\"不被修改\",{\"1\":{\"366\":1}}],[\"不屑password\",{\"1\":{\"366\":1}}],[\"不去重\",{\"1\":{\"333\":1}}],[\"不参与计算\",{\"1\":{\"275\":1}}],[\"不等于\",{\"1\":{\"259\":1}}],[\"不重复\",{\"1\":{\"248\":1}}],[\"不写条件\",{\"1\":{\"238\":1}}],[\"不想使用其中的某个依赖\",{\"1\":{\"82\":1}}],[\"条件查询\",{\"0\":{\"250\":1},\"1\":{\"244\":1}}],[\"条件列表\",{\"1\":{\"243\":1}}],[\"条件\",{\"1\":{\"237\":1,\"240\":1,\"329\":1}}],[\"给全部字段添加值\",{\"1\":{\"234\":1}}],[\"给指定字段批量添加值\",{\"1\":{\"232\":1}}],[\"给指定字段添加值\",{\"1\":{\"230\":1}}],[\"值2\",{\"1\":{\"231\":1,\"233\":6,\"235\":1}}],[\"值1\",{\"1\":{\"231\":1,\"233\":6,\"235\":1}}],[\"表b\",{\"1\":{\"329\":1}}],[\"表a\",{\"1\":{\"329\":1}}],[\"表名列表\",{\"1\":{\"243\":1}}],[\"表名\",{\"1\":{\"231\":1,\"233\":2,\"235\":1,\"237\":1,\"240\":1,\"241\":1,\"247\":2,\"249\":1,\"277\":1,\"279\":1,\"281\":2,\"292\":1,\"297\":1,\"370\":1}}],[\"表示正文是html格式\",{\"1\":{\"149\":1}}],[\"编码格式\",{\"1\":{\"228\":1}}],[\"编译\",{\"1\":{\"74\":1}}],[\"哔哩哔哩\",{\"1\":{\"227\":1,\"335\":1,\"355\":1,\"401\":1,\"518\":1,\"560\":1,\"578\":1,\"584\":1}}],[\"最后\",{\"1\":{\"407\":1,\"409\":1}}],[\"最后即可使用ssh\",{\"1\":{\"225\":1}}],[\"最大\",{\"1\":{\"121\":1}}],[\"登录名\",{\"1\":{\"225\":1}}],[\"别名b\",{\"1\":{\"329\":1}}],[\"别名a\",{\"1\":{\"329\":1}}],[\"别名登录\",{\"1\":{\"225\":1}}],[\"别名\",{\"1\":{\"225\":1}}],[\"清空所有数据库\",{\"1\":{\"482\":1}}],[\"清空当前数据库\",{\"1\":{\"482\":1}}],[\"清除公钥信息\",{\"1\":{\"225\":1}}],[\"清理\",{\"1\":{\"74\":1}}],[\"免密登录\",{\"0\":{\"224\":1}}],[\"当名字一样使\",{\"1\":{\"579\":1}}],[\"当前数据库大小\",{\"1\":{\"482\":1}}],[\"当前表与自身的连接查询\",{\"1\":{\"328\":1}}],[\"当多个用户同时对同一数据进行操作时\",{\"1\":{\"394\":1}}],[\"当vim卡死时\",{\"1\":{\"223\":1}}],[\"当别的项目引用这个jar包\",{\"1\":{\"79\":1}}],[\"关闭自动确定\",{\"1\":{\"419\":1}}],[\"关闭消息的自动确认\",{\"1\":{\"417\":1}}],[\"关闭通道和连接\",{\"1\":{\"411\":1}}],[\"关闭查找关键词高亮\",{\"1\":{\"223\":1}}],[\"关联\",{\"1\":{\"67\":1}}],[\"取消粘贴模式\",{\"1\":{\"223\":1}}],[\"取消代码自动缩进\",{\"1\":{\"223\":1}}],[\"取消撤销\",{\"1\":{\"223\":1}}],[\"设置那些请求归springmvc处理\",{\"1\":{\"567\":1}}],[\"设置位配置类\",{\"1\":{\"548\":1}}],[\"设置重写的基准值\",{\"1\":{\"515\":2}}],[\"设置序列化器\",{\"1\":{\"503\":1}}],[\"设置name\",{\"1\":{\"485\":1}}],[\"设置k\",{\"1\":{\"485\":1}}],[\"设置通道一次只能消费一个消息\",{\"1\":{\"416\":1}}],[\"设置用户名和密码\",{\"1\":{\"407\":1,\"409\":1,\"411\":1}}],[\"设置连接哪一个虚拟主机\",{\"1\":{\"407\":1,\"409\":1,\"411\":1}}],[\"设置连接mq主机\",{\"1\":{\"407\":1,\"409\":1,\"411\":1}}],[\"设置成粘贴模式\",{\"1\":{\"223\":1}}],[\"设置编码\",{\"1\":{\"221\":1}}],[\"退出的时候也会产生\",{\"1\":{\"512\":1}}],[\"退出\",{\"1\":{\"223\":1}}],[\"强大的crud操作\",{\"1\":{\"356\":1}}],[\"强制退出\",{\"1\":{\"223\":1}}],[\"强制保存\",{\"1\":{\"223\":1}}],[\"强烈建议您创建并使用ram用户进行api访问或日常运维\",{\"1\":{\"108\":1}}],[\"小于号\",{\"1\":{\"223\":1}}],[\"大于号\",{\"1\":{\"223\":1}}],[\"撤销\",{\"1\":{\"223\":1}}],[\"复制当前行\",{\"1\":{\"223\":1}}],[\"复制选中的文本\",{\"1\":{\"223\":1}}],[\"选中文本\",{\"1\":{\"223\":1}}],[\"选择文件\",{\"1\":{\"119\":1}}],[\"且在替换前要求用户确认\",{\"1\":{\"223\":1}}],[\"反向重复前一个查找操作\",{\"1\":{\"223\":1}}],[\"光标移动到第一行\",{\"1\":{\"223\":1}}],[\"光标移动到第n行\",{\"1\":{\"223\":1}}],[\"光标移动到最后一行\",{\"1\":{\"223\":1}}],[\"光标移动到本行末尾\",{\"1\":{\"223\":1}}],[\"光标移动到本行开头\",{\"1\":{\"223\":1}}],[\"光标会向右移动这一行的n个字符\",{\"1\":{\"223\":1}}],[\"光标向下移动n行\",{\"1\":{\"223\":1}}],[\"光标向下移动一个字符\",{\"1\":{\"223\":1}}],[\"光标向右移动一个字符\",{\"1\":{\"223\":1}}],[\"光标向上移动一个字符\",{\"1\":{\"223\":1}}],[\"光标向左移动一个字符\",{\"1\":{\"223\":1}}],[\"按下数字后再按空格\",{\"1\":{\"223\":1}}],[\"7\",{\"1\":{\"223\":1,\"594\":1}}],[\"向有序集合中添加元素\",{\"1\":{\"495\":1}}],[\"向集合中添加元素\",{\"1\":{\"491\":1}}],[\"向下取整\",{\"1\":{\"299\":1}}],[\"向下箭头\",{\"1\":{\"223\":1}}],[\"向上取整\",{\"1\":{\"299\":1}}],[\"向上箭头\",{\"1\":{\"223\":1}}],[\"向光标之上寻找第一个值为word的字符串\",{\"1\":{\"223\":1}}],[\"向光标之下寻找第一个值为word的字符串\",{\"1\":{\"223\":1}}],[\"向右箭头\",{\"1\":{\"223\":1}}],[\"k\",{\"1\":{\"223\":1}}],[\"key=\",{\"1\":{\"542\":1}}],[\"key采用string的序列化方式\",{\"1\":{\"503\":1}}],[\"keys\",{\"1\":{\"485\":1}}],[\"key的时候使用通配符\",{\"1\":{\"447\":1}}],[\"keyproperty=\",{\"1\":{\"344\":1}}],[\"key\",{\"0\":{\"484\":1},\"1\":{\"67\":1,\"182\":5,\"306\":1,\"307\":1,\"310\":1,\"467\":2,\"469\":2,\"472\":1,\"493\":8}}],[\"keygen\",{\"1\":{\"67\":1,\"225\":2}}],[\"注解开发\",{\"0\":{\"543\":1}}],[\"注解说明\",{\"0\":{\"369\":1,\"586\":1}}],[\"注入\",{\"1\":{\"539\":1}}],[\"注意sql的路径\",{\"1\":{\"221\":1}}],[\"注释之前的内容被视为文章摘要\",{\"1\":{\"27\":1}}],[\"先实现一个拦截对象\",{\"0\":{\"603\":1}}],[\"先按第一个排序\",{\"1\":{\"289\":1}}],[\"先按ctrl\",{\"1\":{\"205\":1}}],[\"先生成一对密钥\",{\"1\":{\"225\":1}}],[\"先进入到mysql中\",{\"1\":{\"220\":1}}],[\"只是便于理解\",{\"1\":{\"546\":1}}],[\"只管保存\",{\"1\":{\"510\":1}}],[\"只能存入字符串\",{\"1\":{\"503\":1}}],[\"只不过topic\",{\"1\":{\"447\":1}}],[\"只有队列的routingkey与消息的routingkey完全一致\",{\"1\":{\"439\":1}}],[\"只有出现runtimeexception才回滚异常\",{\"1\":{\"397\":1}}],[\"只执行一次\",{\"1\":{\"411\":1}}],[\"只导出表结构\",{\"1\":{\"213\":1}}],[\"只需建立连接\",{\"1\":{\"129\":1}}],[\"此时就用到了\",{\"1\":{\"436\":1}}],[\"此命令的路径即mysql的安装路径\",{\"1\":{\"210\":1}}],[\"此页面应当包含\",{\"1\":{\"42\":1}}],[\"用于接收json数据\",{\"1\":{\"587\":1}}],[\"用于接收url地址参数\",{\"1\":{\"587\":1}}],[\"用默认no即可\",{\"1\":{\"515\":1}}],[\"用mysqldump命令导出数据库\",{\"1\":{\"210\":1}}],[\"用户名已存在\",{\"1\":{\"182\":1}}],[\"用户名不能为空\",{\"1\":{\"182\":2}}],[\"用户给收件人发出邮件的同时把该邮件抄送给另外的人\",{\"1\":{\"149\":1}}],[\"运行镜像\",{\"1\":{\"207\":1}}],[\"运行目录下\",{\"1\":{\"120\":1}}],[\"例子\",{\"0\":{\"206\":1}}],[\"例如\",{\"1\":{\"211\":1,\"215\":1,\"218\":1,\"447\":1,\"491\":10,\"493\":8,\"495\":10}}],[\"例如断开连接或网络故障\",{\"1\":{\"141\":1}}],[\"例如examplebucket\",{\"1\":{\"108\":1}}],[\"例如a依赖了b\",{\"1\":{\"77\":1}}],[\"网络等信息\",{\"1\":{\"205\":1}}],[\"内置sql注入剥离器\",{\"1\":{\"361\":1}}],[\"内置全局拦截插件\",{\"1\":{\"361\":1}}],[\"内置性能分析插件\",{\"1\":{\"360\":1}}],[\"内置分页插件\",{\"1\":{\"360\":1}}],[\"内置代码生成器\",{\"1\":{\"360\":1}}],[\"内连接\",{\"0\":{\"319\":1}}],[\"内存\",{\"1\":{\"205\":1}}],[\"内容\",{\"1\":{\"149\":1,\"407\":1,\"548\":1}}],[\"包括cpu\",{\"1\":{\"205\":1}}],[\"包括锁定\",{\"1\":{\"177\":1}}],[\"体积更大\",{\"1\":{\"205\":1}}],[\"仅保存容器当时的快照状态\",{\"1\":{\"205\":1}}],[\"再有交换机发给队列\",{\"1\":{\"425\":1}}],[\"再按ctrl\",{\"1\":{\"205\":1}}],[\"再重新登录回来\",{\"1\":{\"201\":1}}],[\"进入一般命令模式\",{\"1\":{\"223\":1}}],[\"进入编辑模式\",{\"1\":{\"223\":1}}],[\"进入容器\",{\"1\":{\"205\":1}}],[\"进行引用\",{\"1\":{\"37\":1,\"38\":1}}],[\"重写时是否可以运用appendfsync\",{\"1\":{\"515\":1}}],[\"重启消息也在\",{\"1\":{\"407\":1}}],[\"重启容器\",{\"1\":{\"205\":1}}],[\"重复前一个查找操作\",{\"1\":{\"223\":1}}],[\"重命名容器\",{\"1\":{\"205\":1}}],[\"重命名\",{\"1\":{\"120\":1}}],[\"停止容器\",{\"1\":{\"205\":1}}],[\"利用镜像ubuntu\",{\"1\":{\"205\":1}}],[\"容器\",{\"0\":{\"204\":1}}],[\"或者\",{\"1\":{\"247\":1,\"271\":1,\"531\":1}}],[\"或\",{\"1\":{\"203\":1,\"205\":1,\"223\":7,\"268\":1,\"272\":1}}],[\"列数必须保持一致\",{\"1\":{\"332\":1}}],[\"列表中的值\",{\"1\":{\"263\":1}}],[\"列出本地所有镜像\",{\"1\":{\"203\":1}}],[\"列举文件\",{\"1\":{\"110\":1}}],[\"拉取一个镜像\",{\"1\":{\"203\":1}}],[\"拉取远程分支xxx\",{\"1\":{\"57\":1}}],[\"镜像\",{\"0\":{\"202\":1}}],[\"中间有一个过度的服务器\",{\"1\":{\"405\":1}}],[\"中安装\",{\"1\":{\"199\":1}}],[\"中设置页面信息\",{\"1\":{\"29\":1}}],[\"如二进制协议\",{\"1\":{\"498\":1}}],[\"如hincrby\",{\"1\":{\"493\":1}}],[\"如何在\",{\"1\":{\"199\":1}}],[\"如果有返回值\",{\"1\":{\"556\":1}}],[\"如果key不存在\",{\"1\":{\"493\":1}}],[\"如果存在则不创建\",{\"1\":{\"487\":1}}],[\"如果队列中有消息\",{\"1\":{\"405\":1}}],[\"如果在多个操作中涉及到较多的i\",{\"1\":{\"395\":1}}],[\"如果在多个操作中发生了错误\",{\"1\":{\"393\":1}}],[\"如果只需要导出表结构\",{\"1\":{\"213\":1}}],[\"如果服务器端不能正常关闭连接\",{\"1\":{\"134\":1}}],[\"如果要删除目录\",{\"1\":{\"112\":1}}],[\"如果设置keyprefix\",{\"1\":{\"110\":1}}],[\"如果不设置keyprefix\",{\"1\":{\"110\":1}}],[\"为属性赋值\",{\"1\":{\"590\":1}}],[\"为了更有效地使用内存\",{\"1\":{\"497\":1}}],[\"为了一直消费信息\",{\"1\":{\"409\":1}}],[\"为了避免每次使用docker命令都需要加上sudo权限\",{\"1\":{\"198\":1}}],[\"为简化开发\",{\"1\":{\"354\":1}}],[\"为空\",{\"1\":{\"267\":1}}],[\"为例\",{\"1\":{\"108\":1}}],[\"将功能增强\",{\"1\":{\"550\":1}}],[\"将name移入到数据库1中\",{\"1\":{\"485\":1}}],[\"将通道声明到交换机\",{\"1\":{\"429\":1}}],[\"将所有操作合并到一个事务中可以减少i\",{\"1\":{\"395\":1}}],[\"将数据回滚至操作之前的状态\",{\"1\":{\"393\":1}}],[\"将年龄低于50和性别为\",{\"1\":{\"331\":1}}],[\"将全文代码格式化\",{\"1\":{\"223\":1}}],[\"将全文的word1替换为word2\",{\"1\":{\"223\":2}}],[\"将选中的文本整体向左缩进一次\",{\"1\":{\"223\":1}}],[\"将选中的文本整体向右缩进一次\",{\"1\":{\"223\":1}}],[\"将复制的数据在光标的下一行\",{\"1\":{\"223\":1}}],[\"将本地文件xxx\",{\"1\":{\"205\":1}}],[\"将本地内容推送到远程仓库\",{\"1\":{\"67\":2}}],[\"将容器container导出到本地文件xxx\",{\"1\":{\"205\":1}}],[\"将镜像ubuntu\",{\"1\":{\"203\":2}}],[\"将当前用户添加到docker用户组\",{\"0\":{\"197\":1}}],[\"根本不需要的描述\",{\"1\":{\"194\":1}}],[\"搭建\",{\"0\":{\"192\":1}}],[\"666\",{\"1\":{\"366\":2,\"558\":1}}],[\"6379\",{\"1\":{\"188\":1}}],[\"6\",{\"1\":{\"186\":1,\"223\":1,\"536\":1,\"583\":1}}],[\"引入\",{\"1\":{\"185\":1}}],[\"你好\",{\"1\":{\"182\":2}}],[\"你可以通过主题选项和页面\",{\"1\":{\"52\":1}}],[\"你可以通过设置页面的\",{\"1\":{\"10\":1}}],[\"你可以将图片和\",{\"1\":{\"37\":1}}],[\"你可以自由在这里书写你的\",{\"1\":{\"35\":1}}],[\"你可以在\",{\"1\":{\"29\":1}}],[\"qian\",{\"1\":{\"556\":1}}],[\"queues\",{\"1\":{\"476\":1}}],[\"queuestodeclare\",{\"1\":{\"461\":1,\"463\":2}}],[\"queuebinding\",{\"1\":{\"465\":2,\"467\":2,\"469\":2}}],[\"queuebind\",{\"1\":{\"431\":1,\"443\":3,\"444\":1,\"454\":3}}],[\"queue\",{\"1\":{\"431\":3,\"443\":5,\"444\":3,\"454\":5,\"461\":1,\"463\":2,\"465\":2,\"467\":2,\"469\":2,\"472\":5,\"476\":1}}],[\"queuedeclare\",{\"1\":{\"407\":1,\"409\":1,\"419\":1,\"431\":1,\"443\":1,\"444\":1,\"454\":1}}],[\"querywrapper<>\",{\"1\":{\"385\":1}}],[\"querywrapper<record>\",{\"1\":{\"385\":1}}],[\"querywrapper<web>\",{\"1\":{\"182\":2}}],[\"querywrapper\",{\"1\":{\"182\":3,\"363\":8,\"385\":3}}],[\"q\",{\"1\":{\"223\":3,\"366\":3,\"388\":5}}],[\"q可以挂起容器\",{\"1\":{\"205\":1}}],[\"qq\",{\"1\":{\"145\":2,\"151\":3}}],[\"密码长度不能超过50\",{\"1\":{\"182\":1}}],[\"密码不能为空\",{\"1\":{\"182\":1}}],[\"密码加密的文章\",{\"0\":{\"22\":1}}],[\"避免了锁过期的问题\",{\"1\":{\"179\":1}}],[\"保证数据安全性\",{\"1\":{\"515\":1}}],[\"保证数据的完整性\",{\"1\":{\"393\":1}}],[\"保证了锁的操作原子性\",{\"1\":{\"178\":1}}],[\"保留y位小数\",{\"1\":{\"299\":1}}],[\"保存配置\",{\"1\":{\"510\":1}}],[\"保存并退出\",{\"1\":{\"223\":1}}],[\"保存临时位置\",{\"1\":{\"121\":1}}],[\"保存\",{\"1\":{\"120\":1,\"223\":1}}],[\"需要退出服务器\",{\"1\":{\"201\":1}}],[\"需要自己实现保证操作的原子性\",{\"1\":{\"178\":1}}],[\"需要使用polyfill或其他技术\",{\"1\":{\"133\":1}}],[\"使数据占用的空间更小\",{\"1\":{\"497\":1}}],[\"使事务回滚\",{\"1\":{\"399\":1}}],[\"使得锁的使用变得简单\",{\"1\":{\"177\":1}}],[\"使用场景\",{\"1\":{\"590\":1}}],[\"使用mapper继承basemapper<t>即可开箱即用\",{\"1\":{\"365\":1}}],[\"使用mysql命令导入\",{\"1\":{\"218\":1}}],[\"使用已创建的数据库\",{\"1\":{\"221\":1}}],[\"使用sources命令导入\",{\"1\":{\"220\":1}}],[\"使用cron表达式指定执行时间\",{\"0\":{\"160\":1}}],[\"使用ram用户访问密钥发起请求\",{\"1\":{\"106\":1}}],[\"使用ram访问\",{\"0\":{\"103\":1}}],[\"使用坐标主动排除掉\",{\"1\":{\"82\":1}}],[\"使用\",{\"0\":{\"599\":1},\"1\":{\"59\":1,\"157\":1,\"189\":1,\"384\":1,\"554\":1}}],[\"使用指南\",{\"1\":{\"32\":1,\"33\":1}}],[\"并打印异常信息\",{\"1\":{\"399\":1}}],[\"并发控制\",{\"1\":{\"394\":1}}],[\"并将结果存储到新的有序集合中\",{\"1\":{\"495\":2}}],[\"并将该字符串替换为word2\",{\"1\":{\"223\":1}}],[\"并将镜像命名为image\",{\"1\":{\"205\":1}}],[\"并提供了api接口\",{\"1\":{\"177\":1}}],[\"并且\",{\"1\":{\"269\":1}}],[\"并且传递的依赖是没有数量和层级的限制的\",{\"1\":{\"77\":1}}],[\"并且切换过去\",{\"1\":{\"57\":1}}],[\"释放锁等\",{\"1\":{\"177\":1}}],[\"但里面是空的\",{\"1\":{\"511\":1}}],[\"但有时我们希望不同的消息被不同的队列消费\",{\"1\":{\"435\":1}}],[\"但它们之间有以下区别\",{\"0\":{\"175\":1}}],[\"但是你需要使用相对链接\",{\"1\":{\"37\":1}}],[\"分割\",{\"1\":{\"447\":1}}],[\"分页查询\",{\"0\":{\"291\":1},\"1\":{\"244\":1}}],[\"分页\",{\"0\":{\"381\":1},\"1\":{\"243\":1}}],[\"分组后的列只有待分组的字段和聚合函数\",{\"1\":{\"283\":1}}],[\"分组后条件列表\",{\"1\":{\"243\":1}}],[\"分组查询\",{\"0\":{\"282\":1},\"1\":{\"244\":1}}],[\"分组字段列表\",{\"1\":{\"243\":1}}],[\"分布式锁\",{\"0\":{\"174\":1}}],[\"分类为\",{\"1\":{\"32\":1}}],[\"读取图片文件\",{\"1\":{\"173\":1}}],[\"对有序集合中指定元素的分数进行增加\",{\"1\":{\"495\":1}}],[\"对象\",{\"1\":{\"173\":1}}],[\"对于老的浏览器\",{\"1\":{\"133\":1}}],[\"对于\",{\"1\":{\"38\":1}}],[\"预览图片的\",{\"1\":{\"173\":1}}],[\"自定义注解为属性赋值\",{\"0\":{\"589\":1}}],[\"自定义它们\",{\"1\":{\"52\":1}}],[\"自动装配\",{\"1\":{\"548\":1}}],[\"自动装配到spring的bean\",{\"1\":{\"548\":1}}],[\"自动生成的快照文件\",{\"1\":{\"508\":1}}],[\"自动从队列中删除\",{\"1\":{\"405\":1}}],[\"自增\",{\"1\":{\"372\":1}}],[\"自连接\",{\"0\":{\"327\":1}}],[\"自启动\",{\"1\":{\"162\":1}}],[\"5s\",{\"1\":{\"485\":1}}],[\"5672\",{\"1\":{\"407\":1,\"409\":1,\"411\":1,\"457\":1}}],[\"5个字段\",{\"1\":{\"317\":1}}],[\"51\",{\"1\":{\"297\":1}}],[\"50\",{\"1\":{\"285\":1,\"333\":2}}],[\"500mb\",{\"1\":{\"205\":1}}],[\"5000ms\",{\"1\":{\"163\":1}}],[\"5000l\",{\"1\":{\"163\":1}}],[\"5000\",{\"1\":{\"159\":2}}],[\"5\",{\"0\":{\"599\":1},\"1\":{\"182\":1,\"223\":1,\"299\":2,\"340\":1,\"485\":1,\"583\":1}}],[\"5<\",{\"1\":{\"118\":1,\"186\":1,\"340\":1}}],[\"配置拦截器\",{\"0\":{\"595\":1}}],[\"配置tomcat启动即可\",{\"1\":{\"568\":1}}],[\"配置bean\",{\"1\":{\"527\":1}}],[\"配置实在是多\",{\"1\":{\"523\":1}}],[\"配置redistemplate\",{\"1\":{\"503\":1}}],[\"配置\",{\"0\":{\"605\":1},\"1\":{\"155\":1,\"167\":1,\"531\":1}}],[\"jackson2jsonredisserializer\",{\"1\":{\"503\":6}}],[\"java\",{\"1\":{\"500\":1,\"502\":1,\"528\":1,\"534\":1,\"567\":2}}],[\"javamailsender\",{\"1\":{\"149\":7}}],[\"javax\",{\"1\":{\"145\":1}}],[\"java上传文件概述和文件下载\",{\"0\":{\"102\":1}}],[\"jsp\",{\"1\":{\"581\":3}}],[\"jsp页面\",{\"1\":{\"581\":1}}],[\"json数据传递参数\",{\"1\":{\"578\":1}}],[\"jsonautodetect\",{\"1\":{\"503\":1}}],[\"json和messagepack是常用的序列化格式\",{\"1\":{\"498\":1}}],[\"json\",{\"1\":{\"498\":1,\"579\":1}}],[\"jsonobject\",{\"1\":{\"385\":3}}],[\"js\",{\"1\":{\"453\":1}}],[\"jkl\",{\"1\":{\"366\":1}}],[\"join\",{\"1\":{\"321\":1,\"324\":2,\"329\":1}}],[\"j\",{\"1\":{\"223\":1}}],[\"jwtutil\",{\"1\":{\"182\":1,\"594\":1}}],[\"jwt\",{\"1\":{\"182\":2}}],[\"jpg\",{\"1\":{\"151\":1}}],[\"43\",{\"1\":{\"335\":1}}],[\"457\",{\"1\":{\"299\":1}}],[\"456871865468\",{\"1\":{\"299\":1}}],[\"42\",{\"1\":{\"223\":1}}],[\"41\",{\"1\":{\"223\":1}}],[\"40\",{\"1\":{\"223\":1}}],[\"4\",{\"0\":{\"597\":1},\"1\":{\"223\":1,\"489\":2,\"529\":1}}],[\"47f4c019880711ebb6edd017c2d2eca2\",{\"1\":{\"151\":1}}],[\"465\",{\"1\":{\"145\":1}}],[\"附带图片\",{\"1\":{\"149\":1}}],[\"知道发件人把该邮件抄送给了另外哪些人\",{\"1\":{\"149\":1}}],[\"在里面加载spring配置\",{\"1\":{\"567\":1}}],[\"在哪里执行\",{\"1\":{\"552\":1}}],[\"在key对应的hash中设置field对应的value\",{\"1\":{\"493\":1}}],[\"在fanout的模式下\",{\"1\":{\"435\":1}}],[\"在多个操作之间存在依赖关系的情况下\",{\"1\":{\"392\":1}}],[\"在\",{\"1\":{\"354\":1}}],[\"在mysql中\",{\"1\":{\"313\":1}}],[\"在第n1行与n2行之间寻找word1这个字符串\",{\"1\":{\"223\":1}}],[\"在本地和容器间复制文件\",{\"1\":{\"205\":1}}],[\"在容器中执行命令\",{\"1\":{\"205\":1}}],[\"在图片文件读取完毕后设置预览图片的\",{\"1\":{\"173\":1}}],[\"在spring\",{\"1\":{\"154\":1}}],[\"在这种抄送方式中\",{\"1\":{\"149\":1}}],[\"在页面禁用功能与布局\",{\"1\":{\"10\":1}}],[\"抄送人\",{\"1\":{\"149\":1}}],[\"抄送\",{\"1\":{\"149\":1}}],[\"x\",{\"1\":{\"299\":2,\"317\":1,\"472\":2}}],[\"xml配置详解\",{\"1\":{\"341\":1}}],[\"xml\",{\"1\":{\"146\":1,\"524\":1,\"526\":1,\"529\":1,\"534\":1,\"548\":1,\"562\":1}}],[\"xxx\",{\"1\":{\"57\":5,\"205\":6,\"454\":1,\"548\":1}}],[\"80\",{\"1\":{\"366\":1}}],[\"880\",{\"1\":{\"366\":2}}],[\"8\",{\"1\":{\"145\":1,\"221\":1,\"223\":1}}],[\"邮件配置\",{\"1\":{\"145\":1}}],[\"导入\",{\"1\":{\"525\":1}}],[\"导入sql文件\",{\"1\":{\"221\":1}}],[\"导入数据库\",{\"0\":{\"217\":1}}],[\"导出完整数据库\",{\"0\":{\"209\":1}}],[\"导致数据传输效率较低\",{\"1\":{\"140\":1}}],[\"导航栏\",{\"1\":{\"12\":1,\"48\":1}}],[\"因为sockjs在不支持websocket的浏览器中使用的是长轮询技术\",{\"1\":{\"140\":1}}],[\"因此可以保证数据的完整性\",{\"1\":{\"514\":1}}],[\"因此可能会遇到连接不稳定的情况\",{\"1\":{\"141\":1}}],[\"因此\",{\"1\":{\"396\":1}}],[\"因此需要发送大量的头部信息\",{\"1\":{\"140\":1}}],[\"因此在不支持websocket的浏览器中也可以使用\",{\"1\":{\"137\":1}}],[\"因此只有在支持html5的浏览器中才能使用\",{\"1\":{\"133\":1}}],[\"因此数据传输的效率非常高\",{\"1\":{\"130\":1}}],[\"头部信息较大\",{\"1\":{\"140\":1}}],[\"甚至包括ie6\",{\"1\":{\"136\":1}}],[\"跨浏览器\",{\"1\":{\"136\":1}}],[\"跨域放行\",{\"1\":{\"106\":1}}],[\"双向通信\",{\"1\":{\"131\":1}}],[\"高效性\",{\"1\":{\"130\":1}}],[\"就消费掉\",{\"1\":{\"405\":1}}],[\"就要用到联合查询了\",{\"1\":{\"331\":1}}],[\"就可以进行双向通信\",{\"1\":{\"129\":1}}],[\"就建一个\",{\"1\":{\"120\":1}}],[\"它是\",{\"1\":{\"508\":1,\"514\":1}}],[\"它们可以方便地与其他语言和系统进行交互\",{\"1\":{\"498\":1}}],[\"它们都有自己的优势和缺点\",{\"1\":{\"127\":1}}],[\"它可以最大程度地减少数据占用的空间\",{\"1\":{\"498\":1}}],[\"它需要对存储的数据进行序列化\",{\"1\":{\"497\":1}}],[\"它实现了浏览器与服务器全双工通信\",{\"1\":{\"126\":1}}],[\"从有序集合中删除元素\",{\"1\":{\"495\":1}}],[\"从集合中弹出一个随机元素\",{\"1\":{\"491\":1}}],[\"从集合中删除元素\",{\"1\":{\"491\":1}}],[\"从而使得浏览器与服务器之间的通信始终保持稳定和高效\",{\"1\":{\"126\":1}}],[\"从最近到最远\",{\"1\":{\"63\":1}}],[\"时间\",{\"1\":{\"579\":1}}],[\"时间间隔\",{\"1\":{\"301\":1}}],[\"时\",{\"1\":{\"126\":1}}],[\"即当浏览器不支持\",{\"1\":{\"126\":1}}],[\"即撤销修改\",{\"1\":{\"63\":1}}],[\"而是要指定一个routingkey\",{\"1\":{\"437\":1}}],[\"而redisson分布式锁是基于redis的redisson分布式框架实现的\",{\"1\":{\"176\":1}}],[\"而\",{\"1\":{\"126\":1}}],[\"是保证数据库安全和稳定运行的基本手段\",{\"1\":{\"396\":1}}],[\"是一个\",{\"1\":{\"354\":1}}],[\"是\",{\"1\":{\"126\":2,\"508\":1,\"514\":1}}],[\"是否以append\",{\"1\":{\"515\":1}}],[\"是否开启多个消息同时确认\",{\"1\":{\"419\":1}}],[\"是否开启上传\",{\"1\":{\"121\":1}}],[\"是否消费结束后自动删除\",{\"1\":{\"407\":1,\"409\":1}}],[\"是否独占队列\",{\"1\":{\"407\":1,\"409\":1}}],[\"是否延迟解析\",{\"1\":{\"121\":1}}],[\"具体应该根据实际情况来选择\",{\"1\":{\"126\":1}}],[\"应用场景\",{\"1\":{\"125\":1,\"405\":1}}],[\"热加载\",{\"0\":{\"122\":1}}],[\"总大小\",{\"1\":{\"121\":1}}],[\"09\",{\"1\":{\"578\":1}}],[\"02\",{\"1\":{\"560\":1}}],[\"01\",{\"1\":{\"518\":1}}],[\"04创建一个容器\",{\"1\":{\"205\":1}}],[\"04从本地文件ubuntu\",{\"1\":{\"203\":1}}],[\"04导出到本地文件ubuntu\",{\"1\":{\"203\":1}}],[\"04\",{\"1\":{\"199\":1,\"203\":9,\"205\":2}}],[\"0<\",{\"1\":{\"193\":1}}],[\"0\",{\"0\":{\"160\":2},\"1\":{\"121\":1,\"161\":2,\"173\":1,\"182\":6,\"188\":1,\"193\":1,\"194\":1,\"207\":1,\"223\":1,\"225\":6,\"294\":1,\"407\":2,\"409\":2,\"411\":2,\"457\":2,\"459\":1,\"487\":1,\"489\":2,\"495\":1,\"558\":1,\"563\":1}}],[\"没有文件夹\",{\"1\":{\"120\":1}}],[\"书本\",{\"0\":{\"113\":1}}],[\"返回一个串\",{\"1\":{\"581\":1}}],[\"返回一个日期加上某个时间后的日期\",{\"1\":{\"301\":1}}],[\"返回值\",{\"1\":{\"587\":1}}],[\"返回值类型\",{\"1\":{\"565\":1}}],[\"返回值为null\",{\"1\":{\"377\":1}}],[\"返回对象必须是object\",{\"1\":{\"556\":1}}],[\"返回有序集合中元素的数量\",{\"1\":{\"495\":1}}],[\"返回有序集合中指定元素的排名\",{\"1\":{\"495\":1}}],[\"返回有序集合中指定分数范围的元素数量\",{\"1\":{\"495\":1}}],[\"返回有序集合中指定分数范围的元素\",{\"1\":{\"495\":1}}],[\"返回有序集合中指定范围的元素\",{\"1\":{\"495\":1}}],[\"返回多个集合的交集\",{\"1\":{\"491\":1}}],[\"返回多个集合的差集\",{\"1\":{\"491\":1}}],[\"返回多个集合的并集\",{\"1\":{\"491\":1}}],[\"返回集合中元素的数量\",{\"1\":{\"491\":1}}],[\"返回集合中所有元素\",{\"1\":{\"491\":1}}],[\"返回当前时间\",{\"1\":{\"301\":1}}],[\"返回当前日期和时间\",{\"1\":{\"301\":1}}],[\"返回当前日期\",{\"1\":{\"301\":1}}],[\"返回0\",{\"1\":{\"299\":1}}],[\"返回x\",{\"1\":{\"299\":1}}],[\"返回路径\",{\"1\":{\"120\":1}}],[\"返回所有的链接\",{\"1\":{\"110\":1}}],[\"返回顶部按钮\",{\"1\":{\"21\":1,\"51\":1}}],[\"填写bucket名称\",{\"1\":{\"108\":1}}],[\"请求\",{\"0\":{\"569\":1}}],[\"请登录ram控制台创建ram用户\",{\"1\":{\"108\":1}}],[\"请使用绝对链接\",{\"1\":{\"38\":1}}],[\"风险很高\",{\"1\":{\"108\":1}}],[\"=null\",{\"1\":{\"411\":2,\"598\":1}}],[\"===\",{\"1\":{\"548\":1}}],[\"==0\",{\"1\":{\"182\":1}}],[\"==\",{\"1\":{\"182\":2,\"587\":1}}],[\"=>\",{\"1\":{\"173\":1}}],[\"=resids\",{\"1\":{\"149\":1}}],[\"=\",{\"0\":{\"160\":1},\"1\":{\"108\":6,\"110\":5,\"112\":2,\"120\":7,\"149\":6,\"159\":2,\"161\":1,\"163\":2,\"168\":4,\"170\":13,\"172\":3,\"173\":4,\"182\":12,\"188\":1,\"190\":3,\"257\":1,\"258\":1,\"293\":1,\"297\":2,\"317\":1,\"321\":2,\"324\":2,\"333\":2,\"343\":1,\"347\":4,\"349\":5,\"351\":5,\"366\":15,\"377\":1,\"383\":1,\"385\":4,\"387\":2,\"388\":3,\"398\":1,\"399\":1,\"407\":3,\"409\":4,\"411\":1,\"419\":3,\"429\":2,\"431\":4,\"441\":3,\"443\":3,\"444\":3,\"453\":3,\"454\":3,\"459\":1,\"461\":3,\"463\":4,\"465\":12,\"467\":14,\"469\":14,\"472\":4,\"474\":2,\"476\":2,\"503\":4,\"505\":1,\"529\":3,\"538\":1,\"540\":2,\"548\":1,\"558\":3,\"567\":1,\"585\":4,\"587\":3,\"594\":1,\"598\":1,\"600\":2}}],[\"杭州\",{\"1\":{\"108\":1}}],[\"③\",{\"1\":{\"106\":1}}],[\"权限\",{\"1\":{\"106\":1}}],[\"上传图片\",{\"0\":{\"107\":1}}],[\"上传\",{\"1\":{\"106\":1,\"119\":1}}],[\"上一篇\",{\"1\":{\"18\":1}}],[\"放行权限\",{\"1\":{\"106\":1}}],[\"②\",{\"1\":{\"106\":1}}],[\"①\",{\"1\":{\"106\":1}}],[\"建议使用子账号\",{\"1\":{\"105\":1}}],[\"警告\",{\"1\":{\"104\":1}}],[\"更新行为\",{\"1\":{\"311\":1}}],[\"更新所有\",{\"1\":{\"238\":1}}],[\"更新时间等页面元信息\",{\"1\":{\"46\":1}}],[\"更新时间\",{\"1\":{\"17\":1}}],[\"更安全\",{\"0\":{\"103\":1}}],[\"阿里云账号accesskey拥有所有api的访问权限\",{\"1\":{\"108\":1}}],[\"阿里云对象存储\",{\"0\":{\"101\":1}}],[\"阿里官方文档\",{\"0\":{\"102\":1}}],[\"阿里镜像\",{\"0\":{\"71\":1}}],[\"默认使用的是rdb方式持久化\",{\"1\":{\"515\":1}}],[\"默认情况下的模板只能支持\",{\"1\":{\"503\":1}}],[\"默认队列持久化\",{\"1\":{\"461\":1}}],[\"默认会平均分配内容\",{\"1\":{\"414\":1}}],[\"默认形况下\",{\"1\":{\"397\":1}}],[\"默认就是这一项\",{\"1\":{\"312\":1}}],[\"默认约束\",{\"1\":{\"303\":1}}],[\"默认\",{\"1\":{\"89\":1,\"287\":1}}],[\"主键\",{\"1\":{\"371\":1}}],[\"主键返回\",{\"0\":{\"342\":1}}],[\"主键约束\",{\"1\":{\"306\":1}}],[\"主题\",{\"1\":{\"149\":1}}],[\"主题包含了一个自定义徽章可以使用\",{\"1\":{\"39\":1}}],[\"主账号accesskey泄露会威胁您所有资源的安全\",{\"1\":{\"105\":1}}],[\"主代码\",{\"1\":{\"86\":1}}],[\"><\",{\"1\":{\"542\":1}}],[\"><img\",{\"1\":{\"151\":1}}],[\">=\",{\"1\":{\"254\":1}}],[\">aaa\",{\"1\":{\"216\":1}}],[\">50\",{\"1\":{\"182\":1}}],[\">\",{\"1\":{\"83\":1,\"119\":3,\"151\":1,\"163\":1,\"173\":4,\"186\":1,\"210\":1,\"212\":1,\"214\":1,\"223\":1,\"253\":1,\"285\":1,\"299\":1,\"340\":1,\"344\":1,\"347\":3,\"349\":3,\"351\":4,\"449\":1,\"451\":1,\"474\":1,\"525\":1,\"527\":3,\"531\":1,\"534\":3,\"536\":6,\"542\":3}}],[\"加载配置\",{\"1\":{\"567\":1}}],[\"加载对应的bean\",{\"1\":{\"567\":1}}],[\"加载spring配置\",{\"1\":{\"567\":1}}],[\"加载springmvc配置\",{\"1\":{\"567\":1}}],[\"加入某个jar包依赖后\",{\"1\":{\"82\":1}}],[\"加参\",{\"1\":{\"63\":1}}],[\"9<\",{\"1\":{\"80\":1}}],[\"9\",{\"1\":{\"80\":1,\"223\":1}}],[\"other\",{\"0\":{\"610\":1}}],[\"otherwise>\",{\"1\":{\"349\":1}}],[\"oother\",{\"0\":{\"609\":1}}],[\"of\",{\"1\":{\"520\":1}}],[\"om\",{\"1\":{\"503\":4}}],[\"o操作和网络传输\",{\"1\":{\"395\":1}}],[\"o操作或网络传输\",{\"1\":{\"395\":1}}],[\"only模式作为持久化方式\",{\"1\":{\"515\":1}}],[\"only\",{\"1\":{\"514\":1}}],[\"onload\",{\"1\":{\"173\":1}}],[\"onmessage\",{\"1\":{\"476\":1}}],[\"one\",{\"1\":{\"429\":2,\"431\":2}}],[\"on\",{\"1\":{\"321\":1,\"324\":2,\"329\":1,\"515\":1}}],[\"org\",{\"1\":{\"340\":1}}],[\"or或\",{\"1\":{\"270\":1}}],[\"orderbyasc\",{\"1\":{\"385\":1}}],[\"order\",{\"1\":{\"243\":1,\"244\":1,\"290\":1}}],[\"originalfilename\",{\"1\":{\"108\":2}}],[\"origin\",{\"1\":{\"57\":3,\"67\":4}}],[\"o\",{\"1\":{\"203\":1,\"205\":1}}],[\"opsforvalue\",{\"1\":{\"182\":1,\"505\":2}}],[\"optional>\",{\"1\":{\"80\":1,\"123\":1}}],[\"optional为true时不让别人知道自己所用依赖\",{\"1\":{\"79\":1}}],[\"objectmapper\",{\"1\":{\"503\":3}}],[\"object\",{\"1\":{\"503\":1,\"558\":3,\"594\":1,\"598\":1,\"604\":3}}],[\"object>>>\",{\"1\":{\"363\":1}}],[\"object>>\",{\"1\":{\"363\":1}}],[\"object>\",{\"1\":{\"363\":2,\"366\":2,\"472\":2,\"503\":2}}],[\"objecterror\",{\"1\":{\"172\":1}}],[\"objectlisting\",{\"1\":{\"110\":3}}],[\"oldname\",{\"1\":{\"120\":3}}],[\"override\",{\"1\":{\"116\":1,\"163\":1,\"190\":1,\"385\":1,\"399\":1,\"409\":1,\"419\":1,\"431\":1,\"443\":1,\"444\":1,\"454\":1,\"567\":3,\"594\":1,\"596\":2,\"598\":2,\"604\":3,\"606\":1}}],[\"oe\",{\"1\":{\"110\":5,\"112\":5}}],[\"outer\",{\"1\":{\"324\":1}}],[\"out\",{\"1\":{\"110\":6,\"112\":5,\"120\":1,\"149\":1,\"159\":1,\"163\":1,\"172\":1,\"182\":2,\"366\":6,\"387\":1,\"388\":1,\"409\":1,\"419\":1,\"431\":1,\"443\":1,\"444\":1,\"454\":1,\"461\":1,\"463\":2,\"465\":2,\"467\":2,\"469\":2,\"476\":1,\"505\":1,\"531\":2,\"552\":1,\"556\":3,\"558\":1,\"565\":1,\"572\":1,\"574\":1,\"579\":1,\"585\":2,\"604\":3}}],[\"our\",{\"1\":{\"83\":1}}],[\"os\",{\"1\":{\"108\":3}}],[\"ossexception\",{\"1\":{\"110\":2,\"112\":2}}],[\"ossobjectsummary\",{\"1\":{\"110\":1}}],[\"ossclient\",{\"1\":{\"110\":4,\"112\":4}}],[\"ossclientbuilder\",{\"1\":{\"108\":1,\"110\":1,\"112\":1}}],[\"oss\",{\"1\":{\"106\":3,\"108\":2,\"110\":2,\"112\":2}}],[\"可能会导致丢失这1s数据\",{\"1\":{\"515\":1}}],[\"可能会导致资源浪费和性能问题\",{\"1\":{\"134\":1}}],[\"可靠性\",{\"1\":{\"138\":1}}],[\"可以把id拿出来\",{\"1\":{\"343\":1}}],[\"可以使用两个表之间的联系去除无用数据\",{\"1\":{\"318\":1}}],[\"可以使用以下命令找到导出的数据库\",{\"1\":{\"216\":1}}],[\"可以取消当前正在执行的命令\",{\"1\":{\"223\":1}}],[\"可以将当前用户加入安装中自动创建的docker用户组\",{\"1\":{\"198\":1}}],[\"可以保证数据的可靠性\",{\"1\":{\"138\":1}}],[\"可以同时在客户端和服务器端发送和接收消息\",{\"1\":{\"131\":1}}],[\"可以自动降级为支持长轮询等传输方式的\",{\"1\":{\"126\":1}}],[\"可以有效降低accesskey泄露的风险\",{\"1\":{\"105\":1}}],[\"可以看到3次\",{\"1\":{\"63\":1}}],[\"可选依赖\",{\"0\":{\"78\":1},\"1\":{\"80\":1}}],[\"像主动依赖了c和d一样使用它们\",{\"1\":{\"77\":1}}],[\"那么你就可以在a中\",{\"1\":{\"77\":1}}],[\"依赖注入\",{\"0\":{\"532\":1},\"1\":{\"537\":1}}],[\"依赖\",{\"1\":{\"165\":1,\"339\":1}}],[\"依赖范围\",{\"0\":{\"84\":1}}],[\"依赖传递\",{\"0\":{\"76\":1}}],[\"依赖管理\",{\"0\":{\"75\":1}}],[\"测试时加入\",{\"1\":{\"390\":1}}],[\"测试代码\",{\"1\":{\"87\":1}}],[\"测试\",{\"0\":{\"504\":1},\"1\":{\"74\":1}}],[\"简称\",{\"1\":{\"354\":1}}],[\"简单类型注入\",{\"1\":{\"548\":1}}],[\"简单\",{\"0\":{\"460\":1}}],[\"简单易用\",{\"1\":{\"129\":1}}],[\"简单命令\",{\"0\":{\"73\":1}}],[\"简洁查看\",{\"1\":{\"63\":1}}],[\"nu\",{\"1\":{\"223\":1}}],[\"null\",{\"1\":{\"110\":2,\"112\":2,\"163\":1,\"182\":2,\"266\":1,\"275\":1,\"304\":1,\"315\":1,\"347\":3,\"349\":3,\"351\":4,\"366\":1,\"385\":1,\"387\":1,\"388\":1,\"407\":2,\"409\":1,\"419\":1,\"429\":1,\"441\":1,\"453\":1,\"567\":1}}],[\"noargs\",{\"1\":{\"472\":1}}],[\"non\",{\"1\":{\"503\":1}}],[\"none\",{\"1\":{\"373\":1}}],[\"nonu\",{\"1\":{\"223\":1}}],[\"no\",{\"1\":{\"313\":1,\"515\":3}}],[\"now\",{\"1\":{\"301\":3}}],[\"not\",{\"1\":{\"272\":1,\"304\":1}}],[\"notnull\",{\"1\":{\"168\":1,\"170\":2}}],[\"noh\",{\"1\":{\"223\":1}}],[\"nopaste\",{\"1\":{\"223\":1}}],[\"n2s\",{\"1\":{\"223\":1}}],[\"n1与n2为数字\",{\"1\":{\"223\":1}}],[\"n1\",{\"1\":{\"223\":1}}],[\"n<enter>\",{\"1\":{\"223\":1}}],[\"n<space>\",{\"1\":{\"223\":1}}],[\"n为数字\",{\"1\":{\"223\":2}}],[\"ng\",{\"1\":{\"223\":1}}],[\"n表示数字\",{\"1\":{\"223\":1}}],[\"n\",{\"1\":{\"182\":2,\"223\":3}}],[\"nativerequest\",{\"1\":{\"598\":2}}],[\"nativewebrequest\",{\"1\":{\"598\":3}}],[\"nanotime\",{\"1\":{\"182\":1}}],[\"names\",{\"1\":{\"221\":1}}],[\"name=name\",{\"1\":{\"571\":1}}],[\"name=hello\",{\"1\":{\"548\":1}}],[\"name=\",{\"1\":{\"119\":1,\"534\":2,\"536\":3,\"542\":2}}],[\"name>\",{\"1\":{\"72\":1}}],[\"name\",{\"1\":{\"55\":2,\"168\":2,\"170\":6,\"182\":1,\"203\":1,\"205\":2,\"207\":1,\"216\":1,\"247\":2,\"249\":1,\"297\":2,\"321\":4,\"324\":2,\"344\":2,\"347\":3,\"349\":3,\"351\":3,\"375\":1,\"441\":2,\"443\":4,\"444\":2,\"453\":2,\"454\":4,\"482\":1,\"485\":7,\"487\":3,\"493\":4,\"501\":1,\"548\":1,\"572\":2,\"574\":2,\"579\":1}}],[\"net\",{\"1\":{\"145\":1}}],[\"newconnection\",{\"1\":{\"407\":1,\"409\":1,\"411\":1}}],[\"newname\",{\"1\":{\"120\":3}}],[\"new\",{\"1\":{\"108\":1,\"110\":2,\"112\":1,\"120\":5,\"149\":5,\"151\":3,\"163\":1,\"172\":1,\"173\":1,\"182\":12,\"188\":1,\"190\":1,\"194\":2,\"366\":5,\"383\":2,\"385\":3,\"387\":1,\"388\":1,\"399\":2,\"407\":1,\"409\":4,\"411\":1,\"419\":3,\"431\":3,\"443\":2,\"444\":2,\"454\":2,\"472\":3,\"474\":2,\"495\":2,\"503\":4,\"505\":1,\"529\":2,\"548\":1,\"567\":2,\"596\":2}}],[\"nexus\",{\"1\":{\"72\":1}}],[\"<map>\",{\"1\":{\"542\":1}}],[\"<mirrorof>central<\",{\"1\":{\"72\":1}}],[\"<mirror>\",{\"1\":{\"72\":1}}],[\"<value>world<\",{\"1\":{\"542\":1}}],[\"<value>hello\",{\"1\":{\"542\":1}}],[\"<version>4\",{\"1\":{\"563\":1}}],[\"<version>5\",{\"1\":{\"525\":1,\"563\":1}}],[\"<version>3\",{\"1\":{\"83\":1,\"186\":1,\"193\":1,\"340\":1}}],[\"<version>$\",{\"1\":{\"83\":1}}],[\"<version>2\",{\"1\":{\"80\":1,\"118\":1}}],[\"<array>\",{\"1\":{\"542\":1}}],[\"<artifactid>javax\",{\"1\":{\"563\":1}}],[\"<artifactid>joda\",{\"1\":{\"80\":1}}],[\"<artifactid>mybatis<\",{\"1\":{\"340\":1}}],[\"<artifactid>redisson<\",{\"1\":{\"186\":1}}],[\"<artifactid>springfox\",{\"1\":{\"193\":1}}],[\"<artifactid>spring\",{\"1\":{\"123\":1,\"147\":1,\"166\":1,\"456\":1,\"525\":1,\"563\":1}}],[\"<artifactid>servlet\",{\"1\":{\"118\":1}}],[\"<artifactid>struts2\",{\"1\":{\"83\":1}}],[\"<artifactid>asm<\",{\"1\":{\"83\":2}}],[\"<constructor\",{\"1\":{\"536\":3}}],[\"<choose>\",{\"1\":{\"349\":1}}],[\"<property\",{\"1\":{\"534\":2,\"542\":2}}],[\"<bean\",{\"1\":{\"527\":2,\"531\":1,\"534\":1,\"536\":2,\"542\":1}}],[\"<>\",{\"1\":{\"503\":1}}],[\"<>或\",{\"1\":{\"258\":1}}],[\"<entry\",{\"1\":{\"542\":1}}],[\"<e\",{\"1\":{\"363\":2}}],[\"<exclusion>\",{\"1\":{\"83\":1}}],[\"<exclusions>\",{\"1\":{\"83\":1}}],[\"<otherwise>\",{\"1\":{\"349\":1}}],[\"<optional>true<\",{\"1\":{\"80\":1,\"123\":1}}],[\"<when\",{\"1\":{\"349\":2}}],[\"<select\",{\"1\":{\"347\":1,\"349\":1,\"351\":1}}],[\"<script>\",{\"1\":{\"173\":1}}],[\"<scope>provided<\",{\"1\":{\"118\":1,\"563\":1}}],[\"<=\",{\"1\":{\"256\":1}}],[\"<dependencies>\",{\"1\":{\"563\":1}}],[\"<dependency>\",{\"1\":{\"80\":1,\"83\":2,\"118\":1,\"123\":1,\"147\":1,\"166\":1,\"186\":1,\"193\":1,\"340\":1,\"456\":1,\"525\":1,\"563\":2}}],[\"<div>\",{\"1\":{\"173\":1}}],[\"<template>\",{\"1\":{\"173\":1}}],[\"<第一步获得的密钥>\",{\"1\":{\"145\":1}}],[\"<if\",{\"1\":{\"347\":2,\"351\":3}}],[\"<insert\",{\"1\":{\"344\":1}}],[\"<input\",{\"1\":{\"119\":2,\"173\":1}}],[\"<img\",{\"1\":{\"151\":1,\"173\":1}}],[\"<id>alimaven<\",{\"1\":{\"72\":1}}],[\"<form\",{\"1\":{\"119\":1}}],[\"<groupid>io\",{\"1\":{\"193\":1}}],[\"<groupid>javax\",{\"1\":{\"118\":1,\"563\":1}}],[\"<groupid>joda\",{\"1\":{\"80\":1}}],[\"<groupid>asm<\",{\"1\":{\"83\":2}}],[\"<groupid>org\",{\"1\":{\"83\":1,\"123\":1,\"147\":1,\"166\":1,\"186\":1,\"340\":1,\"456\":1,\"525\":1,\"563\":1}}],[\"<\",{\"1\":{\"72\":2,\"80\":1,\"83\":6,\"118\":1,\"119\":1,\"123\":1,\"147\":1,\"166\":1,\"173\":5,\"186\":2,\"193\":1,\"218\":1,\"219\":1,\"223\":1,\"255\":1,\"333\":2,\"340\":2,\"344\":1,\"347\":3,\"349\":5,\"351\":4,\"456\":1,\"459\":1,\"525\":2,\"527\":1,\"534\":1,\"536\":3,\"542\":6,\"563\":3}}],[\"<url>http\",{\"1\":{\"72\":1}}],[\"<name>aliyun\",{\"1\":{\"72\":1}}],[\"下创建config文件\",{\"1\":{\"225\":1}}],[\"下一个位置粘贴\",{\"1\":{\"223\":1}}],[\"下一篇\",{\"1\":{\"18\":1}}],[\"下载\",{\"1\":{\"151\":1}}],[\"下载地址中央仓库配置本地仓库\",{\"1\":{\"70\":1}}],[\"安装插件以及使用\",{\"1\":{\"471\":1}}],[\"安装地址\",{\"1\":{\"401\":1}}],[\"安装到本地仓库\",{\"1\":{\"74\":1}}],[\"安装\",{\"0\":{\"69\":1,\"479\":1}}],[\"克隆之后使用和查看\",{\"1\":{\"67\":1}}],[\"克隆远程仓库\",{\"1\":{\"67\":1}}],[\"visibility\",{\"1\":{\"503\":1}}],[\"virtual\",{\"1\":{\"457\":1}}],[\"views\",{\"1\":{\"344\":2,\"388\":2}}],[\"vim\",{\"0\":{\"222\":1}}],[\"validated\",{\"1\":{\"172\":1}}],[\"validationmessages\",{\"1\":{\"167\":1}}],[\"validation<\",{\"1\":{\"166\":1}}],[\"value>\",{\"1\":{\"542\":2}}],[\"value序列化方式采用jackson\",{\"1\":{\"503\":1}}],[\"value的长度\",{\"1\":{\"487\":1}}],[\"value后面增加world\",{\"1\":{\"487\":1}}],[\"values\",{\"1\":{\"231\":1,\"233\":2,\"235\":1,\"344\":1}}],[\"valueoperations\",{\"1\":{\"182\":1}}],[\"valueof\",{\"1\":{\"159\":1,\"190\":1}}],[\"value\",{\"1\":{\"170\":2,\"182\":3,\"461\":1,\"465\":4,\"467\":4,\"469\":4,\"493\":1,\"548\":1,\"585\":2,\"587\":1}}],[\"value=\",{\"1\":{\"119\":2,\"375\":1,\"534\":2,\"536\":2,\"542\":1}}],[\"void\",{\"1\":{\"116\":1,\"149\":3,\"151\":3,\"161\":1,\"163\":2,\"170\":4,\"366\":4,\"407\":1,\"409\":2,\"411\":1,\"419\":2,\"429\":1,\"431\":2,\"441\":1,\"443\":2,\"444\":2,\"453\":1,\"454\":2,\"459\":5,\"461\":1,\"463\":2,\"465\":2,\"467\":2,\"469\":2,\"474\":1,\"476\":1,\"505\":1,\"529\":1,\"531\":2,\"538\":1,\"552\":3,\"556\":4,\"558\":2,\"585\":2,\"596\":2,\"604\":2,\"606\":1}}],[\"version\",{\"1\":{\"83\":2,\"194\":1}}],[\"version>\",{\"1\":{\"80\":1,\"83\":2,\"118\":1,\"186\":1,\"193\":1,\"340\":1,\"525\":1,\"563\":2}}],[\"v\",{\"1\":{\"67\":2,\"182\":3,\"223\":1,\"485\":1}}],[\"vuepress\",{\"1\":{\"2\":1,\"3\":1,\"38\":1}}],[\"之后\",{\"1\":{\"67\":1}}],[\"union\",{\"1\":{\"333\":2}}],[\"unique\",{\"1\":{\"305\":1}}],[\"unlock\",{\"1\":{\"190\":1}}],[\"uroot\",{\"1\":{\"212\":1,\"216\":1,\"219\":1}}],[\"url\",{\"1\":{\"173\":1}}],[\"url>\",{\"1\":{\"72\":1}}],[\"u用户名\",{\"1\":{\"210\":1,\"214\":1,\"218\":1}}],[\"ubuntu\",{\"1\":{\"199\":1,\"203\":6,\"205\":2}}],[\"up\",{\"1\":{\"344\":2,\"387\":2,\"388\":2}}],[\"upper\",{\"1\":{\"297\":3}}],[\"updatewrapper<article>\",{\"1\":{\"387\":1}}],[\"updatewrapper<>\",{\"1\":{\"366\":1,\"387\":1}}],[\"updatewrapper<user>\",{\"1\":{\"366\":1}}],[\"updatewrapper\",{\"1\":{\"363\":1,\"387\":3}}],[\"update\",{\"0\":{\"236\":1},\"1\":{\"205\":1,\"237\":1,\"297\":1,\"343\":1,\"344\":1,\"363\":1,\"366\":1,\"387\":1,\"388\":1,\"480\":1}}],[\"updatebyid\",{\"1\":{\"190\":1,\"363\":1}}],[\"uploadfile\",{\"1\":{\"119\":1,\"120\":5}}],[\"upload\",{\"1\":{\"119\":1,\"120\":2}}],[\"uploadobject\",{\"1\":{\"108\":1}}],[\"utf8mb4\",{\"1\":{\"228\":1}}],[\"utf\",{\"1\":{\"145\":1,\"221\":1}}],[\"uuid\",{\"1\":{\"120\":1,\"182\":1}}],[\"u\",{\"1\":{\"67\":1,\"223\":1}}],[\"usegeneratedkeys=\",{\"1\":{\"344\":1}}],[\"use\",{\"1\":{\"221\":1}}],[\"usesingleserver\",{\"1\":{\"188\":1}}],[\"userinfoimpl\",{\"1\":{\"596\":1,\"598\":1}}],[\"userinfo\",{\"1\":{\"592\":1,\"598\":1,\"600\":1}}],[\"usercontroler类\",{\"1\":{\"564\":1}}],[\"usercontroller\",{\"1\":{\"172\":1,\"565\":1}}],[\"userlist\",{\"1\":{\"385\":1}}],[\"usermapper\",{\"1\":{\"366\":9,\"399\":3}}],[\"usermod\",{\"1\":{\"200\":1}}],[\"userservice\",{\"1\":{\"399\":1}}],[\"userserviceimpl\",{\"1\":{\"399\":1}}],[\"users\",{\"1\":{\"151\":2,\"366\":6}}],[\"username\",{\"1\":{\"145\":1,\"457\":1,\"579\":2}}],[\"user\",{\"1\":{\"55\":2,\"168\":4,\"170\":6,\"172\":2,\"225\":1,\"366\":17,\"399\":3,\"459\":1,\"469\":3,\"493\":8,\"579\":2,\"596\":1,\"600\":1,\"606\":2}}],[\"usr\",{\"1\":{\"3\":1,\"212\":1}}],[\"sdiff\",{\"1\":{\"491\":2}}],[\"sdf\",{\"1\":{\"120\":2}}],[\"spop\",{\"1\":{\"491\":2}}],[\"springboot\",{\"0\":{\"611\":1}}],[\"springboottest\",{\"1\":{\"459\":1}}],[\"springmvcconfig\",{\"1\":{\"567\":3}}],[\"springmvc入门案例\",{\"1\":{\"560\":1}}],[\"springmvc\",{\"0\":{\"516\":1,\"559\":1},\"1\":{\"560\":1,\"578\":1,\"584\":1}}],[\"springfox<\",{\"1\":{\"193\":1}}],[\"springframework<\",{\"1\":{\"525\":1,\"563\":1}}],[\"springframework\",{\"1\":{\"123\":1,\"147\":1,\"166\":1,\"456\":1}}],[\"spring\",{\"0\":{\"455\":1,\"516\":1,\"517\":1},\"1\":{\"115\":1,\"121\":1,\"145\":1,\"457\":1,\"518\":1}}],[\"srandmember\",{\"1\":{\"491\":2}}],[\"srem\",{\"1\":{\"491\":2}}],[\"src\",{\"1\":{\"173\":1}}],[\"srcpath\",{\"1\":{\"149\":3}}],[\"smembers\",{\"1\":{\"491\":2}}],[\"smtp\",{\"1\":{\"145\":2}}],[\"sleep\",{\"1\":{\"419\":1}}],[\"sneakythrows\",{\"1\":{\"419\":1}}],[\"s1\",{\"1\":{\"407\":1,\"409\":1}}],[\"s表的全部\",{\"1\":{\"324\":1}}],[\"s表的字段\",{\"1\":{\"310\":1}}],[\"s为子表\",{\"1\":{\"310\":1}}],[\"s为图片的名字\",{\"1\":{\"112\":1}}],[\"sql\",{\"1\":{\"210\":1,\"212\":1,\"214\":1,\"216\":2,\"218\":1,\"219\":1,\"221\":1}}],[\"sadd\",{\"1\":{\"491\":2}}],[\"save\",{\"1\":{\"203\":1,\"205\":2,\"510\":1,\"529\":2,\"552\":1,\"556\":1,\"558\":1,\"565\":2,\"571\":1,\"572\":2,\"574\":2,\"579\":2,\"587\":1}}],[\"same\",{\"1\":{\"83\":1}}],[\"swaggerconfig\",{\"1\":{\"194\":1}}],[\"swagger2<\",{\"1\":{\"193\":1}}],[\"swagger\",{\"0\":{\"191\":1},\"1\":{\"194\":1}}],[\"swap\",{\"0\":{\"122\":1}}],[\"scard\",{\"1\":{\"491\":2}}],[\"script>\",{\"1\":{\"173\":1}}],[\"schedulewithfixeddelay\",{\"1\":{\"163\":1}}],[\"schedulecontroller\",{\"1\":{\"163\":1}}],[\"scheduledfuture\",{\"1\":{\"163\":4}}],[\"scheduledfuture<\",{\"1\":{\"163\":1}}],[\"scheduled\",{\"0\":{\"160\":1},\"1\":{\"159\":1,\"161\":1}}],[\"scheduledtasksconfig\",{\"1\":{\"156\":1}}],[\"scheduled注解标记的定时任务是在应用程序启动时自动启动的\",{\"1\":{\"154\":1}}],[\"schedul\",{\"1\":{\"159\":1}}],[\"scope>\",{\"1\":{\"118\":1,\"563\":1}}],[\"scope\",{\"1\":{\"85\":1,\"548\":1}}],[\"serializable>\",{\"1\":{\"363\":2}}],[\"serializable\",{\"1\":{\"363\":2,\"501\":1}}],[\"server\",{\"1\":{\"207\":1,\"480\":1}}],[\"service\",{\"1\":{\"148\":1,\"149\":1,\"399\":1,\"527\":1,\"536\":1,\"545\":1}}],[\"servletinitconfig\",{\"1\":{\"567\":2}}],[\"servlet\",{\"1\":{\"121\":1,\"563\":1}}],[\"servlet<\",{\"1\":{\"118\":1,\"563\":1}}],[\"sex\",{\"1\":{\"285\":3,\"333\":2}}],[\"selectpage\",{\"1\":{\"363\":1,\"385\":1}}],[\"selectobjs\",{\"1\":{\"363\":1}}],[\"selectone\",{\"1\":{\"363\":1}}],[\"selectmapspage\",{\"1\":{\"363\":1}}],[\"selectmaps\",{\"1\":{\"363\":1}}],[\"selectcount\",{\"1\":{\"363\":1,\"385\":1}}],[\"selectbymap\",{\"1\":{\"363\":1,\"366\":1}}],[\"selectbyid\",{\"1\":{\"190\":1,\"363\":1,\"366\":1}}],[\"selectbatchids\",{\"1\":{\"363\":1,\"366\":1}}],[\"select>\",{\"1\":{\"347\":1,\"349\":1,\"351\":1}}],[\"select\",{\"0\":{\"242\":1},\"1\":{\"194\":1,\"243\":1,\"247\":2,\"249\":1,\"277\":1,\"279\":1,\"281\":2,\"285\":1,\"290\":1,\"292\":1,\"294\":2,\"297\":3,\"299\":1,\"301\":2,\"321\":2,\"324\":2,\"329\":1,\"333\":4,\"347\":1,\"349\":1,\"351\":1,\"377\":1,\"482\":1}}],[\"selectlist\",{\"1\":{\"182\":1,\"363\":1,\"366\":1}}],[\"seconds\",{\"1\":{\"182\":1}}],[\"sendimgmail\",{\"1\":{\"151\":1}}],[\"sendmailimg\",{\"1\":{\"149\":1,\"151\":1}}],[\"sendfailmail\",{\"1\":{\"149\":1,\"151\":2}}],[\"send\",{\"1\":{\"149\":3,\"407\":1,\"474\":1}}],[\"sendsimplemail\",{\"1\":{\"149\":1,\"151\":2}}],[\"setcolor\",{\"1\":{\"600\":2}}],[\"setconnectionfactory\",{\"1\":{\"503\":1}}],[\"setbookdao\",{\"1\":{\"538\":1}}],[\"setbackimg\",{\"1\":{\"182\":1}}],[\"sethashvalueserializer\",{\"1\":{\"503\":1}}],[\"sethashkeyserializer\",{\"1\":{\"503\":1}}],[\"sethost\",{\"1\":{\"407\":1,\"409\":1,\"411\":1}}],[\"setvalueserializer\",{\"1\":{\"503\":2}}],[\"setvisibility\",{\"1\":{\"503\":1}}],[\"setvirtualhost\",{\"1\":{\"407\":1,\"409\":1,\"411\":1}}],[\"setviews\",{\"1\":{\"190\":1}}],[\"setkeyserializer\",{\"1\":{\"503\":1}}],[\"setobjectmapper\",{\"1\":{\"503\":1}}],[\"set3\",{\"1\":{\"491\":3}}],[\"set2\",{\"1\":{\"491\":3}}],[\"set1\",{\"1\":{\"491\":3}}],[\"setnx\",{\"1\":{\"487\":1}}],[\"setname\",{\"1\":{\"170\":1}}],[\"setdelay\",{\"1\":{\"474\":2}}],[\"setdatabase\",{\"1\":{\"188\":1}}],[\"setdate\",{\"1\":{\"182\":1}}],[\"setusername\",{\"1\":{\"407\":1,\"409\":1,\"411\":1}}],[\"setport\",{\"1\":{\"407\":1,\"409\":1,\"411\":1}}],[\"setpassword\",{\"1\":{\"182\":1,\"366\":1,\"407\":1,\"409\":1,\"411\":1}}],[\"sets\",{\"0\":{\"494\":1}}],[\"setsql\",{\"1\":{\"387\":1,\"388\":2}}],[\"setsubject\",{\"1\":{\"149\":3}}],[\"setid\",{\"1\":{\"366\":1}}],[\"setifabsent\",{\"1\":{\"182\":1}}],[\"set\",{\"0\":{\"490\":1},\"1\":{\"221\":1,\"223\":4,\"237\":1,\"297\":1,\"315\":1,\"485\":1,\"505\":1,\"552\":1,\"556\":1}}],[\"setlist\",{\"1\":{\"182\":1}}],[\"setemail\",{\"1\":{\"170\":1}}],[\"setattribute\",{\"1\":{\"594\":1}}],[\"setaccount\",{\"1\":{\"182\":1,\"366\":2}}],[\"setage\",{\"1\":{\"170\":1}}],[\"setaddress\",{\"1\":{\"170\":1,\"188\":1}}],[\"setter\",{\"0\":{\"533\":1}}],[\"settext\",{\"1\":{\"149\":3}}],[\"setto\",{\"1\":{\"149\":3}}],[\"setfrom\",{\"1\":{\"149\":3}}],[\"ss\",{\"1\":{\"552\":2,\"556\":3,\"558\":2}}],[\"sslsocketfactory\",{\"1\":{\"145\":1}}],[\"ssl\",{\"1\":{\"145\":1}}],[\"ssh\",{\"0\":{\"224\":1},\"1\":{\"67\":1,\"225\":4}}],[\"sortedset2\",{\"1\":{\"495\":2}}],[\"sortedset1\",{\"1\":{\"495\":2}}],[\"sortedset\",{\"1\":{\"495\":2}}],[\"sorted\",{\"0\":{\"494\":1}}],[\"source\",{\"1\":{\"221\":1}}],[\"socketfactory\",{\"1\":{\"145\":1}}],[\"sockjs的缺点\",{\"0\":{\"139\":1}}],[\"sockjs的优势\",{\"0\":{\"135\":1}}],[\"sockjs在不支持websocket的浏览器中使用的是长轮询技术\",{\"1\":{\"138\":1}}],[\"sockjs可以通过polyfill模拟websocket的功能\",{\"1\":{\"137\":1}}],[\"sockjs可以在所有支持javascript的浏览器中运行\",{\"1\":{\"136\":1}}],[\"sockjs\",{\"0\":{\"124\":1},\"1\":{\"126\":3}}],[\"some\",{\"1\":{\"110\":1,\"112\":1}}],[\"singleton\",{\"1\":{\"548\":1}}],[\"sinter\",{\"1\":{\"491\":2}}],[\"sismember\",{\"1\":{\"491\":2}}],[\"simple简单模式\",{\"0\":{\"402\":1}}],[\"simplemailmessage\",{\"1\":{\"149\":2}}],[\"simpledateformat\",{\"1\":{\"120\":2}}],[\"size\",{\"1\":{\"121\":3,\"168\":2,\"170\":4,\"515\":1}}],[\"support\",{\"1\":{\"606\":1}}],[\"supportsparameter\",{\"1\":{\"598\":1}}],[\"super\",{\"1\":{\"596\":1}}],[\"sunion\",{\"1\":{\"491\":2}}],[\"sum\",{\"1\":{\"244\":1,\"276\":1,\"277\":1}}],[\"sums\",{\"1\":{\"110\":2}}],[\"sudo\",{\"1\":{\"200\":1,\"480\":2}}],[\"success\",{\"1\":{\"182\":1,\"190\":1}}],[\"subject\",{\"1\":{\"149\":6}}],[\"substring\",{\"1\":{\"120\":1,\"297\":1,\"594\":1}}],[\"submit\",{\"1\":{\"119\":1}}],[\"system\",{\"1\":{\"110\":6,\"112\":5,\"120\":1,\"149\":1,\"159\":1,\"163\":1,\"172\":1,\"182\":3,\"366\":6,\"387\":1,\"388\":1,\"409\":1,\"419\":1,\"431\":1,\"443\":1,\"444\":1,\"454\":1,\"461\":1,\"463\":2,\"465\":2,\"467\":2,\"469\":2,\"476\":1,\"505\":1,\"531\":2,\"552\":1,\"556\":3,\"558\":1,\"565\":1,\"572\":1,\"574\":1,\"579\":1,\"585\":2,\"604\":3}}],[\"s\",{\"1\":{\"110\":3,\"112\":2,\"285\":1,\"290\":1,\"294\":2,\"310\":2,\"317\":2,\"321\":6,\"324\":6,\"333\":4,\"407\":2,\"409\":2,\"534\":2,\"536\":1,\"540\":4,\"548\":1}}],[\"showbyid\",{\"1\":{\"190\":1}}],[\"show\",{\"1\":{\"182\":1}}],[\"should\",{\"1\":{\"83\":1}}],[\"shutdown\",{\"1\":{\"108\":1,\"110\":1,\"112\":1}}],[\"stu\",{\"1\":{\"500\":1,\"501\":1,\"505\":4}}],[\"study\",{\"1\":{\"143\":1,\"284\":1,\"403\":1,\"413\":1}}],[\"style=\",{\"1\":{\"173\":1}}],[\"stop\",{\"1\":{\"163\":3,\"205\":1}}],[\"startswith\",{\"1\":{\"173\":1}}],[\"start\",{\"1\":{\"163\":1,\"205\":1}}],[\"starter\",{\"1\":{\"147\":1,\"166\":1,\"456\":1}}],[\"state\",{\"1\":{\"347\":1,\"349\":1,\"351\":3}}],[\"stats\",{\"1\":{\"205\":1}}],[\"statichandles\",{\"1\":{\"116\":1}}],[\"static\",{\"1\":{\"115\":4,\"116\":2,\"411\":3,\"419\":1,\"429\":1,\"431\":1,\"441\":1,\"443\":1,\"444\":1,\"453\":1,\"454\":1,\"472\":3,\"529\":1}}],[\"status\",{\"1\":{\"63\":1}}],[\"strlen\",{\"1\":{\"487\":1}}],[\"stringredisserializer\",{\"1\":{\"503\":6}}],[\"stringredistemplate\",{\"1\":{\"182\":3}}],[\"string>map\",{\"1\":{\"600\":1}}],[\"string>\",{\"1\":{\"503\":1}}],[\"string\",{\"0\":{\"486\":1},\"1\":{\"108\":5,\"112\":1,\"120\":6,\"149\":14,\"151\":2,\"159\":2,\"163\":1,\"170\":9,\"182\":8,\"190\":1,\"409\":3,\"419\":4,\"429\":1,\"431\":5,\"441\":2,\"443\":4,\"444\":4,\"453\":2,\"454\":4,\"461\":1,\"463\":2,\"465\":2,\"467\":2,\"469\":2,\"472\":3,\"474\":1,\"476\":1,\"501\":1,\"529\":1,\"534\":1,\"540\":2,\"548\":1,\"565\":1,\"567\":2,\"572\":2,\"574\":3,\"579\":3,\"581\":2,\"585\":2,\"594\":1,\"600\":3}}],[\"struts\",{\"1\":{\"83\":1}}],[\"struts<\",{\"1\":{\"83\":1}}],[\"远程仓库\",{\"0\":{\"66\":1}}],[\"六\",{\"0\":{\"66\":1},\"1\":{\"579\":1}}],[\"恢复\",{\"1\":{\"65\":1}}],[\"删错了\",{\"1\":{\"65\":1}}],[\"删除key对应的hash中的一个或多个field\",{\"1\":{\"493\":1}}],[\"删除一个hello\",{\"1\":{\"489\":1}}],[\"删除左右头部\",{\"1\":{\"489\":1}}],[\"删除多个\",{\"1\":{\"366\":1}}],[\"删除所有数据\",{\"1\":{\"241\":1}}],[\"删除所有已停止的容器\",{\"1\":{\"205\":1}}],[\"删除当前行\",{\"1\":{\"223\":1}}],[\"删除选中的文本\",{\"1\":{\"223\":1}}],[\"删除容器\",{\"1\":{\"205\":1}}],[\"删除镜像ubuntu\",{\"1\":{\"203\":1}}],[\"删除图片\",{\"0\":{\"111\":1}}],[\"删除\",{\"1\":{\"106\":1,\"311\":1}}],[\"删除远程仓库\",{\"1\":{\"67\":1}}],[\"删除文件或目录\",{\"1\":{\"112\":1}}],[\"删除文件\",{\"0\":{\"64\":1}}],[\"删除本地分支xxx\",{\"1\":{\"57\":1}}],[\"rdb\",{\"0\":{\"507\":1},\"1\":{\"508\":2,\"511\":1,\"512\":1}}],[\"rpop\",{\"1\":{\"489\":1}}],[\"routing\",{\"1\":{\"472\":2,\"474\":2}}],[\"routingkey\",{\"1\":{\"441\":2,\"443\":1,\"444\":1,\"453\":2,\"454\":1}}],[\"route2\",{\"1\":{\"467\":1}}],[\"route1\",{\"1\":{\"467\":1}}],[\"routeconsumer\",{\"1\":{\"467\":1}}],[\"route\",{\"1\":{\"459\":1}}],[\"round\",{\"1\":{\"299\":2,\"556\":1,\"558\":1}}],[\"rollbackfor\",{\"1\":{\"398\":1,\"399\":1}}],[\"rollbackfor属性用于控制出现何种异常类型\",{\"1\":{\"397\":1}}],[\"r\",{\"1\":{\"223\":1,\"225\":1}}],[\"rlock\",{\"1\":{\"190\":1}}],[\"run\",{\"1\":{\"163\":1,\"205\":1,\"207\":1}}],[\"runnable\",{\"1\":{\"163\":1}}],[\"runtimeexception\",{\"1\":{\"120\":1,\"399\":2}}],[\"runtime\",{\"1\":{\"98\":1,\"592\":1}}],[\"rabbithandler\",{\"1\":{\"461\":1}}],[\"rabbitlistener\",{\"1\":{\"461\":1,\"463\":2,\"465\":2,\"467\":2,\"469\":2,\"476\":1}}],[\"rabbittemplate\",{\"1\":{\"459\":7,\"474\":4}}],[\"rabbit\",{\"1\":{\"407\":1}}],[\"rabbitmqtest\",{\"1\":{\"459\":1}}],[\"rabbitmqconnection\",{\"1\":{\"411\":1,\"419\":1,\"429\":1,\"431\":1,\"441\":1,\"443\":1,\"444\":1,\"453\":1,\"454\":1}}],[\"rabbitmq\",{\"0\":{\"400\":1},\"1\":{\"457\":1,\"461\":1}}],[\"rand\",{\"1\":{\"299\":1}}],[\"randomuuid\",{\"1\":{\"120\":1,\"182\":1}}],[\"ram用户\",{\"1\":{\"105\":1}}],[\"rsa\",{\"1\":{\"67\":1}}],[\"rmi\",{\"1\":{\"203\":1}}],[\"rm\",{\"1\":{\"65\":2,\"67\":1,\"203\":1,\"205\":1}}],[\"retentionpolicy\",{\"1\":{\"592\":1}}],[\"retention\",{\"1\":{\"592\":1}}],[\"ret\",{\"1\":{\"558\":2}}],[\"return\",{\"1\":{\"108\":1,\"110\":2,\"112\":2,\"120\":1,\"149\":1,\"159\":1,\"163\":1,\"170\":4,\"172\":1,\"182\":7,\"188\":1,\"190\":1,\"194\":2,\"383\":1,\"385\":1,\"411\":1,\"472\":4,\"474\":1,\"503\":1,\"558\":1,\"565\":1,\"567\":3,\"572\":1,\"574\":1,\"579\":1,\"581\":2,\"594\":1,\"598\":2,\"600\":1,\"604\":1}}],[\"repository\",{\"1\":{\"547\":1}}],[\"repositories\",{\"1\":{\"72\":1}}],[\"rewrite\",{\"1\":{\"515\":3}}],[\"red对应id\",{\"1\":{\"536\":1}}],[\"redsi\",{\"0\":{\"484\":1}}],[\"redisconnectionfactory\",{\"1\":{\"503\":1}}],[\"redisconfig\",{\"1\":{\"502\":1,\"503\":1}}],[\"redistemplate\",{\"1\":{\"503\":3,\"505\":4}}],[\"redistemplate<string\",{\"1\":{\"503\":3}}],[\"redis默认使用的序列化格式\",{\"1\":{\"498\":1}}],[\"redis支持多种序列化格式\",{\"1\":{\"498\":1}}],[\"redis是一种内存数据库\",{\"1\":{\"497\":1}}],[\"redis详细解释\",{\"1\":{\"478\":1}}],[\"redis\",{\"0\":{\"477\":1},\"1\":{\"188\":1,\"480\":2,\"508\":2,\"510\":1,\"514\":2}}],[\"redissonclient\",{\"1\":{\"188\":1,\"190\":3}}],[\"redissonconfig\",{\"1\":{\"187\":1,\"188\":1}}],[\"redisson<\",{\"1\":{\"186\":1}}],[\"redisson学习地址\",{\"1\":{\"184\":1}}],[\"redisson\",{\"0\":{\"183\":1},\"1\":{\"186\":1,\"188\":2}}],[\"redisson分布式锁使用redlock算法避免了死锁的问题\",{\"1\":{\"180\":1}}],[\"redisson分布式锁内部封装了锁的自动续期机制\",{\"1\":{\"179\":1}}],[\"redisson分布式锁内部封装了redis的单线程模型\",{\"1\":{\"178\":1}}],[\"redisson分布式锁封装了锁逻辑\",{\"1\":{\"177\":1}}],[\"redis分布式锁\",{\"0\":{\"181\":1}}],[\"redis分布式锁在高并发场景下可能存在死锁的问题\",{\"1\":{\"180\":1}}],[\"redis分布式锁在锁定后需要手动维护锁的超时时间\",{\"1\":{\"179\":1}}],[\"redis分布式锁在进行锁定和解锁操作时\",{\"1\":{\"178\":1}}],[\"redis分布式锁需要手动编写锁逻辑代码\",{\"1\":{\"177\":1}}],[\"redis分布式锁是基于redis的setnx命令实现的\",{\"1\":{\"176\":1}}],[\"redis分布式锁和redisson分布式锁都是用于实现分布式系统中的分布式锁\",{\"0\":{\"175\":1}}],[\"recrive\",{\"1\":{\"461\":1}}],[\"records\",{\"1\":{\"385\":1}}],[\"recordmapper\",{\"1\":{\"385\":2}}],[\"recordipage\",{\"1\":{\"385\":2}}],[\"rename\",{\"1\":{\"205\":1}}],[\"register\",{\"1\":{\"567\":1}}],[\"registry\",{\"1\":{\"116\":2,\"596\":3,\"606\":3}}],[\"regasdgsdgister\",{\"1\":{\"182\":1}}],[\"references\",{\"1\":{\"310\":1}}],[\"ref=\",{\"1\":{\"173\":1,\"536\":1}}],[\"reflog\",{\"1\":{\"63\":1}}],[\"readasdataurl\",{\"1\":{\"173\":1}}],[\"reader\",{\"1\":{\"173\":4}}],[\"readme\",{\"1\":{\"151\":1}}],[\"realpath\",{\"1\":{\"120\":3}}],[\"reason\",{\"1\":{\"110\":1,\"112\":1}}],[\"req\",{\"1\":{\"120\":5}}],[\"requestmethod\",{\"1\":{\"585\":2,\"587\":1}}],[\"requestmapping\",{\"1\":{\"565\":1,\"572\":1,\"574\":1,\"581\":2,\"585\":2,\"587\":2}}],[\"requestparam\",{\"1\":{\"579\":2,\"587\":1,\"600\":1}}],[\"requesthandlerselectors\",{\"1\":{\"194\":1}}],[\"request\",{\"1\":{\"110\":2,\"112\":2,\"121\":1,\"594\":3,\"602\":1,\"604\":3}}],[\"resp\",{\"1\":{\"385\":4}}],[\"responsebody\",{\"1\":{\"565\":1,\"572\":1,\"574\":1,\"579\":1,\"581\":1,\"585\":2,\"587\":3}}],[\"response\",{\"1\":{\"110\":1,\"112\":1,\"594\":1,\"602\":1,\"604\":3}}],[\"restful快速开发\",{\"1\":{\"584\":1}}],[\"rest风格\",{\"0\":{\"582\":1}}],[\"restrict\",{\"1\":{\"312\":1}}],[\"restart\",{\"1\":{\"205\":1}}],[\"restcontroller\",{\"1\":{\"120\":1,\"163\":1,\"172\":1,\"587\":1}}],[\"resulttype=\",{\"1\":{\"347\":1,\"349\":1,\"351\":1}}],[\"result\",{\"1\":{\"173\":1,\"182\":7,\"190\":2,\"600\":1}}],[\"res\",{\"1\":{\"149\":2,\"182\":2,\"366\":4}}],[\"resids\",{\"1\":{\"149\":2}}],[\"resolveargument\",{\"1\":{\"598\":1}}],[\"resolve\",{\"1\":{\"121\":1}}],[\"resource\",{\"1\":{\"474\":1}}],[\"resourcehandlerregistry\",{\"1\":{\"116\":1}}],[\"resources\",{\"1\":{\"115\":1}}],[\"reset\",{\"1\":{\"63\":2}}],[\"rejected\",{\"1\":{\"110\":1,\"112\":1}}],[\"remote\",{\"1\":{\"67\":5}}],[\"remove\",{\"1\":{\"65\":1}}],[\"五大数据类型\",{\"0\":{\"483\":1}}],[\"五\",{\"0\":{\"64\":1},\"1\":{\"579\":1}}],[\"则新建一个\",{\"1\":{\"493\":1}}],[\"则列举包含指定前缀的文件\",{\"1\":{\"110\":1}}],[\"则列举存储空间下的所有文件\",{\"1\":{\"110\":1}}],[\"则回退\",{\"1\":{\"63\":1}}],[\"则使用ls\",{\"1\":{\"59\":1}}],[\"若已提交\",{\"1\":{\"63\":1}}],[\"若该文件隐藏\",{\"1\":{\"59\":1}}],[\"丢弃暂存区的修改\",{\"1\":{\"63\":1}}],[\"丢弃工作区的修改\",{\"1\":{\"63\":1}}],[\"ioc容器来控制对象的创建\",{\"1\":{\"522\":1}}],[\"ioc\",{\"0\":{\"519\":1},\"1\":{\"520\":1}}],[\"ioexception\",{\"1\":{\"108\":1,\"120\":1,\"407\":1,\"409\":2,\"411\":2,\"419\":2,\"429\":1,\"431\":2,\"441\":1,\"443\":2,\"444\":2,\"453\":1,\"454\":2}}],[\"ipage<record>\",{\"1\":{\"385\":1}}],[\"ipage<map<string\",{\"1\":{\"363\":1}}],[\"ipage<t>>\",{\"1\":{\"363\":1}}],[\"is\",{\"1\":{\"266\":1}}],[\"isempty\",{\"1\":{\"182\":1,\"366\":1}}],[\"isdirectory\",{\"1\":{\"120\":1}}],[\"impl\",{\"1\":{\"527\":2,\"534\":2,\"536\":2,\"542\":1}}],[\"implements\",{\"1\":{\"116\":1,\"163\":1,\"399\":1,\"501\":1,\"531\":1,\"594\":1,\"598\":1,\"604\":1,\"606\":1}}],[\"import会丢弃历史记录和元数据信息\",{\"1\":{\"205\":1}}],[\"import与docker\",{\"1\":{\"205\":1}}],[\"import\",{\"1\":{\"205\":1}}],[\"img\",{\"1\":{\"173\":1,\"576\":1}}],[\"images\",{\"0\":{\"202\":1},\"1\":{\"203\":1}}],[\"image\",{\"1\":{\"173\":2,\"203\":2,\"205\":1}}],[\"i\",{\"1\":{\"149\":2,\"159\":1,\"190\":1,\"203\":1,\"223\":1,\"343\":1,\"459\":2}}],[\"i++\",{\"1\":{\"149\":1,\"159\":1,\"459\":1}}],[\"i<srcpath\",{\"1\":{\"149\":1}}],[\"i=0\",{\"1\":{\"149\":1}}],[\"if>\",{\"1\":{\"347\":2,\"351\":3}}],[\"if\",{\"1\":{\"110\":1,\"112\":1,\"120\":1,\"149\":1,\"163\":1,\"172\":1,\"173\":1,\"182\":7,\"346\":1,\"411\":2}}],[\"item\",{\"1\":{\"447\":1}}],[\"itd\",{\"1\":{\"205\":1,\"207\":1}}],[\"it\",{\"1\":{\"83\":1,\"110\":1,\"112\":1,\"205\":1}}],[\"index\",{\"1\":{\"581\":3}}],[\"inversion\",{\"1\":{\"520\":1}}],[\"incrby\",{\"1\":{\"487\":1}}],[\"incr\",{\"1\":{\"487\":1}}],[\"info\",{\"1\":{\"443\":1,\"444\":1,\"454\":3,\"467\":1}}],[\"inner\",{\"1\":{\"321\":1}}],[\"in\",{\"1\":{\"262\":1,\"366\":1}}],[\"insert>\",{\"1\":{\"344\":1}}],[\"insert\",{\"0\":{\"229\":1},\"1\":{\"182\":2,\"231\":1,\"233\":2,\"235\":1,\"344\":1,\"363\":1,\"366\":1,\"399\":1,\"447\":1}}],[\"install\",{\"1\":{\"74\":1,\"480\":1}}],[\"input\",{\"1\":{\"173\":1}}],[\"interceptorregistry\",{\"1\":{\"596\":1,\"606\":1}}],[\"interceptor\",{\"1\":{\"383\":3,\"596\":1}}],[\"interface\",{\"1\":{\"363\":1,\"592\":1}}],[\"interval\",{\"1\":{\"301\":2}}],[\"integer\",{\"1\":{\"170\":3,\"190\":1,\"363\":1,\"385\":1,\"474\":1,\"501\":1}}],[\"into\",{\"1\":{\"231\":1,\"233\":2,\"235\":1,\"344\":1}}],[\"int\",{\"1\":{\"149\":1,\"190\":1,\"343\":1,\"363\":7,\"366\":2,\"459\":1,\"534\":1,\"540\":2}}],[\"initializingbean\",{\"1\":{\"531\":1}}],[\"initialdelay\",{\"1\":{\"159\":1}}],[\"init\",{\"1\":{\"59\":1,\"531\":4}}],[\"idtype\",{\"1\":{\"372\":1,\"373\":1}}],[\"idlist\",{\"1\":{\"363\":2}}],[\"id=5\",{\"1\":{\"587\":1}}],[\"id=\",{\"1\":{\"344\":1,\"347\":1,\"349\":1,\"351\":1,\"527\":2,\"534\":1,\"536\":2,\"542\":1}}],[\"id>\",{\"1\":{\"72\":1}}],[\"id\",{\"1\":{\"63\":1,\"110\":2,\"112\":2,\"190\":3,\"225\":1,\"290\":1,\"297\":1,\"310\":5,\"321\":4,\"324\":4,\"344\":3,\"363\":2,\"366\":1,\"385\":1,\"387\":1,\"501\":1,\"574\":2,\"579\":2,\"585\":6,\"587\":2}}],[\"hmget等\",{\"1\":{\"493\":1}}],[\"hmset\",{\"1\":{\"493\":1}}],[\"hvals\",{\"1\":{\"493\":2}}],[\"hkeys\",{\"1\":{\"493\":2}}],[\"hlen\",{\"1\":{\"493\":2}}],[\"hdel\",{\"1\":{\"493\":2}}],[\"hgetall\",{\"1\":{\"493\":2}}],[\"hget\",{\"1\":{\"493\":2}}],[\"hset\",{\"1\":{\"493\":2}}],[\"hh\",{\"1\":{\"449\":2,\"451\":1,\"459\":1,\"485\":1,\"505\":2}}],[\"hhh\",{\"1\":{\"366\":1,\"485\":1,\"565\":1}}],[\"h\",{\"1\":{\"223\":1}}],[\"hexists\",{\"1\":{\"493\":2}}],[\"height\",{\"1\":{\"173\":1}}],[\"here\",{\"1\":{\"161\":1}}],[\"hello\",{\"1\":{\"149\":1,\"297\":3,\"407\":3,\"409\":2,\"429\":1,\"459\":7,\"461\":1,\"489\":3,\"542\":1,\"565\":1,\"572\":1,\"574\":1,\"579\":1}}],[\"helper\",{\"1\":{\"149\":12}}],[\"head\",{\"1\":{\"63\":1}}],[\"head~100\",{\"1\":{\"63\":1}}],[\"head^\",{\"1\":{\"63\":1}}],[\"html5\",{\"1\":{\"126\":1}}],[\"httpservletresponse\",{\"1\":{\"594\":1,\"602\":1,\"604\":3}}],[\"httpservletrequest\",{\"1\":{\"120\":1,\"594\":1,\"598\":2,\"602\":1,\"604\":3}}],[\"https\",{\"1\":{\"108\":1,\"340\":1}}],[\"handlermethodargumentresolver\",{\"1\":{\"598\":1}}],[\"handler\",{\"1\":{\"594\":1,\"604\":3}}],[\"handlerinterceptor\",{\"1\":{\"594\":1,\"604\":1}}],[\"handledelivery\",{\"1\":{\"409\":1,\"419\":1,\"431\":1,\"443\":1,\"444\":1,\"454\":1}}],[\"hangzhou\",{\"1\":{\"108\":1}}],[\"hash的value序列化方式采用jackson\",{\"1\":{\"503\":1}}],[\"hash的key也采用string的序列化方式\",{\"1\":{\"503\":1}}],[\"hash命令\",{\"1\":{\"493\":1}}],[\"hash\",{\"0\":{\"492\":1}}],[\"hashmap<>\",{\"1\":{\"366\":2}}],[\"hashmap<string\",{\"1\":{\"366\":2,\"472\":1}}],[\"haserrors\",{\"1\":{\"172\":1}}],[\"having\",{\"1\":{\"243\":1,\"285\":1}}],[\"hard\",{\"1\":{\"63\":1}}],[\"hou\",{\"1\":{\"556\":1}}],[\"hot\",{\"0\":{\"122\":1}}],[\"hostname\",{\"1\":{\"225\":1}}],[\"host\",{\"1\":{\"110\":1,\"112\":1,\"145\":1,\"225\":1,\"457\":2}}],[\"hope\",{\"1\":{\"30\":1}}],[\"home\",{\"0\":{\"0\":1},\"1\":{\"223\":1}}],[\"四\",{\"0\":{\"62\":1},\"1\":{\"579\":1}}],[\"3个字段\",{\"1\":{\"317\":1}}],[\"39\",{\"1\":{\"223\":1}}],[\"38\",{\"1\":{\"223\":1}}],[\"37\",{\"1\":{\"223\":1}}],[\"36\",{\"1\":{\"223\":1}}],[\"35\",{\"1\":{\"223\":1}}],[\"34\",{\"1\":{\"223\":1}}],[\"33\",{\"1\":{\"223\":1}}],[\"32\",{\"1\":{\"223\":1}}],[\"31\",{\"1\":{\"223\":1}}],[\"30\",{\"1\":{\"223\":1}}],[\"3\",{\"0\":{\"595\":1},\"1\":{\"61\":1,\"83\":1,\"223\":1,\"299\":1,\"366\":1,\"487\":1,\"525\":1,\"529\":1,\"563\":1}}],[\"提高数据库操作的性能\",{\"1\":{\"395\":1}}],[\"提高性能\",{\"1\":{\"395\":1}}],[\"提高效率而生\",{\"1\":{\"354\":1}}],[\"提交\",{\"1\":{\"61\":1}}],[\"提示\",{\"1\":{\"36\":1,\"153\":1}}],[\"warn\",{\"1\":{\"441\":1,\"443\":1,\"444\":1,\"453\":1,\"454\":1,\"459\":1,\"467\":2}}],[\"wapper条件构造器\",{\"0\":{\"367\":1}}],[\"was\",{\"1\":{\"110\":1,\"112\":1}}],[\"wrapper<t>\",{\"1\":{\"363\":9}}],[\"wrote\",{\"1\":{\"61\":1}}],[\"while\",{\"1\":{\"405\":1}}],[\"which\",{\"1\":{\"110\":1,\"112\":1}}],[\"when>\",{\"1\":{\"349\":2}}],[\"where\",{\"1\":{\"237\":1,\"240\":1,\"243\":1,\"244\":1,\"297\":1,\"321\":1,\"333\":4,\"347\":1,\"349\":1,\"351\":1,\"366\":2}}],[\"wq\",{\"1\":{\"223\":1}}],[\"w\",{\"1\":{\"223\":2}}],[\"work2\",{\"1\":{\"463\":1}}],[\"work1\",{\"1\":{\"463\":1}}],[\"workconsumer\",{\"1\":{\"463\":1}}],[\"work\",{\"1\":{\"459\":4,\"463\":2}}],[\"word2\",{\"1\":{\"223\":3}}],[\"word1\",{\"1\":{\"223\":3}}],[\"word\",{\"1\":{\"223\":2,\"419\":2}}],[\"world\",{\"1\":{\"149\":1,\"297\":1,\"429\":1,\"459\":1,\"487\":1,\"542\":1,\"548\":1,\"565\":1,\"572\":1,\"574\":1,\"579\":1}}],[\"width\",{\"1\":{\"173\":1}}],[\"withmethodannotation\",{\"1\":{\"194\":1}}],[\"with\",{\"1\":{\"3\":1,\"110\":1,\"112\":1,\"472\":1}}],[\"webdatabinderfactory\",{\"1\":{\"598\":2}}],[\"webapplicationcontext\",{\"1\":{\"567\":2}}],[\"web1\",{\"1\":{\"182\":7}}],[\"webmvcconfigurationsupport\",{\"1\":{\"596\":1,\"606\":1}}],[\"webmvcconfigurer\",{\"1\":{\"116\":1,\"606\":1}}],[\"webmvc<\",{\"1\":{\"563\":1}}],[\"webmapper\",{\"1\":{\"182\":2}}],[\"webs\",{\"1\":{\"182\":2}}],[\"websocket在连接建立后会一直保持连接\",{\"1\":{\"134\":1}}],[\"websocket是html5标准的一部分\",{\"1\":{\"133\":1}}],[\"websocket是一个非常简单的协议\",{\"1\":{\"129\":1}}],[\"websocket提供了双向通信的功能\",{\"1\":{\"131\":1}}],[\"websocket的缺点\",{\"0\":{\"132\":1}}],[\"websocket的头部信息非常小\",{\"1\":{\"130\":1}}],[\"websocket的优势\",{\"0\":{\"128\":1}}],[\"websocket和sockjs都是在web应用程序中使用实时通信的协议\",{\"1\":{\"127\":1}}],[\"websocket\",{\"0\":{\"124\":1},\"1\":{\"126\":5}}],[\"web\",{\"1\":{\"115\":1,\"182\":2}}],[\"we\",{\"1\":{\"83\":1}}],[\"添加用户时出现异常\",{\"1\":{\"399\":2}}],[\"添加用户\",{\"1\":{\"399\":1}}],[\"添加apioperiation注解的被扫描\",{\"1\":{\"194\":1}}],[\"添加\",{\"0\":{\"342\":1},\"1\":{\"61\":1}}],[\"把用户传过来的token\",{\"1\":{\"590\":1}}],[\"把表中字段和实体类对应\",{\"1\":{\"374\":1}}],[\"把文件添加add和提交commit到版本库\",{\"0\":{\"60\":1}}],[\"把新建的分支yyy上传\",{\"1\":{\"57\":1}}],[\"三\",{\"0\":{\"60\":1},\"1\":{\"366\":1,\"579\":1}}],[\"abstractdispatcherservletinitializer\",{\"1\":{\"567\":1}}],[\"abc\",{\"1\":{\"449\":1}}],[\"aftercompletion\",{\"1\":{\"604\":2}}],[\"afterthrowing\",{\"1\":{\"556\":1}}],[\"afterreturning\",{\"1\":{\"552\":1,\"556\":2}}],[\"afterpropertiesset\",{\"1\":{\"503\":1}}],[\"aop\",{\"0\":{\"549\":1},\"1\":{\"552\":1,\"556\":1}}],[\"aof持久化策略的配置\",{\"1\":{\"515\":1}}],[\"aof\",{\"0\":{\"513\":1},\"1\":{\"514\":2,\"515\":4}}],[\"atx\",{\"1\":{\"529\":2}}],[\"attach\",{\"1\":{\"205\":1}}],[\"amqp<\",{\"1\":{\"456\":1}}],[\"amqp\",{\"1\":{\"409\":1,\"419\":1,\"431\":1,\"443\":1,\"444\":1,\"454\":1}}],[\"auto\",{\"1\":{\"372\":1,\"515\":2}}],[\"autowired\",{\"1\":{\"149\":1,\"151\":1,\"163\":1,\"190\":1,\"399\":1,\"459\":1,\"505\":1,\"548\":1,\"606\":1}}],[\"authorization\",{\"1\":{\"594\":1}}],[\"author\",{\"1\":{\"347\":4,\"349\":4,\"351\":4}}],[\"aspect\",{\"1\":{\"552\":1}}],[\"asg\",{\"1\":{\"454\":1}}],[\"aslist\",{\"1\":{\"366\":2}}],[\"asc\",{\"1\":{\"287\":1,\"290\":1}}],[\"as\",{\"1\":{\"247\":1}}],[\"avg\",{\"1\":{\"244\":1,\"278\":1,\"285\":1}}],[\"aaa\",{\"1\":{\"212\":2,\"216\":1,\"219\":2,\"221\":3,\"454\":1}}],[\"agsdga\",{\"1\":{\"454\":1}}],[\"agv\",{\"1\":{\"279\":1}}],[\"ag\",{\"1\":{\"200\":1}}],[\"age\",{\"1\":{\"168\":2,\"170\":7,\"279\":1,\"281\":2,\"285\":1,\"290\":1,\"333\":2,\"487\":4}}],[\"always\",{\"1\":{\"515\":1}}],[\"all\",{\"1\":{\"333\":1,\"503\":1}}],[\"allerrors\",{\"1\":{\"172\":2}}],[\"alter\",{\"1\":{\"310\":1}}],[\"aliyuncs\",{\"1\":{\"108\":1}}],[\"aliyun\",{\"1\":{\"72\":1}}],[\"admin\",{\"1\":{\"449\":3,\"451\":2}}],[\"administrator\",{\"1\":{\"151\":2}}],[\"adress\",{\"1\":{\"168\":1}}],[\"addpathpatterns\",{\"1\":{\"596\":1,\"606\":1}}],[\"addargumentresolvers\",{\"1\":{\"596\":1}}],[\"addattachment\",{\"1\":{\"149\":1}}],[\"addinterceptor\",{\"1\":{\"596\":1,\"606\":1}}],[\"addinterceptors\",{\"1\":{\"596\":2,\"606\":1}}],[\"addinnerinterceptor\",{\"1\":{\"383\":1}}],[\"addinline\",{\"1\":{\"149\":1}}],[\"adduser\",{\"1\":{\"172\":2,\"399\":1}}],[\"address\",{\"1\":{\"168\":1,\"170\":6}}],[\"addresourcelocations\",{\"1\":{\"116\":1}}],[\"addresourcehandler\",{\"1\":{\"116\":1}}],[\"addresourcehandlers\",{\"1\":{\"116\":1}}],[\"add\",{\"1\":{\"61\":2,\"67\":1,\"110\":1,\"172\":1,\"301\":3,\"310\":1,\"596\":1}}],[\"appendfsync\",{\"1\":{\"515\":3}}],[\"appendfilename\",{\"1\":{\"515\":2}}],[\"appendonly\",{\"1\":{\"515\":2}}],[\"append\",{\"1\":{\"487\":1,\"514\":1}}],[\"applicationcontext\",{\"1\":{\"526\":1,\"529\":2}}],[\"application\",{\"1\":{\"144\":1}}],[\"apt\",{\"1\":{\"480\":2}}],[\"apioperation\",{\"1\":{\"194\":1}}],[\"apis\",{\"1\":{\"194\":1}}],[\"apiinfobuilder\",{\"1\":{\"194\":1}}],[\"apiinfo\",{\"1\":{\"194\":4}}],[\"api<\",{\"1\":{\"118\":1,\"563\":1}}],[\"apache\",{\"1\":{\"83\":1}}],[\"annotationconfigwebapplicationcontext\",{\"1\":{\"567\":2}}],[\"and\",{\"1\":{\"260\":1,\"268\":1,\"347\":3,\"349\":4,\"351\":3,\"366\":1}}],[\"any\",{\"1\":{\"194\":1,\"503\":1}}],[\"an\",{\"1\":{\"110\":2,\"112\":2}}],[\"around\",{\"1\":{\"556\":1,\"558\":1}}],[\"argumentresolvers\",{\"1\":{\"596\":2}}],[\"arg\",{\"1\":{\"536\":3}}],[\"args\",{\"1\":{\"419\":1,\"429\":1,\"431\":1,\"441\":1,\"443\":1,\"444\":1,\"453\":1,\"454\":1,\"472\":3,\"529\":1,\"558\":4}}],[\"array>\",{\"1\":{\"542\":1}}],[\"arrays\",{\"1\":{\"366\":2,\"558\":1}}],[\"arraylist<>\",{\"1\":{\"110\":1,\"172\":1}}],[\"arraylist<string>\",{\"1\":{\"110\":1,\"172\":1}}],[\"artifact\",{\"1\":{\"340\":1}}],[\"artifactid>\",{\"1\":{\"80\":1,\"83\":3,\"118\":1,\"123\":1,\"147\":1,\"166\":1,\"186\":1,\"193\":1,\"340\":1,\"456\":1,\"525\":1,\"563\":2}}],[\"articlemapper\",{\"1\":{\"190\":2,\"387\":1,\"388\":1}}],[\"article\",{\"1\":{\"190\":6,\"388\":1}}],[\"active\",{\"1\":{\"347\":1,\"349\":1}}],[\"action=\",{\"1\":{\"119\":1}}],[\"action\",{\"1\":{\"106\":1,\"313\":1}}],[\"actions\",{\"1\":{\"2\":1,\"4\":1}}],[\"account\",{\"1\":{\"182\":11,\"366\":3,\"594\":1,\"596\":1,\"598\":1,\"600\":3}}],[\"accept=\",{\"1\":{\"173\":1}}],[\"accesskeysecert\",{\"1\":{\"110\":1,\"112\":1}}],[\"accesskeysecret\",{\"1\":{\"108\":2}}],[\"accesskeyid\",{\"1\":{\"108\":2,\"110\":1,\"112\":1}}],[\"accesskey进行操作\",{\"1\":{\"105\":1}}],[\"akgit\",{\"1\":{\"67\":2}}],[\"a\",{\"1\":{\"61\":1,\"205\":1,\"534\":2,\"536\":1,\"540\":4}}],[\"ah\",{\"1\":{\"59\":1}}],[\"创建拦截器\",{\"0\":{\"593\":1}}],[\"创建自定义注解\",{\"0\":{\"591\":1}}],[\"创建使用\",{\"0\":{\"561\":1}}],[\"创建对象\",{\"1\":{\"521\":1}}],[\"创建连接对象\",{\"1\":{\"429\":1}}],[\"创建mq的连接工厂对象\",{\"1\":{\"407\":1,\"409\":1}}],[\"创建新的数据库\",{\"1\":{\"221\":1}}],[\"创建并启动一个容器\",{\"1\":{\"205\":1}}],[\"创建某个container的镜像\",{\"1\":{\"203\":1}}],[\"创建ssh\",{\"1\":{\"67\":1}}],[\"创建\",{\"1\":{\"59\":1,\"173\":1,\"207\":1}}],[\"创建版本库\",{\"0\":{\"58\":1}}],[\"ltrim\",{\"1\":{\"489\":1}}],[\"lts\",{\"1\":{\"199\":1}}],[\"lrem\",{\"1\":{\"489\":1}}],[\"lrange\",{\"1\":{\"489\":1}}],[\"llen\",{\"1\":{\"489\":1}}],[\"lpop\",{\"1\":{\"489\":1}}],[\"lpush\",{\"1\":{\"489\":1}}],[\"l\",{\"1\":{\"223\":1}}],[\"left\",{\"1\":{\"324\":2}}],[\"lesson\",{\"1\":{\"207\":1}}],[\"length\",{\"1\":{\"149\":3,\"182\":3}}],[\"learngit\",{\"1\":{\"59\":2}}],[\"lastsave\",{\"1\":{\"510\":1}}],[\"lastindexof\",{\"1\":{\"120\":1}}],[\"lambdaupdatewrapper<>\",{\"1\":{\"388\":1}}],[\"lambdaupdatewrapper<article>\",{\"1\":{\"388\":1}}],[\"lazily\",{\"1\":{\"121\":1}}],[\"lower\",{\"1\":{\"297\":2}}],[\"load会保存完整记录\",{\"1\":{\"205\":1}}],[\"load的区别\",{\"1\":{\"205\":1}}],[\"load\",{\"1\":{\"203\":1}}],[\"local\",{\"1\":{\"212\":1}}],[\"localhost\",{\"1\":{\"188\":1}}],[\"location\",{\"1\":{\"121\":1}}],[\"locations\",{\"1\":{\"115\":1}}],[\"lock\",{\"1\":{\"182\":1,\"190\":4}}],[\"log\",{\"1\":{\"63\":2}}],[\"liming\",{\"1\":{\"505\":1}}],[\"limit\",{\"1\":{\"243\":1,\"244\":1,\"292\":1,\"294\":2}}],[\"lindex\",{\"1\":{\"489\":1}}],[\"linux\",{\"0\":{\"195\":1},\"1\":{\"8\":1}}],[\"like\",{\"1\":{\"264\":1,\"347\":2,\"349\":2,\"351\":2}}],[\"list<handlermethodargumentresolver>\",{\"1\":{\"596\":1}}],[\"list<record>\",{\"1\":{\"385\":1}}],[\"list<user>\",{\"1\":{\"366\":3}}],[\"list<integer>\",{\"1\":{\"366\":2}}],[\"list<map<string\",{\"1\":{\"363\":1}}],[\"list<t>\",{\"1\":{\"363\":3}}],[\"list<web>\",{\"1\":{\"182\":1}}],[\"list<object>\",{\"1\":{\"363\":1}}],[\"list<objecterror>\",{\"1\":{\"172\":1}}],[\"list<ossobjectsummary>\",{\"1\":{\"110\":1}}],[\"list<string>\",{\"1\":{\"172\":1,\"579\":1}}],[\"list\",{\"0\":{\"488\":1},\"1\":{\"108\":1,\"110\":4,\"112\":1,\"366\":4,\"385\":2,\"489\":8,\"542\":1,\"579\":1,\"600\":3}}],[\"listobjects\",{\"1\":{\"106\":1,\"110\":1}}],[\"lset\",{\"1\":{\"489\":1}}],[\"ls\",{\"1\":{\"67\":1}}],[\"新建本地分支\",{\"1\":{\"57\":1}}],[\"新建分支xxx\",{\"1\":{\"57\":1}}],[\"year\",{\"1\":{\"301\":2}}],[\"y的模\",{\"1\":{\"299\":1}}],[\"yy\",{\"1\":{\"223\":1}}],[\"yyyy\",{\"1\":{\"120\":1}}],[\"yyy\",{\"1\":{\"57\":1}}],[\"yml\",{\"1\":{\"144\":1,\"548\":1}}],[\"y\",{\"1\":{\"90\":1,\"91\":1,\"92\":1,\"94\":1,\"96\":1,\"97\":1,\"99\":1,\"223\":1,\"299\":2}}],[\"youraccesskeysecret\",{\"1\":{\"108\":1}}],[\"youraccesskeyid\",{\"1\":{\"108\":1}}],[\"youremail\",{\"1\":{\"67\":1}}],[\"your\",{\"1\":{\"55\":1,\"110\":1,\"112\":1,\"161\":1}}],[\"仍然删除分支xxx\",{\"1\":{\"57\":1}}],[\"忽略修改\",{\"1\":{\"57\":1}}],[\"dump\",{\"1\":{\"511\":1,\"512\":1}}],[\"dbtype\",{\"1\":{\"383\":1}}],[\"disposablebean\",{\"1\":{\"531\":1}}],[\"distinct\",{\"1\":{\"249\":1}}],[\"direct\",{\"1\":{\"441\":3,\"443\":5,\"444\":3,\"453\":1,\"459\":3,\"467\":4,\"472\":1}}],[\"direct类型的exchange\",{\"1\":{\"436\":1}}],[\"div>\",{\"1\":{\"173\":1}}],[\"documented\",{\"1\":{\"592\":1}}],[\"documentationtype\",{\"1\":{\"194\":1}}],[\"docker安装rabbitmq详细步骤\",{\"1\":{\"401\":1}}],[\"docker\",{\"0\":{\"196\":1},\"1\":{\"199\":2,\"200\":1,\"203\":7,\"205\":19,\"207\":3}}],[\"docket\",{\"1\":{\"194\":2}}],[\"dotask\",{\"1\":{\"161\":1}}],[\"dd\",{\"1\":{\"120\":1,\"223\":1}}],[\"dao\",{\"1\":{\"527\":1,\"534\":1,\"536\":1,\"538\":2,\"542\":1,\"552\":1,\"554\":1,\"556\":1,\"558\":1}}],[\"day\",{\"1\":{\"301\":2}}],[\"date2\",{\"1\":{\"301\":1}}],[\"date1\",{\"1\":{\"301\":1}}],[\"datediff\",{\"1\":{\"301\":1}}],[\"date\",{\"1\":{\"120\":1,\"182\":2,\"301\":6}}],[\"database\",{\"1\":{\"508\":1}}],[\"databases\",{\"1\":{\"221\":1}}],[\"data\",{\"1\":{\"119\":1}}],[\"daisy\",{\"1\":{\"67\":2}}],[\"destroy\",{\"1\":{\"531\":1}}],[\"destory\",{\"1\":{\"531\":3}}],[\"desc\",{\"1\":{\"288\":1,\"290\":1}}],[\"description\",{\"1\":{\"194\":1,\"368\":1,\"380\":1,\"434\":1,\"446\":1}}],[\"dectby\",{\"1\":{\"487\":1}}],[\"decr\",{\"1\":{\"487\":1}}],[\"decimalmax\",{\"1\":{\"170\":1}}],[\"decimalmin\",{\"1\":{\"170\":1}}],[\"dependencies>\",{\"1\":{\"563\":1}}],[\"dependency>\",{\"1\":{\"80\":1,\"83\":2,\"118\":1,\"123\":1,\"147\":1,\"166\":1,\"186\":1,\"193\":1,\"340\":1,\"456\":1,\"525\":1,\"563\":2}}],[\"deplyconsumer\",{\"1\":{\"476\":1}}],[\"deplyproducer\",{\"1\":{\"474\":1}}],[\"deplybinding\",{\"1\":{\"472\":1}}],[\"delaytime\",{\"1\":{\"474\":3}}],[\"delayqueue\",{\"1\":{\"472\":2}}],[\"delayed\",{\"1\":{\"472\":2}}],[\"delayexchange\",{\"1\":{\"472\":2}}],[\"delay\",{\"1\":{\"472\":3}}],[\"deletebatchids\",{\"1\":{\"363\":1,\"366\":1}}],[\"deletebymap\",{\"1\":{\"363\":1,\"366\":1}}],[\"deletebyid\",{\"1\":{\"363\":1,\"366\":1}}],[\"delete\",{\"0\":{\"239\":1},\"1\":{\"182\":1,\"240\":1,\"241\":1,\"363\":1,\"366\":2,\"585\":1}}],[\"deleteobject\",{\"1\":{\"106\":1,\"112\":2}}],[\"dead\",{\"1\":{\"472\":6,\"474\":4,\"476\":1}}],[\"debug\",{\"1\":{\"145\":1}}],[\"defaulttyping\",{\"1\":{\"503\":1}}],[\"defaultconsumer\",{\"1\":{\"409\":1,\"419\":1,\"431\":1,\"443\":1,\"444\":1,\"454\":1}}],[\"default\",{\"1\":{\"145\":1,\"173\":1,\"303\":1}}],[\"devtools<\",{\"1\":{\"123\":1}}],[\"d\",{\"1\":{\"57\":2,\"214\":1,\"216\":1,\"223\":1}}],[\"ctx\",{\"1\":{\"567\":3}}],[\"ctrl\",{\"1\":{\"223\":2}}],[\"customexchange\",{\"1\":{\"472\":2}}],[\"curd\",{\"0\":{\"364\":1}}],[\"curdate\",{\"1\":{\"301\":1}}],[\"curtime\",{\"1\":{\"301\":1}}],[\"c端\",{\"1\":{\"405\":1}}],[\"cm\",{\"1\":{\"363\":2}}],[\"ceil\",{\"1\":{\"299\":1}}],[\"central\",{\"1\":{\"72\":1}}],[\"cp\",{\"1\":{\"205\":2}}],[\"channel\",{\"1\":{\"407\":5,\"409\":6,\"411\":4,\"419\":7,\"429\":5,\"431\":7,\"441\":5,\"443\":9,\"444\":7,\"453\":5,\"454\":9}}],[\"change=\",{\"1\":{\"173\":1}}],[\"choose>\",{\"1\":{\"349\":1}}],[\"choose\",{\"1\":{\"348\":1}}],[\"checkout\",{\"1\":{\"57\":2,\"63\":1,\"65\":1}}],[\"chenkout\",{\"1\":{\"57\":1}}],[\"createrootapplicationcontext\",{\"1\":{\"567\":1}}],[\"createservletapplicationcontext\",{\"1\":{\"567\":1}}],[\"createchannel\",{\"1\":{\"407\":1,\"409\":1,\"419\":1,\"429\":1,\"431\":1,\"441\":1,\"443\":1,\"444\":1,\"453\":1,\"454\":1}}],[\"create\",{\"1\":{\"188\":1,\"205\":1,\"221\":1}}],[\"createjwt\",{\"1\":{\"182\":1}}],[\"createmimemessage\",{\"1\":{\"149\":2}}],[\"cron\",{\"0\":{\"160\":1},\"1\":{\"161\":1}}],[\"cc\",{\"1\":{\"149\":1}}],[\"cascade\",{\"1\":{\"314\":1}}],[\"cancel\",{\"1\":{\"163\":1}}],[\"caught\",{\"1\":{\"110\":1,\"112\":1}}],[\"catch\",{\"1\":{\"110\":1,\"112\":1,\"120\":1,\"399\":1,\"411\":1}}],[\"cat\",{\"1\":{\"63\":1}}],[\"cnblogs\",{\"1\":{\"401\":1}}],[\"cn\",{\"1\":{\"108\":1}}],[\"cli\",{\"1\":{\"480\":1}}],[\"closechannelandconnection\",{\"1\":{\"411\":1}}],[\"close\",{\"1\":{\"407\":2,\"409\":2,\"411\":2,\"429\":2,\"441\":2,\"453\":2}}],[\"clone\",{\"1\":{\"67\":1}}],[\"class=\",{\"1\":{\"527\":2,\"534\":1,\"536\":2,\"542\":1}}],[\"class\",{\"1\":{\"116\":1,\"120\":1,\"145\":1,\"149\":1,\"156\":1,\"163\":2,\"170\":1,\"172\":1,\"188\":1,\"194\":2,\"383\":1,\"398\":1,\"399\":2,\"411\":1,\"419\":1,\"429\":1,\"431\":1,\"441\":1,\"443\":1,\"444\":1,\"453\":1,\"454\":1,\"459\":1,\"461\":1,\"463\":1,\"465\":1,\"467\":1,\"469\":1,\"472\":1,\"474\":1,\"476\":1,\"501\":1,\"503\":2,\"529\":1,\"552\":1,\"556\":1,\"558\":1,\"565\":1,\"567\":3,\"594\":1,\"596\":1,\"598\":2,\"604\":1,\"606\":1}}],[\"classpathxmlapplicationcontext\",{\"1\":{\"529\":1}}],[\"classpath\",{\"1\":{\"115\":1,\"116\":1}}],[\"clean\",{\"1\":{\"74\":1}}],[\"c\",{\"1\":{\"67\":1,\"151\":3}}],[\"cd\",{\"1\":{\"59\":1,\"67\":1}}],[\"colorservice\",{\"1\":{\"600\":1}}],[\"color\",{\"1\":{\"596\":1,\"600\":3}}],[\"collection<\",{\"1\":{\"363\":2}}],[\"coll\",{\"1\":{\"363\":2}}],[\"columnmap\",{\"1\":{\"363\":2}}],[\"count\",{\"1\":{\"244\":1,\"285\":1,\"385\":1}}],[\"copy\",{\"1\":{\"225\":1}}],[\"core<\",{\"1\":{\"83\":1}}],[\"convertandsend\",{\"1\":{\"459\":5,\"474\":2}}],[\"con\",{\"1\":{\"411\":3}}],[\"connection\",{\"1\":{\"407\":4,\"409\":4,\"411\":2,\"419\":3,\"429\":4,\"431\":3,\"441\":4,\"443\":3,\"444\":3,\"453\":4,\"454\":3}}],[\"connectionfactory\",{\"1\":{\"407\":9,\"409\":9,\"411\":10}}],[\"consumertwo\",{\"1\":{\"444\":1}}],[\"consumertag\",{\"1\":{\"409\":1,\"419\":1,\"431\":1,\"443\":1,\"444\":1,\"454\":1}}],[\"consumerone\",{\"1\":{\"431\":1,\"443\":1,\"454\":1}}],[\"consumer2\",{\"1\":{\"419\":1}}],[\"consumer\",{\"0\":{\"418\":1},\"1\":{\"405\":1}}],[\"constraint\",{\"1\":{\"310\":1}}],[\"const\",{\"1\":{\"173\":2}}],[\"concat\",{\"1\":{\"297\":2}}],[\"control\",{\"1\":{\"520\":1}}],[\"controller\",{\"1\":{\"171\":1,\"546\":1,\"565\":1,\"567\":1,\"587\":2}}],[\"context<\",{\"1\":{\"525\":1}}],[\"contextloads\",{\"1\":{\"505\":1}}],[\"content\",{\"1\":{\"72\":1,\"149\":6,\"182\":2}}],[\"contaienr\",{\"1\":{\"205\":1}}],[\"container2\",{\"1\":{\"205\":1}}],[\"container1\",{\"1\":{\"205\":1}}],[\"container\",{\"0\":{\"204\":1},\"1\":{\"203\":2,\"205\":19}}],[\"config类\",{\"1\":{\"566\":1}}],[\"configuration\",{\"1\":{\"116\":1,\"156\":1,\"188\":1,\"194\":1,\"383\":1,\"472\":1,\"503\":1,\"548\":1,\"567\":1,\"596\":1,\"606\":1}}],[\"config\",{\"1\":{\"55\":2,\"188\":5,\"382\":1,\"471\":1}}],[\"command\",{\"1\":{\"205\":1}}],[\"commit\",{\"1\":{\"61\":2,\"63\":1,\"65\":1,\"203\":1}}],[\"componentscan\",{\"1\":{\"548\":1,\"567\":1}}],[\"component\",{\"1\":{\"461\":1,\"463\":1,\"465\":1,\"467\":1,\"469\":1,\"474\":1,\"476\":1,\"544\":1,\"552\":1,\"604\":1}}],[\"compose\",{\"1\":{\"199\":1}}],[\"compile\",{\"1\":{\"74\":1,\"89\":1}}],[\"com\",{\"1\":{\"55\":1,\"67\":3,\"72\":1,\"108\":1,\"145\":2,\"151\":6,\"340\":1,\"401\":1,\"527\":2,\"534\":1,\"536\":2,\"542\":1,\"548\":1,\"552\":1,\"554\":1,\"556\":1,\"558\":1,\"567\":1}}],[\"code\",{\"1\":{\"3\":1,\"110\":1,\"112\":1,\"161\":1}}],[\"backimg\",{\"1\":{\"600\":1}}],[\"basicack\",{\"1\":{\"419\":1}}],[\"basicqos\",{\"1\":{\"419\":1}}],[\"basicproperties\",{\"1\":{\"409\":1,\"419\":1,\"431\":1,\"443\":1,\"444\":1,\"454\":1}}],[\"basicpublish\",{\"1\":{\"407\":1,\"429\":1,\"441\":1,\"453\":1}}],[\"basicconsume\",{\"1\":{\"409\":1,\"419\":1,\"431\":1,\"443\":1,\"444\":1,\"454\":1}}],[\"basic\",{\"1\":{\"407\":1}}],[\"basemapper<t>\",{\"1\":{\"363\":1}}],[\"basemapper\",{\"0\":{\"362\":1}}],[\"bgsave\",{\"1\":{\"510\":1}}],[\"bdsize\",{\"1\":{\"482\":1}}],[\"body\",{\"1\":{\"409\":3,\"419\":3,\"431\":3,\"443\":2,\"444\":2,\"454\":2}}],[\"book\",{\"1\":{\"538\":2}}],[\"bookserviceimpl\",{\"1\":{\"527\":1,\"536\":1}}],[\"bookservice\",{\"1\":{\"527\":1,\"536\":1}}],[\"bookdao1\",{\"1\":{\"529\":2}}],[\"bookdaoimpl\",{\"1\":{\"527\":1,\"529\":1,\"534\":1,\"536\":1,\"540\":1,\"542\":1,\"548\":1}}],[\"bookdao\",{\"1\":{\"527\":1,\"529\":6,\"534\":1,\"536\":3,\"538\":4,\"542\":1,\"548\":2,\"552\":1,\"556\":1,\"558\":1}}],[\"boolean\",{\"1\":{\"182\":1,\"399\":1,\"594\":1,\"598\":1,\"604\":1}}],[\"boot应用程序中使用\",{\"1\":{\"154\":1}}],[\"boot\",{\"0\":{\"455\":1},\"1\":{\"123\":1,\"147\":1,\"166\":1,\"456\":1}}],[\"boot<\",{\"1\":{\"123\":1,\"147\":1,\"166\":1,\"456\":1}}],[\"b2\",{\"1\":{\"407\":1,\"409\":1}}],[\"b1\",{\"1\":{\"407\":1,\"409\":1}}],[\"blog\",{\"1\":{\"347\":2,\"349\":2,\"351\":2}}],[\"b交集部分数据\",{\"1\":{\"320\":1}}],[\"b为父表\",{\"1\":{\"310\":1}}],[\"byte\",{\"1\":{\"409\":1,\"419\":1,\"431\":1,\"443\":1,\"444\":1,\"454\":1}}],[\"by\",{\"1\":{\"243\":2,\"244\":2,\"285\":1,\"290\":1}}],[\"bilibili\",{\"1\":{\"227\":1,\"335\":1,\"355\":1,\"401\":1,\"518\":1,\"560\":1,\"578\":1,\"584\":1}}],[\"bind\",{\"1\":{\"472\":1}}],[\"bindingbuilder\",{\"1\":{\"472\":1}}],[\"binding\",{\"1\":{\"472\":1}}],[\"bindings\",{\"1\":{\"465\":2,\"467\":2,\"469\":2}}],[\"bindingresult\",{\"1\":{\"172\":4}}],[\"bin\",{\"1\":{\"3\":1,\"212\":1}}],[\"but\",{\"1\":{\"110\":1,\"112\":1}}],[\"bucket\",{\"1\":{\"110\":1,\"112\":1}}],[\"bucketname\",{\"1\":{\"108\":2}}],[\"build\",{\"1\":{\"108\":1,\"110\":1,\"112\":1,\"194\":2}}],[\"beink\",{\"1\":{\"527\":2,\"534\":1,\"536\":2,\"542\":1,\"548\":1,\"552\":1,\"554\":1,\"556\":1,\"558\":1,\"567\":1}}],[\"between\",{\"1\":{\"260\":1}}],[\"bean>\",{\"1\":{\"534\":1,\"536\":2,\"542\":1}}],[\"bean\",{\"0\":{\"530\":1},\"1\":{\"188\":1,\"194\":1,\"383\":1,\"472\":3,\"503\":1}}],[\"be\",{\"1\":{\"83\":1}}],[\"b依赖了c和d\",{\"1\":{\"77\":1}}],[\"b\",{\"1\":{\"57\":2,\"310\":4,\"317\":2,\"321\":8,\"324\":8,\"407\":2,\"409\":1}}],[\"branch\",{\"1\":{\"57\":3}}],[\"二进制协议是redis自定义的序列化格式\",{\"1\":{\"498\":1}}],[\"二\",{\"0\":{\"56\":1,\"58\":1},\"1\":{\"366\":1,\"579\":1}}],[\"everysec\",{\"1\":{\"515\":2}}],[\"event\",{\"1\":{\"173\":2}}],[\"elementtype\",{\"1\":{\"592\":1}}],[\"element2\",{\"1\":{\"491\":1,\"495\":1}}],[\"element1\",{\"1\":{\"491\":3,\"495\":4}}],[\"ems\",{\"1\":{\"407\":3,\"409\":3,\"411\":3,\"457\":3}}],[\"email\",{\"1\":{\"55\":2,\"168\":2,\"170\":7}}],[\"et\",{\"1\":{\"363\":2}}],[\"ew\",{\"1\":{\"363\":9}}],[\"esc\",{\"1\":{\"223\":1}}],[\"equals\",{\"1\":{\"182\":1}}],[\"eq\",{\"1\":{\"182\":1,\"366\":1,\"387\":1,\"388\":1}}],[\"e\",{\"1\":{\"120\":2,\"121\":1,\"151\":1,\"172\":4,\"363\":4,\"399\":2,\"411\":2,\"556\":2,\"558\":4}}],[\"entry>\",{\"1\":{\"542\":1}}],[\"entity\",{\"1\":{\"363\":3}}],[\"envelope\",{\"1\":{\"409\":2,\"419\":3,\"431\":2,\"443\":2,\"444\":2,\"454\":2}}],[\"end\",{\"1\":{\"223\":1}}],[\"endpoint\",{\"1\":{\"108\":2,\"110\":1,\"112\":1}}],[\"endpoint以华东1\",{\"1\":{\"108\":1}}],[\"enableswagger2\",{\"1\":{\"194\":1}}],[\"enablescheduling\",{\"1\":{\"156\":1}}],[\"enabledefaulttyping\",{\"1\":{\"503\":1}}],[\"enabled\",{\"1\":{\"121\":1}}],[\"encode\",{\"1\":{\"182\":1}}],[\"encoding\",{\"1\":{\"145\":1}}],[\"enctype=\",{\"1\":{\"119\":1}}],[\"error\",{\"1\":{\"110\":3,\"112\":3,\"172\":3,\"443\":2,\"454\":4}}],[\"ex\",{\"1\":{\"604\":1}}],[\"exchange\",{\"1\":{\"465\":4,\"467\":4,\"469\":4,\"472\":3,\"474\":2}}],[\"exchange在发送消息时\",{\"1\":{\"439\":1}}],[\"exchangedeclare\",{\"1\":{\"429\":1,\"431\":1,\"441\":1,\"443\":1,\"444\":1,\"453\":1,\"454\":1}}],[\"exception\",{\"1\":{\"398\":1,\"399\":2,\"594\":1,\"598\":1,\"604\":4}}],[\"exclusions>\",{\"1\":{\"83\":1}}],[\"exclusion>\",{\"1\":{\"83\":1}}],[\"exists\",{\"1\":{\"485\":1}}],[\"exist=false\",{\"1\":{\"376\":1}}],[\"exit\",{\"1\":{\"3\":1}}],[\"extends\",{\"1\":{\"363\":5,\"567\":1,\"596\":1,\"606\":1}}],[\"execution\",{\"1\":{\"552\":1,\"554\":1,\"556\":1,\"558\":1}}],[\"executing\",{\"1\":{\"163\":1}}],[\"exec\",{\"1\":{\"205\":1}}],[\"expire\",{\"1\":{\"182\":1,\"485\":1}}],[\"export\",{\"1\":{\"173\":1,\"205\":3}}],[\"explicit\",{\"1\":{\"83\":1}}],[\"examplebucket\",{\"1\":{\"108\":1}}],[\"example\",{\"1\":{\"55\":1,\"67\":1}}],[\"gash\",{\"1\":{\"459\":1}}],[\"gas\",{\"1\":{\"454\":2}}],[\"gag\",{\"1\":{\"454\":1}}],[\"group\",{\"1\":{\"243\":1,\"244\":1,\"285\":1}}],[\"groupid>\",{\"1\":{\"80\":1,\"83\":3,\"118\":1,\"123\":1,\"147\":1,\"166\":1,\"186\":1,\"193\":1,\"340\":1,\"456\":1,\"525\":1,\"563\":2}}],[\"gc\",{\"1\":{\"223\":1}}],[\"gg=g\",{\"1\":{\"223\":1}}],[\"gg\",{\"1\":{\"223\":1}}],[\"g\",{\"1\":{\"223\":3,\"454\":1}}],[\"getnativerequest\",{\"1\":{\"598\":1}}],[\"getname\",{\"1\":{\"149\":1,\"170\":1}}],[\"getparameterannotation\",{\"1\":{\"598\":1}}],[\"getheader\",{\"1\":{\"594\":1}}],[\"gethostid\",{\"1\":{\"110\":1,\"112\":1}}],[\"getbean\",{\"1\":{\"529\":1}}],[\"getbytes\",{\"1\":{\"407\":1,\"429\":1,\"441\":1,\"453\":1,\"474\":1}}],[\"getrange\",{\"1\":{\"487\":1}}],[\"getrecords\",{\"1\":{\"385\":1}}],[\"getrealpath\",{\"1\":{\"120\":1}}],[\"getrequestid\",{\"1\":{\"110\":1,\"112\":1}}],[\"getqueue\",{\"1\":{\"431\":1,\"443\":1,\"444\":1,\"454\":1}}],[\"getdeliverytag\",{\"1\":{\"419\":1}}],[\"getdefaultmessage\",{\"1\":{\"172\":3}}],[\"getconnection\",{\"1\":{\"411\":1,\"419\":1,\"429\":1,\"431\":1,\"441\":1,\"443\":1,\"444\":1,\"453\":1,\"454\":1}}],[\"getmessageproperties\",{\"1\":{\"474\":1}}],[\"getmessage\",{\"1\":{\"409\":1}}],[\"getmapping\",{\"1\":{\"163\":1,\"587\":1}}],[\"getid\",{\"1\":{\"388\":1}}],[\"getinputstream\",{\"1\":{\"108\":1}}],[\"getviews\",{\"1\":{\"190\":1}}],[\"getlock\",{\"1\":{\"190\":1}}],[\"getlist\",{\"1\":{\"108\":1,\"110\":1,\"112\":1}}],[\"get\",{\"0\":{\"570\":1},\"1\":{\"182\":1,\"485\":1,\"505\":1,\"583\":1,\"585\":3,\"587\":5,\"600\":2}}],[\"getemail\",{\"1\":{\"170\":1}}],[\"geterrorcode\",{\"1\":{\"110\":1,\"112\":1}}],[\"geterrormessage\",{\"1\":{\"110\":1,\"112\":1}}],[\"getattribute\",{\"1\":{\"598\":1}}],[\"getargs\",{\"1\":{\"558\":1}}],[\"getallerrors\",{\"1\":{\"172\":1}}],[\"getage\",{\"1\":{\"170\":1}}],[\"getaddress\",{\"1\":{\"170\":1}}],[\"getsubject\",{\"1\":{\"594\":1}}],[\"getscheme\",{\"1\":{\"120\":1}}],[\"getset\",{\"1\":{\"487\":1}}],[\"getservletmappings\",{\"1\":{\"567\":1}}],[\"getservletcontext\",{\"1\":{\"120\":1}}],[\"getserverport\",{\"1\":{\"120\":1}}],[\"getservername\",{\"1\":{\"120\":1}}],[\"getsession\",{\"1\":{\"120\":1,\"594\":1,\"598\":1}}],[\"getkey\",{\"1\":{\"110\":2}}],[\"getobjectsummaries\",{\"1\":{\"110\":1}}],[\"getoriginalfilename\",{\"1\":{\"108\":1,\"120\":1}}],[\"globalinterceptor\",{\"1\":{\"594\":1,\"596\":1}}],[\"global\",{\"1\":{\"55\":2}}],[\"gitskills\",{\"1\":{\"67\":1}}],[\"git文件\",{\"1\":{\"59\":1}}],[\"git安装后\",{\"0\":{\"54\":1}}],[\"git\",{\"1\":{\"3\":1,\"55\":2,\"57\":8,\"59\":1,\"61\":3,\"63\":7,\"65\":3,\"67\":12,\"182\":2}}],[\"gitworkflows\",{\"1\":{\"3\":1}}],[\"github\",{\"1\":{\"2\":1,\"4\":1,\"67\":2}}],[\"$s\",{\"1\":{\"223\":2}}],[\"$user\",{\"1\":{\"200\":1}}],[\"$refs\",{\"1\":{\"173\":1}}],[\"$\",{\"1\":{\"55\":2,\"59\":4,\"61\":3,\"63\":8,\"65\":4,\"67\":11,\"223\":1,\"548\":1}}],[\"一般\",{\"1\":{\"539\":1}}],[\"一般对象都是直接通过new出来\",{\"1\":{\"522\":1}}],[\"一种思想\",{\"1\":{\"521\":1}}],[\"一条消息\",{\"1\":{\"435\":1}}],[\"一套玩转mybatis\",{\"1\":{\"355\":1}}],[\"一次性提交多个文件\",{\"1\":{\"61\":1}}],[\"一分支管理\",{\"0\":{\"56\":1}}],[\"一\",{\"0\":{\"54\":1},\"1\":{\"366\":1,\"579\":1}}],[\"版本控制\",{\"0\":{\"53\":1,\"62\":1}}],[\"ttt\",{\"1\":{\"581\":1}}],[\"ttl\",{\"1\":{\"485\":1}}],[\"title\",{\"1\":{\"182\":3,\"194\":1,\"347\":3,\"349\":3,\"351\":3}}],[\"timeoutexception\",{\"1\":{\"407\":1,\"409\":1,\"411\":2,\"419\":1,\"429\":1,\"431\":1,\"441\":1,\"443\":1,\"444\":1,\"453\":1,\"454\":1}}],[\"timeunit\",{\"1\":{\"182\":1}}],[\"time<\",{\"1\":{\"80\":2}}],[\"type\",{\"1\":{\"173\":1,\"465\":2,\"467\":2,\"469\":2,\"472\":1,\"482\":1}}],[\"type=\",{\"1\":{\"119\":2,\"173\":1,\"372\":1,\"373\":1}}],[\"tablefield\",{\"1\":{\"374\":1,\"375\":1,\"376\":1,\"377\":1}}],[\"tableid\",{\"1\":{\"371\":1,\"372\":1,\"373\":1}}],[\"tablename\",{\"1\":{\"370\":1}}],[\"table\",{\"1\":{\"310\":1}}],[\"tar导入成镜像\",{\"1\":{\"205\":1}}],[\"tar中加载出来\",{\"1\":{\"203\":1}}],[\"tar中\",{\"1\":{\"203\":1,\"205\":1}}],[\"tar\",{\"1\":{\"203\":2,\"205\":2}}],[\"target\",{\"1\":{\"173\":1,\"592\":1}}],[\"tag\",{\"1\":{\"203\":1,\"205\":2}}],[\"taskscheduler\",{\"1\":{\"163\":3}}],[\"task\",{\"1\":{\"161\":1,\"163\":1}}],[\"template\",{\"1\":{\"503\":9}}],[\"template>\",{\"1\":{\"173\":1}}],[\"temp\",{\"1\":{\"121\":1}}],[\"testdelayqueueconfig\",{\"1\":{\"472\":1}}],[\"testdelete\",{\"1\":{\"366\":1}}],[\"testselect\",{\"1\":{\"366\":1}}],[\"testupdata\",{\"1\":{\"366\":1}}],[\"testinsert\",{\"1\":{\"366\":1}}],[\"test=\",{\"1\":{\"347\":2,\"349\":2,\"351\":3}}],[\"test1\",{\"1\":{\"343\":1,\"344\":1}}],[\"test\",{\"0\":{\"458\":1},\"1\":{\"61\":2,\"63\":3,\"65\":4,\"74\":1,\"93\":1,\"150\":1,\"151\":6,\"366\":4,\"407\":1,\"409\":1,\"459\":6,\"505\":1}}],[\"transactional\",{\"1\":{\"390\":1,\"398\":1,\"399\":1}}],[\"transferto\",{\"1\":{\"120\":1}}],[\"trim\",{\"1\":{\"182\":1,\"297\":1,\"350\":1}}],[\"true\",{\"1\":{\"121\":1,\"145\":1,\"149\":3,\"163\":1,\"182\":1,\"344\":1,\"409\":1,\"431\":1,\"443\":1,\"444\":1,\"454\":1,\"472\":2,\"534\":1,\"536\":1,\"594\":1,\"604\":2}}],[\"try\",{\"1\":{\"110\":1,\"112\":1,\"120\":1,\"190\":1,\"399\":1,\"411\":1}}],[\"token\",{\"1\":{\"594\":2}}],[\"toattpage\",{\"1\":{\"581\":1}}],[\"toapage\",{\"1\":{\"581\":1}}],[\"tom\",{\"1\":{\"493\":1}}],[\"topage\",{\"1\":{\"581\":1}}],[\"topic2\",{\"1\":{\"469\":1}}],[\"topic1\",{\"1\":{\"469\":1}}],[\"topicconsumer\",{\"1\":{\"469\":1}}],[\"topic\",{\"1\":{\"453\":2,\"454\":5,\"459\":3,\"469\":4}}],[\"topic类型的exchange与direct\",{\"1\":{\"447\":1}}],[\"top\",{\"1\":{\"205\":1}}],[\"totryeverything\",{\"1\":{\"145\":1,\"151\":4}}],[\"tostring\",{\"1\":{\"120\":1,\"182\":1,\"366\":1,\"558\":1}}],[\"to\",{\"1\":{\"110\":1,\"112\":1,\"149\":6,\"472\":1}}],[\"toc\",{\"1\":{\"45\":1}}],[\"thread\",{\"1\":{\"419\":1}}],[\"threshold\",{\"1\":{\"121\":1}}],[\"throwable\",{\"1\":{\"556\":1,\"558\":1}}],[\"throw\",{\"1\":{\"120\":1,\"399\":2}}],[\"throws\",{\"1\":{\"108\":1,\"149\":2,\"151\":2,\"407\":1,\"409\":2,\"411\":1,\"419\":2,\"429\":1,\"431\":2,\"441\":1,\"443\":2,\"444\":2,\"453\":1,\"454\":2,\"556\":1,\"558\":1,\"594\":1,\"598\":1,\"604\":3}}],[\"this\",{\"1\":{\"112\":1,\"170\":4,\"173\":1,\"538\":1,\"540\":2}}],[\"though\",{\"1\":{\"83\":1}}],[\"the\",{\"1\":{\"3\":1,\"83\":1}}],[\"t\",{\"1\":{\"67\":1,\"110\":1,\"363\":5}}],[\"txt\",{\"1\":{\"61\":1,\"63\":3,\"65\":4}}],[\"标签\",{\"1\":{\"173\":1}}],[\"标签用于选择图片\",{\"1\":{\"173\":1}}],[\"标签为\",{\"1\":{\"33\":1}}],[\"标题和页面信息\",{\"1\":{\"44\":1}}],[\"徽章\",{\"1\":{\"40\":1}}],[\"徽章文字\",{\"1\":{\"40\":1}}],[\"percentage\",{\"1\":{\"515\":1}}],[\"persistent\",{\"1\":{\"407\":1}}],[\"p端\",{\"1\":{\"405\":1}}],[\"plus\",{\"0\":{\"352\":1,\"353\":1},\"1\":{\"354\":1,\"355\":1}}],[\"p\",{\"1\":{\"205\":1,\"207\":1,\"210\":1,\"212\":1,\"214\":1,\"216\":1,\"218\":1,\"219\":1,\"223\":1}}],[\"ps\",{\"1\":{\"205\":1}}],[\"p2\",{\"1\":{\"151\":1}}],[\"p1\",{\"1\":{\"151\":1}}],[\"png\",{\"1\":{\"151\":1}}],[\"pictures\",{\"1\":{\"151\":2}}],[\"pointcut\",{\"1\":{\"552\":1,\"554\":1,\"556\":1,\"558\":1}}],[\"pojo\",{\"1\":{\"169\":1}}],[\"pom\",{\"1\":{\"146\":1,\"524\":1,\"562\":1}}],[\"port\",{\"1\":{\"145\":1,\"457\":1}}],[\"polyfill\",{\"1\":{\"126\":1}}],[\"posthandle\",{\"1\":{\"604\":2}}],[\"post乱码处理\",{\"0\":{\"575\":1}}],[\"postconstruct\",{\"1\":{\"163\":1,\"548\":1}}],[\"postmapping\",{\"1\":{\"120\":1,\"172\":1,\"600\":1}}],[\"post\",{\"0\":{\"573\":1},\"1\":{\"119\":1,\"585\":1}}],[\"parsejwt\",{\"1\":{\"594\":1}}],[\"parameter\",{\"1\":{\"592\":1}}],[\"param\",{\"1\":{\"363\":15,\"606\":1}}],[\"paginationinnerinterceptor\",{\"1\":{\"383\":1}}],[\"page<>\",{\"1\":{\"385\":1}}],[\"page\",{\"1\":{\"363\":2,\"385\":2}}],[\"paste\",{\"1\":{\"223\":1}}],[\"pass\",{\"1\":{\"182\":2}}],[\"passwordencoder\",{\"1\":{\"182\":1}}],[\"password\",{\"1\":{\"145\":1,\"182\":4,\"366\":3,\"457\":1}}],[\"pattern\",{\"1\":{\"115\":1,\"168\":1,\"170\":1}}],[\"pathvariable\",{\"1\":{\"585\":2,\"587\":1}}],[\"pathselectors\",{\"1\":{\"194\":1}}],[\"paths\",{\"1\":{\"194\":1}}],[\"path\",{\"1\":{\"115\":1}}],[\"package\",{\"1\":{\"74\":1}}],[\"prune\",{\"1\":{\"205\":1}}],[\"printstacktrace\",{\"1\":{\"399\":1,\"411\":1}}],[\"println\",{\"1\":{\"110\":6,\"112\":5,\"120\":1,\"149\":1,\"159\":1,\"163\":1,\"172\":1,\"182\":2,\"366\":6,\"387\":1,\"388\":1,\"409\":1,\"419\":1,\"431\":1,\"443\":1,\"444\":1,\"454\":1,\"461\":1,\"463\":2,\"465\":2,\"467\":2,\"469\":2,\"476\":1,\"505\":1,\"531\":2,\"552\":1,\"556\":3,\"558\":1,\"565\":1,\"572\":1,\"574\":1,\"579\":1,\"585\":2,\"604\":3}}],[\"primary\",{\"1\":{\"306\":1}}],[\"private\",{\"1\":{\"151\":1,\"163\":3,\"170\":4,\"194\":1,\"399\":1,\"411\":1,\"459\":1,\"501\":2,\"505\":1,\"534\":2,\"538\":1,\"540\":2,\"548\":2,\"552\":1,\"556\":1,\"558\":1,\"606\":1}}],[\"protected\",{\"1\":{\"567\":3,\"596\":2,\"606\":1}}],[\"proceed\",{\"1\":{\"556\":1,\"558\":2}}],[\"proceedingjoinpoint\",{\"1\":{\"556\":1,\"558\":1}}],[\"process\",{\"1\":{\"3\":1}}],[\"propertysource\",{\"1\":{\"548\":1}}],[\"property>\",{\"1\":{\"542\":2}}],[\"propertyaccessor\",{\"1\":{\"503\":1}}],[\"properties\",{\"1\":{\"145\":1,\"167\":1,\"409\":1,\"419\":1,\"431\":1,\"443\":1,\"444\":1,\"454\":1}}],[\"producer\",{\"1\":{\"429\":1,\"441\":1,\"453\":1}}],[\"productapi\",{\"1\":{\"194\":1}}],[\"provided\",{\"1\":{\"95\":1}}],[\"prehandle\",{\"1\":{\"594\":1,\"604\":2}}],[\"predestroy\",{\"1\":{\"548\":1}}],[\"previewimg\",{\"1\":{\"173\":2}}],[\"previewimage\",{\"1\":{\"173\":2}}],[\"prefer\",{\"1\":{\"83\":1}}],[\"pretty=oneline\",{\"1\":{\"63\":1}}],[\"pwd\",{\"1\":{\"59\":1}}],[\"put\",{\"1\":{\"366\":3,\"385\":2,\"472\":1,\"583\":1,\"585\":3}}],[\"putobject\",{\"1\":{\"106\":1,\"108\":1}}],[\"pull\",{\"1\":{\"203\":1}}],[\"push\",{\"1\":{\"57\":1,\"67\":2}}],[\"publicmapper\",{\"1\":{\"182\":1}}],[\"public\",{\"1\":{\"38\":1,\"108\":1,\"110\":1,\"112\":1,\"116\":2,\"120\":2,\"149\":4,\"156\":1,\"159\":1,\"161\":1,\"163\":4,\"170\":9,\"172\":2,\"182\":2,\"188\":1,\"190\":1,\"194\":2,\"363\":1,\"383\":2,\"385\":1,\"399\":2,\"409\":1,\"411\":3,\"419\":3,\"429\":2,\"431\":3,\"441\":2,\"443\":3,\"444\":3,\"453\":2,\"454\":3,\"459\":1,\"461\":2,\"463\":3,\"465\":3,\"467\":3,\"469\":3,\"472\":7,\"474\":2,\"476\":2,\"501\":1,\"503\":2,\"529\":2,\"531\":2,\"538\":1,\"540\":1,\"552\":2,\"556\":3,\"558\":2,\"565\":2,\"567\":2,\"572\":1,\"574\":1,\"579\":1,\"581\":2,\"585\":2,\"592\":1,\"594\":2,\"596\":1,\"598\":3,\"600\":1,\"604\":4,\"606\":1}}],[\"文章标题列表\",{\"1\":{\"45\":1}}],[\"文件名称\",{\"1\":{\"515\":1}}],[\"文件是将\",{\"1\":{\"514\":1}}],[\"文件是在指定的时间间隔内\",{\"1\":{\"508\":1}}],[\"文件\",{\"1\":{\"511\":1,\"512\":1}}],[\"文件的缩写\",{\"1\":{\"508\":1}}],[\"文件上传\",{\"0\":{\"117\":1}}],[\"文件夹的图片\",{\"1\":{\"38\":1}}],[\"文件放置在一起\",{\"1\":{\"37\":1}}],[\"文字结尾应该有深蓝色的\",{\"1\":{\"40\":1}}],[\"文字\",{\"1\":{\"24\":1,\"25\":1}}],[\"文字段落\",{\"1\":{\"24\":11,\"25\":13}}],[\"和远程分支连接起来\",{\"1\":{\"57\":1}}],[\"和\",{\"0\":{\"124\":1},\"1\":{\"33\":1,\"126\":1,\"199\":1}}],[\"日期函数\",{\"0\":{\"300\":1}}],[\"日\",{\"1\":{\"31\":1}}],[\"月\",{\"1\":{\"31\":1}}],[\"年\",{\"1\":{\"31\":1}}],[\"写作日期为\",{\"1\":{\"31\":1}}],[\"作者设置为\",{\"1\":{\"30\":1}}],[\"的另一种数据持久化方式\",{\"1\":{\"514\":1}}],[\"的缩写\",{\"1\":{\"514\":1}}],[\"的默认数据持久化方式\",{\"1\":{\"508\":1}}],[\"的发送方在向exchang发送消息时\",{\"1\":{\"438\":1}}],[\"的基础上只做增强不做改变\",{\"1\":{\"354\":1}}],[\"的增强工具\",{\"1\":{\"354\":1}}],[\"的人\",{\"1\":{\"331\":1}}],[\"的一个\",{\"1\":{\"126\":1}}],[\"的一种新协议\",{\"1\":{\"126\":1}}],[\"的\",{\"1\":{\"29\":1}}],[\"mget\",{\"1\":{\"487\":1}}],[\"mq的引言和不同mq的特点\",{\"1\":{\"401\":1}}],[\"mp\",{\"1\":{\"354\":1}}],[\"move\",{\"1\":{\"485\":1}}],[\"month\",{\"1\":{\"301\":1}}],[\"modelandview\",{\"1\":{\"604\":2}}],[\"modelandviewcontainer\",{\"1\":{\"598\":2}}],[\"mod\",{\"1\":{\"299\":1}}],[\"more\",{\"1\":{\"27\":1}}],[\"myinterceptor\",{\"1\":{\"604\":1,\"606\":3}}],[\"myaop\",{\"1\":{\"552\":1,\"556\":1,\"558\":1}}],[\"mysortedset\",{\"1\":{\"495\":8}}],[\"myset\",{\"1\":{\"491\":7}}],[\"mysql>\",{\"1\":{\"221\":4}}],[\"mysqldump\",{\"1\":{\"210\":1,\"212\":1,\"214\":1,\"216\":1}}],[\"mysql\",{\"0\":{\"208\":1,\"226\":1},\"1\":{\"212\":1,\"218\":1,\"219\":1,\"383\":1}}],[\"mybatis+字段+1\",{\"0\":{\"386\":1}}],[\"mybatisplusinterceptor\",{\"1\":{\"383\":4}}],[\"mybatisconfig\",{\"1\":{\"383\":1}}],[\"mybatisx\",{\"0\":{\"378\":1},\"1\":{\"379\":1}}],[\"mybatis<\",{\"1\":{\"340\":1}}],[\"mybatis\",{\"0\":{\"337\":1,\"352\":1,\"353\":1},\"1\":{\"340\":2,\"354\":3}}],[\"my\",{\"1\":{\"207\":1}}],[\"mytask\",{\"1\":{\"163\":2}}],[\"md\",{\"1\":{\"151\":1}}],[\"minimal\",{\"1\":{\"407\":1}}],[\"min\",{\"1\":{\"170\":1,\"244\":1,\"280\":1,\"281\":1,\"515\":1}}],[\"mimemessagehelper\",{\"1\":{\"149\":4}}],[\"mimemessage\",{\"1\":{\"149\":2}}],[\"mirror>\",{\"1\":{\"72\":1}}],[\"mirrorof>\",{\"1\":{\"72\":1}}],[\"mm\",{\"1\":{\"120\":1}}],[\"multipart\",{\"1\":{\"119\":1,\"121\":1}}],[\"multipartfile\",{\"1\":{\"108\":1,\"120\":1}}],[\"mvc\",{\"1\":{\"115\":1}}],[\"mvnrepository\",{\"1\":{\"340\":1}}],[\"mvn\",{\"1\":{\"74\":5}}],[\"memory\",{\"1\":{\"205\":1}}],[\"methodparameter\",{\"1\":{\"598\":5}}],[\"method\",{\"1\":{\"585\":2,\"587\":1}}],[\"methods\",{\"1\":{\"173\":1}}],[\"method=\",{\"1\":{\"119\":1,\"531\":2}}],[\"messagingexception\",{\"1\":{\"149\":2,\"151\":2}}],[\"messagepack等\",{\"1\":{\"498\":1}}],[\"messageproperties\",{\"1\":{\"407\":1,\"474\":5}}],[\"message2\",{\"1\":{\"463\":1,\"465\":1,\"467\":1,\"469\":1}}],[\"message1\",{\"1\":{\"463\":1,\"465\":1,\"467\":1,\"469\":1,\"474\":3}}],[\"message\",{\"1\":{\"110\":1,\"112\":1,\"170\":5,\"461\":3,\"463\":4,\"465\":4,\"467\":5,\"469\":5,\"472\":1,\"474\":4}}],[\"means\",{\"1\":{\"110\":1,\"112\":1}}],[\"m\",{\"1\":{\"61\":2,\"65\":1}}],[\"mkdirs\",{\"1\":{\"120\":1}}],[\"mkdir\",{\"1\":{\"59\":1}}],[\"mset\",{\"1\":{\"487\":1}}],[\"msg\",{\"1\":{\"149\":12,\"474\":3,\"476\":3}}],[\"ms\",{\"1\":{\"30\":1}}],[\"main\",{\"1\":{\"419\":1,\"429\":1,\"431\":1,\"441\":1,\"443\":1,\"444\":1,\"453\":1,\"454\":1,\"528\":1,\"529\":2}}],[\"mailservice\",{\"1\":{\"149\":1,\"151\":5}}],[\"mail<\",{\"1\":{\"147\":1}}],[\"mail\",{\"1\":{\"145\":2}}],[\"map>\",{\"1\":{\"542\":1}}],[\"map\",{\"1\":{\"366\":7,\"407\":1,\"409\":1,\"542\":1,\"579\":1,\"600\":2}}],[\"map<string\",{\"1\":{\"363\":2,\"472\":1,\"600\":1}}],[\"mapper<t>\",{\"1\":{\"363\":1}}],[\"mapper\",{\"1\":{\"343\":1}}],[\"max\",{\"1\":{\"121\":2,\"170\":1,\"173\":2,\"244\":1,\"280\":1,\"281\":1}}],[\"made\",{\"1\":{\"110\":1,\"112\":1}}],[\"maven<\",{\"1\":{\"72\":1}}],[\"maven\",{\"0\":{\"68\":1},\"1\":{\"72\":1}}],[\"maven中央仓库\",{\"1\":{\"1\":1}}],[\"master\",{\"1\":{\"67\":2}}],[\"markdown\",{\"1\":{\"29\":1,\"35\":1,\"37\":1}}],[\"29\",{\"1\":{\"223\":1}}],[\"28\",{\"1\":{\"223\":1}}],[\"27\",{\"1\":{\"223\":1}}],[\"26\",{\"1\":{\"223\":1}}],[\"25\",{\"1\":{\"223\":1}}],[\"24\",{\"1\":{\"223\":1}}],[\"23<\",{\"1\":{\"525\":1,\"563\":1}}],[\"23\",{\"1\":{\"223\":1}}],[\"21\",{\"1\":{\"223\":1,\"387\":1}}],[\"22\",{\"1\":{\"199\":1,\"207\":1,\"223\":1,\"388\":1}}],[\"2022版mybatisplus教程\",{\"1\":{\"355\":1}}],[\"2020\",{\"1\":{\"31\":1}}],[\"20000\",{\"1\":{\"207\":1}}],[\"20\",{\"1\":{\"203\":11,\"205\":3,\"223\":1,\"487\":2}}],[\"20l\",{\"1\":{\"182\":1}}],[\"2\",{\"0\":{\"593\":1,\"605\":1},\"1\":{\"25\":14,\"151\":1,\"170\":1,\"194\":1,\"213\":1,\"220\":1,\"223\":1,\"366\":2,\"489\":1,\"495\":6,\"527\":1}}],[\"段落\",{\"1\":{\"24\":1,\"25\":1}}],[\"实际上还有许多其他的命令可供使用\",{\"1\":{\"493\":1}}],[\"实际的文章内容\",{\"1\":{\"23\":1}}],[\"实现自定义注解\",{\"0\":{\"597\":1}}],[\"实现自减\",{\"1\":{\"487\":1}}],[\"实现自增\",{\"1\":{\"487\":1}}],[\"实现工具类\",{\"0\":{\"410\":1}}],[\"实现\",{\"0\":{\"499\":1},\"1\":{\"126\":1}}],[\"实现了客户端与服务器端的实时通信\",{\"1\":{\"126\":1}}],[\"实现博客自动部署\",{\"1\":{\"2\":1}}],[\"页面结构\",{\"0\":{\"41\":1}}],[\"页面内容\",{\"0\":{\"34\":1}}],[\"页面配置\",{\"0\":{\"26\":1},\"1\":{\"33\":1}}],[\"页面信息\",{\"0\":{\"28\":1},\"1\":{\"15\":1}}],[\"页脚\",{\"1\":{\"20\":1,\"50\":1}}],[\"评论\",{\"1\":{\"19\":1,\"47\":1}}],[\"链接\",{\"1\":{\"18\":1}}],[\"贡献者\",{\"1\":{\"16\":1,\"46\":1}}],[\"侧边栏\",{\"1\":{\"13\":1,\"49\":1}}],[\"禁用了如下功能\",{\"1\":{\"11\":1}}],[\"本页面就是一个示例\",{\"1\":{\"11\":1}}],[\"flushall\",{\"1\":{\"482\":1,\"511\":1}}],[\"flushdb\",{\"1\":{\"482\":1}}],[\"floor\",{\"1\":{\"299\":1}}],[\"featured\",{\"1\":{\"349\":1}}],[\"fetch\",{\"1\":{\"57\":1}}],[\"fk\",{\"1\":{\"310\":1}}],[\"from\",{\"1\":{\"149\":6,\"240\":1,\"241\":1,\"243\":1,\"247\":2,\"249\":1,\"277\":1,\"279\":1,\"281\":2,\"285\":1,\"290\":1,\"292\":1,\"294\":2,\"321\":2,\"324\":2,\"329\":1,\"333\":4,\"347\":1,\"349\":1,\"351\":1,\"366\":2}}],[\"frontmatter\",{\"1\":{\"10\":1,\"29\":1,\"52\":1}}],[\"factory\",{\"1\":{\"503\":2}}],[\"fanout2\",{\"1\":{\"465\":1}}],[\"fanout1\",{\"1\":{\"465\":1}}],[\"fanoutconsumer\",{\"1\":{\"465\":1}}],[\"fanout\",{\"1\":{\"429\":1,\"431\":1,\"459\":4,\"465\":4}}],[\"false\",{\"1\":{\"121\":1,\"377\":1,\"407\":3,\"409\":3,\"419\":7,\"472\":1,\"604\":1}}],[\"failed\",{\"1\":{\"3\":1}}],[\"folder\",{\"1\":{\"120\":4}}],[\"foreach\",{\"1\":{\"366\":3}}],[\"foreign\",{\"1\":{\"307\":1,\"310\":1}}],[\"format\",{\"1\":{\"120\":4}}],[\"form>\",{\"1\":{\"119\":1}}],[\"form\",{\"1\":{\"119\":1}}],[\"for\",{\"1\":{\"110\":2,\"112\":1,\"149\":1,\"172\":1,\"459\":1}}],[\"field\",{\"1\":{\"493\":5}}],[\"findactivebloglike\",{\"1\":{\"347\":1,\"349\":1,\"351\":1}}],[\"find\",{\"1\":{\"216\":1}}],[\"final\",{\"1\":{\"182\":2,\"472\":3,\"503\":1}}],[\"finally\",{\"1\":{\"110\":1,\"112\":1,\"190\":1}}],[\"fixedrate\",{\"1\":{\"159\":1}}],[\"filereader\",{\"1\":{\"173\":2}}],[\"filepath\",{\"1\":{\"120\":2}}],[\"fileuploadcontroller\",{\"1\":{\"120\":1}}],[\"filesystemresource\",{\"1\":{\"149\":2}}],[\"files\",{\"1\":{\"61\":1,\"173\":1}}],[\"file\",{\"1\":{\"61\":1,\"108\":3,\"119\":1,\"120\":3,\"121\":2,\"149\":5,\"151\":1,\"173\":4,\"514\":1}}],[\"first\",{\"1\":{\"57\":2}}],[\"布局与功能禁用\",{\"0\":{\"9\":1}}],[\"幻灯片页\",{\"0\":{\"5\":1}}],[\"1的随机小数\",{\"1\":{\"299\":1}}],[\"19\",{\"1\":{\"223\":1}}],[\"19138084894\",{\"1\":{\"151\":3}}],[\"18\",{\"1\":{\"223\":1}}],[\"17\",{\"1\":{\"223\":1}}],[\"16\",{\"1\":{\"223\":1}}],[\"163\",{\"1\":{\"151\":3}}],[\"15\",{\"1\":{\"223\":1,\"317\":1}}],[\"14\",{\"1\":{\"223\":1,\"584\":1}}],[\"13\",{\"1\":{\"223\":1}}],[\"110\",{\"1\":{\"301\":2}}],[\"11\",{\"1\":{\"223\":1}}],[\"1000\",{\"1\":{\"419\":1}}],[\"100\",{\"1\":{\"170\":1,\"173\":2}}],[\"10\",{\"1\":{\"170\":1,\"223\":1,\"294\":3,\"385\":1,\"459\":1}}],[\"10mb\",{\"1\":{\"121\":2}}],[\"123\",{\"1\":{\"534\":1}}],[\"123root\",{\"1\":{\"366\":1}}],[\"127\",{\"1\":{\"225\":3,\"407\":1,\"409\":1,\"411\":1,\"457\":1}}],[\"12\",{\"0\":{\"160\":1},\"1\":{\"161\":1,\"223\":1}}],[\"1<\",{\"1\":{\"83\":1,\"563\":1}}],[\"1\",{\"0\":{\"591\":1,\"603\":1},\"1\":{\"3\":1,\"24\":12,\"31\":2,\"170\":1,\"182\":2,\"190\":1,\"194\":1,\"207\":1,\"218\":1,\"223\":3,\"225\":3,\"293\":1,\"349\":1,\"366\":1,\"387\":1,\"388\":2,\"407\":1,\"409\":1,\"411\":1,\"419\":1,\"457\":1,\"485\":1,\"489\":3,\"493\":8,\"495\":4,\"505\":1,\"525\":1}}],[\"错误回滚\",{\"1\":{\"393\":1}}],[\"错误\",{\"1\":{\"3\":1}}],[\"部署vue项目\",{\"1\":{\"4\":1}}],[\"部署\",{\"1\":{\"3\":1}}],[\"+1\",{\"1\":{\"190\":1}}],[\"+999999\",{\"1\":{\"182\":1}}],[\"+\",{\"1\":{\"2\":1,\"110\":6,\"112\":5,\"120\":9,\"151\":1,\"172\":1,\"182\":4,\"223\":2,\"387\":1,\"388\":2,\"409\":1,\"419\":1,\"431\":1,\"443\":1,\"444\":1,\"454\":1,\"461\":1,\"463\":2,\"465\":2,\"467\":2,\"469\":2,\"476\":1,\"574\":1,\"579\":1,\"587\":1}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,kt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n}})=>{e==="suggest"?self.postMessage(it(t,I[s],n)):e==="search"?self.postMessage(ot(t,I[s],n)):self.postMessage({suggestions:it(t,I[s],n),results:ot(t,I[s],n)})};
//# sourceMappingURL=index.js.map
