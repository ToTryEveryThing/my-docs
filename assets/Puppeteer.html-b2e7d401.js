import{_ as p}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as c,c as i,a as n,b as s,d as e,f as t}from"./app-4c557f06.js";const l={},r=n("h1",{id:"puppeteer",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#puppeteer","aria-hidden":"true"},"#"),s(" Puppeteer")],-1),u={id:"api-faq-contributing-troubleshooting",tabindex:"-1"},d=n("a",{class:"header-anchor",href:"#api-faq-contributing-troubleshooting","aria-hidden":"true"},"#",-1),k={href:"https://github.com/GoogleChrome/puppeteer/blob/v1.10.0/docs/api.md",target:"_blank",rel:"noopener noreferrer"},m={href:"https://puppeteer.bootcss.com/#faq",target:"_blank",rel:"noopener noreferrer"},v={href:"https://github.com/GoogleChrome/puppeteer/blob/master/CONTRIBUTING.md",target:"_blank",rel:"noopener noreferrer"},h={href:"https://github.com/GoogleChrome/puppeteer/blob/master/docs/troubleshooting.md",target:"_blank",rel:"noopener noreferrer"},b={href:"https://chromedevtools.github.io/devtools-protocol/",target:"_blank",rel:"noopener noreferrer"},g={href:"https://developers.google.com/web/updates/2017/04/headless-chrome",target:"_blank",rel:"noopener noreferrer"},_=n("h6",{id:"能做什么",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#能做什么","aria-hidden":"true"},"#"),s(" 能做什么?")],-1),w=n("p",null,"你可以在浏览器中手动执行的绝大多数操作都可以使用 Puppeteer 来完成！ 下面是一些示例：",-1),f=n("li",null,"生成页面 PDF。",-1),y=n("li",null,"抓取 SPA（单页应用）并生成预渲染内容（即“SSR”（服务器端渲染））。",-1),x=n("li",null,"自动提交表单，进行 UI 测试，键盘输入等。",-1),P=n("li",null,"创建一个时时更新的自动化测试环境。 使用最新的 JavaScript 和浏览器功能直接在最新版本的Chrome中执行测试。",-1),C={href:"https://developers.google.com/web/tools/chrome-devtools/evaluate-performance/reference",target:"_blank",rel:"noopener noreferrer"},j=n("li",null,"测试浏览器扩展。",-1),q={href:"https://try-puppeteer.appspot.com/",target:"_blank",rel:"noopener noreferrer"},D=t(`<h2 id="开始使用" tabindex="-1"><a class="header-anchor" href="#开始使用" aria-hidden="true">#</a> 开始使用</h2><h3 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h3><p>在项目中使用 Puppeteer：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> i puppeteer
<span class="token comment"># or &quot;yarn add puppeteer&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,4),S={href:"https://github.com/GoogleChrome/puppeteer/blob/v1.10.0/docs/api.md#environment-variables",target:"_blank",rel:"noopener noreferrer"},G=n("h3",{id:"puppeteer-core",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#puppeteer-core","aria-hidden":"true"},"#"),s(" puppeteer-core")],-1),I={href:"https://www.npmjs.com/package/puppeteer-core",target:"_blank",rel:"noopener noreferrer"},N=n("code",null,"puppeteer-core",-1),A=t(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> i puppeteer-core
<span class="token comment"># or &quot;yarn add puppeteer-core&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>puppeteer-core</code> 是一个的轻量级的 Puppeteer 版本，用于启动现有浏览器安装或连接到远程安装。</p>`,2),M={href:"https://github.com/GoogleChrome/puppeteer/blob/master/docs/api.md#puppeteer-vs-puppeteer-core",target:"_blank",rel:"noopener noreferrer"},B=n("h3",{id:"使用",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#使用","aria-hidden":"true"},"#"),s(" 使用")],-1),E=n("p",null,"Note: Puppeteer 至少需要 Node v6.4.0，下面的示例使用 async / await，它们仅在 Node v7.6.0 或更高版本中被支持。",-1),O=n("code",null,"Browser",-1),V={href:"https://github.com/GoogleChrome/puppeteer/blob/v1.10.0/docs/api.md#",target:"_blank",rel:"noopener noreferrer"},F=n("strong",null,"Example",-1),T={href:"https://example.com/",target:"_blank",rel:"noopener noreferrer"},L=n("em",null,"example.png",-1),R=t(`<p>文件为 <strong>example.js</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> puppeteer <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;puppeteer&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> browser <span class="token operator">=</span> <span class="token keyword">await</span> puppeteer<span class="token punctuation">.</span><span class="token function">launch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> page <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">goto</span><span class="token punctuation">(</span><span class="token string">&#39;https://example.com&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">screenshot</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;example.png&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在命令行中执行</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">node</span> example.js
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,4),U={href:"https://github.com/GoogleChrome/puppeteer/blob/v1.10.0/docs/api.md#pagesetviewportviewport",target:"_blank",rel:"noopener noreferrer"},H=n("code",null,"Page.setViewport()",-1),W=t(`<p><strong>Example</strong> - 创建一个 PDF。</p><p>文件为 <strong>hn.js</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> puppeteer <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;puppeteer&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> browser <span class="token operator">=</span> <span class="token keyword">await</span> puppeteer<span class="token punctuation">.</span><span class="token function">launch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> page <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">goto</span><span class="token punctuation">(</span><span class="token string">&#39;https://news.ycombinator.com&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">waitUntil</span><span class="token operator">:</span> <span class="token string">&#39;networkidle2&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">pdf</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;hn.pdf&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">format</span><span class="token operator">:</span> <span class="token string">&#39;A4&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在命令行中执行</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">node</span> hn.js
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,5),$={href:"https://github.com/GoogleChrome/puppeteer/blob/v1.10.0/docs/api.md#pagepdfoptions",target:"_blank",rel:"noopener noreferrer"},z=n("code",null,"Page.pdf()",-1),J=t(`<p><strong>Example</strong> - 在页面中执行脚本</p><p>文件为 <strong>get-dimensions.js</strong></p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> puppeteer <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;puppeteer&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> browser <span class="token operator">=</span> <span class="token keyword">await</span> puppeteer<span class="token punctuation">.</span><span class="token function">launch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> page <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">goto</span><span class="token punctuation">(</span><span class="token string">&#39;https://example.com&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// Get the &quot;viewport&quot; of the page, as reported by the page.</span>
  <span class="token keyword">const</span> dimensions <span class="token operator">=</span> <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">width</span><span class="token operator">:</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>clientWidth<span class="token punctuation">,</span>
      <span class="token literal-property property">height</span><span class="token operator">:</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">.</span>clientHeight<span class="token punctuation">,</span>
      <span class="token literal-property property">deviceScaleFactor</span><span class="token operator">:</span> window<span class="token punctuation">.</span>devicePixelRatio
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Dimensions:&#39;</span><span class="token punctuation">,</span> dimensions<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在命令行中执行</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">node</span> get-dimensions.js
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,5),Q={href:"https://github.com/GoogleChrome/puppeteer/blob/v1.10.0/docs/api.md#pageevaluatepagefunction-args",target:"_blank",rel:"noopener noreferrer"},K=n("code",null,"Page.evaluate()",-1),X=n("code",null,"evaluateOnNewDocument",-1),Y=n("code",null,"exposeFunction",-1),Z=n("h2",{id:"默认设置",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#默认设置","aria-hidden":"true"},"#"),s(" 默认设置")],-1),nn=n("p",null,[n("strong",null,"1. 使用无头模式")],-1),sn={href:"https://developers.google.com/web/updates/2017/04/headless-chrome",target:"_blank",rel:"noopener noreferrer"},an={href:"https://github.com/GoogleChrome/puppeteer/blob/v1.10.0/docs/api.md#puppeteerlaunchoptions",target:"_blank",rel:"noopener noreferrer"},en=t(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> browser <span class="token operator">=</span> <span class="token keyword">await</span> puppeteer<span class="token punctuation">.</span><span class="token function">launch</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">headless</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// default is true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>2. 运行绑定的 Chromium 版本</strong></p><p>默认情况下，Puppeteer 下载并使用特定版本的 Chromium 以及其 API 保证开箱即用。 如果要将 Puppeteer 与不同版本的 Chrome 或 Chromium 一起使用，在创建<code>Browser</code>实例时传入 Chromium 可执行文件的路径即可：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> browser <span class="token operator">=</span> <span class="token keyword">await</span> puppeteer<span class="token punctuation">.</span><span class="token function">launch</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">executablePath</span><span class="token operator">:</span> <span class="token string">&#39;/path/to/Chrome&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,4),tn={href:"https://github.com/GoogleChrome/puppeteer/blob/v1.10.0/docs/api.md#puppeteerlaunchoptions",target:"_blank",rel:"noopener noreferrer"},pn=n("code",null,"Puppeteer.launch()",-1),on={href:"https://www.howtogeek.com/202825/what%E2%80%99s-the-difference-between-chromium-and-chrome/",target:"_blank",rel:"noopener noreferrer"},cn=n("code",null,"这篇文章",-1),ln={href:"https://chromium.googlesource.com/chromium/src/+/master/docs/chromium_browser_vs_google_chrome.md",target:"_blank",rel:"noopener noreferrer"},rn=n("code",null,"这篇文章",-1),un=t(`<p><strong>3. 创建用户配置文件</strong></p><p>Puppeteer 会创建自己的 Chromium 用户配置文件，<strong>它会在每次运行时清理</strong>。</p><h2 id="模板" tabindex="-1"><a class="header-anchor" href="#模板" aria-hidden="true">#</a> 模板</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> puppeteer <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;puppeteer&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">captureScreenshot</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> browser <span class="token operator">=</span> <span class="token keyword">await</span> puppeteer<span class="token punctuation">.</span><span class="token function">launch</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">args</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;--no-sandbox&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;--disable-setuid-sandbox&#39;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>

  <span class="token keyword">const</span> page <span class="token operator">=</span> <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">newPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">setViewport</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">1920</span><span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">1080</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 根据需要设置宽度和高度</span>
  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">goto</span><span class="token punctuation">(</span><span class="token string">&#39;http://xxxxxxx.com/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 替换成你的网站地址</span>

  <span class="token comment">// 获取当前日期</span>
  <span class="token keyword">const</span> currentDate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> formattedDate <span class="token operator">=</span> currentDate<span class="token punctuation">.</span><span class="token function">toISOString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 格式化日期为 yyyy-MM-dd</span>

  <span class="token comment">// 生成截图文件路径和名称</span>
  <span class="token keyword">const</span> screenshotPath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>formattedDate<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.png</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// 设置截图选项</span>
  <span class="token keyword">const</span> screenshotOptions <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">path</span><span class="token operator">:</span> screenshotPath<span class="token punctuation">,</span> <span class="token comment">// 保存截图的文件路径和名称</span>
    <span class="token literal-property property">fullPage</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 截取整个页面</span>
    <span class="token literal-property property">clip</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">x</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">y</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">1920</span><span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">1080</span> <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> page<span class="token punctuation">.</span><span class="token function">screenshot</span><span class="token punctuation">(</span>screenshotOptions<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">await</span> browser<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">captureScreenshot</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>




<span class="token comment">// //可以使用</span>
<span class="token comment">// const puppeteer = require(&#39;puppeteer&#39;);</span>
<span class="token comment">// const path = require(&#39;path&#39;);</span>

<span class="token comment">// async function captureScreenshot() {</span>
<span class="token comment">//   const browser = await puppeteer.launch();</span>
<span class="token comment">//   const page = await browser.newPage();</span>
<span class="token comment">//   await page.goto(&#39;https://beink.cn&#39;); // 替换成你的网站地址</span>
<span class="token comment">//     // 获取当前日期</span>
<span class="token comment">//   const currentDate = new Date();</span>
<span class="token comment">//   const formattedDate = currentDate.toISOString().slice(0, 10); // 格式化日期为 yyyy-MM-dd</span>
  
<span class="token comment">//   // 生成截图文件路径和名称</span>
<span class="token comment">//   const screenshotPath = path.join(__dirname, \`\${formattedDate}.png\`);</span>
  
<span class="token comment">//   await page.screenshot({ path: screenshotPath }); // 保存截图的文件路径和名称</span>
<span class="token comment">//   await browser.close();</span>
<span class="token comment">// }</span>

<span class="token comment">// captureScreenshot();</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>一张图片大概3M</p></blockquote><h2 id="定时" tabindex="-1"><a class="header-anchor" href="#定时" aria-hidden="true">#</a> 定时</h2><ul><li>crontab -e</li><li>0 0 12 * * ? cd /www/shot &amp;&amp; node shot.js</li></ul><h2 id="github-action" tabindex="-1"><a class="header-anchor" href="#github-action" aria-hidden="true">#</a> Github action</h2><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>name: main

on:
  push:
    branches:
      - main
  schedule:
    - cron: &#39;0 */6 * * *&#39;  # 每6小时执行一次，可根据需要调整时间

jobs:
  run-coupons:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
           
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: &#39;18.16.0&#39;
          
      - name: Install Dependencies
        run: |
          sudo apt-get install fonts-wqy-zenhei
          npm install
          npm install puppeteer
          
      - name: Run Script
        run: node shot.js

      - name: Create Image Branch
        run: |
          git stash
          git fetch origin
          git checkout image
          mkdir -p image
          mv *.png image/
          git pull origin image
          git config --local user.email &quot;action@github.com&quot;
          git config --local user.name &quot;GitHub Action&quot;
          git add .
          git commit -m &quot;Add downloaded images&quot;
          git push origin image
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="问题" tabindex="-1"><a class="header-anchor" href="#问题" aria-hidden="true">#</a> 问题</h2><h3 id="puppeteer没有自动安装chromium的解决办法" tabindex="-1"><a class="header-anchor" href="#puppeteer没有自动安装chromium的解决办法" aria-hidden="true">#</a> Puppeteer没有自动安装Chromium的解决办法</h3>`,11),dn={href:"https://blog.csdn.net/henryhu712/article/details/115588221",target:"_blank",rel:"noopener noreferrer"},kn={href:"https://blog.csdn.net/qq_42414062/article/details/114539378",target:"_blank",rel:"noopener noreferrer"},mn=n("p",null,"按照官方文档的说法，安装 Puppeteer 时会自动安装 Chromium 浏览器。但是实际安装过程中，会出现不安装 Chromium 的情况，这时需要使用下面的命令来手动安装 Chromium：",-1),vn=n("p",null,[n("code",null,"node node_modules/puppeteer/install.js"),s(" 这样就能把 Chromium 正确的安装到 node_modules/puppeteer/.local-chromium 目录下。根据操作系统及浏览器版本的不同，浏览器大概占用 200M～400M 的磁盘空间。")],-1);function hn(bn,gn){const a=o("ExternalLinkIcon");return c(),i("div",null,[r,n("h6",u,[d,s(),n("a",k,[s("API"),e(a)]),s(" | "),n("a",m,[s("FAQ"),e(a)]),s(" | "),n("a",v,[s("Contributing"),e(a)]),s(" | "),n("a",h,[s("Troubleshooting"),e(a)])]),n("blockquote",null,[n("p",null,[s("Puppeteer 是一个 Node 库，它提供了一个高级 API 来通过 "),n("a",b,[s("DevTools"),e(a)]),s(" 协议控制 Chromium 或 Chrome。Puppeteer 默认以 "),n("a",g,[s("headless"),e(a)]),s(" 模式运行，但是可以通过修改配置文件运行“有头”模式。")])]),_,w,n("ul",null,[f,y,x,P,n("li",null,[s("捕获网站的 "),n("a",C,[s("timeline trace"),e(a)]),s("，用来帮助分析性能问题。")]),j]),n("p",null,[s("演示地址: "),n("a",q,[s("https://try-puppeteer.appspot.com/"),e(a)])]),D,n("p",null,[s("Note: 当你安装 Puppeteer 时，它会下载最新版本的Chromium（~170MB Mac，~282MB Linux，~280MB Win），以保证可以使用 API。 如果想要跳过下载，请阅读"),n("a",S,[s("环境变量"),e(a)]),s("。")]),G,n("p",null,[s("自 1.7.0 版本以来，我们都会发布一个 "),n("a",I,[N,e(a)]),s(" 包，这个包默认不会下载 Chromium。")]),A,n("p",null,[s("具体见 "),n("a",M,[s("puppeteer vs puppeteer-core"),e(a)]),s(".")]),B,E,n("p",null,[s("Puppeteer 使用起来和其他测试框架类似。你需要创建一个 "),O,s(" 实例，打开页面，然后使用 "),n("a",V,[s("Puppeteer 的 API"),e(a)]),s("。")]),n("p",null,[F,s(" - 跳转到 "),n("a",T,[s("https://example.com"),e(a)]),s(" 并保存截图至 "),L,s(":")]),R,n("p",null,[s("Puppeteer 初始化的屏幕大小默认为 800px x 600px。但是这个尺寸可以通过 "),n("a",U,[H,e(a)]),s(" 设置。")]),W,n("p",null,[s("查看 "),n("a",$,[z,e(a)]),s(" 了解跟多内容。")]),J,n("p",null,[s("查看 "),n("a",Q,[K,e(a)]),s(" 了解更多相关内容，该方法有点类似于 "),X,s(" and "),Y,s("。")]),Z,nn,n("p",null,[s("Puppeteer 运行 Chromium 的"),n("a",sn,[s("headless mode"),e(a)]),s("。如果想要使用完全版本的 Chromium，设置 "),n("a",an,[s("'headless' option"),e(a)]),s(" 即可。")]),en,n("p",null,[s("具体见："),n("a",tn,[pn,e(a)])]),n("p",null,[s("看"),n("a",on,[cn,e(a)]),s("了解 Chromium 与 Chrome 的不同。"),n("a",ln,[rn,e(a)]),s(" 介绍了一些 Linux 用户在使用上的区别。")]),un,n("p",null,[n("a",dn,[s("Puppeteer没有自动安装Chromium的解决办法_亮子AI的博客-CSDN博客"),e(a)]),n("a",kn,[s("安装后再看这"),e(a)])]),mn,vn])}const fn=p(l,[["render",hn],["__file","Puppeteer.html.vue"]]);export{fn as default};
