export default "{\"documentCount\":597,\"nextId\":597,\"documentIds\":{\"0\":\"v-8daa1a0e\",\"1\":\"v-8daa1a0e@0\",\"2\":\"v-8daa1a0e@1\",\"3\":\"v-2e3eac9e\",\"4\":\"v-145ac574\",\"5\":\"v-145ac574#1\",\"6\":\"v-145ac574#1/0\",\"7\":\"v-145ac574@0\",\"8\":\"v-e7d29956\",\"9\":\"v-e7d29956#1\",\"10\":\"v-e7d29956#2\",\"11\":\"v-e7d29956#2/0\",\"12\":\"v-e7d29956#2/1\",\"13\":\"v-e7d29956#2/2\",\"14\":\"v-e7d29956#3\",\"15\":\"v-e7d29956#3/0\",\"16\":\"v-e7d29956#4\",\"17\":\"v-e7d29956#4/1\",\"18\":\"v-e7d29956#5\",\"19\":\"v-e7d29956#5/2\",\"20\":\"v-e7d29956@0\",\"21\":\"v-e7d29956@1\",\"22\":\"v-870b7946\",\"23\":\"v-870b7946#1\",\"24\":\"v-870b7946#1/0\",\"25\":\"v-870b7946#1/1\",\"26\":\"v-870b7946#2\",\"27\":\"v-870b7946#2/2\",\"28\":\"v-870b7946#2/3\",\"29\":\"v-870b7946#2/4\",\"30\":\"v-870b7946#2/5\",\"31\":\"v-870b7946#3\",\"32\":\"v-870b7946#3/6\",\"33\":\"v-870b7946#4\",\"34\":\"v-870b7946#4/7\",\"35\":\"v-870b7946#4/8\",\"36\":\"v-870b7946#4/9\",\"37\":\"v-870b7946#5\",\"38\":\"v-870b7946#5/0\",\"39\":\"v-870b7946#5/1\",\"40\":\"v-870b7946#5/2\",\"41\":\"v-870b7946#6\",\"42\":\"v-870b7946#6/0\",\"43\":\"v-870b7946#6/1\",\"44\":\"v-870b7946#7\",\"45\":\"v-870b7946#7/0\",\"46\":\"v-870b7946#7/1\",\"47\":\"v-870b7946#7/2\",\"48\":\"v-870b7946#8\",\"49\":\"v-870b7946#8/0\",\"50\":\"v-870b7946#8/1\",\"51\":\"v-870b7946#9\",\"52\":\"v-870b7946#9/0\",\"53\":\"v-870b7946#9/1\",\"54\":\"v-870b7946#9/2\",\"55\":\"v-870b7946#9/3\",\"56\":\"v-870b7946#9/4\",\"57\":\"v-870b7946#9/5\",\"58\":\"v-870b7946#9/6\",\"59\":\"v-870b7946#9/7\",\"60\":\"v-870b7946#9/8\",\"61\":\"v-870b7946#10\",\"62\":\"v-870b7946#10/9\",\"63\":\"v-870b7946#10/10\",\"64\":\"v-870b7946#10/11\",\"65\":\"v-870b7946#10/12\",\"66\":\"v-870b7946#10/13\",\"67\":\"v-870b7946#10/14\",\"68\":\"v-870b7946#10/15\",\"69\":\"v-870b7946#11\",\"70\":\"v-870b7946#11/16\",\"71\":\"v-870b7946#11/17\",\"72\":\"v-870b7946#11/18\",\"73\":\"v-870b7946#12\",\"74\":\"v-870b7946#12/19\",\"75\":\"v-870b7946#12/20\",\"76\":\"v-870b7946#12/21\",\"77\":\"v-870b7946#12/22\",\"78\":\"v-870b7946#12/23\",\"79\":\"v-870b7946#12/24\",\"80\":\"v-870b7946#12/25\",\"81\":\"v-870b7946#12/26\",\"82\":\"v-870b7946#12/27\",\"83\":\"v-870b7946#13\",\"84\":\"v-870b7946#14\",\"85\":\"v-870b7946#14/28\",\"86\":\"v-870b7946#14/29\",\"87\":\"v-870b7946#14/30\",\"88\":\"v-870b7946#14/31\",\"89\":\"v-870b7946#14/32\",\"90\":\"v-870b7946#15\",\"91\":\"v-870b7946#15/0\",\"92\":\"v-870b7946#16\",\"93\":\"v-870b7946#16/1\",\"94\":\"v-870b7946#16/2\",\"95\":\"v-870b7946#16/3\",\"96\":\"v-870b7946#16/4\",\"97\":\"v-870b7946#16/5\",\"98\":\"v-870b7946#16/6\",\"99\":\"v-870b7946#16/7\",\"100\":\"v-870b7946#17\",\"101\":\"v-870b7946#18\",\"102\":\"v-870b7946#18/8\",\"103\":\"v-870b7946#18/9\",\"104\":\"v-870b7946@0\",\"105\":\"v-870b7946@1\",\"106\":\"v-2bcb26fa\",\"107\":\"v-2bcb26fa#1\",\"108\":\"v-2bcb26fa#1/0\",\"109\":\"v-2bcb26fa#2\",\"110\":\"v-2bcb26fa#2/1\",\"111\":\"v-2bcb26fa#3\",\"112\":\"v-2bcb26fa#3/2\",\"113\":\"v-2bcb26fa#4\",\"114\":\"v-2bcb26fa#4/3\",\"115\":\"v-2bcb26fa#5\",\"116\":\"v-2bcb26fa#5/4\",\"117\":\"v-2bcb26fa#6\",\"118\":\"v-2bcb26fa#6/5\",\"119\":\"v-2bcb26fa#7\",\"120\":\"v-2bcb26fa#7/6\",\"121\":\"v-2bcb26fa@0\",\"122\":\"v-2bcb26fa@1\",\"123\":\"v-083f0e38\",\"124\":\"v-083f0e38#1\",\"125\":\"v-083f0e38#2\",\"126\":\"v-083f0e38#2/0\",\"127\":\"v-083f0e38#2/1\",\"128\":\"v-083f0e38#2/2\",\"129\":\"v-083f0e38#2/3\",\"130\":\"v-083f0e38#3\",\"131\":\"v-083f0e38#3/0\",\"132\":\"v-083f0e38#4\",\"133\":\"v-083f0e38#4/1\",\"134\":\"v-083f0e38#5\",\"135\":\"v-083f0e38#5/2\",\"136\":\"v-083f0e38#6\",\"137\":\"v-083f0e38#7\",\"138\":\"v-083f0e38#7/3\",\"139\":\"v-083f0e38#7/4\",\"140\":\"v-083f0e38#7/5\",\"141\":\"v-083f0e38#7/6\",\"142\":\"v-083f0e38#7/7\",\"143\":\"v-083f0e38#7/8\",\"144\":\"v-083f0e38#7/9\",\"145\":\"v-083f0e38#8\",\"146\":\"v-083f0e38#8/10\",\"147\":\"v-083f0e38#8/11\",\"148\":\"v-083f0e38#8/12\",\"149\":\"v-083f0e38#8/13\",\"150\":\"v-083f0e38#9\",\"151\":\"v-083f0e38#9/14\",\"152\":\"v-083f0e38#10\",\"153\":\"v-083f0e38#10/15\",\"154\":\"v-083f0e38@0\",\"155\":\"v-083f0e38@1\",\"156\":\"v-9e67bfbe\",\"157\":\"v-9e67bfbe#1\",\"158\":\"v-9e67bfbe#1/0\",\"159\":\"v-9e67bfbe#2\",\"160\":\"v-9e67bfbe#2/0\",\"161\":\"v-9e67bfbe#3\",\"162\":\"v-9e67bfbe#3/1\",\"163\":\"v-9e67bfbe#4\",\"164\":\"v-9e67bfbe#5\",\"165\":\"v-9e67bfbe#5/2\",\"166\":\"v-9e67bfbe#6\",\"167\":\"v-9e67bfbe#6/0\",\"168\":\"v-9e67bfbe#6/1\",\"169\":\"v-9e67bfbe#7\",\"170\":\"v-9e67bfbe#7/2\",\"171\":\"v-9e67bfbe#7/3\",\"172\":\"v-9e67bfbe#8\",\"173\":\"v-9e67bfbe#8/4\",\"174\":\"v-9e67bfbe#8/5\",\"175\":\"v-9e67bfbe#8/6\",\"176\":\"v-9e67bfbe#8/7\",\"177\":\"v-9e67bfbe#8/8\",\"178\":\"v-9e67bfbe#8/9\",\"179\":\"v-9e67bfbe#8/10\",\"180\":\"v-9e67bfbe#8/11\",\"181\":\"v-9e67bfbe#8/12\",\"182\":\"v-9e67bfbe#8/13\",\"183\":\"v-9e67bfbe#8/14\",\"184\":\"v-9e67bfbe#8/15\",\"185\":\"v-9e67bfbe#8/16\",\"186\":\"v-9e67bfbe#8/17\",\"187\":\"v-9e67bfbe#8/18\",\"188\":\"v-9e67bfbe#9\",\"189\":\"v-9e67bfbe@0\",\"190\":\"v-9e67bfbe@1\",\"191\":\"v-75f5fc4b\",\"192\":\"v-75f5fc4b#0/0\",\"193\":\"v-75f5fc4b#0/1\",\"194\":\"v-75f5fc4b#0/2\",\"195\":\"v-75f5fc4b#0/3\",\"196\":\"v-75f5fc4b#0/4\",\"197\":\"v-75f5fc4b#0/5\",\"198\":\"v-75f5fc4b#0/6\",\"199\":\"v-75f5fc4b#0/7\",\"200\":\"v-75f5fc4b#0/8\",\"201\":\"v-75f5fc4b#0/9\",\"202\":\"v-75f5fc4b#0/10\",\"203\":\"v-75f5fc4b#0/11\",\"204\":\"v-75f5fc4b@0\",\"205\":\"v-75f5fc4b@1\",\"206\":\"v-3c8012ee\",\"207\":\"v-3c8012ee#0/0\",\"208\":\"v-3c8012ee#0/1\",\"209\":\"v-3c8012ee#0/2\",\"210\":\"v-3c8012ee@0\",\"211\":\"v-3c8012ee@1\",\"212\":\"v-6cb33ee0\",\"213\":\"v-6cb33ee0#0/0\",\"214\":\"v-6cb33ee0#1\",\"215\":\"v-6cb33ee0#1/0\",\"216\":\"v-6cb33ee0#1/1\",\"217\":\"v-6cb33ee0#1/2\",\"218\":\"v-6cb33ee0#1/3\",\"219\":\"v-6cb33ee0#1/4\",\"220\":\"v-6cb33ee0#2\",\"221\":\"v-6cb33ee0#2/0\",\"222\":\"v-6cb33ee0#2/1\",\"223\":\"v-6cb33ee0#2/2\",\"224\":\"v-6cb33ee0#2/3\",\"225\":\"v-6cb33ee0#2/4\",\"226\":\"v-6cb33ee0#2/5\",\"227\":\"v-6cb33ee0#3\",\"228\":\"v-6cb33ee0#3/0\",\"229\":\"v-6cb33ee0#3/1\",\"230\":\"v-6cb33ee0#3/2\",\"231\":\"v-6cb33ee0#3/3\",\"232\":\"v-6cb33ee0#3/4\",\"233\":\"v-6cb33ee0#3/5\",\"234\":\"v-6cb33ee0#3/6\",\"235\":\"v-6cb33ee0#3/7\",\"236\":\"v-6cb33ee0#3/8\",\"237\":\"v-6cb33ee0#3/9\",\"238\":\"v-6cb33ee0#3/10\",\"239\":\"v-6cb33ee0@0\",\"240\":\"v-6cb33ee0@1\",\"241\":\"v-0232aca2\",\"242\":\"v-0232aca2#0/0\",\"243\":\"v-0232aca2#0/1\",\"244\":\"v-0232aca2#0/2\",\"245\":\"v-0232aca2#0/3\",\"246\":\"v-0232aca2#1\",\"247\":\"v-0232aca2#1/0\",\"248\":\"v-0232aca2#1/1\",\"249\":\"v-0232aca2#2\",\"250\":\"v-0232aca2#2/2\",\"251\":\"v-0232aca2#2/3\",\"252\":\"v-0232aca2#2/4\",\"253\":\"v-0232aca2#2/5\",\"254\":\"v-0232aca2#2/6\",\"255\":\"v-0232aca2#2/7\",\"256\":\"v-0232aca2@0\",\"257\":\"v-0232aca2@1\",\"258\":\"v-b324bab0\",\"259\":\"v-b324bab0#1\",\"260\":\"v-b324bab0#1/0\",\"261\":\"v-b324bab0#1/1\",\"262\":\"v-b324bab0#1/2\",\"263\":\"v-b324bab0#1/3\",\"264\":\"v-b324bab0#1/4\",\"265\":\"v-b324bab0#1/5\",\"266\":\"v-b324bab0#1/6\",\"267\":\"v-b324bab0#1/7\",\"268\":\"v-b324bab0#2\",\"269\":\"v-b324bab0#2/0\",\"270\":\"v-b324bab0#3\",\"271\":\"v-b324bab0#3/1\",\"272\":\"v-b324bab0#3/2\",\"273\":\"v-b324bab0#4\",\"274\":\"v-b324bab0#4/3\",\"275\":\"v-b324bab0#5\",\"276\":\"v-b324bab0#5/0\",\"277\":\"v-b324bab0#5/1\",\"278\":\"v-b324bab0#5/2\",\"279\":\"v-b324bab0#5/3\",\"280\":\"v-b324bab0#5/4\",\"281\":\"v-b324bab0#5/5\",\"282\":\"v-b324bab0#5/6\",\"283\":\"v-b324bab0#5/7\",\"284\":\"v-b324bab0#6\",\"285\":\"v-b324bab0#6/0\",\"286\":\"v-b324bab0#6/1\",\"287\":\"v-b324bab0#7\",\"288\":\"v-b324bab0#7/0\",\"289\":\"v-b324bab0#7/1\",\"290\":\"v-b324bab0#7/2\",\"291\":\"v-b324bab0#7/3\",\"292\":\"v-b324bab0#8\",\"293\":\"v-b324bab0#8/4\",\"294\":\"v-b324bab0#8/5\",\"295\":\"v-b324bab0#9\",\"296\":\"v-b324bab0#9/6\",\"297\":\"v-b324bab0#9/7\",\"298\":\"v-b324bab0#9/8\",\"299\":\"v-b324bab0#9/9\",\"300\":\"v-b324bab0#9/10\",\"301\":\"v-b324bab0#9/11\",\"302\":\"v-b324bab0#9/12\",\"303\":\"v-b324bab0#9/13\",\"304\":\"v-b324bab0#9/14\",\"305\":\"v-b324bab0#9/15\",\"306\":\"v-b324bab0@0\",\"307\":\"v-b324bab0@1\",\"308\":\"v-243fa3da\",\"309\":\"v-243fa3da#0/0\",\"310\":\"v-243fa3da#0/1\",\"311\":\"v-243fa3da#1\",\"312\":\"v-243fa3da#1/0\",\"313\":\"v-243fa3da#1/1\",\"314\":\"v-243fa3da#1/2\",\"315\":\"v-243fa3da#1/3\",\"316\":\"v-243fa3da#1/4\",\"317\":\"v-243fa3da#1/5\",\"318\":\"v-243fa3da#2\",\"319\":\"v-243fa3da#2/6\",\"320\":\"v-243fa3da#2/7\",\"321\":\"v-243fa3da#3\",\"322\":\"v-243fa3da#3/0\",\"323\":\"v-243fa3da#3/1\",\"324\":\"v-243fa3da#4\",\"325\":\"v-243fa3da#4/0\",\"326\":\"v-243fa3da#4/1\",\"327\":\"v-243fa3da#5\",\"328\":\"v-243fa3da#5/0\",\"329\":\"v-243fa3da#5/1\",\"330\":\"v-243fa3da#5/2\",\"331\":\"v-243fa3da#5/3\",\"332\":\"v-243fa3da#5/4\",\"333\":\"v-243fa3da#6\",\"334\":\"v-243fa3da#6/0\",\"335\":\"v-243fa3da#6/1\",\"336\":\"v-243fa3da#6/2\",\"337\":\"v-243fa3da#6/3\",\"338\":\"v-243fa3da#6/4\",\"339\":\"v-243fa3da#6/5\",\"340\":\"v-243fa3da#6/6\",\"341\":\"v-243fa3da#6/7\",\"342\":\"v-243fa3da#6/8\",\"343\":\"v-243fa3da#6/9\",\"344\":\"v-243fa3da#6/10\",\"345\":\"v-243fa3da#6/11\",\"346\":\"v-243fa3da#6/12\",\"347\":\"v-243fa3da#6/13\",\"348\":\"v-243fa3da#6/14\",\"349\":\"v-243fa3da#6/15\",\"350\":\"v-243fa3da#6/16\",\"351\":\"v-243fa3da#6/17\",\"352\":\"v-243fa3da#6/18\",\"353\":\"v-243fa3da#6/19\",\"354\":\"v-243fa3da#6/20\",\"355\":\"v-243fa3da#6/21\",\"356\":\"v-243fa3da#6/22\",\"357\":\"v-243fa3da#7\",\"358\":\"v-243fa3da#7/0\",\"359\":\"v-243fa3da#7/1\",\"360\":\"v-243fa3da#7/2\",\"361\":\"v-243fa3da#7/3\",\"362\":\"v-243fa3da#7/4\",\"363\":\"v-243fa3da#7/5\",\"364\":\"v-243fa3da#7/6\",\"365\":\"v-243fa3da#8\",\"366\":\"v-243fa3da#8/7\",\"367\":\"v-243fa3da#8/8\",\"368\":\"v-243fa3da#8/9\",\"369\":\"v-243fa3da#9\",\"370\":\"v-243fa3da#9/10\",\"371\":\"v-243fa3da#9/11\",\"372\":\"v-243fa3da#9/12\",\"373\":\"v-243fa3da#9/13\",\"374\":\"v-243fa3da#10\",\"375\":\"v-243fa3da#10/14\",\"376\":\"v-243fa3da#10/15\",\"377\":\"v-243fa3da#10/16\",\"378\":\"v-243fa3da#11\",\"379\":\"v-4229923f\",\"380\":\"v-4229923f#0/0\",\"381\":\"v-4229923f#1\",\"382\":\"v-4229923f#1/0\",\"383\":\"v-4229923f#1/1\",\"384\":\"v-4229923f#1/2\",\"385\":\"v-4229923f#2\",\"386\":\"v-4229923f#2/0\",\"387\":\"v-4229923f#3\",\"388\":\"v-4229923f#3/1\",\"389\":\"v-4229923f#4\",\"390\":\"v-4229923f#4/2\",\"391\":\"v-4229923f#5\",\"392\":\"v-4229923f#5/3\",\"393\":\"v-4229923f#5/4\",\"394\":\"v-4229923f#5/5\",\"395\":\"v-4229923f#5/6\",\"396\":\"v-4229923f#5/7\",\"397\":\"v-4229923f#6\",\"398\":\"v-4229923f#6/0\",\"399\":\"v-4229923f#7\",\"400\":\"v-4229923f#7/1\",\"401\":\"v-4229923f#7/2\",\"402\":\"v-4229923f#7/3\",\"403\":\"v-4229923f#7/4\",\"404\":\"v-4229923f#7/5\",\"405\":\"v-4229923f#7/6\",\"406\":\"v-4229923f#7/7\",\"407\":\"v-4229923f#8\",\"408\":\"v-4229923f#8/0\",\"409\":\"v-4229923f#9\",\"410\":\"v-4229923f#9/1\",\"411\":\"v-4229923f#10\",\"412\":\"v-4229923f#11\",\"413\":\"v-4229923f#11/2\",\"414\":\"v-4229923f#11/3\",\"415\":\"v-4229923f#11/4\",\"416\":\"v-4229923f#11/5\",\"417\":\"v-4229923f#11/6\",\"418\":\"v-4229923f#11/7\",\"419\":\"v-4229923f#12\",\"420\":\"v-4229923f#12/0\",\"421\":\"v-4229923f#13\",\"422\":\"v-4229923f#13/1\",\"423\":\"v-4229923f#13/2\",\"424\":\"v-4229923f#14\",\"425\":\"v-4229923f#14/3\",\"426\":\"v-4229923f#14/4\",\"427\":\"v-4229923f#14/5\",\"428\":\"v-4229923f#14/6\",\"429\":\"v-4229923f#14/7\",\"430\":\"v-4229923f#14/8\",\"431\":\"v-4229923f#15\",\"432\":\"v-4229923f#15/0\",\"433\":\"v-4229923f#15/1\",\"434\":\"v-4229923f#16\",\"435\":\"v-4229923f#16/2\",\"436\":\"v-4229923f#16/3\",\"437\":\"v-4229923f#17\",\"438\":\"v-4229923f#17/4\",\"439\":\"v-4229923f#18\",\"440\":\"v-4229923f#18/5\",\"441\":\"v-4229923f#19\",\"442\":\"v-4229923f#19/6\",\"443\":\"v-4229923f#20\",\"444\":\"v-4229923f#20/7\",\"445\":\"v-4229923f#21\",\"446\":\"v-4229923f#21/8\",\"447\":\"v-4229923f#22\",\"448\":\"v-4229923f#22/9\",\"449\":\"v-4229923f#23\",\"450\":\"v-4229923f#23/10\",\"451\":\"v-4229923f#23/11\",\"452\":\"v-4229923f#24\",\"453\":\"v-4229923f#24/12\",\"454\":\"v-4229923f#25\",\"455\":\"v-4229923f#25/13\",\"456\":\"v-4229923f@0\",\"457\":\"v-4229923f@1\",\"458\":\"v-6c8528da\",\"459\":\"v-6c8528da#0/0\",\"460\":\"v-6c8528da#1\",\"461\":\"v-6c8528da#1/0\",\"462\":\"v-6c8528da#2\",\"463\":\"v-6c8528da#2/1\",\"464\":\"v-6c8528da#3\",\"465\":\"v-6c8528da#4\",\"466\":\"v-6c8528da#4/2\",\"467\":\"v-6c8528da#5\",\"468\":\"v-6c8528da#5/3\",\"469\":\"v-6c8528da#6\",\"470\":\"v-6c8528da#6/4\",\"471\":\"v-6c8528da#7\",\"472\":\"v-6c8528da#7/5\",\"473\":\"v-6c8528da#8\",\"474\":\"v-6c8528da#8/6\",\"475\":\"v-6c8528da#9\",\"476\":\"v-6c8528da#9/7\",\"477\":\"v-6c8528da#10\",\"478\":\"v-6c8528da#10/8\",\"479\":\"v-6c8528da#10/9\",\"480\":\"v-6c8528da#11\",\"481\":\"v-6c8528da#11/0\",\"482\":\"v-6c8528da#11/1\",\"483\":\"v-6c8528da#11/2\",\"484\":\"v-6c8528da#11/3\",\"485\":\"v-6c8528da#12\",\"486\":\"v-6c8528da#12/4\",\"487\":\"v-6c8528da#13\",\"488\":\"v-6c8528da#14\",\"489\":\"v-6c8528da#14/5\",\"490\":\"v-6c8528da#15\",\"491\":\"v-6c8528da#15/0\",\"492\":\"v-6c8528da#15/1\",\"493\":\"v-6c8528da#15/2\",\"494\":\"v-6c8528da#16\",\"495\":\"v-6c8528da#16/0\",\"496\":\"v-6c8528da#16/1\",\"497\":\"v-6c8528da@0\",\"498\":\"v-6c8528da@1\",\"499\":\"v-3eed5af0\",\"500\":\"v-3eed5af0#1\",\"501\":\"v-3eed5af0#1/0\",\"502\":\"v-3eed5af0#2\",\"503\":\"v-3eed5af0#2/0\",\"504\":\"v-3eed5af0#2/1\",\"505\":\"v-3eed5af0#2/2\",\"506\":\"v-3eed5af0#2/3\",\"507\":\"v-3eed5af0#2/4\",\"508\":\"v-3eed5af0#2/5\",\"509\":\"v-3eed5af0#2/6\",\"510\":\"v-3eed5af0#2/7\",\"511\":\"v-3eed5af0#2/8\",\"512\":\"v-3eed5af0#2/9\",\"513\":\"v-3eed5af0#3\",\"514\":\"v-3eed5af0#3/10\",\"515\":\"v-3eed5af0#4\",\"516\":\"v-3eed5af0#5\",\"517\":\"v-3eed5af0#5/0\",\"518\":\"v-3eed5af0#6\",\"519\":\"v-3eed5af0#6/1\",\"520\":\"v-3eed5af0#6/2\",\"521\":\"v-3eed5af0#6/3\",\"522\":\"v-3eed5af0#6/4\",\"523\":\"v-3eed5af0#6/5\",\"524\":\"v-3eed5af0#7\",\"525\":\"v-3eed5af0#7/6\",\"526\":\"v-3eed5af0#8\",\"527\":\"v-3eed5af0#8/7\",\"528\":\"v-3eed5af0#8/8\",\"529\":\"v-3eed5af0#8/9\",\"530\":\"v-3eed5af0#8/10\",\"531\":\"v-3eed5af0#8/11\",\"532\":\"v-3eed5af0#9\",\"533\":\"v-3eed5af0#9/12\",\"534\":\"v-3eed5af0#10\",\"535\":\"v-3eed5af0#10/0\",\"536\":\"v-3eed5af0#11\",\"537\":\"v-3eed5af0#11/1\",\"538\":\"v-3eed5af0#12\",\"539\":\"v-3eed5af0#12/2\",\"540\":\"v-3eed5af0#13\",\"541\":\"v-3eed5af0#13/3\",\"542\":\"v-3eed5af0#14\",\"543\":\"v-3eed5af0#14/4\",\"544\":\"v-3eed5af0#15\",\"545\":\"v-3eed5af0#15/0\",\"546\":\"v-3eed5af0#15/1\",\"547\":\"v-3eed5af0#15/2\",\"548\":\"v-3eed5af0#15/3\",\"549\":\"v-3eed5af0#15/4\",\"550\":\"v-3eed5af0#15/5\",\"551\":\"v-3eed5af0#15/6\",\"552\":\"v-3eed5af0#16\",\"553\":\"v-3eed5af0#17\",\"554\":\"v-3eed5af0#17/0\",\"555\":\"v-3eed5af0#17/1\",\"556\":\"v-3eed5af0#18\",\"557\":\"v-3eed5af0#18/2\",\"558\":\"v-3eed5af0#19\",\"559\":\"v-3eed5af0#19/3\",\"560\":\"v-3eed5af0#20\",\"561\":\"v-3eed5af0#20/0\",\"562\":\"v-3eed5af0#20/1\",\"563\":\"v-3eed5af0#21\",\"564\":\"v-3eed5af0#21/2\",\"565\":\"v-3eed5af0#22\",\"566\":\"v-3eed5af0#22/3\",\"567\":\"v-3eed5af0#22/4\",\"568\":\"v-3eed5af0#22/5\",\"569\":\"v-3eed5af0#23\",\"570\":\"v-3eed5af0#23/6\",\"571\":\"v-3eed5af0#24\",\"572\":\"v-3eed5af0#25\",\"573\":\"v-3eed5af0#25/7\",\"574\":\"v-3eed5af0#26\",\"575\":\"v-3eed5af0#26/0\",\"576\":\"v-3eed5af0#27\",\"577\":\"v-3eed5af0#27/1\",\"578\":\"v-3eed5af0#28\",\"579\":\"v-3eed5af0#28/2\",\"580\":\"v-3eed5af0#29\",\"581\":\"v-3eed5af0#29/3\",\"582\":\"v-3eed5af0#30\",\"583\":\"v-3eed5af0#30/4\",\"584\":\"v-3eed5af0#31\",\"585\":\"v-3eed5af0#31/5\",\"586\":\"v-3eed5af0#32\",\"587\":\"v-3eed5af0#32/0\",\"588\":\"v-3eed5af0#33\",\"589\":\"v-3eed5af0#33/1\",\"590\":\"v-3eed5af0#34\",\"591\":\"v-3eed5af0#35\",\"592\":\"v-3eed5af0@0\",\"593\":\"v-3eed5af0@1\",\"594\":\"v-5e797cda\",\"595\":\"v-3fc7045a\",\"596\":\"v-d5b928c8\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1],\"1\":[null,null,1],\"2\":[null,null,1],\"3\":[1],\"4\":[1],\"5\":[1],\"6\":[null,1],\"7\":[null,null,1],\"8\":[1],\"9\":[2],\"10\":[2],\"11\":[null,1],\"12\":[null,6],\"13\":[null,15],\"14\":[1],\"15\":[null,45],\"16\":[1],\"17\":[null,75],\"18\":[1],\"19\":[null,63],\"20\":[null,null,1],\"21\":[null,null,1],\"22\":[1],\"23\":[1],\"24\":[null,10],\"25\":[null,16],\"26\":[1],\"27\":[null,15],\"28\":[null,22],\"29\":[null,60],\"30\":[null,24],\"31\":[4],\"32\":[null,14],\"33\":[3],\"34\":[null,1],\"35\":[null,20],\"36\":[null,3],\"37\":[2],\"38\":[null,5],\"39\":[null,5],\"40\":[null,4],\"41\":[2],\"42\":[null,6],\"43\":[null,5],\"44\":[2],\"45\":[null,4],\"46\":[null,4],\"47\":[null,4],\"48\":[2],\"49\":[null,5],\"50\":[null,5],\"51\":[1],\"52\":[null,1],\"53\":[null,2],\"54\":[null,27],\"55\":[null,2],\"56\":[null,13],\"57\":[null,1],\"58\":[null,70],\"59\":[null,1],\"60\":[null,42],\"61\":[1],\"62\":[null,1],\"63\":[null,4],\"64\":[null,1],\"65\":[null,6],\"66\":[null,1],\"67\":[null,2],\"68\":[null,16],\"69\":[7],\"70\":[null,14],\"71\":[null,2],\"72\":[null,38],\"73\":[1],\"74\":[null,1],\"75\":[null,13],\"76\":[null,3],\"77\":[null,11],\"78\":[null,1],\"79\":[null,40],\"80\":[null,1],\"81\":[null,34],\"82\":[null,58],\"83\":[1],\"84\":[3],\"85\":[null,3],\"86\":[null,7],\"87\":[null,5],\"88\":[null,4],\"89\":[null,3],\"90\":[1],\"91\":[null,85],\"92\":[1],\"93\":[null,1],\"94\":[null,1],\"95\":[null,15],\"96\":[null,1],\"97\":[null,22],\"98\":[null,1],\"99\":[null,32],\"100\":[1],\"101\":[1],\"102\":[null,14],\"103\":[null,35],\"104\":[null,null,1],\"105\":[null,null,1],\"106\":[1],\"107\":[3],\"108\":[null,12],\"109\":[2],\"110\":[null,25],\"111\":[2],\"112\":[null,17],\"113\":[2],\"114\":[null,16],\"115\":[2],\"116\":[null,32],\"117\":[2],\"118\":[null,13],\"119\":[2],\"120\":[null,39],\"121\":[null,null,1],\"122\":[null,null,1],\"123\":[1],\"124\":[1],\"125\":[1],\"126\":[null,2],\"127\":[null,9],\"128\":[null,6],\"129\":[null,5],\"130\":[3],\"131\":[null,31],\"132\":[3],\"133\":[null,76],\"134\":[1],\"135\":[null,15],\"136\":[1],\"137\":[1],\"138\":[null,9],\"139\":[null,1],\"140\":[null,11],\"141\":[null,3],\"142\":[null,8],\"143\":[null,1],\"144\":[null,12],\"145\":[1],\"146\":[null,9],\"147\":[null,7],\"148\":[null,3],\"149\":[null,17],\"150\":[1],\"151\":[null,150],\"152\":[2],\"153\":[null,20],\"154\":[null,null,1],\"155\":[null,null,1],\"156\":[1],\"157\":[1],\"158\":[null,1],\"159\":[1],\"160\":[null,20],\"161\":[1],\"162\":[null,12],\"163\":[1],\"164\":[1],\"165\":[null,7],\"166\":[1],\"167\":[null,2],\"168\":[null,16],\"169\":[1],\"170\":[null,3],\"171\":[null,35],\"172\":[1],\"173\":[null,1],\"174\":[null,1],\"175\":[null,1],\"176\":[null,1],\"177\":[null,3],\"178\":[null,1],\"179\":[null,1],\"180\":[null,1],\"181\":[null,1],\"182\":[null,1],\"183\":[null,1],\"184\":[null,1],\"185\":[null,1],\"186\":[null,1],\"187\":[null,1],\"188\":[1],\"189\":[null,null,1],\"190\":[null,null,1],\"191\":[1],\"192\":[null,4],\"193\":[null,3],\"194\":[null,1],\"195\":[null,1],\"196\":[null,1],\"197\":[null,1],\"198\":[null,1],\"199\":[null,1],\"200\":[null,3],\"201\":[null,1],\"202\":[null,1],\"203\":[null,1],\"204\":[null,null,1],\"205\":[null,null,1],\"206\":[1],\"207\":[null,2],\"208\":[null,5],\"209\":[null,5],\"210\":[null,null,1],\"211\":[null,null,1],\"212\":[1],\"213\":[null,3],\"214\":[1],\"215\":[null,6],\"216\":[null,4],\"217\":[null,6],\"218\":[null,3],\"219\":[null,5],\"220\":[1],\"221\":[null,3],\"222\":[null,1],\"223\":[null,6],\"224\":[null,7],\"225\":[null,2],\"226\":[null,4],\"227\":[1],\"228\":[null,2],\"229\":[null,1],\"230\":[null,1],\"231\":[null,3],\"232\":[null,2],\"233\":[null,1],\"234\":[null,1],\"235\":[null,1],\"236\":[null,1],\"237\":[null,1],\"238\":[null,4],\"239\":[null,null,1],\"240\":[null,null,2],\"241\":[1],\"242\":[null,1],\"243\":[null,1],\"244\":[null,20],\"245\":[null,2],\"246\":[2],\"247\":[null,8],\"248\":[null,18],\"249\":[1],\"250\":[null,1],\"251\":[null,26],\"252\":[null,1],\"253\":[null,32],\"254\":[null,1],\"255\":[null,25],\"256\":[null,null,1],\"257\":[null,null,1],\"258\":[2],\"259\":[2],\"260\":[null,11],\"261\":[null,7],\"262\":[null,3],\"263\":[null,2],\"264\":[null,2],\"265\":[null,2],\"266\":[null,3],\"267\":[null,2],\"268\":[1],\"269\":[null,53],\"270\":[1],\"271\":[null,1],\"272\":[null,79],\"273\":[1],\"274\":[null,1],\"275\":[1],\"276\":[null,3],\"277\":[null,3],\"278\":[null,6],\"279\":[null,7],\"280\":[null,3],\"281\":[null,5],\"282\":[null,4],\"283\":[null,7],\"284\":[1],\"285\":[null,1],\"286\":[null,1],\"287\":[1],\"288\":[null,1],\"289\":[null,16],\"290\":[null,1],\"291\":[null,30],\"292\":[1],\"293\":[null,19],\"294\":[null,21],\"295\":[1],\"296\":[null,5],\"297\":[null,2],\"298\":[null,8],\"299\":[null,7],\"300\":[null,6],\"301\":[null,8],\"302\":[null,5],\"303\":[null,5],\"304\":[null,7],\"305\":[null,36],\"306\":[null,null,1],\"307\":[null,null,1],\"308\":[1],\"309\":[null,6],\"310\":[null,2],\"311\":[1],\"312\":[null,1],\"313\":[null,9],\"314\":[null,1],\"315\":[null,9],\"316\":[null,1],\"317\":[null,7],\"318\":[1],\"319\":[null,8],\"320\":[null,2],\"321\":[1],\"322\":[null,6],\"323\":[null,4],\"324\":[1],\"325\":[null,16],\"326\":[null,16],\"327\":[1],\"328\":[null,1],\"329\":[null,8],\"330\":[null,1],\"331\":[null,6],\"332\":[null,4],\"333\":[1],\"334\":[null,1],\"335\":[null,1],\"336\":[null,1],\"337\":[null,1],\"338\":[null,1],\"339\":[null,1],\"340\":[null,1],\"341\":[null,2],\"342\":[null,1],\"343\":[null,3],\"344\":[null,2],\"345\":[null,2],\"346\":[null,2],\"347\":[null,2],\"348\":[null,4],\"349\":[null,2],\"350\":[null,1],\"351\":[null,3],\"352\":[null,1],\"353\":[null,2],\"354\":[null,1],\"355\":[null,3],\"356\":[null,1],\"357\":[1],\"358\":[null,2],\"359\":[null,1],\"360\":[null,5],\"361\":[null,1],\"362\":[null,6],\"363\":[null,3],\"364\":[null,7],\"365\":[1],\"366\":[null,1],\"367\":[null,1],\"368\":[null,13],\"369\":[1],\"370\":[null,4],\"371\":[null,2],\"372\":[null,3],\"373\":[null,10],\"374\":[1],\"375\":[null,7],\"376\":[null,6],\"377\":[null,7],\"378\":[1],\"379\":[1],\"380\":[null,10],\"381\":[1],\"382\":[null,1],\"383\":[null,1],\"384\":[null,19],\"385\":[1],\"386\":[null,65],\"387\":[1],\"388\":[null,78],\"389\":[1],\"390\":[null,50],\"391\":[1],\"392\":[null,1],\"393\":[null,4],\"394\":[null,2],\"395\":[null,1],\"396\":[null,2],\"397\":[1],\"398\":[null,55],\"399\":[1],\"400\":[null,2],\"401\":[null,1],\"402\":[null,1],\"403\":[null,1],\"404\":[null,3],\"405\":[null,1],\"406\":[null,1],\"407\":[1],\"408\":[null,33],\"409\":[1],\"410\":[null,49],\"411\":[1],\"412\":[1],\"413\":[null,1],\"414\":[null,5],\"415\":[null,2],\"416\":[null,5],\"417\":[null,3],\"418\":[null,4],\"419\":[1],\"420\":[null,30],\"421\":[1],\"422\":[null,53],\"423\":[null,52],\"424\":[1],\"425\":[null,1],\"426\":[null,12],\"427\":[null,2],\"428\":[null,5],\"429\":[null,2],\"430\":[null,3],\"431\":[1],\"432\":[null,32],\"433\":[null,61],\"434\":[3],\"435\":[null,13],\"436\":[null,13],\"437\":[1],\"438\":[null,34],\"439\":[1],\"440\":[null,24],\"441\":[1],\"442\":[null,22],\"443\":[1],\"444\":[null,26],\"445\":[1],\"446\":[null,29],\"447\":[1],\"448\":[null,28],\"449\":[1],\"450\":[null,2],\"451\":[null,44],\"452\":[1],\"453\":[null,30],\"454\":[1],\"455\":[null,19],\"456\":[null,null,1],\"457\":[null,null,1],\"458\":[1],\"459\":[null,1],\"460\":[1],\"461\":[null,9],\"462\":[1],\"463\":[null,12],\"464\":[1],\"465\":[2],\"466\":[null,23],\"467\":[1],\"468\":[null,29],\"469\":[1],\"470\":[null,25],\"471\":[1],\"472\":[null,28],\"473\":[1],\"474\":[null,33],\"475\":[2],\"476\":[null,35],\"477\":[1],\"478\":[null,6],\"479\":[null,10],\"480\":[1],\"481\":[null,2],\"482\":[null,11],\"483\":[null,2],\"484\":[null,52],\"485\":[1],\"486\":[null,20],\"487\":[1],\"488\":[1],\"489\":[null,12],\"490\":[1],\"491\":[null,12],\"492\":[null,10],\"493\":[null,5],\"494\":[1],\"495\":[null,13],\"496\":[null,33],\"497\":[null,null,1],\"498\":[null,null,1],\"499\":[2],\"500\":[1],\"501\":[null,5],\"502\":[1],\"503\":[null,4],\"504\":[null,3],\"505\":[null,3],\"506\":[null,1],\"507\":[null,2],\"508\":[null,17],\"509\":[null,2],\"510\":[null,17],\"511\":[null,2],\"512\":[null,26],\"513\":[1],\"514\":[null,23],\"515\":[1],\"516\":[1],\"517\":[null,25],\"518\":[1],\"519\":[null,27],\"520\":[null,1],\"521\":[null,11],\"522\":[null,2],\"523\":[null,10],\"524\":[1],\"525\":[null,32],\"526\":[1],\"527\":[null,4],\"528\":[null,2],\"529\":[null,4],\"530\":[null,2],\"531\":[null,40],\"532\":[1],\"533\":[null,2],\"534\":[1],\"535\":[null,25],\"536\":[1],\"537\":[null,8],\"538\":[1],\"539\":[null,34],\"540\":[1],\"541\":[null,38],\"542\":[1],\"543\":[null,5],\"544\":[1],\"545\":[null,2],\"546\":[null,26],\"547\":[null,1],\"548\":[null,19],\"549\":[null,1],\"550\":[null,34],\"551\":[null,2],\"552\":[1],\"553\":[1],\"554\":[null,3],\"555\":[null,13],\"556\":[1],\"557\":[null,15],\"558\":[1],\"559\":[null,1],\"560\":[1],\"561\":[null,5],\"562\":[null,32],\"563\":[1],\"564\":[null,15],\"565\":[1],\"566\":[null,5],\"567\":[null,5],\"568\":[null,21],\"569\":[1],\"570\":[null,25],\"571\":[1],\"572\":[1],\"573\":[null,5],\"574\":[2],\"575\":[null,11],\"576\":[4],\"577\":[null,32],\"578\":[2],\"579\":[null,26],\"580\":[2],\"581\":[null,32],\"582\":[2],\"583\":[null,20],\"584\":[1],\"585\":[null,6],\"586\":[2],\"587\":[null,36],\"588\":[2],\"589\":[null,26],\"590\":[1],\"591\":[1],\"592\":[null,null,1],\"593\":[null,null,1],\"594\":[1],\"595\":[1],\"596\":[1]},\"averageFieldLength\":[1.3492178061172484,11.578669633616142,0.7671044344450205],\"storedFields\":{\"0\":{\"h\":\"Home\"},\"1\":{\"c\":[\"使用指南\"]},\"2\":{\"c\":[\"Home\"]},\"3\":{\"h\":\"幻灯片页\"},\"4\":{\"h\":\"学习与记录\"},\"5\":{\"h\":\"目录\",\"a\":\"目录\"},\"6\":{\"t\":\"Linux\"},\"7\":{\"c\":[\"使用指南\"]},\"8\":{\"h\":\"阿里云对象存储\"},\"9\":{\"h\":\"阿里官方文档 Java上传文件概述和文件下载\",\"a\":\"阿里官方文档java上传文件概述和文件下载\"},\"10\":{\"h\":\"使用RAM访问 更安全\",\"a\":\"使用ram访问-更安全\"},\"11\":{\"t\":\"警告\"},\"12\":{\"t\":\"主账号AccessKey泄露会威胁您所有资源的安全。建议使用子账号（RAM用户）AccessKey进行操作，可以有效降低AccessKey泄露的风险。\"},\"13\":{\"t\":\"① 使用RAM用户访问密钥发起请求 ② \\\"Action\\\": [ \\\"oss:PutObject\\\", \\\"oss:ListObjects\\\", \\\"oss:DeleteObject\\\" ],放行权限 上传/目录/删除 权限 ③ 跨域放行\"},\"14\":{\"h\":\"上传图片\",\"a\":\"上传图片\"},\"15\":{\"t\":\"public List uploadObject(MultipartFile file) throws IOException { // Endpoint以华东1（杭州）为例，其它Region请按实际情况填写。 String Endpoint = \\\"https://oss-cn-hangzhou.aliyuncs.com\\\"; // 阿里云账号AccessKey拥有所有API的访问权限，风险很高。强烈建议您创建并使用RAM用户进行API访问或日常运维，请登录RAM控制台创建RAM用户。 String AccessKeyId = \\\"yourAccessKeyId\\\"; String AccessKeySecret = \\\"yourAccessKeySecret\\\"; // 填写Bucket名称，例如examplebucket。 String BucketName = \\\"examplebucket\\\"; String originalFilename = file.getOriginalFilename(); OSS os = new OSSClientBuilder().build( Endpoint , AccessKeyId , AccessKeySecret ); os.putObject( BucketName , originalFilename, file.getInputStream() ); os.shutdown(); return getList(); } \"},\"16\":{\"h\":\"目录列表\",\"a\":\"目录列表\"},\"17\":{\"t\":\"public List getList(){ OSS ossClient = new OSSClientBuilder().build( Endpoint ,AccessKeyId ,AccessKeySecert); try { // 列举文件。如果不设置keyPrefix，则列举存储空间下的所有文件。如果设置keyPrefix，则列举包含指定前缀的文件。 ObjectListing objectListing = ossClient.listObjects(Bucket); List<OSSObjectSummary> sums = objectListing.getObjectSummaries(); ArrayList<String> list = new ArrayList<>(); for (OSSObjectSummary s : sums) { // System.out.println(\\\"\\\\t\\\" + s.getKey()); list.add(s.getKey());//返回所有的链接 } return list; } catch (OSSException oe) { System.out.println(\\\"Caught an OSSException, which means your request made it to OSS, \\\" + \\\"but was rejected with an error response for some reason.\\\"); System.out.println(\\\"Error Message:\\\" + oe.getErrorMessage()); System.out.println(\\\"Error Code:\\\" + oe.getErrorCode()); System.out.println(\\\"Request ID:\\\" + oe.getRequestId()); System.out.println(\\\"Host ID:\\\" + oe.getHostId()); } finally { if (ossClient != null) { ossClient.shutdown(); } } return null; } \"},\"18\":{\"h\":\"删除图片\",\"a\":\"删除图片\"},\"19\":{\"t\":\"public List deleteObject(String s){ //s为图片的名字 OSS ossClient = new OSSClientBuilder().build( Endpoint() ,AccessKeyId() ,AccessKeySecert()); try { // 删除文件或目录。如果要删除目录，目录必须为空。 ossClient.deleteObject(Bucket(), s); return this.getList(); } catch (OSSException oe) { System.out.println(\\\"Caught an OSSException, which means your request made it to OSS, \\\" + \\\"but was rejected with an error response for some reason.\\\"); System.out.println(\\\"Error Message:\\\" + oe.getErrorMessage()); System.out.println(\\\"Error Code:\\\" + oe.getErrorCode()); System.out.println(\\\"Request ID:\\\" + oe.getRequestId()); System.out.println(\\\"Host ID:\\\" + oe.getHostId()); } finally { if (ossClient != null) { ossClient.shutdown(); } } return null; } \"},\"20\":{\"c\":[\"使用指南\"]},\"21\":{\"c\":[\"Markdown\"]},\"22\":{\"h\":\"书本\"},\"23\":{\"h\":\"静态资源访问\",\"a\":\"静态资源访问\"},\"24\":{\"t\":\"spring: mvc: static-path-pattern: /static/** web: resources: static-locations: classpath:/static/ \"},\"25\":{\"t\":\"@Configuration public class staticHandles implements WebMvcConfigurer { @Override public void addResourceHandlers(ResourceHandlerRegistry registry) { registry.addResourceHandler(\\\"/static/**\\\") .addResourceLocations(\\\"classpath:/static/\\\"); } } \"},\"26\":{\"h\":\"文件上传\",\"a\":\"文件上传\"},\"27\":{\"t\":\" <dependency> <groupId>javax.servlet</groupId> <artifactId>servlet-api</artifactId> <version>2.5</version> <scope>provided</scope> </dependency> \"},\"28\":{\"t\":\" <form action=\\\"/upload\\\" method=\\\"post\\\" enctype=\\\"multipart/form-data\\\"> <input type=\\\"file\\\" name=\\\"uploadFile\\\" value=\\\"选择文件\\\"> <input type=\\\"submit\\\" value=\\\"上传\\\"> </form> \"},\"29\":{\"t\":\"@RestController public class FileUploadController { SimpleDateFormat sdf = new SimpleDateFormat(\\\"yyyy/MM/dd\\\"); @PostMapping(\\\"/upload\\\") public String upload(MultipartFile uploadFile, HttpServletRequest req){ // 运行目录下 没有文件夹 就建一个 String realPath = req.getSession().getServletContext().getRealPath(\\\"/uploadFile/\\\"); System.out.println(realPath); String format = sdf.format(new Date()); File folder = new File(realPath + format); if(!folder.isDirectory()){ folder.mkdirs(); } // 重命名 String oldName = uploadFile.getOriginalFilename(); String newName = UUID.randomUUID().toString() + oldName.substring(oldName.lastIndexOf(\\\".\\\")); try{ // 保存 uploadFile.transferTo(new File(folder,newName)); // 返回路径 String filePath = req.getScheme() + \\\"://\\\" + req.getServerName() + \\\":\\\" + req.getServerPort() + \\\"/uploadFile/\\\" + format + newName; return filePath; } catch (IOException e) { throw new RuntimeException(e); } } } \"},\"30\":{\"t\":\"spring: servlet: multipart: # 是否开启上传 enabled: true file-size-threshold: 0 # 保存临时位置 location: E:\\\\\\\\temp # 最大 max-file-size: 10MB # 总大小 max-request-size: 10MB # 是否延迟解析 resolve-lazily: false \"},\"31\":{\"h\":\"热加载（Hot Swap）\",\"a\":\"热加载-hot-swap\"},\"32\":{\"t\":\" <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-devtools</artifactId> <optional>true</optional> </dependency> \"},\"33\":{\"h\":\"WebSocket 和 SockJS\",\"a\":\"websocket-和-sockjs\"},\"34\":{\"t\":\"应用场景\"},\"35\":{\"t\":\"WebSocket 和 SockJS 两者都应用广泛，具体应该根据实际情况来选择。WebSocket 是 HTML5 的一种新协议，它实现了浏览器与服务器全双工通信，实现了客户端与服务器端的实时通信。而 SockJS 是 WebSocket 的一个 polyfill 实现，即当浏览器不支持 WebSocket 时，SockJS 可以自动降级为支持长轮询等传输方式的 WebSocket 模拟实现，从而使得浏览器与服务器之间的通信始终保持稳定和高效。\"},\"36\":{\"t\":\"WebSocket和SockJS都是在Web应用程序中使用实时通信的协议，它们都有自己的优势和缺点。\"},\"37\":{\"h\":\"WebSocket的优势：\",\"a\":\"websocket的优势\"},\"38\":{\"t\":\"简单易用：WebSocket是一个非常简单的协议，只需建立连接，就可以进行双向通信。\"},\"39\":{\"t\":\"高效性：WebSocket的头部信息非常小，数据格式紧凑，因此数据传输的效率非常高。\"},\"40\":{\"t\":\"双向通信：WebSocket提供了双向通信的功能，可以同时在客户端和服务器端发送和接收消息。\"},\"41\":{\"h\":\"WebSocket的缺点：\",\"a\":\"websocket的缺点\"},\"42\":{\"t\":\"支持性：WebSocket是HTML5标准的一部分，因此只有在支持HTML5的浏览器中才能使用。对于老的浏览器，需要使用polyfill或其他技术。\"},\"43\":{\"t\":\"长连接：WebSocket在连接建立后会一直保持连接，如果服务器端不能正常关闭连接，可能会导致资源浪费和性能问题。\"},\"44\":{\"h\":\"SockJS的优势：\",\"a\":\"sockjs的优势\"},\"45\":{\"t\":\"跨浏览器：SockJS可以在所有支持JavaScript的浏览器中运行，甚至包括IE6。\"},\"46\":{\"t\":\"支持性：SockJS可以通过polyfill模拟WebSocket的功能，因此在不支持WebSocket的浏览器中也可以使用。\"},\"47\":{\"t\":\"可靠性：SockJS在不支持WebSocket的浏览器中使用的是长轮询技术，可以保证数据的可靠性。\"},\"48\":{\"h\":\"SockJS的缺点：\",\"a\":\"sockjs的缺点\"},\"49\":{\"t\":\"头部信息较大：因为SockJS在不支持WebSocket的浏览器中使用的是长轮询技术，因此需要发送大量的头部信息，导致数据传输效率较低。\"},\"50\":{\"t\":\"连接不稳定：由于SockJS在不支持WebSocket的浏览器中使用的是长轮询技术，因此可能会遇到连接不稳定的情况，例如断开连接或网络故障。\"},\"51\":{\"h\":\"发送邮件\",\"a\":\"发送邮件\"},\"52\":{\"t\":\"study\"},\"53\":{\"t\":\"application.yml\"},\"54\":{\"t\":\"spring: # 邮件配置 mail: host: smtp.qq.com port: 465 username: totryeverything@qq.com password:<第一步获得的密钥> default-encoding: utf-8 properties: mail: smtp: socketFactory: class: javax.net.ssl.SSLSocketFactory debug: true \"},\"55\":{\"t\":\"pom.xml\"},\"56\":{\"t\":\" <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-mail</artifactId> </dependency> \"},\"57\":{\"t\":\"Service\"},\"58\":{\"t\":\" @Service public class MailService { @Autowired JavaMailSender javaMailSender; // 抄送（CC），用户给收件人发出邮件的同时把该邮件抄送给另外的人，在这种抄送方式中，“收件人”知道发件人把该邮件抄送给了另外哪些人。 // 发送者 收件人 抄送人 主题 内容 public void sendSimpleMail(String from,String to, String subject,String content){ SimpleMailMessage msg = new SimpleMailMessage(); msg.setFrom(from); msg.setTo(to); msg.setSubject(subject); msg.setText(content); javaMailSender.send(msg); } // 发送带附件的邮件 public void sendFailMail(String from,String to, String subject,String content, File file) throws MessagingException { MimeMessage msg = javaMailSender.createMimeMessage(); MimeMessageHelper helper = new MimeMessageHelper(msg,true); helper.setFrom(from); helper.setTo(to); helper.setText(content); helper.setSubject(subject); helper.addAttachment(file.getName(),file); javaMailSender.send(msg); } // 附带图片 public void sendMailImg(String from,String to, String subject,String content, String[] srcPath, String[] resIds) throws MessagingException { if(srcPath.length!=resIds.length){ System.out.println(\\\"hello world\\\"); return ; } MimeMessage msg = javaMailSender.createMimeMessage(); MimeMessageHelper helper = new MimeMessageHelper(msg, true); helper.setFrom(from); helper.setTo(to); helper.setText(content,true);//表示正文是HTML格式 helper.setSubject(subject); for(int i=0;i<srcPath.length;i++){ FileSystemResource res = new FileSystemResource(new File(srcPath[i])); helper.addInline(resIds[i],res); } javaMailSender.send(msg); } } \"},\"59\":{\"t\":\"Test\"},\"60\":{\"t\":\" @Autowired private MailService mailService; @Test void sendSimpleMail() { mailService.sendSimpleMail(\\\"totryeverything@qq.com\\\",\\\"19138084894@163.com\\\", \\\"Test\\\",\\\"这只不过是一个测试而已\\\"); } @Test void sendFailMail() throws MessagingException { mailService.sendFailMail(\\\"totryeverything@qq.com\\\",\\\"19138084894@163.com\\\", \\\"Test\\\",\\\"这只不过是一个测试而已\\\",new File(\\\"E:\\\\\\\\c\\\\\\\\ToTryEveryThing\\\\\\\\README.md\\\")); } @Test void sendImgMail() throws MessagingException { mailService.sendMailImg(\\\"totryeverything@qq.com\\\",\\\"19138084894@163.com\\\", \\\"Test\\\", \\\"这只不过是一个测试而已\\\" + \\\"<img /><img />\\\", new String []{\\\"C:\\\\\\\\Users\\\\\\\\Administrator\\\\\\\\Pictures\\\\\\\\47f4c019880711ebb6edd017c2d2eca2.jpg\\\",\\\"C:\\\\\\\\Users\\\\\\\\Administrator\\\\\\\\Pictures\\\\\\\\下载 (2).png\\\"}, new String[]{\\\"p1\\\",\\\"p2\\\"} ); } \"},\"61\":{\"h\":\"定时任务\",\"a\":\"定时任务\"},\"62\":{\"t\":\"提示\"},\"63\":{\"t\":\"在Spring Boot应用程序中使用@Scheduled注解标记的定时任务是在应用程序启动时自动启动的。\"},\"64\":{\"t\":\"配置\"},\"65\":{\"t\":\"@Configuration @EnableScheduling public class ScheduledTasksConfig { } \"},\"66\":{\"t\":\"使用\"},\"67\":{\"t\":\"延迟5s启动 然后每隔5s运行一次\"},\"68\":{\"t\":\" @Scheduled(fixedRate = 5000,initialDelay = 5000) public String schedul (){ System.out.println(i++); return String.valueOf(i); } \"},\"69\":{\"h\":\"@Scheduled(cron = \\\"0 0 12 * * ?\\\"): 使用CRON表达式指定执行时间。\",\"a\":\"scheduled-cron-0-0-12-使用cron表达式指定执行时间。\"},\"70\":{\"t\":\"// 每天中午12点执行任务 @Scheduled(cron = \\\"0 0 12 * * ?\\\") public void doTask() { // your task code here } \"},\"71\":{\"t\":\"自启动 通过get方法停止任务\"},\"72\":{\"t\":\"@RestController public class ScheduleController { @Autowired private TaskScheduler taskScheduler; private ScheduledFuture<?> scheduledFuture; @PostConstruct public void start() { scheduledFuture = taskScheduler.scheduleWithFixedDelay(new MyTask(), 5000L);//5000ms } @GetMapping(\\\"/stop\\\") public String stop() { if (scheduledFuture != null) { scheduledFuture.cancel(true); } return \\\"stop\\\"; } private class MyTask implements Runnable { @Override public void run() { System.out.println(\\\"Task executing...\\\"); } } } \"},\"73\":{\"h\":\"数据校验\",\"a\":\"数据校验\"},\"74\":{\"t\":\"依赖\"},\"75\":{\"t\":\" <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-validation</artifactId> </dependency> \"},\"76\":{\"t\":\"配置 ValidationMessages.properties\"},\"77\":{\"t\":\"user.name.size = name user.address.notnull = adress user.age.size = age user.email.pattern = email \"},\"78\":{\"t\":\"pojo\"},\"79\":{\"t\":\"public class User { @Size(min = 2,max = 10, message = \\\"{user.name.size}\\\") private String name; @NotNull(message = \\\"{user.address.notnull}\\\") private String address; @DecimalMin(value = \\\"1\\\" ,message = \\\"{user.age.size}\\\") @DecimalMax(value = \\\"100\\\" ,message = \\\"{user.age.size}\\\") private Integer age; @Email(message = \\\"{user.email.pattern}\\\") private String email; public String getName() { return name; } public void setName(String name) { this.name = name; } public String getAddress() { return address; } public void setAddress(String address) { this.address = address; } public Integer getAge() { return age; } public void setAge(Integer age) { this.age = age; } public String getEmail() { return email; } public void setEmail(String email) { this.email = email; } } \"},\"80\":{\"t\":\"controller\"},\"81\":{\"t\":\"@RestController public class UserController { @PostMapping(\\\"/adduser/\\\") public List<String> addUser(@Validated User user, BindingResult bindingResult){ ArrayList<String> error = new ArrayList<>(); if(bindingResult.hasErrors()){ List<ObjectError> allErrors = bindingResult.getAllErrors(); for(ObjectError e : allErrors){ error.add(e.getDefaultMessage()); System.out.println(\\\"e.getDefaultMessage() = \\\" + e.getDefaultMessage()); } } return error; } } \"},\"82\":{\"t\":\"<template> <div> <!-- input 标签用于选择图片 --> <input type=\\\"file\\\" accept=\\\"image/*\\\" @change=\\\"previewImage\\\"> <!-- 预览图片的 img 标签 --> <img ref=\\\"previewImg\\\" style=\\\"max-width: 100%; max-height: 100%;\\\" /> </div> </template> <script> export default { methods: { previewImage(event) { // 获取选择的文件 const file = event.target.files[0]; // 判断是否是图片类型 if (file.type.startsWith('image/')) { // 创建 FileReader 对象 const reader = new FileReader(); // 读取图片文件 reader.readAsDataURL(file); // 在图片文件读取完毕后设置预览图片的 URL reader.onload = () => { this.$refs.previewImg.src = reader.result; }; } }, }, }; </script> \"},\"83\":{\"h\":\"分布式锁\",\"a\":\"分布式锁\"},\"84\":{\"h\":\"Redis分布式锁和Redisson分布式锁都是用于实现分布式系统中的分布式锁，但它们之间有以下区别：\",\"a\":\"redis分布式锁和redisson分布式锁都是用于实现分布式系统中的分布式锁-但它们之间有以下区别\"},\"85\":{\"t\":\"Redis分布式锁是基于Redis的SETNX命令实现的，而Redisson分布式锁是基于Redis的Redisson分布式框架实现的。\"},\"86\":{\"t\":\"Redis分布式锁需要手动编写锁逻辑代码，包括锁定、释放锁等。Redisson分布式锁封装了锁逻辑，并提供了API接口，使得锁的使用变得简单。\"},\"87\":{\"t\":\"Redis分布式锁在进行锁定和解锁操作时，需要自己实现保证操作的原子性。Redisson分布式锁内部封装了Redis的单线程模型，保证了锁的操作原子性。\"},\"88\":{\"t\":\"Redis分布式锁在锁定后需要手动维护锁的超时时间。Redisson分布式锁内部封装了锁的自动续期机制，避免了锁过期的问题。\"},\"89\":{\"t\":\"Redis分布式锁在高并发场景下可能存在死锁的问题。Redisson分布式锁使用Redlock算法避免了死锁的问题。\"},\"90\":{\"h\":\"redis分布式锁\",\"a\":\"redis分布式锁\"},\"91\":{\"t\":\"public Result regasdgsdgister(String account, String password) { final String key = account + \\\"-lock\\\"; final String value = System.nanoTime() + \\\" \\\" + UUID.randomUUID(); ValueOperations v = stringRedisTemplate.opsForValue(); Boolean res = v.setIfAbsent(key,value); if(res){ stringRedisTemplate.expire(key,20L, TimeUnit.SECONDS); if(account == null){ return new Result(0,\\\"用户名不能为空\\\"); } if(password.length() == 0){ return new Result(0,\\\"密码不能为空\\\"); } account = account.trim(); if(account.length()==0){ return new Result(0,\\\"用户名不能为空\\\"); } if(password.length()>50){ return new Result(0,\\\"密码长度不能超过50\\\"); } QueryWrapper<web> queryWrapper = new QueryWrapper<web>(); queryWrapper.eq(\\\"account\\\",account); List<web> webs = webMapper.selectList(queryWrapper); if(!webs.isEmpty()){ return new Result(0,\\\"用户名已存在\\\"); } String pass = passwordEncoder.encode(password); String jwt = JwtUtil.createJWT(account); web web1 = new web(); web1.setBackimg(\\\"5\\\"); web1.setList(\\\"[]\\\"); web1.setPassword(pass); web1.setAccount(account); web1.setDate(new Date()); webMapper.insert(web1); String git = \\\"[{\\\\\\\"title\\\\\\\":\\\\\\\"你好\\\\\\\",\\\\\\\"name\\\\\\\":1,\\\\\\\"content\\\\\\\":\\\\\\\"## new content\\\\\\\",\\\\\\\"show\\\\\\\":true}]\\\\n\\\" + \\\"\\\\n\\\"; String title = \\\"[\\\\\\\"你好\\\\\\\"]\\\"; System.out.println(publicMapper.insert(new Public(account, title,git))+999999); System.out.println(new Date()); if(value.equals(v.get(key).toString())){ stringRedisTemplate.delete(key); } return new Result(1,\\\"success\\\",jwt); } return null; } \"},\"92\":{\"h\":\"Redisson\",\"a\":\"redisson\"},\"93\":{\"t\":\"Redisson学习地址\"},\"94\":{\"t\":\"引入\"},\"95\":{\"t\":\"<!-- redisson--> <dependency> <groupId>org.redisson</groupId> <artifactId>redisson</artifactId> <version>3.6.5</version> </dependency> \"},\"96\":{\"t\":\"RedissonConfig\"},\"97\":{\"t\":\"@Configuration public class RedissonConfig { @Bean RedissonClient redisson() { Config config = new Config(); config.useSingleServer().setAddress(\\\"redis://localhost:6379\\\").setDatabase(0); return Redisson.create(config); } } \"},\"98\":{\"t\":\"使用\"},\"99\":{\"t\":\" @Autowired RedissonClient redissonClient; @Override public Result showbyid(Integer id) { RLock lock = redissonClient.getLock(String.valueOf(id)); lock.lock(); try{ article article = articleMapper.selectById(id); article.setViews(article.getViews()+1); int i = articleMapper.updateById(article); return new Result(1,\\\"success\\\",article); }finally { lock.unlock(); } } \"},\"100\":{\"h\":\"Swagger\",\"a\":\"swagger\"},\"101\":{\"h\":\"搭建\",\"a\":\"搭建\"},\"102\":{\"t\":\" <dependency> <groupId>io.springfox</groupId> <artifactId>springfox-swagger2</artifactId> <version>3.0.0</version> </dependency> \"},\"103\":{\"t\":\"@Configuration @EnableSwagger2 public class SwaggerConfig { @Bean public Docket productApi() { return new Docket(DocumentationType.SWAGGER_2) .apiInfo(apiInfo()) .select() .apis(RequestHandlerSelectors.withMethodAnnotation(ApiOperation.class)) //添加ApiOperiation注解的被扫描 .paths(PathSelectors.any()) .build(); } private ApiInfo apiInfo() { return new ApiInfoBuilder().title(\\\"都是书本上的呀\\\").description(\\\"根本不需要的描述\\\") .version(\\\"1.0\\\").build(); } } \"},\"104\":{\"c\":[\"使用指南\"]},\"105\":{\"c\":[\"Markdown\"]},\"106\":{\"h\":\"版本控制\"},\"107\":{\"h\":\"一、git安装后-指定名称和邮箱\",\"a\":\"一、git安装后-指定名称和邮箱\"},\"108\":{\"t\":\"$ git config --global user.name \\\"Your Name\\\" $ git config --global user.email \\\"email@example.com\\\" \"},\"109\":{\"h\":\"二.一分支管理\",\"a\":\"二-一分支管理\"},\"110\":{\"t\":\"git branch #查看分支 git chenkout xxx #切换为分支xxx git checkout -b xxx #新建分支xxx 并且切换过去 git branch -d xxx # 删除本地分支xxx git branch -D xxx #忽略修改 仍然删除分支xxx git fetch origin xxx #拉取远程分支xxx git push origin yyy # 把新建的分支yyy上传 git checkout -b first origin/first ##新建本地分支 和远程分支连接起来 \"},\"111\":{\"h\":\"二、创建版本库\",\"a\":\"二、创建版本库\"},\"112\":{\"t\":\"$ mkdir learngit //创建 $ cd learngit //使用 $ pwd //查看当前目录 $ git init //初始化，生成.git文件(若该文件隐藏，则使用ls -ah) \"},\"113\":{\"h\":\"三、把文件添加add和提交commit到版本库\",\"a\":\"三、把文件添加add和提交commit到版本库\"},\"114\":{\"t\":\"$ git add test.txt //添加 $ git commit -m \\\"wrote a test file\\\" //提交 $ git commit -m \\\"add 3 files.\\\" //一次性提交多个文件 \"},\"115\":{\"h\":\"四、版本控制\",\"a\":\"四、版本控制\"},\"116\":{\"t\":\"$ git log //查看提交历史记录，从最近到最远，可以看到3次 $ git log --pretty=oneline //加参，简洁查看 $ git reflog //查看每一次修改历史 $ cat test.txt //查看文件内容 $ git status //查看工作区中文件当前状态 $ git reset --hard HEAD^（HEAD~100）（commit id） //回退版本 $ git checkout -- test.txt //丢弃工作区的修改，即撤销修改 $ git reset HEAD test.txt //丢弃暂存区的修改（若已提交，则回退） \"},\"117\":{\"h\":\"五、删除文件\",\"a\":\"五、删除文件\"},\"118\":{\"t\":\"$ rm test.txt //直接删除 $ git rm test.txt $ git commit -m \\\"remove test.txt\\\" //删错了，恢复 $ git checkout -- test.txt \"},\"119\":{\"h\":\"六、远程仓库\",\"a\":\"六、远程仓库\"},\"120\":{\"t\":\"$ ssh-keygen -t rsa -C \\\"youremail@example.com\\\" //创建SSH Key $ git remote add origin git@github.com:Daisy/AKgit.git //关联 $ git push -u origin master //将本地内容推送到远程仓库（第一次） $ git push origin master //将本地内容推送到远程仓库（之后） $ git remote -v //查看远程仓库信息 $ git remote rm origin //删除远程仓库（解绑） $ git clone git@github.com: Daisy/AKgit.git //克隆远程仓库 //克隆之后使用和查看 $ cd gitskills $ ls $ git remote //查看远程库的信息 $ git remote -v //查看远程库的详细信息 \"},\"121\":{\"c\":[\"使用指南\"]},\"122\":{\"c\":[\"Markdown\"]},\"123\":{\"h\":\"Linux\"},\"124\":{\"h\":\"docker\",\"a\":\"docker\"},\"125\":{\"h\":\"将当前用户添加到docker用户组\",\"a\":\"将当前用户添加到docker用户组\"},\"126\":{\"t\":\"为了避免每次使用docker命令都需要加上sudo权限，可以将当前用户加入安装中自动创建的docker用户组\"},\"127\":{\"t\":\"如何在 Ubuntu 22.04 LTS 中安装 Docker 和 Docker Compose\"},\"128\":{\"t\":\"sudo usermod -aG docker $USER \"},\"129\":{\"t\":\"执行完此操作后，需要退出服务器，再重新登录回来，才可以省去sudo权限。\"},\"130\":{\"h\":\"镜像（images）\",\"a\":\"镜像-images\"},\"131\":{\"t\":\"docker pull ubuntu:20.04：拉取一个镜像 docker images：列出本地所有镜像 docker image rm ubuntu:20.04 或 docker rmi ubuntu:20.04：删除镜像ubuntu:20.04 docker [container] commit CONTAINER IMAGE_NAME:TAG：创建某个container的镜像 docker save -o ubuntu_20_04.tar ubuntu:20.04：将镜像ubuntu:20.04导出到本地文件ubuntu_20_04.tar中 docker load -i ubuntu_20_04.tar：将镜像ubuntu:20.04从本地文件ubuntu_20_04.tar中加载出来 \"},\"132\":{\"h\":\"容器(container)\",\"a\":\"容器-container\"},\"133\":{\"t\":\"docker [container] create -it ubuntu:20.04：利用镜像ubuntu:20.04创建一个容器。 docker ps -a：查看本地的所有容器 docker [container] start CONTAINER：启动容器 docker [container] stop CONTAINER：停止容器 docker [container] restart CONTAINER：重启容器 docker [contaienr] run -itd ubuntu:20.04：创建并启动一个容器 docker [container] attach CONTAINER：进入容器 先按Ctrl-p，再按Ctrl-q可以挂起容器 docker [container] exec CONTAINER COMMAND：在容器中执行命令 docker [container] rm CONTAINER：删除容器 docker container prune：删除所有已停止的容器 docker export -o xxx.tar CONTAINER：将容器CONTAINER导出到本地文件xxx.tar中 docker import xxx.tar image_name:tag：将本地文件xxx.tar导入成镜像，并将镜像命名为image_name:tag docker export/import与docker save/load的区别： export/import会丢弃历史记录和元数据信息，仅保存容器当时的快照状态 save/load会保存完整记录，体积更大 docker top CONTAINER：查看某个容器内的所有进程 docker stats：查看所有容器的统计信息，包括CPU、内存、存储、网络等信息 docker cp xxx CONTAINER:xxx 或 docker cp CONTAINER:xxx xxx：在本地和容器间复制文件 docker rename CONTAINER1 CONTAINER2：重命名容器 docker update CONTAINER --memory 500MB：修改容器限制 \"},\"134\":{\"h\":\"例子\",\"a\":\"例子\"},\"135\":{\"t\":\"创建 运行镜像 docker run -p 20000:22 --name my_docker_server -itd docker_lesson:1.0 \"},\"136\":{\"h\":\"mysql\",\"a\":\"mysql\"},\"137\":{\"h\":\"导出完整数据库\",\"a\":\"导出完整数据库\"},\"138\":{\"t\":\"用mysqldump命令导出数据库（此命令的路径即mysql的安装路径） mysqldump -u用户名 -p 数据库名 > 数据库名.sql \"},\"139\":{\"t\":\"例如\"},\"140\":{\"t\":\"/usr/local/mysql/bin mysqldump -uroot -p aaa > aaa.sql \"},\"141\":{\"t\":\"2、只导出表结构 如果只需要导出表结构\"},\"142\":{\"t\":\"mysqldump -u用户名 -p -d 数据库名 > 数据库名.sql \"},\"143\":{\"t\":\"例如\"},\"144\":{\"t\":\"mysqldump -uroot -p -d aaa >aaa.sql 可以使用以下命令找到导出的数据库 find / -name 数据库名.sql \"},\"145\":{\"h\":\"导入数据库\",\"a\":\"导入数据库\"},\"146\":{\"t\":\"1、使用mysql命令导入 mysql -u用户名 -p 数据库名 < 数据库名.sql 例如\"},\"147\":{\"t\":\"mysql -uroot -p aaa < aaa.sql \"},\"148\":{\"t\":\"2、使用sources命令导入 先进入到mysql中\"},\"149\":{\"t\":\"mysql> create databases aaa; #创建新的数据库 mysql> use aaa; #使用已创建的数据库 mysql> set names utf-8; #设置编码 mysql> source /aaa.sql #导入sql文件，注意sql的路径 \"},\"150\":{\"h\":\"vim\",\"a\":\"vim\"},\"151\":{\"t\":\"(1) i：进入编辑模式 (2) ESC：进入一般命令模式 (3) h 或 左箭头键：光标向左移动一个字符 (4) j 或 向下箭头：光标向下移动一个字符 (5) k 或 向上箭头：光标向上移动一个字符 (6) l 或 向右箭头：光标向右移动一个字符 (7) n<Space>：n表示数字，按下数字后再按空格，光标会向右移动这一行的n个字符 (8) 0 或 功能键[Home]：光标移动到本行开头 (9) $ 或 功能键[End]：光标移动到本行末尾 (10) G：光标移动到最后一行 (11) :n 或 nG：n为数字，光标移动到第n行 (12) gg：光标移动到第一行，相当于1G (13) n<Enter>：n为数字，光标向下移动n行 (14) /word：向光标之下寻找第一个值为word的字符串。 (15) ?word：向光标之上寻找第一个值为word的字符串。 (16) n：重复前一个查找操作 (17) N：反向重复前一个查找操作 (18) :n1,n2s/word1/word2/g：n1与n2为数字，在第n1行与n2行之间寻找word1这个字符串，并将该字符串替换为word2 (19) :1,$s/word1/word2/g：将全文的word1替换为word2 (20) :1,$s/word1/word2/gc：将全文的word1替换为word2，且在替换前要求用户确认。 (21) v：选中文本 (22) d：删除选中的文本 (23) dd: 删除当前行 (24) y：复制选中的文本 (25) yy: 复制当前行 (26) p: 将复制的数据在光标的下一行/下一个位置粘贴 (27) u：撤销 (28) Ctrl + r：取消撤销 (29) 大于号 >：将选中的文本整体向右缩进一次 (30) 小于号 <：将选中的文本整体向左缩进一次 (31) :w 保存 (32) :w! 强制保存 (33) :q 退出 (34) :q! 强制退出 (35) :wq 保存并退出 (36) :set paste 设置成粘贴模式，取消代码自动缩进 (37) :set nopaste 取消粘贴模式，开启代码自动缩进 (38) :set nu 显示行号 (39) :set nonu 隐藏行号 (40) gg=G：将全文代码格式化 (41) :noh 关闭查找关键词高亮 (42) Ctrl + q：当vim卡死时，可以取消当前正在执行的命令 \"},\"152\":{\"h\":\"ssh 免密登录\",\"a\":\"ssh-免密登录\"},\"153\":{\"t\":\"ssh-keygen 先生成一对密钥 ssh-keygen -R 127.0.0.1 清除公钥信息 ssh-copy-id 127.0.0.1 发送公钥 /.ssh 下创建config文件 Host 别名 Hostname 127.0.0.1 User 登录名 最后即可使用ssh 别名登录 \"},\"154\":{\"c\":[\"使用指南\"]},\"155\":{\"c\":[\"Markdown\"]},\"156\":{\"h\":\"Maven\"},\"157\":{\"h\":\"安装\",\"a\":\"安装\"},\"158\":{\"t\":\"下载地址中央仓库配置本地仓库\"},\"159\":{\"h\":\"阿里镜像\",\"a\":\"阿里镜像\"},\"160\":{\"t\":\"<mirror> <id>alimaven</id> <mirrorOf>central</mirrorOf> <name>aliyun maven</name> <url>http://maven.aliyun.com/nexus/content/repositories/central/</url> </mirror> \"},\"161\":{\"h\":\"简单命令\",\"a\":\"简单命令\"},\"162\":{\"t\":\"mvn compile #编译 mvn clean #清理 mvn test #测试 mvn package #打包 mvn install #安装到本地仓库 \"},\"163\":{\"h\":\"依赖管理\",\"a\":\"依赖管理\"},\"164\":{\"h\":\"依赖传递\",\"a\":\"依赖传递\"},\"165\":{\"t\":\"例如A依赖了B，B依赖了C和D，那么你就可以在A中，像主动依赖了C和D一样使用它们。并且传递的依赖是没有数量和层级的限制的，非常方便。\"},\"166\":{\"h\":\"可选依赖\",\"a\":\"可选依赖\"},\"167\":{\"t\":\"当别的项目引用这个jar包，optional为true时不让别人知道自己所用依赖\"},\"168\":{\"t\":\" <dependency> <groupId>joda-time</groupId> <artifactId>joda-time</artifactId> <version>2.9.9</version> // 可选依赖 <optional>true</optional> </dependency> \"},\"169\":{\"h\":\"排除依赖\",\"a\":\"排除依赖\"},\"170\":{\"t\":\"加入某个jar包依赖后，不想使用其中的某个依赖，使用坐标主动排除掉\"},\"171\":{\"t\":\"<dependency> <groupId>org.apache.struts</groupId> <artifactId>struts2-core</artifactId> <version>${struts.version}</version> <exclusions> <exclusion> <!-- we prefer our explicit version, though it should be the same --> <groupId>asm</groupId> <artifactId>asm</artifactId> </exclusion> </exclusions> </dependency> <dependency> <groupId>asm</groupId> <artifactId>asm</artifactId> <version>3.3.1</version> </dependency> \"},\"172\":{\"h\":\"依赖范围\",\"a\":\"依赖范围\"},\"173\":{\"t\":\"scope\"},\"174\":{\"t\":\"主代码\"},\"175\":{\"t\":\"测试代码\"},\"176\":{\"t\":\"打包\"},\"177\":{\"t\":\"compile(默认)\"},\"178\":{\"t\":\"Y\"},\"179\":{\"t\":\"Y\"},\"180\":{\"t\":\"Y\"},\"181\":{\"t\":\"test\"},\"182\":{\"t\":\"Y\"},\"183\":{\"t\":\"provided\"},\"184\":{\"t\":\"Y\"},\"185\":{\"t\":\"Y\"},\"186\":{\"t\":\"runtime\"},\"187\":{\"t\":\"Y\"},\"188\":{\"h\":\"\",\"a\":\"\"},\"189\":{\"c\":[\"使用指南\"]},\"190\":{\"c\":[\"Markdown\"]},\"191\":{\"h\":\"布局与功能禁用\"},\"192\":{\"t\":\"你可以通过设置页面的 Frontmatter，在页面禁用功能与布局。\"},\"193\":{\"t\":\"本页面就是一个示例，禁用了如下功能:\"},\"194\":{\"t\":\"导航栏\"},\"195\":{\"t\":\"侧边栏\"},\"196\":{\"t\":\"路径导航\"},\"197\":{\"t\":\"页面信息\"},\"198\":{\"t\":\"贡献者\"},\"199\":{\"t\":\"更新时间\"},\"200\":{\"t\":\"上一篇/下一篇 链接\"},\"201\":{\"t\":\"评论\"},\"202\":{\"t\":\"页脚\"},\"203\":{\"t\":\"返回顶部按钮\"},\"204\":{\"c\":[\"使用指南\"]},\"205\":{\"c\":[\"禁用\"]},\"206\":{\"h\":\"密码加密的文章\"},\"207\":{\"t\":\"实际的文章内容。\"},\"208\":{\"t\":\"段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字。\"},\"209\":{\"t\":\"段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字。\"},\"210\":{\"c\":[\"使用指南\"]},\"211\":{\"c\":[\"文章加密\"]},\"212\":{\"h\":\"页面配置\"},\"213\":{\"t\":\"more 注释之前的内容被视为文章摘要。\"},\"214\":{\"h\":\"页面信息\",\"a\":\"页面信息\"},\"215\":{\"t\":\"你可以在 Markdown 的 Frontmatter 中设置页面信息。\"},\"216\":{\"t\":\"作者设置为 Ms.Hope。\"},\"217\":{\"t\":\"写作日期为 2020 年 1 月 1 日\"},\"218\":{\"t\":\"分类为 “使用指南”\"},\"219\":{\"t\":\"标签为 “页面配置” 和 “使用指南”\"},\"220\":{\"h\":\"页面内容\",\"a\":\"页面内容\"},\"221\":{\"t\":\"你可以自由在这里书写你的 Markdown。\"},\"222\":{\"t\":\"提示\"},\"223\":{\"t\":\"你可以将图片和 Markdown 文件放置在一起，但是你需要使用相对链接./ 进行引用。\"},\"224\":{\"t\":\"对于 .vuepress/public 文件夹的图片，请使用绝对链接 / 进行引用。\"},\"225\":{\"t\":\"主题包含了一个自定义徽章可以使用:\"},\"226\":{\"t\":\"文字结尾应该有深蓝色的 徽章文字 徽章。 \"},\"227\":{\"h\":\"页面结构\",\"a\":\"页面结构\"},\"228\":{\"t\":\"此页面应当包含:\"},\"229\":{\"t\":\"路径导航\"},\"230\":{\"t\":\"标题和页面信息\"},\"231\":{\"t\":\"TOC (文章标题列表)\"},\"232\":{\"t\":\"贡献者、更新时间等页面元信息\"},\"233\":{\"t\":\"评论\"},\"234\":{\"t\":\"导航栏\"},\"235\":{\"t\":\"侧边栏\"},\"236\":{\"t\":\"页脚\"},\"237\":{\"t\":\"返回顶部按钮\"},\"238\":{\"t\":\"你可以通过主题选项和页面 Frontmatter 自定义它们。\"},\"239\":{\"c\":[\"使用指南\"]},\"240\":{\"c\":[\"页面配置\",\"使用指南\"]},\"241\":{\"h\":\"Mybatis\"},\"242\":{\"t\":\"官网学习地址\"},\"243\":{\"t\":\"依赖\"},\"244\":{\"t\":\"<!-- https://mvnrepository.com/artifact/org.mybatis/mybatis --> <dependency> <groupId>org.mybatis</groupId> <artifactId>mybatis</artifactId> <version>3.5.5</version> </dependency> \"},\"245\":{\"t\":\"xml配置详解 \"},\"246\":{\"h\":\"添加-主键返回\",\"a\":\"添加-主键返回\"},\"247\":{\"t\":\"int i = mapper.update(test1); 可以把id拿出来 \"},\"248\":{\"t\":\" <insert id=\\\"update\\\" useGeneratedKeys=\\\"true\\\" keyProperty=\\\"id\\\"> insert into test1 (id, name, views, up) values ( #{id}, #{name}, #{views}, #{up} ); </insert> \"},\"249\":{\"h\":\"动态条件查询\",\"a\":\"动态条件查询\"},\"250\":{\"t\":\"if\"},\"251\":{\"t\":\"<select id=\\\"findActiveBlogLike\\\" resultType=\\\"Blog\\\"> SELECT * FROM BLOG WHERE state = ‘ACTIVE’ <if test=\\\"title != null\\\"> AND title like #{title} </if> <if test=\\\"author != null and author.name != null\\\"> AND author_name like #{author.name} </if> </select> \"},\"252\":{\"t\":\"choose\"},\"253\":{\"t\":\"<select id=\\\"findActiveBlogLike\\\" resultType=\\\"Blog\\\"> SELECT * FROM BLOG WHERE state = ‘ACTIVE’ <choose> <when test=\\\"title != null\\\"> AND title like #{title} </when> <when test=\\\"author != null and author.name != null\\\"> AND author_name like #{author.name} </when> <otherwise> AND featured = 1 </otherwise> </choose> </select> \"},\"254\":{\"t\":\"trim\"},\"255\":{\"t\":\"<select id=\\\"findActiveBlogLike\\\" resultType=\\\"Blog\\\"> SELECT * FROM BLOG WHERE <if test=\\\"state != null\\\"> state = #{state} </if> <if test=\\\"title != null\\\"> AND title like #{title} </if> <if test=\\\"author != null and author.name != null\\\"> AND author_name like #{author.name} </if> </select> \"},\"256\":{\"c\":[\"使用指南\"]},\"257\":{\"c\":[\"Markdown\"]},\"258\":{\"h\":\"Mybatis Plus\"},\"259\":{\"h\":\"Mybatis Plus\",\"a\":\"mybatis-plus\"},\"260\":{\"t\":\"MyBatis-Plus（简称 MP）是一个 MyBatis 的增强工具，在 MyBatis 的基础上只做增强不做改变，为简化开发、提高效率而生。\"},\"261\":{\"t\":\"【尚硅谷】2022版MyBatisPlus教程（一套玩转mybatis-plus）_哔哩哔哩_bilibili\"},\"262\":{\"t\":\"无侵入、损耗小、强大的CRUD操作\"},\"263\":{\"t\":\"支持Lambda形式调用，支持多种数据库\"},\"264\":{\"t\":\"支持主键自动生成，支持ActiveRecord模式\"},\"265\":{\"t\":\"支持自定义全局通用操作，支持关键词自动转义\"},\"266\":{\"t\":\"内置代码生成器、内置分页插件、内置性能分析插件\"},\"267\":{\"t\":\"内置全局拦截插件、内置SQL注入剥离器\"},\"268\":{\"h\":\"BaseMapper\",\"a\":\"basemapper\"},\"269\":{\"t\":\"public interface BaseMapper<T> extends Mapper<T> { int insert(T entity); int deleteById(Serializable id); int deleteByMap(@Param(\\\"cm\\\") Map<String, Object> columnMap); int delete(@Param(\\\"ew\\\") Wrapper<T> queryWrapper); int deleteBatchIds(@Param(\\\"coll\\\") Collection<? extends Serializable> idList); int updateById(@Param(\\\"et\\\") T entity); int update(@Param(\\\"et\\\") T entity, @Param(\\\"ew\\\") Wrapper<T> updateWrapper); T selectById(Serializable id); List<T> selectBatchIds(@Param(\\\"coll\\\") Collection<? extends Serializable> idList); List<T> selectByMap(@Param(\\\"cm\\\") Map<String, Object> columnMap); T selectOne(@Param(\\\"ew\\\") Wrapper<T> queryWrapper); Integer selectCount(@Param(\\\"ew\\\") Wrapper<T> queryWrapper); List<T> selectList(@Param(\\\"ew\\\") Wrapper<T> queryWrapper); List<Map<String, Object>> selectMaps(@Param(\\\"ew\\\") Wrapper<T> queryWrapper); List<Object> selectObjs(@Param(\\\"ew\\\") Wrapper<T> queryWrapper); <E extends IPage<T>> E selectPage(E page, @Param(\\\"ew\\\") Wrapper<T> queryWrapper); <E extends IPage<Map<String, Object>>> E selectMapsPage(E page, @Param(\\\"ew\\\") Wrapper<T> queryWrapper); } \"},\"270\":{\"h\":\"CURD\",\"a\":\"curd\"},\"271\":{\"t\":\"使用mapper继承BaseMapper<T>即可开箱即用\"},\"272\":{\"t\":\" @Test void TestInsert(){ user user = new user(); user.setId(880); user.setAccount(\\\"天天学习\\\"); user.setPassword(\\\"hhh\\\"); int res = UserMapper.insert(user); System.out.println(res); } @Test void TestDelete(){ // 一： // int res = UserMapper.deleteById(1); // System.out.println(res); // 二: // delete from user where account = ? and password = ? // HashMap<String, Object> map = new HashMap<>(); // map.put(\\\"account\\\",\\\"jkl\\\"); // map.put(\\\"password\\\",\\\"123root\\\"); // UserMapper.deleteByMap(map); // 三: // 删除多个 // DELETE FROM user WHERE id IN ( ? , ? ) List<Integer> list = Arrays.asList(80,880); UserMapper.deleteBatchIds(list); } @Test void TestUpdata(){ user user = new user(); user.setAccount(\\\"改了\\\"); UpdateWrapper<user> q = new UpdateWrapper<>(); q.eq(\\\"password\\\",\\\"666\\\"); // 不屑password 不被修改 UserMapper.update(user,q); } @Test void TestSelect(){ // 通过id查询信息 // user user = UserMapper.selectById(2); // System.out.println(user.toString().isEmpty()); // 通过多个id进行查询 // List<Integer> list = Arrays.asList(3,2); // List<user> users = UserMapper.selectBatchIds(list); // users.forEach(System.out::println); // 通过map查询 // HashMap<String, Object> map = new HashMap<>(); // map.put(\\\"account\\\",666); // List<user> users = UserMapper.selectByMap(map); // users.forEach(System.out::println); // 所有的数据 // List<user> users = UserMapper.selectList(null); // users.forEach(System.out::println); } \"},\"273\":{\"h\":\"wapper条件构造器\",\"a\":\"wapper条件构造器\"},\"274\":{\"t\":\"Description\"},\"275\":{\"h\":\"注解说明\",\"a\":\"注解说明\"},\"276\":{\"t\":\"@TableName 表名\"},\"277\":{\"t\":\"@TableId 主键\"},\"278\":{\"t\":\"---@TableId(type= IdType.AUTO) 自增\"},\"279\":{\"t\":\"---@TableId(type= IdType.NONE) 雪花算法 赋值\"},\"280\":{\"t\":\"@TableField 把表中字段和实体类对应\"},\"281\":{\"t\":\"---@TableField(value=\\\"name\\\") 映射\"},\"282\":{\"t\":\"---@TableField(exist=false) 不是数据库中字段\"},\"283\":{\"t\":\"---@TableField(select = false) 不会参与查询 返回值为null\"},\"284\":{\"h\":\"MybatisX\",\"a\":\"mybatisx\"},\"285\":{\"t\":\"MybatisX\"},\"286\":{\"t\":\"Description\"},\"287\":{\"h\":\"分页\",\"a\":\"分页\"},\"288\":{\"t\":\"config\"},\"289\":{\"t\":\"@Configuration public class MybatisConfig { @Bean public MybatisPlusInterceptor mybatisPlusInterceptor(){ MybatisPlusInterceptor interceptor = new MybatisPlusInterceptor(); interceptor.addInnerInterceptor(new PaginationInnerInterceptor(DbType.MYSQL)); return interceptor; } } \"},\"290\":{\"t\":\"使用\"},\"291\":{\"t\":\" @Override public JSONObject userList(Integer page) { IPage<Record> recordIPage = new Page<>(page,10); QueryWrapper<Record> queryWrapper = new QueryWrapper<>(); queryWrapper.orderByAsc(\\\"id\\\"); List<Record> list = recordMapper.selectPage(recordIPage,queryWrapper).getRecords(); JSONObject resp = new JSONObject(); resp.put(\\\"records\\\",list); resp.put(\\\"count\\\",recordMapper.selectCount(null)); return resp; } \"},\"292\":{\"h\":\"Mybatis+字段+1\",\"a\":\"mybatis-字段-1\"},\"293\":{\"t\":\" UpdateWrapper<article> updateWrapper = new UpdateWrapper<>(); updateWrapper.setSql(\\\"up = up + 1\\\").eq(\\\"id\\\",21); System.out.println(articleMapper.update(null, updateWrapper)); \"},\"294\":{\"t\":\" LambdaUpdateWrapper<article> q = new LambdaUpdateWrapper<>(); q.setSql(\\\"up = up + 1\\\"); q.setSql(\\\"views = views + 1\\\"); q.eq(article::getId,22); System.out.println(articleMapper.update(null, q)); \"},\"295\":{\"h\":\"事务\",\"a\":\"事务\"},\"296\":{\"t\":\"测试时加入@Transactional 不会改变数据，不会污染数据，不管如何都会回滚\"},\"297\":{\"t\":\"事务主要的作用体现在以下几个方面：\"},\"298\":{\"t\":\"数据一致性：事务可以确保多个操作在一个逻辑单元中执行，要么全部执行成功，要么全部失败回滚。在多个操作之间存在依赖关系的情况下，事务可以确保数据的一致性，防止数据冲突和数据丢失等问题。\"},\"299\":{\"t\":\"错误回滚：事务可以在发生错误或异常时回滚到之前的状态，保证数据的完整性。如果在多个操作中发生了错误，事务会自动将所有操作撤消，将数据回滚至操作之前的状态。\"},\"300\":{\"t\":\"并发控制：事务可以解决数据库并发访问的问题。当多个用户同时对同一数据进行操作时，事务可以通过锁机制来控制这些操作的执行顺序，以避免并发访问引起的数据冲突和错误。\"},\"301\":{\"t\":\"提高性能：事务可以优化数据库操作的性能。如果在多个操作中涉及到较多的I/O操作或网络传输，将所有操作合并到一个事务中可以减少I/O操作和网络传输，提高数据库操作的性能。\"},\"302\":{\"t\":\"因此，事务对于确保数据的正确性、完整性和一致性非常重要，是保证数据库安全和稳定运行的基本手段。\"},\"303\":{\"t\":\"默认形况下、只有出现RuntimeException才回滚异常。rollbackFor属性用于控制出现何种异常类型，回滚事务。\"},\"304\":{\"t\":\"@Transactional(rollbackFor = Exception.class)任何异常都回滚\"},\"305\":{\"t\":\"@Service public class UserServiceImpl implements UserService { @Autowired private UserMapper userMapper; @Override @Transactional(rollbackFor = Exception.class) public boolean addUser(User user) { try { // 添加用户 userMapper.insert(user); // 手动抛出异常，模拟事务回滚 throw new RuntimeException(\\\"添加用户时出现异常\\\"); } catch (Exception e) { // 捕获异常，并打印异常信息 e.printStackTrace(); // 抛出运行时异常，使事务回滚 throw new RuntimeException(\\\"添加用户时出现异常\\\"); } } } \"},\"306\":{\"c\":[\"使用指南\"]},\"307\":{\"c\":[\"Markdown\"]},\"308\":{\"h\":\"Mysql\"},\"309\":{\"t\":\"04. 基础-概述-数据模型_哔哩哔哩_bilibili\"},\"310\":{\"t\":\"utf8mb4: 编码格式\"},\"311\":{\"h\":\"insert\",\"a\":\"insert\"},\"312\":{\"t\":\"给指定字段添加值\"},\"313\":{\"t\":\"insert into 表名 (字段1，字段2..) values(值1，值2..); \"},\"314\":{\"t\":\"给指定字段批量添加值\"},\"315\":{\"t\":\"insert into 表名 (字段1，字段2..) values(值1，值2..),(值1，值2..),(值1，值2..); insert into 表名 values(值1，值2..),(值1，值2..),(值1，值2..); \"},\"316\":{\"t\":\"给全部字段添加值\"},\"317\":{\"t\":\"insert into 表名 values(值1，值2..); \"},\"318\":{\"h\":\"update\",\"a\":\"update\"},\"319\":{\"t\":\"update 表名 set 字段1=值1，字段2=值2... [where 条件]; \"},\"320\":{\"t\":\"不写条件 更新所有\"},\"321\":{\"h\":\"delete\",\"a\":\"delete\"},\"322\":{\"t\":\"delete from 表名 [where 条件]; \"},\"323\":{\"t\":\"delete from 表名 删除所有数据\"},\"324\":{\"h\":\"select\",\"a\":\"select\"},\"325\":{\"t\":\"select [字段列表] from [表名列表] where [条件列表] group by [分组字段列表] having [分组后条件列表] order by [排序字段列表] limit [分页] \"},\"326\":{\"t\":\"条件查询(where)、聚合查询(count,max,min,avg,sum)、分组查询(group by)、排序查询(order by)、分页查询(limit)\"},\"327\":{\"h\":\"基本查询\",\"a\":\"基本查询\"},\"328\":{\"t\":\"起别名\"},\"329\":{\"t\":\"select name as '姓名' from 表名; 或者 select name '姓名' from 表名; \"},\"330\":{\"t\":\"不重复\"},\"331\":{\"t\":\"select distinct name from 表名; \"},\"332\":{\"t\":\"distinct: 去重 as: 别名\"},\"333\":{\"h\":\"条件查询\",\"a\":\"条件查询\"},\"334\":{\"t\":\"比较运算符\"},\"335\":{\"t\":\"功能\"},\"336\":{\"t\":\">\"},\"337\":{\"t\":\">=\"},\"338\":{\"t\":\"<\"},\"339\":{\"t\":\"<=\"},\"340\":{\"t\":\"=\"},\"341\":{\"t\":\"<>或!=\"},\"342\":{\"t\":\"不等于\"},\"343\":{\"t\":\"between...and...\"},\"344\":{\"t\":\"某个范围之内 []\"},\"345\":{\"t\":\"in(..)\"},\"346\":{\"t\":\"列表中的值，多选一\"},\"347\":{\"t\":\"like 占位符\"},\"348\":{\"t\":\"模糊匹配（_单个字符、%任意个字符）\"},\"349\":{\"t\":\"is null\"},\"350\":{\"t\":\"为空\"},\"351\":{\"t\":\"and 或 &&\"},\"352\":{\"t\":\"并且\"},\"353\":{\"t\":\"or或 ||\"},\"354\":{\"t\":\"或者\"},\"355\":{\"t\":\"not 或 ！\"},\"356\":{\"t\":\"非\"},\"357\":{\"h\":\"聚合函数\",\"a\":\"聚合函数\"},\"358\":{\"t\":\"null 不参与计算\"},\"359\":{\"t\":\"sum\"},\"360\":{\"t\":\"select sum(*) from 表名; \"},\"361\":{\"t\":\"avg\"},\"362\":{\"t\":\"select agv(age) from 表名; \"},\"363\":{\"t\":\"max | min\"},\"364\":{\"t\":\"select max(age) from 表名; select min(age) from 表名; \"},\"365\":{\"h\":\"分组查询\",\"a\":\"分组查询\"},\"366\":{\"t\":\"分组后的列只有待分组的字段和聚合函数\"},\"367\":{\"t\":\"study\"},\"368\":{\"t\":\"select sex,count(sex) from s group by sex having avg(age) > 50; \"},\"369\":{\"h\":\"排序查询\",\"a\":\"排序查询\"},\"370\":{\"t\":\"ASC 升序（默认）\"},\"371\":{\"t\":\"DESC 降序\"},\"372\":{\"t\":\"多字段排序，先按第一个排序，然后相同的按照第二个方式排序\"},\"373\":{\"t\":\"select * from s order by age asc , id desc; \"},\"374\":{\"h\":\"分页查询\",\"a\":\"分页查询\"},\"375\":{\"t\":\"select * from 表名 limit 起始索引，查询记录数 \"},\"376\":{\"t\":\"起始索引从0开始， 起始索引 = （查询页码-1）* 每页记录数\"},\"377\":{\"t\":\"select * from s limit 0,10; select * from s limit 10,10; \"},\"378\":{\"h\":\"函数\",\"a\":\"函数\"},\"379\":{\"h\":\"RabbitMQ\"},\"380\":{\"t\":\"安装地址 Docker安装RabbitMQ详细步骤 - 逊老头 - 博客园 (cnblogs.com) 学习地址 MQ的引言和不同MQ的特点_哔哩哔哩_bilibili\"},\"381\":{\"h\":\"simple简单模式\",\"a\":\"simple简单模式\"},\"382\":{\"t\":\"study\"},\"383\":{\"t\":\"消息产生者将消息放入队列\"},\"384\":{\"t\":\"消息的消费者(consumer) 监听(while) 消息队列,如果队列中有消息,就消费掉,消息被拿走后,自动从队列中删除(隐患 消息可能没有被消费者正确处理,已经从队列中消失了,造成消息的丢失)应用场景:聊天(中间有一个过度的服务器;p端,c端)\"},\"385\":{\"h\":\"生产消息\",\"a\":\"生产消息\"},\"386\":{\"t\":\"//生产者 @Test void send() throws IOException, TimeoutException { // 创建MQ的连接工厂对象 ConnectionFactory connectionFactory = new ConnectionFactory(); // 设置连接mq主机 connectionFactory.setHost(\\\"127.0.0.1\\\"); // 端口号 connectionFactory.setPort(5672); // 设置连接哪一个虚拟主机 connectionFactory.setVirtualHost(\\\"/ems\\\"); // 设置用户名和密码 connectionFactory.setUsername(\\\"ems\\\"); connectionFactory.setPassword(\\\"ems\\\"); // 获取连接对象 Connection connection = connectionFactory.newConnection(); // 获取连接中的通道 Channel channel = connection.createChannel(); // 通道绑定对应的消息队列 // s：队列名称 b:队列是否持久化 b1:是否独占队列(其他的连接不可用) // b2: 是否消费结束后自动删除 map: channel.queueDeclare(\\\"hello\\\",false,false,false,null); // 发布消息 // s： 交换机名称 s1:通道名称 b: MessageProperties.MINIMAL_PERSISTENT_BASIC（ 重启消息也在 ) // 最后：内容 channel.basicPublish(\\\"\\\",\\\"hello\\\",null,\\\"hello rabbit\\\".getBytes()); channel.close(); connection.close(); } \"},\"387\":{\"h\":\"消费消息\",\"a\":\"消费消息\"},\"388\":{\"t\":\" // 消费者 @Test void getMessage() throws IOException, TimeoutException { // 创建MQ的连接工厂对象 ConnectionFactory connectionFactory = new ConnectionFactory(); // 设置连接mq主机 connectionFactory.setHost(\\\"127.0.0.1\\\"); // 端口号 connectionFactory.setPort(5672); // 设置连接哪一个虚拟主机 connectionFactory.setVirtualHost(\\\"/ems\\\"); // 设置用户名和密码 connectionFactory.setUsername(\\\"ems\\\"); connectionFactory.setPassword(\\\"ems\\\"); // 获取连接对象 Connection connection = connectionFactory.newConnection(); // 获取连接中的通道 Channel channel = connection.createChannel(); // 通道绑定对应的消息队列 // s：队列名称 b:队列是否持久化 b1:是否独占队列(其他的连接不可用) // b2: 是否消费结束后自动删除 map: channel.queueDeclare(\\\"hello\\\",false,false,false,null); // 消费消息 // s： 交换机名称 s1:开始消息的自动确认机制 最后：消费时的回调接口 channel.basicConsume(\\\"hello\\\",true, new DefaultConsumer(channel){ @Override public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException { System.out.println(\\\"new String (body) = \\\" + new String (body)); } }); //不关闭 为了一直消费信息 // channel.close(); // connection.close(); } \"},\"389\":{\"h\":\"实现工具类\",\"a\":\"实现工具类\"},\"390\":{\"t\":\"public class RabbitMQConnection { private static ConnectionFactory connectionFactory; //静态代码块 只执行一次 static { connectionFactory = new ConnectionFactory(); connectionFactory.setHost(\\\"127.0.0.1\\\"); // 设置连接mq主机 connectionFactory.setPort(5672);// 端口号 connectionFactory.setVirtualHost(\\\"/ems\\\");// 设置连接哪一个虚拟主机 connectionFactory.setUsername(\\\"ems\\\");// 设置用户名和密码 connectionFactory.setPassword(\\\"ems\\\"); } // 获取 连接对象方法 public static Connection getConnection() throws IOException, TimeoutException { // 获取连接对象 return connectionFactory.newConnection(); } // 关闭通道和连接 public void closeChannelAndConnection(Connection con, Channel channel){ try { if(con!=null)con.close(); if(channel!=null)channel.close(); } catch (IOException | TimeoutException e) { e.printStackTrace(); } } } \"},\"391\":{\"h\":\"任务模型\",\"a\":\"任务模型\"},\"392\":{\"t\":\"study\"},\"393\":{\"t\":\"两个消费者 消费同一个队列 默认会平均分配内容 叫做循环\"},\"394\":{\"t\":\"目前要求能者多劳！！！\"},\"395\":{\"t\":\"设置通道一次只能消费一个消息\"},\"396\":{\"t\":\"关闭消息的自动确认，开始手动确认消息\"},\"397\":{\"h\":\"Consumer\",\"a\":\"consumer\"},\"398\":{\"t\":\"public class consumer2 { public static void main(String[] args) throws IOException, TimeoutException { Connection connection = RabbitMQConnection.getConnection(); Channel channel = connection.createChannel(); channel.queueDeclare(\\\"word\\\",false,false,false,null); channel.basicQos(1);// 每次消费一个 // false 关闭自动确定 channel.basicConsume(\\\"word\\\",false, new DefaultConsumer(channel){ @SneakyThrows @Override public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException { Thread.sleep(1000);//模拟执行的漫 System.out.println(\\\"new String (body) = \\\" + new String (body)); /** * 参数 * - 手动确认的表示 * - false 是否开启多个消息同时确认 */ channel.basicAck(envelope.getDeliveryTag(),false); } }); } } \"},\"399\":{\"h\":\"广播\",\"a\":\"广播\"},\"400\":{\"t\":\" 流程如下：\"},\"401\":{\"t\":\"有多个消费者\"},\"402\":{\"t\":\"每个消费者有自己的队列\"},\"403\":{\"t\":\"每个队列都绑定了交换机\"},\"404\":{\"t\":\"生产者只能向交换机发送消息，再有交换机发给队列，生产者无权决定\"},\"405\":{\"t\":\"交换机吧消息发给和自己绑定的队列\"},\"406\":{\"t\":\"队列中的消费者都可以拿到消息\"},\"407\":{\"h\":\"生产者\",\"a\":\"生产者\"},\"408\":{\"t\":\"public class producer { public static void main(String[] args) throws IOException, TimeoutException { // 创建连接对象 Connection connection = RabbitMQConnection.getConnection(); Channel channel = connection.createChannel(); // 将通道声明到交换机 (交换机名称，类型) channel.exchangeDeclare(\\\"one\\\",\\\"fanout\\\"); channel.basicPublish(\\\"one\\\",\\\"\\\",null,\\\"hello world\\\".getBytes()); channel.close(); connection.close(); } } \"},\"409\":{\"h\":\"消费者\",\"a\":\"消费者\"},\"410\":{\"t\":\"public class consumerOne { public static void main(String[] args) throws IOException, TimeoutException { Connection connection = RabbitMQConnection.getConnection(); Channel channel = connection.createChannel(); // 通道绑定交换机 channel.exchangeDeclare(\\\"one\\\",\\\"fanout\\\"); // 临时队列 String queue = channel.queueDeclare().getQueue(); // 交换机和队列绑定 channel.queueBind(queue,\\\"one\\\",\\\"\\\"); // 消费消息 channel.basicConsume(queue,true,new DefaultConsumer(channel){ @Override public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException { System.out.println(\\\"new String(body) = \\\" + new String(body)); } }); } } \"},\"411\":{\"h\":\"路由模型\",\"a\":\"路由模型\"},\"412\":{\"h\":\"直连\",\"a\":\"直连\"},\"413\":{\"t\":\"Description\"},\"414\":{\"t\":\"在fanout的模式下，一条消息，会被订阅的队列消费。但有时我们希望不同的消息被不同的队列消费，\"},\"415\":{\"t\":\"此时就用到了 Direct类型的Exchange\"},\"416\":{\"t\":\"队列与交换机绑定，不再是任意绑定了，而是要指定一个RoutingKey(路由key)\"},\"417\":{\"t\":\"消息 的发送方在向exchang发送消息时，也必须要指定一个RoutingKey\"},\"418\":{\"t\":\"Exchange在发送消息时，会根据指定的RoutingKey进行判断，只有队列的RoutingKey与消息的RoutingKey完全一致，才会收到消息\"},\"419\":{\"h\":\"生产者\",\"a\":\"生产者-1\"},\"420\":{\"t\":\"public class producer { public static void main(String[] args) throws IOException, TimeoutException { Connection connection = RabbitMQConnection.getConnection(); Channel channel = connection.createChannel(); channel.exchangeDeclare(\\\"name_direct\\\",\\\"direct\\\"); String RoutingKey = \\\"warn\\\"; channel.basicPublish(\\\"name_direct\\\", RoutingKey,null, \\\"这是direct发布于的\\\".getBytes()); channel.close(); connection.close(); } } \"},\"421\":{\"h\":\"消费者\",\"a\":\"消费者-1\"},\"422\":{\"t\":\"public class consumerOne { public static void main(String[] args) throws IOException, TimeoutException { Connection connection = RabbitMQConnection.getConnection(); Channel channel = connection.createChannel(); // 通道绑定交换机 channel.exchangeDeclare(\\\"name_direct\\\",\\\"direct\\\"); // 临时队列 String queue = channel.queueDeclare().getQueue(); // 交换机和队列绑定和 RoutingKey channel.queueBind(queue,\\\"name_direct\\\",\\\"error\\\"); channel.queueBind(queue,\\\"name_direct\\\",\\\"info\\\"); channel.queueBind(queue,\\\"name_direct\\\",\\\"warn\\\"); // 消费消息 channel.basicConsume(queue,true,new DefaultConsumer(channel){ @Override public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException { System.out.println(\\\"error \\\" + new String(body)); } }); } } \"},\"423\":{\"t\":\"public class consumerTwo { public static void main(String[] args) throws IOException, TimeoutException { Connection connection = RabbitMQConnection.getConnection(); Channel channel = connection.createChannel(); // 通道绑定交换机 channel.exchangeDeclare(\\\"name_direct\\\",\\\"direct\\\"); // 临时队列 String queue = channel.queueDeclare().getQueue(); // 交换机和队列绑定和 RoutingKey channel.queueBind(queue,\\\"name_direct\\\",\\\"warn\\\"); // 消费消息 channel.basicConsume(queue,true,new DefaultConsumer(channel){ @Override public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException { System.out.println(\\\"info \\\" + new String(body)); } }); } } \"},\"424\":{\"h\":\"动态\",\"a\":\"动态\"},\"425\":{\"t\":\"Description\"},\"426\":{\"t\":\"Topic类型的Exchange与Direct 相比，都是可以根据Routinghey把消息路由到不同的队列。只不过Topic 类型Exchange可以让队列在绑定Routing key的时候使用通配符!这种模型Routingkey一般都是由一个或多个单词组成，多个单词之间以\\\". \\\"分割，例如:item.insert\"},\"427\":{\"t\":\"* 匹配不多不少恰好一个单词\"},\"428\":{\"t\":\"admin.* --> admin.hh.abc | admin.hh\"},\"429\":{\"t\":\"# 匹配一个或多个单词\"},\"430\":{\"t\":\"admin.# --> admin.hh\"},\"431\":{\"h\":\"代码\",\"a\":\"代码\"},\"432\":{\"t\":\"public class producer { public static void main(String[] args) throws IOException, TimeoutException { Connection connection = RabbitMQConnection.getConnection(); Channel channel = connection.createChannel(); channel.exchangeDeclare(\\\"name_topic\\\",\\\"topic\\\"); String RoutingKey = \\\"warn.js\\\"; channel.basicPublish(\\\"name_direct\\\", RoutingKey,null, \\\"这是direct发布于的\\\".getBytes()); channel.close(); connection.close(); } } \"},\"433\":{\"t\":\"public class consumerOne { public static void main(String[] args) throws IOException, TimeoutException { Connection connection = RabbitMQConnection.getConnection(); Channel channel = connection.createChannel(); // 通道绑定交换机 channel.exchangeDeclare(\\\"name_topic\\\",\\\"topic\\\"); // 临时队列 String queue = channel.queueDeclare().getQueue(); // 交换机和队列绑定和 RoutingKey channel.queueBind(queue,\\\"name_topic\\\",\\\"error.*\\\"); //error.xxx | error.aaa channel.queueBind(queue,\\\"name_topic\\\",\\\"info.#\\\");//info.gag.agsdga | info.gas.gas.g.asg. channel.queueBind(queue,\\\"name_topic\\\",\\\"warn\\\"); // 消费消息 channel.basicConsume(queue,true,new DefaultConsumer(channel){ @Override public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException { System.out.println(\\\"error \\\" + new String(body)); } }); } } \"},\"434\":{\"h\":\"spring boot 整合\",\"a\":\"spring-boot-整合\"},\"435\":{\"t\":\" <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-amqp</artifactId> </dependency> \"},\"436\":{\"t\":\"spring: rabbitmq: host: 127.0.0.1 port: 5672 username: ems password: ems virtual-host: /ems \"},\"437\":{\"h\":\"Test\",\"a\":\"test\"},\"438\":{\"t\":\"@SpringBootTest public class rabbitMQTest { @Autowired private RabbitTemplate rabbitTemplate; // hello @Test void test(){ rabbitTemplate.convertAndSend(\\\"hello\\\",\\\"hello world\\\"); } // work @Test void work(){ for (int i = 0; i < 10; i++) { rabbitTemplate.convertAndSend(\\\"work\\\",\\\"hello work\\\"); } } //fanout @Test void fanout(){ rabbitTemplate.convertAndSend(\\\"fanout\\\",\\\"\\\",\\\"hello fanout\\\"); } // route @Test void direct(){ rabbitTemplate.convertAndSend(\\\"direct\\\",\\\"warn\\\",\\\"hello direct\\\"); } // 动态路由 @Test void Topic(){ rabbitTemplate.convertAndSend(\\\"topic\\\",\\\"user.hh.gash\\\",\\\"hello topic\\\"); } } \"},\"439\":{\"h\":\"简单\",\"a\":\"简单\"},\"440\":{\"t\":\"@Component //默认队列持久化 非独占 不是autodelete @RabbitListener(queuesToDeclare = @Queue(value = \\\"hello\\\")) public class RabbitMQ { // 第一种模式 @RabbitHandler public void recrive(String message){ System.out.println(\\\"message = \\\" + message); } } \"},\"441\":{\"h\":\"任务\",\"a\":\"任务\"},\"442\":{\"t\":\"@Component public class workConsumer { //公平消费 @RabbitListener(queuesToDeclare = @Queue(\\\"work\\\")) public void work1(String message){ System.out.println(\\\"message1 = \\\" + message); } @RabbitListener(queuesToDeclare = @Queue(\\\"work\\\")) public void work2(String message){ System.out.println(\\\"message2 = \\\" + message); } } \"},\"443\":{\"h\":\"广播\",\"a\":\"广播-1\"},\"444\":{\"t\":\"@Component public class fanoutConsumer { @RabbitListener(bindings = { @QueueBinding( value = @Queue, exchange = @Exchange(value = \\\"fanout\\\",type = \\\"fanout\\\") ) }) public void fanout1(String message){ System.out.println(\\\"message1 = \\\" + message); } @RabbitListener(bindings = { @QueueBinding( value = @Queue, exchange = @Exchange(value = \\\"fanout\\\",type = \\\"fanout\\\") ) }) public void fanout2(String message){ System.out.println(\\\"message2 = \\\" + message); } } \"},\"445\":{\"h\":\"静态路由\",\"a\":\"静态路由\"},\"446\":{\"t\":\"@Component public class routeConsumer { @RabbitListener(bindings = { @QueueBinding( value = @Queue, exchange = @Exchange(value = \\\"direct\\\",type = \\\"direct\\\"), key = {\\\"info\\\",\\\"warn\\\"} ) }) public void route1(String message){ System.out.println(\\\"message1 = \\\" + message); } @RabbitListener(bindings = { @QueueBinding( value = @Queue, exchange = @Exchange(value = \\\"direct\\\",type = \\\"direct\\\"), key = {\\\"warn\\\",\\\"message\\\"} ) }) public void route2(String message){ System.out.println(\\\"message2 = \\\" + message); } } \"},\"447\":{\"h\":\"动态路由\",\"a\":\"动态路由\"},\"448\":{\"t\":\"@Component public class topicConsumer { @RabbitListener(bindings = { @QueueBinding( value = @Queue, exchange = @Exchange(value = \\\"topic\\\",type = \\\"topic\\\"), key = {\\\"user.*\\\",\\\"user.#\\\"} ) }) public void topic1(String message){ System.out.println(\\\"message1 = \\\" + message); } @RabbitListener(bindings = { @QueueBinding( value = @Queue, exchange = @Exchange(value = \\\"topic\\\",type = \\\"topic\\\"), key = {\\\"user.*\\\",\\\"message\\\"} ) }) public void topic2(String message){ System.out.println(\\\"message2 = \\\" + message); } } \"},\"449\":{\"h\":\"延迟队列\",\"a\":\"延迟队列\"},\"450\":{\"t\":\"安装插件以及使用 config\"},\"451\":{\"t\":\"@Configuration public class TestDelayQueueConfig { public static final String DEAD_EXCHANGE = \\\"delay_exchange\\\"; public static final String DEAD_QUEUE = \\\"delay_queue\\\"; public static final String DEAD_ROUTING = \\\"delay_key\\\"; @Bean public CustomExchange delayExchange() { Map<String, Object> args = new HashMap<String, Object>(); args.put(\\\"x-delayed-type\\\", \\\"direct\\\"); return new CustomExchange(DEAD_EXCHANGE, \\\"x-delayed-message\\\", true, false, args); } /** * 延迟消息队列 * @return */ @Bean public Queue delayQueue() { return new Queue(DEAD_QUEUE, true); } @Bean public Binding deplyBinding() { return BindingBuilder .bind(delayQueue()) .to(delayExchange()) .with(DEAD_ROUTING) .noargs(); } } \"},\"452\":{\"h\":\"生产者\",\"a\":\"生产者-2\"},\"453\":{\"t\":\"@Component public class DeplyProducer { @Resource RabbitTemplate rabbitTemplate; public void send(String msg, Integer delayTime){ // MessageProperties messageProperties = new MessageProperties(); // messageProperties.setDelay(delayTime); // Message message = new Message(msg.getBytes(), messageProperties); // rabbitTemplate.convertAndSend(DEAD_EXCHANGE, DEAD_ROUTING, message); rabbitTemplate.convertAndSend(DEAD_EXCHANGE, DEAD_ROUTING, msg, message1 -> { message1.getMessageProperties().setDelay(delayTime); return message1;} ); } } \"},\"454\":{\"h\":\"消费者\",\"a\":\"消费者-2\"},\"455\":{\"t\":\"@Component public class DeplyConsumer { @RabbitListener(queues = DEAD_QUEUE) public void onMessage(String msg) { System.out.println(\\\"收到信息了 msg = \\\" + msg); } } \"},\"456\":{\"c\":[\"使用指南\"]},\"457\":{\"c\":[\"Markdown\"]},\"458\":{\"h\":\"Redis\"},\"459\":{\"t\":\"Redis详细解释\"},\"460\":{\"h\":\"安装\",\"a\":\"安装\"},\"461\":{\"t\":\"sudo apt update sudo apt install redis-server redis-cli 启动命令 \"},\"462\":{\"h\":\"基本命令\",\"a\":\"基本命令\"},\"463\":{\"t\":\"bdsize 当前数据库大小 select 数据库切换 flushdb 清空当前数据库 flushall 清空所有数据库 type name 查看key的类型 \"},\"464\":{\"h\":\"五大数据类型\",\"a\":\"五大数据类型\"},\"465\":{\"h\":\"Redsi-Key\",\"a\":\"redsi-key\"},\"466\":{\"t\":\"keys * 打印所有的key set name hhh 设置k-v(\\\"name\\\",\\\"hh\\\") get name 打印name的value exists name 判断key是否存在 move name 1 将name移入到数据库1中 expire name 5 设置name 5s 过期 ttl name 查看name剩余过期时间 \"},\"467\":{\"h\":\"String\",\"a\":\"string\"},\"468\":{\"t\":\"append name \\\"world\\\" #value后面增加world strlen name #value的长度 incr age #实现自增 incrby age 20 #增加20 decr age #实现自减 dectby age 20 #减少20 getrange name 0 3 #串的截取 mget mset #批量set或get setnx #如果存在则不创建 getset #找不到就创建 找到就设置 \"},\"469\":{\"h\":\"List\",\"a\":\"list\"},\"470\":{\"t\":\"lpush list hello #往list中加入hello lrange list 0 -1 #打印所有 lpop/rpop list #删除左右头部 lindex list 1 # 打印下标1的值 llen list # 长度 lrem list 1 hello # 删除一个hello ltrim list 2 4 # 截取 剩余2-4 lset list 0 hello # 指定下标值替换为hello \"},\"471\":{\"h\":\"set\",\"a\":\"set\"},\"472\":{\"t\":\"sadd: 向集合中添加元素。例如：sadd myset \\\"element1\\\" \\\"element2\\\" smembers: 返回集合中所有元素。例如：smembers myset sismember: 判断元素是否在集合中。例如：sismember myset \\\"element1\\\" scard: 返回集合中元素的数量。例如：scard myset srem: 从集合中删除元素。例如：srem myset \\\"element1\\\" spop: 从集合中弹出一个随机元素。例如：spop myset sunion: 返回多个集合的并集。例如：sunion set1 set2 set3 sdiff: 返回多个集合的差集。例如：sdiff set1 set2 set3 sinter: 返回多个集合的交集。例如：sinter set1 set2 set3 srandmember: 随机返回集合中的一个元素。例如：srandmember myset \"},\"473\":{\"h\":\"Hash\",\"a\":\"hash\"},\"474\":{\"t\":\"hset key field value : 在key对应的hash中设置field对应的value。如果key不存在，则新建一个。 例如:hset user:1 name \\\"tom\\\" hget key field : 获取key对应的hash中field对应的value。 例如: hget user:1 name hgetall key : 获取key对应的hash中所有的键值对。 例如: hgetall user:1 hdel key field [field ...] : 删除key对应的hash中的一个或多个field。 例如: hdel user:1 name hlen key : 获取key对应的hash中field的数量。 例如: hlen user:1 hexists key field : 检查key对应的hash中是否存在field。 例如: hexists user:1 name hkeys key : 获取key对应的hash中所有的field。 例如: hkeys user:1 hvals key : 获取key对应的hash中所有的value。 例如: hvals user:1 这里是一些基本的Redis Hash命令。实际上还有许多其他的命令可供使用，如hincrby、hmset、hmget等。 \"},\"475\":{\"h\":\"Sorted sets\",\"a\":\"sorted-sets\"},\"476\":{\"t\":\"zadd: 向有序集合中添加元素，支持指定分数。例如：zadd mysortedset 1 \\\"element1\\\" 2 \\\"element2\\\" zrange: 返回有序集合中指定范围的元素。例如：zrange mysortedset 0 -1 zrangebyscore: 返回有序集合中指定分数范围的元素。例如：zrangebyscore mysortedset 1 2 zrank: 返回有序集合中指定元素的排名。例如：zrank mysortedset \\\"element1\\\" zrem: 从有序集合中删除元素。例如：zrem mysortedset \\\"element1\\\" zcount: 返回有序集合中指定分数范围的元素数量。例如：zcount mysortedset 1 2 zincrby: 对有序集合中指定元素的分数进行增加/减少操作。例如：zincrby mysortedset 2 \\\"element1\\\" zcard: 返回有序集合中元素的数量。例如：zcard mysortedset zunionstore: 计算多个有序集合的并集，并将结果存储到新的有序集合中。例如：zunionstore new_sortedset 2 sortedset1 sortedset2 zinterstore: 计算多个有序集合的交集，并将结果存储到新的有序集合中。例如：zinterstore new_sortedset 2 sortedset1 sortedset2 \"},\"477\":{\"h\":\"序列化\",\"a\":\"序列化\"},\"478\":{\"t\":\"Redis是一种内存数据库，为了更有效地使用内存，它需要对存储的数据进行序列化，使数据占用的空间更小。序列化是指将数据结构转换为字节流的过程。\"},\"479\":{\"t\":\"Redis支持多种序列化格式，如二进制协议（Redis默认使用的序列化格式）、JSON、MessagePack等。二进制协议是Redis自定义的序列化格式，它可以最大程度地减少数据占用的空间。JSON和MessagePack是常用的序列化格式，它们可以方便地与其他语言和系统进行交互。\"},\"480\":{\"h\":\"实现\",\"a\":\"实现\"},\"481\":{\"t\":\"stu.java\"},\"482\":{\"t\":\"public class stu implements Serializable { private Integer id; private String name; } \"},\"483\":{\"t\":\"RedisConfig.java\"},\"484\":{\"t\":\"@Configuration public class RedisConfig{ @Bean //配置redisTemplate // 默认情况下的模板只能支持 RedisTemplate<String,String>， // 只能存入字符串，很多时候，我们需要自定义 RedisTemplate ，设置序列化器 public RedisTemplate<String,Object> redisTemplate(RedisConnectionFactory factory){ RedisTemplate<String,Object> template = new RedisTemplate <>(); template.setConnectionFactory(factory); Jackson2JsonRedisSerializer jackson2JsonRedisSerializer = new Jackson2JsonRedisSerializer(Object.class); ObjectMapper om = new ObjectMapper(); om.setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.ANY); om.enableDefaultTyping(ObjectMapper.DefaultTyping.NON_FINAL); jackson2JsonRedisSerializer.setObjectMapper(om); StringRedisSerializer stringRedisSerializer = new StringRedisSerializer(); // key采用String的序列化方式 template.setKeySerializer(stringRedisSerializer); template.setValueSerializer(stringRedisSerializer); // hash的key也采用String的序列化方式 template.setHashKeySerializer(stringRedisSerializer); // value序列化方式采用jackson template.setValueSerializer(jackson2JsonRedisSerializer); // hash的value序列化方式采用jackson template.setHashValueSerializer(jackson2JsonRedisSerializer); template.afterPropertiesSet(); return template; } } \"},\"485\":{\"h\":\"测试\",\"a\":\"测试\"},\"486\":{\"t\":\" @Autowired private RedisTemplate redisTemplate; @Test void contextLoads() { stu stu = new stu(1, \\\"liming\\\"); redisTemplate.opsForValue().set(\\\"hh\\\",stu); System.out.println(redisTemplate.opsForValue().get(\\\"hh\\\")); } \"},\"487\":{\"h\":\"持久化\",\"a\":\"持久化\"},\"488\":{\"h\":\"RDB\",\"a\":\"rdb\"},\"489\":{\"t\":\"RDB 是 Redis Database 文件的缩写，它是 Redis 的默认数据持久化方式。RDB 文件是在指定的时间间隔内（通常是每几秒或几分钟）自动生成的快照文件。这种方式可以在损失一定数据的情况下更快地恢复数据库。\"},\"490\":{\"h\":\"触发\",\"a\":\"触发\"},\"491\":{\"t\":\"保存配置： -- save：只管保存，其他不管，全部阻塞。 -- bgsave：Redis 会在后台异步进行快照操作，快照同时还可以响应客户端请求。 -- lastsave：获取最后一次成功执行快照的时间。\"},\"492\":{\"t\":\"执行 flushall 命令，也会产生 dump.rdb 文件，但里面是空的，无意义 。\"},\"493\":{\"t\":\"退出的时候也会产生 dump.rdb 文件。\"},\"494\":{\"h\":\"AOF\",\"a\":\"aof\"},\"495\":{\"t\":\"AOF 是 Append-Only File 的缩写，它是 Redis 的另一种数据持久化方式。AOF 文件是将 Redis 所有写操作命令追加到文件的过程，因此可以保证数据的完整性。\"},\"496\":{\"t\":\"# 是否以append only模式作为持久化方式，默认使用的是rdb方式持久化，这种方式在许多应用中已经足够用了 appendonly no # appendfilename AOF 文件名称 appendfilename \\\"appendonly.aof\\\" # appendfsync aof持久化策略的配置： # no：不执行fsync，由操作系统保证数据同步到磁盘，速度最快。 # always：每次写入都执行fsync，以保证数据同步到磁盘。 # everysec：每秒执行一次fsync，可能会导致丢失这1s数据。 appendfsync everysec # 重写时是否可以运用Appendfsync，用默认no即可，保证数据安全性 No-appendfsync-on-rewrite # 设置重写的基准值 Auto-aof-rewrite-min-size # 设置重写的基准值 Auto-aof-rewrite-percentage \"},\"497\":{\"c\":[\"使用指南\"]},\"498\":{\"c\":[\"Markdown\"]},\"499\":{\"h\":\"Spring SpringMVC\"},\"500\":{\"h\":\"Spring\",\"a\":\"spring\"},\"501\":{\"t\":\"Spring-01-初识Spring_哔哩哔哩_bilibili\"},\"502\":{\"h\":\"IoC\",\"a\":\"ioc\"},\"503\":{\"t\":\"Ioc—Inversion of Control\"},\"504\":{\"t\":\"一种思想。 创建对象、管理对象\"},\"505\":{\"t\":\"一般对象都是直接通过new出来 ，交由IoC管理后，IoC容器来控制对象的创建\"},\"506\":{\"t\":\"配置实在是多\"},\"507\":{\"t\":\"pom.xml\"},\"508\":{\"t\":\"<dependency> <!-- 1.导入--> <groupId>org.springframework</groupId> <artifactId>spring-context</artifactId> <version>5.3.23</version> </dependency> \"},\"509\":{\"t\":\"applicationContext.xml\"},\"510\":{\"t\":\"<!-- 2.配置Bean--> <bean id=\\\"bookDao\\\" class=\\\"com.beink.dao.Impl.bookDaoImpl\\\"/> <bean id=\\\"bookService\\\" class=\\\"com.beink.service.Impl.bookServiceImpl\\\"/> \"},\"511\":{\"t\":\"Main.java\"},\"512\":{\"t\":\"public class Main { public static void main(String[] args) { // 3.获取容器 ApplicationContext atx = new ClassPathXmlApplicationContext(\\\"applicationContext.xml\\\"); // 4. 获取bean bookDao bookDao = (bookDao) atx.getBean(\\\"bookDao\\\"); bookDao.save(); // 等同于 bookDao bookDao1 = new bookDaoImpl(); bookDao1.save(); } } \"},\"513\":{\"h\":\"Bean\",\"a\":\"bean\"},\"514\":{\"t\":\"被构造 调用的是无参构造 生命周期： ``` public void init(){ System.out.println(\\\"init\\\"); } public void destory(){ System.out.println(\\\"destory\\\"); } 配置 <bean init-method=\\\"init\\\" destroy-method=\\\"destory\\\"/> 或者 直接 implements InitializingBean, DisposableBean 同样效果 ``` \"},\"515\":{\"h\":\"依赖注入\",\"a\":\"依赖注入\"},\"516\":{\"h\":\"setter\",\"a\":\"setter\"},\"517\":{\"t\":\".xml <bean id=\\\"bookDao\\\" class=\\\"com.beink.dao.Impl.bookDaoImpl\\\"> <property name=\\\"a\\\" value=\\\"123\\\"/> <property name=\\\"s\\\" value=\\\"true\\\"/> </bean> Impl.java private String s; private int a; \"},\"518\":{\"h\":\"构造器\",\"a\":\"构造器\"},\"519\":{\"t\":\"<bean id=\\\"bookDao\\\" class=\\\"com.beink.dao.Impl.bookDaoImpl\\\"> <constructor-arg name=\\\"a\\\" value=\\\"6\\\"/> <constructor-arg name=\\\"s\\\" value=\\\"true\\\"/> </bean> <bean id=\\\"bookService\\\" class=\\\"com.beink.service.Impl.bookServiceImpl\\\"> <!--red对应ID--> <constructor-arg name=\\\"bookdao\\\" ref=\\\"bookDao\\\"/> </bean> \"},\"520\":{\"t\":\"依赖注入\"},\"521\":{\"t\":\"private bookDao book_dao; public void setBookdao(bookDao bookdao){ this.book_dao = bookdao; } \"},\"522\":{\"t\":\"一般 注入\"},\"523\":{\"t\":\"private String s; private int a; public bookDaoImpl(String s, int a) { this.s = s; this.a = a; } \"},\"524\":{\"h\":\"集合注入\",\"a\":\"集合注入\"},\"525\":{\"t\":\" <bean id=\\\"bookDao\\\" class=\\\"com.beink.dao.Impl.bookDaoImpl\\\"> <property name=\\\"list\\\"> <array> <value>hello </value> <value>world</value> </array> </property> <property name=\\\"map\\\"> <map> <entry key=\\\"hello\\\" value=\\\"world\\\"></entry> </map> </property> </bean> \"},\"526\":{\"h\":\"注解开发\",\"a\":\"注解开发\"},\"527\":{\"t\":\"@Component(\\\"名字\\\") 定义Bean\"},\"528\":{\"t\":\"---@Service\"},\"529\":{\"t\":\"---@Controller(同样效果 只是便于理解)\"},\"530\":{\"t\":\"---@Repository\"},\"531\":{\"t\":\"@Configuration 设置位配置类 类似于applicationContext.xml @ComponentScan(\\\"com.beink\\\") 扫描路径 自动装配到spring的bean @Scope(\\\"singleton\\\") 单例 @PostConstruct 生命周期-初始化 @PreDestroy 生命周期-销毁 @Autowired 自动装配 === private bookDao bookdao = new bookDaoImpl(); @Value(\\\"${name}\\\") 简单类型注入 private String s; @PropertySource(\\\"xxx.yml\\\") 数据源 内容--（name=hello world） \"},\"532\":{\"h\":\"AOP\",\"a\":\"aop\"},\"533\":{\"t\":\"不改变原始设计 将功能增强\"},\"534\":{\"h\":\"举例\",\"a\":\"举例\"},\"535\":{\"t\":\"@Component @Aspect //这是个aop public class MyAop { // 在哪里执行 @Pointcut(\\\"execution(void com.beink.dao.bookDao.save())\\\") private void ss(){} // 绑定 @AfterReturning(\\\"ss()\\\") public void set(){ System.out.println(\\\"AOP\\\"); } } \"},\"536\":{\"h\":\"切入点表达式\",\"a\":\"切入点表达式\"},\"537\":{\"t\":\"使用*通配符即可 @Pointcut(\\\"execution( * * com.beink.dao.*)\\\") \"},\"538\":{\"h\":\"通知类型\",\"a\":\"通知类型\"},\"539\":{\"t\":\"public class MyAop { @Pointcut(\\\"execution(void com.beink.dao.bookDao.save())\\\") private void ss(){} @AfterReturning(\\\"ss()\\\") public void set(){ System.out.println(\\\"AOP\\\"); } // 环绕 @Around(\\\"ss()\\\") public void round(ProceedingJoinPoint e) throws Throwable { System.out.println(\\\"qian\\\"); e.proceed();/*调用原始操作*/ System.out.println(\\\"hou\\\"); // 如果有返回值 返回对象必须是Object } // @AfterReturning // @AfterThrowing } \"},\"540\":{\"h\":\"获取通知数据\",\"a\":\"获取通知数据\"},\"541\":{\"t\":\"public class MyAop { @Pointcut(\\\"execution(void com.beink.dao.bookDao.save(..))\\\") private void ss(){} // 环绕 @Around(\\\"ss()\\\") public Object round(ProceedingJoinPoint e) throws Throwable { Object[] args = e.getArgs(); e.proceed();/*调用原始操作*/ System.out.println(Arrays.toString(args));/*获取参数*/ // 修改参数 args[0] = 666; Object ret = e.proceed(args); return ret; } } \"},\"542\":{\"h\":\"SpringMVC\",\"a\":\"springmvc\"},\"543\":{\"t\":\"SpringMVC-02-SpringMVC入门案例_哔哩哔哩_bilibili\"},\"544\":{\"h\":\"创建使用\",\"a\":\"创建使用\"},\"545\":{\"t\":\"pom.xml\"},\"546\":{\"t\":\" <dependencies> <dependency> <groupId>javax.servlet</groupId> <artifactId>javax.servlet-api</artifactId> <version>4.0.1</version> <scope>provided</scope> </dependency> <dependency> <groupId>org.springframework</groupId> <artifactId>spring-webmvc</artifactId> <version>5.3.23</version> </dependency> </dependencies> \"},\"547\":{\"t\":\"userControler类\"},\"548\":{\"t\":\"@Controller //定义Bean public class userController { // 访问路径 @RequestMapping(\\\"/save\\\") // 返回值类型 @ResponseBody public String save(){ System.out.println(\\\"hhh\\\"); return \\\"hello world\\\"; } } \"},\"549\":{\"t\":\"config类\"},\"550\":{\"t\":\"servletinitConfig.java //定义一个servlet启动配置，在里面加载spring配置 public class servletinitConfig extends AbstractDispatcherServletInitializer { // 加载springMVC配置 @Override protected WebApplicationContext createServletApplicationContext() { AnnotationConfigWebApplicationContext ctx = new AnnotationConfigWebApplicationContext(); ctx.register(springMVCConfig.class); return ctx; } //设置那些请求归springMVC处理 @Override protected String[] getServletMappings() { return new String[]{\\\"/\\\"}; } //加载spring配置 @Override protected WebApplicationContext createRootApplicationContext() { return null; } } springMVCConfig.java //加载对应的Bean @ComponentScan(\\\"com.beink.controller\\\") //加载配置 @Configuration public class springMVCConfig { } \"},\"551\":{\"t\":\"配置Tomcat启动即可。。\"},\"552\":{\"h\":\"请求\",\"a\":\"请求\"},\"553\":{\"h\":\"get\",\"a\":\"get\"},\"554\":{\"t\":\"/save?name=name\"},\"555\":{\"t\":\" @RequestMapping(\\\"/save\\\") @ResponseBody public String save(String name){ System.out.println(name); return \\\"hello world\\\"; } \"},\"556\":{\"h\":\"post\",\"a\":\"post\"},\"557\":{\"t\":\" @RequestMapping(\\\"/save\\\") @ResponseBody public String save(String name,String id){ System.out.println(name + id); return \\\"hello world\\\"; } \"},\"558\":{\"h\":\"post乱码处理\",\"a\":\"post乱码处理\"},\"559\":{\"t\":\"img\"},\"560\":{\"h\":\"参数类型\",\"a\":\"参数类型\"},\"561\":{\"t\":\"SpringMVC-09-json数据传递参数_哔哩哔哩_bilibili\"},\"562\":{\"t\":\" @ResponseBody public String save(@RequestParam(\\\"name\\\") String userName, String id){ // 一： 会把地址中的name映射给userName // 二： save(User user) 当名字一样使 会自动把属性放进去 // 三：Map List.....@RequestParam List<String> // 四：JSON // 五：时间 // 六：。。。 System.out.println(userName + id); return \\\"hello world\\\"; } \"},\"563\":{\"h\":\"响应\",\"a\":\"响应\"},\"564\":{\"t\":\" @RequestMapping(\\\"topage\\\") public String toapage(){ // 跳转到index.jsp页面 return \\\"index.jsp\\\"; } @RequestMapping(\\\"ttt\\\") @ResponseBody public String toattpage(){ // 返回一个串“index.jsp” return \\\"index.jsp\\\"; } \"},\"565\":{\"h\":\"Rest风格\",\"a\":\"rest风格\"},\"566\":{\"t\":\"访问形式： /put/5 /get/6\"},\"567\":{\"t\":\"SpringMVC-14-RESTful快速开发_哔哩哔哩_bilibili\"},\"568\":{\"t\":\" @RequestMapping(value = \\\"/put/{id}\\\",method = RequestMethod.PUT) @ResponseBody public void put(@PathVariable String id){ System.out.println(id); } @RequestMapping(value = \\\"/get/{id}\\\",method = RequestMethod.GET) @ResponseBody public void get(@PathVariable String id){ System.out.println(id); } POST DELETE .... \"},\"569\":{\"h\":\"注解说明\",\"a\":\"注解说明\"},\"570\":{\"t\":\"@Controller //定义Bean @RequestMapping(\\\"/save\\\") // 访问路径 @ResponseBody //返回值 @RequestParam //用于接收url地址参数 /get?id=5 @ResponseBody //用于接收JSON数据 @PathVariable //接受url地址参数 /get/ @RestController //= @Controller + @ResponseBody @GetMapping(\\\"/get/{id}\\\") // == @RequestMapping(value = \\\"/get/{id}\\\",method = RequestMethod.GET) \"},\"571\":{\"h\":\"其他\",\"a\":\"其他\"},\"572\":{\"h\":\"自定义注解为属性赋值\",\"a\":\"自定义注解为属性赋值\"},\"573\":{\"t\":\"使用场景： 把用户传过来的token，解析出来用户信息， 为属性赋值。\"},\"574\":{\"h\":\"1.创建自定义注解\",\"a\":\"_1-创建自定义注解\"},\"575\":{\"t\":\"@Target({ElementType.PARAMETER}) @Documented @Retention(RetentionPolicy.RUNTIME) public @interface UserInfo { } \"},\"576\":{\"h\":\"2.创建拦截器 ,获得token,存入作用域中\",\"a\":\"_2-创建拦截器-获得token-存入作用域中\"},\"577\":{\"t\":\"public class GlobalInterceptor implements HandlerInterceptor { @Override public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception { String token = request.getHeader(\\\"Authorization\\\").substring(7); request.getSession().setAttribute(\\\"account\\\", JwtUtil.parseJWT(token).getSubject()); return true; } } \"},\"578\":{\"h\":\"3.配置拦截器\",\"a\":\"_3-配置拦截器\"},\"579\":{\"t\":\"@Configuration public class interceptor extends WebMvcConfigurationSupport { @Override protected void addArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) { argumentResolvers.add(new UserInfoImpl()); } @Override protected void addInterceptors(InterceptorRegistry registry) { registry.addInterceptor(new GlobalInterceptor()).addPathPatterns(\\\"/user/account/color/\\\"); super.addInterceptors(registry); } } \"},\"580\":{\"h\":\"4.实现自定义注解\",\"a\":\"_4-实现自定义注解\"},\"581\":{\"t\":\"public class UserInfoImpl implements HandlerMethodArgumentResolver { @Override public boolean supportsParameter(MethodParameter methodParameter) { return methodParameter.getParameterAnnotation(UserInfo.class)!=null; } @Override public Object resolveArgument(MethodParameter methodParameter, ModelAndViewContainer modelAndViewContainer, NativeWebRequest nativeWebRequest, WebDataBinderFactory webDataBinderFactory) throws Exception { HttpServletRequest nativeRequest = (HttpServletRequest) nativeWebRequest.getNativeRequest(); return nativeRequest.getSession().getAttribute(\\\"account\\\"); } } \"},\"582\":{\"h\":\"5.使用\",\"a\":\"_5-使用\"},\"583\":{\"t\":\" @PostMapping(\\\"/user/account/color/\\\") public Result setColor(@UserInfo String account, @RequestParam Map<String,String>map){ String color = map.get(\\\"backImg\\\"); String list = map.get(\\\"list\\\"); return colorService.setColor(account,color,list); } \"},\"584\":{\"h\":\"拦截器\",\"a\":\"拦截器\"},\"585\":{\"t\":\"HttpServletRequest request 发送过来的信息 HttpServletResponse response 发送走的信息\"},\"586\":{\"h\":\"1.先实现一个拦截对象\",\"a\":\"_1-先实现一个拦截对象\"},\"587\":{\"t\":\"@Component public class MyInterceptor implements HandlerInterceptor { // 被拦截的操作之前运行 @Override public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception { System.out.println(\\\"preHandle...\\\"); // true 通行 // false 拦截 return true; } // 被拦截的操作之后运行 @Override public void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView) throws Exception { System.out.println(\\\"postHandle...\\\"); } // 也是后面 也在posthandle之后 @Override public void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex) throws Exception { System.out.println(\\\"afterCompletion...\\\"); } } \"},\"588\":{\"h\":\"2.配置\",\"a\":\"_2-配置\"},\"589\":{\"t\":\"@Configuration public class Support extends WebMvcConfigurationSupport { //implements WebMvcConfigurer 也行 // 拦截器对象 @Autowired private MyInterceptor myInterceptor; /** * * @param registry */ @Override protected void addInterceptors(InterceptorRegistry registry) { // 拦截路径 registry.addInterceptor(myInterceptor).addPathPatterns(\\\"/user\\\",\\\"/user*\\\"); } } \"},\"590\":{\"h\":\"过滤器\",\"a\":\"过滤器\"},\"591\":{\"h\":\"枚举\",\"a\":\"枚举\"},\"592\":{\"c\":[\"使用指南\"]},\"593\":{\"c\":[\"Markdown\"]},\"594\":{\"h\":\"Other\"},\"595\":{\"h\":\"Oother\"},\"596\":{\"h\":\"Springboot\"}},\"dirtCount\":0,\"index\":[[\"枚举\",{\"0\":{\"591\":1}}],[\"过滤器\",{\"0\":{\"590\":1}}],[\"过期\",{\"1\":{\"466\":1}}],[\"拦截路径\",{\"1\":{\"589\":1}}],[\"拦截\",{\"1\":{\"587\":1}}],[\"拦截器对象\",{\"1\":{\"589\":1}}],[\"拦截器\",{\"0\":{\"584\":1}}],[\"被拦截的操作之后运行\",{\"1\":{\"587\":1}}],[\"被拦截的操作之前运行\",{\"1\":{\"587\":1}}],[\"被构造\",{\"1\":{\"514\":1}}],[\"存入作用域中\",{\"0\":{\"576\":1}}],[\"存储\",{\"1\":{\"133\":1}}],[\"获得token\",{\"0\":{\"576\":1}}],[\"获取参数\",{\"1\":{\"541\":1}}],[\"获取通知数据\",{\"0\":{\"540\":1}}],[\"获取bean\",{\"1\":{\"512\":1}}],[\"获取容器\",{\"1\":{\"512\":1}}],[\"获取最后一次成功执行快照的时间\",{\"1\":{\"491\":1}}],[\"获取key对应的hash中所有的value\",{\"1\":{\"474\":1}}],[\"获取key对应的hash中所有的field\",{\"1\":{\"474\":1}}],[\"获取key对应的hash中所有的键值对\",{\"1\":{\"474\":1}}],[\"获取key对应的hash中field的数量\",{\"1\":{\"474\":1}}],[\"获取key对应的hash中field对应的value\",{\"1\":{\"474\":1}}],[\"获取\",{\"1\":{\"390\":1}}],[\"获取连接中的通道\",{\"1\":{\"386\":1,\"388\":1}}],[\"获取连接对象\",{\"1\":{\"386\":1,\"388\":1,\"390\":1}}],[\"获取选择的文件\",{\"1\":{\"82\":1}}],[\"解析出来用户信息\",{\"1\":{\"573\":1}}],[\"解绑\",{\"1\":{\"120\":1}}],[\"接受url地址参数\",{\"1\":{\"570\":1}}],[\"访问形式\",{\"1\":{\"566\":1}}],[\"访问路径\",{\"1\":{\"548\":1,\"570\":1}}],[\"跳转到index\",{\"1\":{\"564\":1}}],[\"响应\",{\"0\":{\"563\":1}}],[\"修改参数\",{\"1\":{\"541\":1}}],[\"修改容器限制\",{\"1\":{\"133\":1}}],[\"调用原始操作\",{\"1\":{\"539\":1,\"541\":1}}],[\"调用的是无参构造\",{\"1\":{\"514\":1}}],[\"环绕\",{\"1\":{\"539\":1,\"541\":1}}],[\"切入点表达式\",{\"0\":{\"536\":1}}],[\"切换为分支xxx\",{\"1\":{\"110\":1}}],[\"绑定\",{\"1\":{\"535\":1}}],[\"举例\",{\"0\":{\"534\":1}}],[\"销毁\",{\"1\":{\"531\":1}}],[\"单例\",{\"1\":{\"531\":1}}],[\"单个字符\",{\"1\":{\"348\":1}}],[\"扫描路径\",{\"1\":{\"531\":1}}],[\"类似于applicationcontext\",{\"1\":{\"531\":1}}],[\"类型exchange可以让队列在绑定routing\",{\"1\":{\"426\":1}}],[\"类型\",{\"1\":{\"408\":1}}],[\"定义一个servlet启动配置\",{\"1\":{\"550\":1}}],[\"定义bean\",{\"1\":{\"527\":1,\"548\":1,\"570\":1}}],[\"定时任务\",{\"0\":{\"61\":1}}],[\"名字\",{\"1\":{\"527\":1}}],[\"集合注入\",{\"0\":{\"524\":1}}],[\"构造器\",{\"0\":{\"518\":1}}],[\"同样效果\",{\"1\":{\"514\":1,\"529\":1}}],[\"```\",{\"1\":{\"514\":2}}],[\"等同于\",{\"1\":{\"512\":1}}],[\"交由ioc管理后\",{\"1\":{\"505\":1}}],[\"交换机和队列绑定和\",{\"1\":{\"422\":1,\"423\":1,\"433\":1}}],[\"交换机和队列绑定\",{\"1\":{\"410\":1}}],[\"交换机吧消息发给和自己绑定的队列\",{\"1\":{\"405\":1}}],[\"交换机名称\",{\"1\":{\"386\":1,\"388\":1,\"408\":1}}],[\"管理对象\",{\"1\":{\"504\":1}}],[\"初识spring\",{\"1\":{\"501\":1}}],[\"初始化\",{\"1\":{\"112\":1,\"531\":1}}],[\"以保证数据同步到磁盘\",{\"1\":{\"496\":1}}],[\"以避免并发访问引起的数据冲突和错误\",{\"1\":{\"300\":1}}],[\"速度最快\",{\"1\":{\"496\":1}}],[\"由操作系统保证数据同步到磁盘\",{\"1\":{\"496\":1}}],[\"由于sockjs在不支持websocket的浏览器中使用的是长轮询技术\",{\"1\":{\"50\":1}}],[\"所有写操作命令追加到文件的过程\",{\"1\":{\"495\":1}}],[\"所有的数据\",{\"1\":{\"272\":1}}],[\"无意义\",{\"1\":{\"492\":1}}],[\"无侵入\",{\"1\":{\"262\":1}}],[\"也行\",{\"1\":{\"589\":1}}],[\"也在posthandle之后\",{\"1\":{\"587\":1}}],[\"也是后面\",{\"1\":{\"587\":1}}],[\"也会产生\",{\"1\":{\"492\":1}}],[\"也必须要指定一个routingkey\",{\"1\":{\"417\":1}}],[\"命令\",{\"1\":{\"492\":1}}],[\"执行\",{\"1\":{\"492\":1}}],[\"执行完此操作后\",{\"1\":{\"129\":1}}],[\"快照同时还可以响应客户端请求\",{\"1\":{\"491\":1}}],[\"全部阻塞\",{\"1\":{\"491\":1}}],[\"触发\",{\"0\":{\"490\":1}}],[\"持久化\",{\"0\":{\"487\":1}}],[\"我们需要自定义\",{\"1\":{\"484\":1}}],[\"很多时候\",{\"1\":{\"484\":1}}],[\"序列化是指将数据结构转换为字节流的过程\",{\"1\":{\"478\":1}}],[\"序列化\",{\"0\":{\"477\":1}}],[\"计算多个有序集合的交集\",{\"1\":{\"476\":1}}],[\"计算多个有序集合的并集\",{\"1\":{\"476\":1}}],[\"减少操作\",{\"1\":{\"476\":1}}],[\"减少20\",{\"1\":{\"468\":1}}],[\"zinterstore\",{\"1\":{\"476\":2}}],[\"zincrby\",{\"1\":{\"476\":2}}],[\"zunionstore\",{\"1\":{\"476\":2}}],[\"zcard\",{\"1\":{\"476\":2}}],[\"zcount\",{\"1\":{\"476\":2}}],[\"zrem\",{\"1\":{\"476\":2}}],[\"zrank\",{\"1\":{\"476\":2}}],[\"zrangebyscore\",{\"1\":{\"476\":2}}],[\"zrange\",{\"1\":{\"476\":2}}],[\"zadd\",{\"1\":{\"476\":2}}],[\"检查key对应的hash中是否存在field\",{\"1\":{\"474\":1}}],[\"随机返回集合中的一个元素\",{\"1\":{\"472\":1}}],[\"指定下标值替换为hello\",{\"1\":{\"470\":1}}],[\"指定名称和邮箱\",{\"0\":{\"107\":1}}],[\"剩余2\",{\"1\":{\"470\":1}}],[\"截取\",{\"1\":{\"470\":1}}],[\"长度\",{\"1\":{\"470\":1}}],[\"长连接\",{\"1\":{\"43\":1}}],[\"往list中加入hello\",{\"1\":{\"470\":1}}],[\"找到就设置\",{\"1\":{\"468\":1}}],[\"找不到就创建\",{\"1\":{\"468\":1}}],[\"批量set或get\",{\"1\":{\"468\":1}}],[\"串的截取\",{\"1\":{\"468\":1}}],[\"增加20\",{\"1\":{\"468\":1}}],[\"判断元素是否在集合中\",{\"1\":{\"472\":1}}],[\"判断key是否存在\",{\"1\":{\"466\":1}}],[\"判断是否是图片类型\",{\"1\":{\"82\":1}}],[\"打印下标1的值\",{\"1\":{\"470\":1}}],[\"打印所有\",{\"1\":{\"470\":1}}],[\"打印所有的key\",{\"1\":{\"466\":1}}],[\"打印name的value\",{\"1\":{\"466\":1}}],[\"打包\",{\"1\":{\"162\":1,\"176\":1}}],[\"启动命令\",{\"1\":{\"461\":1}}],[\"启动容器\",{\"1\":{\"133\":1}}],[\"收到信息了\",{\"1\":{\"455\":1}}],[\"收件人\",{\"1\":{\"58\":2}}],[\"延迟消息队列\",{\"1\":{\"451\":1}}],[\"延迟队列\",{\"0\":{\"449\":1}}],[\"延迟5s启动\",{\"1\":{\"67\":1}}],[\"公平消费\",{\"1\":{\"442\":1}}],[\"第一种模式\",{\"1\":{\"440\":1}}],[\"第一次\",{\"1\":{\"120\":1}}],[\"整合\",{\"0\":{\"434\":1}}],[\"代码\",{\"0\":{\"431\":1}}],[\"匹配一个或多个单词\",{\"1\":{\"429\":1}}],[\"匹配不多不少恰好一个单词\",{\"1\":{\"427\":1}}],[\"都是可以根据routinghey把消息路由到不同的队列\",{\"1\":{\"426\":1}}],[\"都是书本上的呀\",{\"1\":{\"103\":1}}],[\"相比\",{\"1\":{\"426\":1}}],[\"相当于1g\",{\"1\":{\"151\":1}}],[\"动态路由\",{\"0\":{\"447\":1},\"1\":{\"438\":1}}],[\"动态\",{\"0\":{\"424\":1}}],[\"动态条件查询\",{\"0\":{\"249\":1}}],[\"这是个aop\",{\"1\":{\"535\":1}}],[\"这是direct发布于的\",{\"1\":{\"420\":1,\"432\":1}}],[\"这种方式在许多应用中已经足够用了\",{\"1\":{\"496\":1}}],[\"这种方式可以在损失一定数据的情况下更快地恢复数据库\",{\"1\":{\"489\":1}}],[\"这种模型routingkey一般都是由一个或多个单词组成\",{\"1\":{\"426\":1}}],[\"这里是一些基本的redis\",{\"1\":{\"474\":1}}],[\"这只不过是一个测试而已\",{\"1\":{\"60\":3}}],[\"才会收到消息\",{\"1\":{\"418\":1}}],[\"才可以省去sudo权限\",{\"1\":{\"129\":1}}],[\"会自动把属性放进去\",{\"1\":{\"562\":1}}],[\"会把地址中的name映射给username\",{\"1\":{\"562\":1}}],[\"会在后台异步进行快照操作\",{\"1\":{\"491\":1}}],[\"会根据指定的routingkey进行判断\",{\"1\":{\"418\":1}}],[\"会被订阅的队列消费\",{\"1\":{\"414\":1}}],[\"直接\",{\"1\":{\"514\":1}}],[\"直接删除\",{\"1\":{\"118\":1}}],[\"直连\",{\"0\":{\"412\":1}}],[\"路由key\",{\"1\":{\"416\":1}}],[\"路由模型\",{\"0\":{\"411\":1}}],[\"路径导航\",{\"1\":{\"196\":1,\"229\":1}}],[\"临时队列\",{\"1\":{\"410\":1,\"422\":1,\"423\":1,\"433\":1}}],[\"有多个消费者\",{\"1\":{\"401\":1}}],[\"流程如下\",{\"1\":{\"400\":1}}],[\"广播\",{\"0\":{\"399\":1,\"443\":1}}],[\"手动确认的表示\",{\"1\":{\"398\":1}}],[\"手动抛出异常\",{\"1\":{\"305\":1}}],[\"参数类型\",{\"0\":{\"560\":1}}],[\"参数\",{\"1\":{\"398\":1}}],[\"目前要求能者多劳\",{\"1\":{\"394\":1}}],[\"目录必须为空\",{\"1\":{\"19\":1}}],[\"目录列表\",{\"0\":{\"16\":1}}],[\"目录\",{\"0\":{\"5\":1},\"1\":{\"13\":1}}],[\"叫做循环\",{\"1\":{\"393\":1}}],[\"两个消费者\",{\"1\":{\"393\":1}}],[\"两者都应用广泛\",{\"1\":{\"35\":1}}],[\"连接对象方法\",{\"1\":{\"390\":1}}],[\"连接不稳定\",{\"1\":{\"50\":1}}],[\"静态路由\",{\"0\":{\"445\":1}}],[\"静态代码块\",{\"1\":{\"390\":1}}],[\"静态资源访问\",{\"0\":{\"23\":1}}],[\"开始手动确认消息\",{\"1\":{\"396\":1}}],[\"开始消息的自动确认机制\",{\"1\":{\"388\":1}}],[\"开启代码自动缩进\",{\"1\":{\"151\":1}}],[\"消费同一个队列\",{\"1\":{\"393\":1}}],[\"消费时的回调接口\",{\"1\":{\"388\":1}}],[\"消费者\",{\"0\":{\"409\":1,\"421\":1,\"454\":1},\"1\":{\"388\":1}}],[\"消费消息\",{\"0\":{\"387\":1},\"1\":{\"388\":1,\"410\":1,\"422\":1,\"423\":1,\"433\":1}}],[\"消息\",{\"1\":{\"417\":1}}],[\"消息可能没有被消费者正确处理\",{\"1\":{\"384\":1}}],[\"消息被拿走后\",{\"1\":{\"384\":1}}],[\"消息队列\",{\"1\":{\"384\":1}}],[\"消息的消费者\",{\"1\":{\"384\":1}}],[\"消息产生者将消息放入队列\",{\"1\":{\"383\":1}}],[\"发布消息\",{\"1\":{\"386\":1}}],[\"发送走的信息\",{\"1\":{\"585\":1}}],[\"发送过来的信息\",{\"1\":{\"585\":1}}],[\"发送公钥\",{\"1\":{\"153\":1}}],[\"发送带附件的邮件\",{\"1\":{\"58\":1}}],[\"发送者\",{\"1\":{\"58\":1}}],[\"发送邮件\",{\"0\":{\"51\":1}}],[\"其他\",{\"0\":{\"571\":1}}],[\"其他不管\",{\"1\":{\"491\":1}}],[\"其他的连接不可用\",{\"1\":{\"386\":1,\"388\":1}}],[\"其它region请按实际情况填写\",{\"1\":{\"15\":1}}],[\"队列与交换机绑定\",{\"1\":{\"416\":1}}],[\"队列中的消费者都可以拿到消息\",{\"1\":{\"406\":1}}],[\"队列是否持久化\",{\"1\":{\"386\":1,\"388\":1}}],[\"队列名称\",{\"1\":{\"386\":1,\"388\":1}}],[\"通行\",{\"1\":{\"587\":1}}],[\"通知类型\",{\"0\":{\"538\":1}}],[\"通配符即可\",{\"1\":{\"537\":1}}],[\"通常是每几秒或几分钟\",{\"1\":{\"489\":1}}],[\"通道绑定交换机\",{\"1\":{\"410\":1,\"422\":1,\"423\":1,\"433\":1}}],[\"通道绑定对应的消息队列\",{\"1\":{\"386\":1,\"388\":1}}],[\"通道名称\",{\"1\":{\"386\":1}}],[\"通过map查询\",{\"1\":{\"272\":1}}],[\"通过多个id进行查询\",{\"1\":{\"272\":1}}],[\"通过id查询信息\",{\"1\":{\"272\":1}}],[\"通过get方法停止任务\",{\"1\":{\"71\":1}}],[\"端口号\",{\"1\":{\"386\":1,\"388\":1,\"390\":1}}],[\"生命周期\",{\"1\":{\"514\":1,\"531\":2}}],[\"生产者无权决定\",{\"1\":{\"404\":1}}],[\"生产者只能向交换机发送消息\",{\"1\":{\"404\":1}}],[\"生产者\",{\"0\":{\"407\":1,\"419\":1,\"452\":1},\"1\":{\"386\":1}}],[\"生产消息\",{\"0\":{\"385\":1}}],[\"生成\",{\"1\":{\"112\":1}}],[\"聊天\",{\"1\":{\"384\":1}}],[\"造成消息的丢失\",{\"1\":{\"384\":1}}],[\"已经从队列中消失了\",{\"1\":{\"384\":1}}],[\"隐患\",{\"1\":{\"384\":1}}],[\"隐藏行号\",{\"1\":{\"151\":1}}],[\"监听\",{\"1\":{\"384\":1}}],[\"学习地址\",{\"1\":{\"380\":1}}],[\"学习与记录\",{\"0\":{\"4\":1}}],[\"博客园\",{\"1\":{\"380\":1}}],[\"逊老头\",{\"1\":{\"380\":1}}],[\"函数\",{\"0\":{\"378\":1}}],[\"每秒执行一次fsync\",{\"1\":{\"496\":1}}],[\"每次写入都执行fsync\",{\"1\":{\"496\":1}}],[\"每次消费一个\",{\"1\":{\"398\":1}}],[\"每个队列都绑定了交换机\",{\"1\":{\"403\":1}}],[\"每个消费者有自己的队列\",{\"1\":{\"402\":1}}],[\"每页记录数\",{\"1\":{\"376\":1}}],[\"每天中午12点执行任务\",{\"1\":{\"70\":1}}],[\"查询页码\",{\"1\":{\"376\":1}}],[\"查询记录数\",{\"1\":{\"375\":1}}],[\"查看name剩余过期时间\",{\"1\":{\"466\":1}}],[\"查看key的类型\",{\"1\":{\"463\":1}}],[\"查看所有容器的统计信息\",{\"1\":{\"133\":1}}],[\"查看某个容器内的所有进程\",{\"1\":{\"133\":1}}],[\"查看本地的所有容器\",{\"1\":{\"133\":1}}],[\"查看远程库的详细信息\",{\"1\":{\"120\":1}}],[\"查看远程库的信息\",{\"1\":{\"120\":1}}],[\"查看远程仓库信息\",{\"1\":{\"120\":1}}],[\"查看工作区中文件当前状态\",{\"1\":{\"116\":1}}],[\"查看文件内容\",{\"1\":{\"116\":1}}],[\"查看每一次修改历史\",{\"1\":{\"116\":1}}],[\"查看提交历史记录\",{\"1\":{\"116\":1}}],[\"查看当前目录\",{\"1\":{\"112\":1}}],[\"查看分支\",{\"1\":{\"110\":1}}],[\"起始索引从0开始\",{\"1\":{\"376\":1}}],[\"起始索引\",{\"1\":{\"375\":1,\"376\":1}}],[\"起别名\",{\"1\":{\"328\":1}}],[\"然后相同的按照第二个方式排序\",{\"1\":{\"372\":1}}],[\"然后每隔5s运行一次\",{\"1\":{\"67\":1}}],[\"多个单词之间以\",{\"1\":{\"426\":1}}],[\"多字段排序\",{\"1\":{\"372\":1}}],[\"多选一\",{\"1\":{\"346\":1}}],[\"降序\",{\"1\":{\"371\":1}}],[\"升序\",{\"1\":{\"370\":1}}],[\"|\",{\"1\":{\"363\":1,\"390\":1,\"428\":1,\"433\":2}}],[\"||\",{\"1\":{\"353\":1}}],[\"聚合函数\",{\"0\":{\"357\":1}}],[\"聚合查询\",{\"1\":{\"326\":1}}],[\"非独占\",{\"1\":{\"440\":1}}],[\"非\",{\"1\":{\"356\":1}}],[\"非常方便\",{\"1\":{\"165\":1}}],[\"任务\",{\"0\":{\"441\":1}}],[\"任务模型\",{\"0\":{\"391\":1}}],[\"任意个字符\",{\"1\":{\"348\":1}}],[\"任何异常都回滚\",{\"1\":{\"304\":1}}],[\"模糊匹配\",{\"1\":{\"348\":1}}],[\"模拟执行的漫\",{\"1\":{\"398\":1}}],[\"模拟事务回滚\",{\"1\":{\"305\":1}}],[\"模拟实现\",{\"1\":{\"35\":1}}],[\"占位符\",{\"1\":{\"347\":1}}],[\"某个范围之内\",{\"1\":{\"344\":1}}],[\"功能\",{\"1\":{\"335\":1}}],[\"功能键\",{\"1\":{\"151\":2}}],[\"比较运算符\",{\"1\":{\"334\":1}}],[\"去重\",{\"1\":{\"332\":1}}],[\"姓名\",{\"1\":{\"329\":2}}],[\"基本命令\",{\"0\":{\"462\":1}}],[\"基本查询\",{\"0\":{\"327\":1}}],[\"基础\",{\"1\":{\"309\":1}}],[\"排序查询\",{\"0\":{\"369\":1},\"1\":{\"326\":1}}],[\"排序字段列表\",{\"1\":{\"325\":1}}],[\"排除依赖\",{\"0\":{\"169\":1}}],[\"条件查询\",{\"0\":{\"333\":1},\"1\":{\"326\":1}}],[\"条件列表\",{\"1\":{\"325\":1}}],[\"条件\",{\"1\":{\"319\":1,\"322\":1}}],[\"给全部字段添加值\",{\"1\":{\"316\":1}}],[\"给指定字段批量添加值\",{\"1\":{\"314\":1}}],[\"给指定字段添加值\",{\"1\":{\"312\":1}}],[\"值2\",{\"1\":{\"313\":1,\"315\":6,\"317\":1}}],[\"值1\",{\"1\":{\"313\":1,\"315\":6,\"317\":1}}],[\"字段列表\",{\"1\":{\"325\":1}}],[\"字段2=值2\",{\"1\":{\"319\":1}}],[\"字段2\",{\"1\":{\"313\":1,\"315\":1}}],[\"字段1=值1\",{\"1\":{\"319\":1}}],[\"字段1\",{\"1\":{\"313\":1,\"315\":1}}],[\"编码格式\",{\"1\":{\"310\":1}}],[\"编译\",{\"1\":{\"162\":1}}],[\"概述\",{\"1\":{\"309\":1}}],[\"抛出运行时异常\",{\"1\":{\"305\":1}}],[\"捕获异常\",{\"1\":{\"305\":1}}],[\"回滚事务\",{\"1\":{\"303\":1}}],[\"回退版本\",{\"1\":{\"116\":1}}],[\"完整性和一致性非常重要\",{\"1\":{\"302\":1}}],[\"错误回滚\",{\"1\":{\"299\":1}}],[\"防止数据冲突和数据丢失等问题\",{\"1\":{\"298\":1}}],[\"要么全部失败回滚\",{\"1\":{\"298\":1}}],[\"要么全部执行成功\",{\"1\":{\"298\":1}}],[\"事务对于确保数据的正确性\",{\"1\":{\"302\":1}}],[\"事务会自动将所有操作撤消\",{\"1\":{\"299\":1}}],[\"事务可以优化数据库操作的性能\",{\"1\":{\"301\":1}}],[\"事务可以通过锁机制来控制这些操作的执行顺序\",{\"1\":{\"300\":1}}],[\"事务可以解决数据库并发访问的问题\",{\"1\":{\"300\":1}}],[\"事务可以在发生错误或异常时回滚到之前的状态\",{\"1\":{\"299\":1}}],[\"事务可以确保数据的一致性\",{\"1\":{\"298\":1}}],[\"事务可以确保多个操作在一个逻辑单元中执行\",{\"1\":{\"298\":1}}],[\"事务主要的作用体现在以下几个方面\",{\"1\":{\"297\":1}}],[\"事务\",{\"0\":{\"295\":1}}],[\"映射\",{\"1\":{\"281\":1}}],[\"赋值\",{\"1\":{\"279\":1}}],[\"雪花算法\",{\"1\":{\"279\":1}}],[\"表名列表\",{\"1\":{\"325\":1}}],[\"表名\",{\"1\":{\"276\":1,\"313\":1,\"315\":2,\"317\":1,\"319\":1,\"322\":1,\"323\":1,\"329\":2,\"331\":1,\"360\":1,\"362\":1,\"364\":2,\"375\":1}}],[\"表示正文是html格式\",{\"1\":{\"58\":1}}],[\"不改变原始设计\",{\"1\":{\"533\":1}}],[\"不执行fsync\",{\"1\":{\"496\":1}}],[\"不是autodelete\",{\"1\":{\"440\":1}}],[\"不是数据库中字段\",{\"1\":{\"282\":1}}],[\"不再是任意绑定了\",{\"1\":{\"416\":1}}],[\"不关闭\",{\"1\":{\"388\":1}}],[\"不参与计算\",{\"1\":{\"358\":1}}],[\"不等于\",{\"1\":{\"342\":1}}],[\"不重复\",{\"1\":{\"330\":1}}],[\"不写条件\",{\"1\":{\"320\":1}}],[\"不管如何都会回滚\",{\"1\":{\"296\":1}}],[\"不会污染数据\",{\"1\":{\"296\":1}}],[\"不会改变数据\",{\"1\":{\"296\":1}}],[\"不会参与查询\",{\"1\":{\"283\":1}}],[\"不被修改\",{\"1\":{\"272\":1}}],[\"不屑password\",{\"1\":{\"272\":1}}],[\"不想使用其中的某个依赖\",{\"1\":{\"170\":1}}],[\"改了\",{\"1\":{\"272\":1}}],[\"天天学习\",{\"1\":{\"272\":1}}],[\"支持指定分数\",{\"1\":{\"476\":1}}],[\"支持关键词自动转义\",{\"1\":{\"265\":1}}],[\"支持自定义全局通用操作\",{\"1\":{\"265\":1}}],[\"支持activerecord模式\",{\"1\":{\"264\":1}}],[\"支持主键自动生成\",{\"1\":{\"264\":1}}],[\"支持多种数据库\",{\"1\":{\"263\":1}}],[\"支持lambda形式调用\",{\"1\":{\"263\":1}}],[\"支持性\",{\"1\":{\"42\":1,\"46\":1}}],[\"损耗小\",{\"1\":{\"262\":1}}],[\"哔哩哔哩\",{\"1\":{\"261\":1,\"309\":1,\"380\":1,\"501\":1,\"543\":1,\"561\":1,\"567\":1}}],[\"尚硅谷\",{\"1\":{\"261\":1}}],[\"官网学习地址\",{\"1\":{\"242\":1}}],[\"自定义注解为属性赋值\",{\"0\":{\"572\":1}}],[\"自定义它们\",{\"1\":{\"238\":1}}],[\"自动装配\",{\"1\":{\"531\":1}}],[\"自动装配到spring的bean\",{\"1\":{\"531\":1}}],[\"自动生成的快照文件\",{\"1\":{\"489\":1}}],[\"自动从队列中删除\",{\"1\":{\"384\":1}}],[\"自增\",{\"1\":{\"278\":1}}],[\"自启动\",{\"1\":{\"71\":1}}],[\"标题和页面信息\",{\"1\":{\"230\":1}}],[\"标签为\",{\"1\":{\"219\":1}}],[\"标签\",{\"1\":{\"82\":1}}],[\"标签用于选择图片\",{\"1\":{\"82\":1}}],[\"此时就用到了\",{\"1\":{\"415\":1}}],[\"此页面应当包含\",{\"1\":{\"228\":1}}],[\"此命令的路径即mysql的安装路径\",{\"1\":{\"138\":1}}],[\"徽章\",{\"1\":{\"226\":1}}],[\"徽章文字\",{\"1\":{\"226\":1}}],[\"请求\",{\"0\":{\"552\":1}}],[\"请使用绝对链接\",{\"1\":{\"224\":1}}],[\"请登录ram控制台创建ram用户\",{\"1\":{\"15\":1}}],[\"进行引用\",{\"1\":{\"223\":1,\"224\":1}}],[\"进入一般命令模式\",{\"1\":{\"151\":1}}],[\"进入编辑模式\",{\"1\":{\"151\":1}}],[\"进入容器\",{\"1\":{\"133\":1}}],[\"但里面是空的\",{\"1\":{\"492\":1}}],[\"但有时我们希望不同的消息被不同的队列消费\",{\"1\":{\"414\":1}}],[\"但是你需要使用相对链接\",{\"1\":{\"223\":1}}],[\"但它们之间有以下区别\",{\"0\":{\"84\":1}}],[\"分割\",{\"1\":{\"426\":1}}],[\"分组后的列只有待分组的字段和聚合函数\",{\"1\":{\"366\":1}}],[\"分组后条件列表\",{\"1\":{\"325\":1}}],[\"分组查询\",{\"0\":{\"365\":1},\"1\":{\"326\":1}}],[\"分组字段列表\",{\"1\":{\"325\":1}}],[\"分页查询\",{\"0\":{\"374\":1},\"1\":{\"326\":1}}],[\"分页\",{\"0\":{\"287\":1},\"1\":{\"325\":1}}],[\"分类为\",{\"1\":{\"218\":1}}],[\"分布式锁\",{\"0\":{\"83\":1}}],[\"日\",{\"1\":{\"217\":1}}],[\"月\",{\"1\":{\"217\":1}}],[\"年\",{\"1\":{\"217\":1}}],[\"写作日期为\",{\"1\":{\"217\":1}}],[\"作者设置为\",{\"1\":{\"216\":1}}],[\"中间有一个过度的服务器\",{\"1\":{\"384\":1}}],[\"中设置页面信息\",{\"1\":{\"215\":1}}],[\"中安装\",{\"1\":{\"127\":1}}],[\"的另一种数据持久化方式\",{\"1\":{\"495\":1}}],[\"的缩写\",{\"1\":{\"495\":1}}],[\"的默认数据持久化方式\",{\"1\":{\"489\":1}}],[\"的发送方在向exchang发送消息时\",{\"1\":{\"417\":1}}],[\"的基础上只做增强不做改变\",{\"1\":{\"260\":1}}],[\"的增强工具\",{\"1\":{\"260\":1}}],[\"的\",{\"1\":{\"215\":1}}],[\"的一个\",{\"1\":{\"35\":1}}],[\"的一种新协议\",{\"1\":{\"35\":1}}],[\"注解开发\",{\"0\":{\"526\":1}}],[\"注解说明\",{\"0\":{\"275\":1,\"569\":1}}],[\"注入\",{\"1\":{\"522\":1}}],[\"注释之前的内容被视为文章摘要\",{\"1\":{\"213\":1}}],[\"注意sql的路径\",{\"1\":{\"149\":1}}],[\"文章标题列表\",{\"1\":{\"231\":1}}],[\"文章加密\",{\"2\":{\"211\":1}}],[\"文件名称\",{\"1\":{\"496\":1}}],[\"文件是将\",{\"1\":{\"495\":1}}],[\"文件是在指定的时间间隔内\",{\"1\":{\"489\":1}}],[\"文件\",{\"1\":{\"492\":1,\"493\":1}}],[\"文件的缩写\",{\"1\":{\"489\":1}}],[\"文件夹的图片\",{\"1\":{\"224\":1}}],[\"文件放置在一起\",{\"1\":{\"223\":1}}],[\"文件上传\",{\"0\":{\"26\":1}}],[\"文字结尾应该有深蓝色的\",{\"1\":{\"226\":1}}],[\"文字\",{\"1\":{\"208\":1,\"209\":1}}],[\"文字段落\",{\"1\":{\"208\":11,\"209\":13}}],[\"段落\",{\"1\":{\"208\":1,\"209\":1}}],[\"实际上还有许多其他的命令可供使用\",{\"1\":{\"474\":1}}],[\"实际的文章内容\",{\"1\":{\"207\":1}}],[\"实现自定义注解\",{\"0\":{\"580\":1}}],[\"实现自减\",{\"1\":{\"468\":1}}],[\"实现自增\",{\"1\":{\"468\":1}}],[\"实现工具类\",{\"0\":{\"389\":1}}],[\"实现\",{\"0\":{\"480\":1},\"1\":{\"35\":1}}],[\"实现了客户端与服务器端的实时通信\",{\"1\":{\"35\":1}}],[\"禁用\",{\"2\":{\"205\":1}}],[\"禁用了如下功能\",{\"1\":{\"193\":1}}],[\"页面结构\",{\"0\":{\"227\":1}}],[\"页面内容\",{\"0\":{\"220\":1}}],[\"页面配置\",{\"0\":{\"212\":1},\"1\":{\"219\":1},\"2\":{\"240\":1}}],[\"页面信息\",{\"0\":{\"214\":1},\"1\":{\"197\":1}}],[\"页脚\",{\"1\":{\"202\":1,\"236\":1}}],[\"评论\",{\"1\":{\"201\":1,\"233\":1}}],[\"链接\",{\"1\":{\"200\":1}}],[\"上一篇\",{\"1\":{\"200\":1}}],[\"上传图片\",{\"0\":{\"14\":1}}],[\"上传\",{\"1\":{\"13\":1,\"28\":1}}],[\"更新所有\",{\"1\":{\"320\":1}}],[\"更新时间等页面元信息\",{\"1\":{\"232\":1}}],[\"更新时间\",{\"1\":{\"199\":1}}],[\"更安全\",{\"0\":{\"10\":1}}],[\"贡献者\",{\"1\":{\"198\":1,\"232\":1}}],[\"侧边栏\",{\"1\":{\"195\":1,\"235\":1}}],[\"本页面就是一个示例\",{\"1\":{\"193\":1}}],[\"你可以通过主题选项和页面\",{\"1\":{\"238\":1}}],[\"你可以通过设置页面的\",{\"1\":{\"192\":1}}],[\"你可以将图片和\",{\"1\":{\"223\":1}}],[\"你可以自由在这里书写你的\",{\"1\":{\"221\":1}}],[\"你可以在\",{\"1\":{\"215\":1}}],[\"你好\",{\"1\":{\"91\":2}}],[\"布局与功能禁用\",{\"0\":{\"191\":1}}],[\"默认使用的是rdb方式持久化\",{\"1\":{\"496\":1}}],[\"默认情况下的模板只能支持\",{\"1\":{\"484\":1}}],[\"默认队列持久化\",{\"1\":{\"440\":1}}],[\"默认会平均分配内容\",{\"1\":{\"393\":1}}],[\"默认形况下\",{\"1\":{\"303\":1}}],[\"默认\",{\"1\":{\"177\":1,\"370\":1}}],[\"加载配置\",{\"1\":{\"550\":1}}],[\"加载对应的bean\",{\"1\":{\"550\":1}}],[\"加载spring配置\",{\"1\":{\"550\":1}}],[\"加载springmvc配置\",{\"1\":{\"550\":1}}],[\"加入某个jar包依赖后\",{\"1\":{\"170\":1}}],[\"加参\",{\"1\":{\"116\":1}}],[\"当名字一样使\",{\"1\":{\"562\":1}}],[\"当前数据库大小\",{\"1\":{\"463\":1}}],[\"当多个用户同时对同一数据进行操作时\",{\"1\":{\"300\":1}}],[\"当别的项目引用这个jar包\",{\"1\":{\"167\":1}}],[\"当vim卡死时\",{\"1\":{\"151\":1}}],[\"像主动依赖了c和d一样使用它们\",{\"1\":{\"165\":1}}],[\"那么你就可以在a中\",{\"1\":{\"165\":1}}],[\"测试时加入\",{\"1\":{\"296\":1}}],[\"测试代码\",{\"1\":{\"175\":1}}],[\"测试\",{\"0\":{\"485\":1},\"1\":{\"162\":1}}],[\"清空所有数据库\",{\"1\":{\"463\":1}}],[\"清空当前数据库\",{\"1\":{\"463\":1}}],[\"清理\",{\"1\":{\"162\":1}}],[\"清除公钥信息\",{\"1\":{\"153\":1}}],[\"安装插件以及使用\",{\"1\":{\"450\":1}}],[\"安装地址\",{\"1\":{\"380\":1}}],[\"安装到本地仓库\",{\"1\":{\"162\":1}}],[\"安装\",{\"0\":{\"157\":1,\"460\":1}}],[\"最后\",{\"1\":{\"386\":1,\"388\":1}}],[\"最后即可使用ssh\",{\"1\":{\"153\":1}}],[\"最大\",{\"1\":{\"30\":1}}],[\"登录名\",{\"1\":{\"153\":1}}],[\"别名登录\",{\"1\":{\"153\":1}}],[\"别名\",{\"1\":{\"153\":1,\"332\":1}}],[\"免密登录\",{\"0\":{\"152\":1}}],[\"关闭自动确定\",{\"1\":{\"398\":1}}],[\"关闭消息的自动确认\",{\"1\":{\"396\":1}}],[\"关闭通道和连接\",{\"1\":{\"390\":1}}],[\"关闭查找关键词高亮\",{\"1\":{\"151\":1}}],[\"关联\",{\"1\":{\"120\":1}}],[\"显示行号\",{\"1\":{\"151\":1}}],[\"取消粘贴模式\",{\"1\":{\"151\":1}}],[\"取消代码自动缩进\",{\"1\":{\"151\":1}}],[\"取消撤销\",{\"1\":{\"151\":1}}],[\"设置那些请求归springmvc处理\",{\"1\":{\"550\":1}}],[\"设置位配置类\",{\"1\":{\"531\":1}}],[\"设置重写的基准值\",{\"1\":{\"496\":2}}],[\"设置序列化器\",{\"1\":{\"484\":1}}],[\"设置name\",{\"1\":{\"466\":1}}],[\"设置k\",{\"1\":{\"466\":1}}],[\"设置通道一次只能消费一个消息\",{\"1\":{\"395\":1}}],[\"设置用户名和密码\",{\"1\":{\"386\":1,\"388\":1,\"390\":1}}],[\"设置连接哪一个虚拟主机\",{\"1\":{\"386\":1,\"388\":1,\"390\":1}}],[\"设置连接mq主机\",{\"1\":{\"386\":1,\"388\":1,\"390\":1}}],[\"设置成粘贴模式\",{\"1\":{\"151\":1}}],[\"设置编码\",{\"1\":{\"149\":1}}],[\"退出的时候也会产生\",{\"1\":{\"493\":1}}],[\"退出\",{\"1\":{\"151\":1}}],[\"强大的crud操作\",{\"1\":{\"262\":1}}],[\"强制退出\",{\"1\":{\"151\":1}}],[\"强制保存\",{\"1\":{\"151\":1}}],[\"强烈建议您创建并使用ram用户进行api访问或日常运维\",{\"1\":{\"15\":1}}],[\"小于号\",{\"1\":{\"151\":1}}],[\"大于号\",{\"1\":{\"151\":1}}],[\"撤销\",{\"1\":{\"151\":1}}],[\"下一篇\",{\"1\":{\"200\":1}}],[\"下一个位置粘贴\",{\"1\":{\"151\":1}}],[\"下创建config文件\",{\"1\":{\"153\":1}}],[\"下载地址中央仓库配置本地仓库\",{\"1\":{\"158\":1}}],[\"下载\",{\"1\":{\"60\":1}}],[\"复制当前行\",{\"1\":{\"151\":1}}],[\"复制选中的文本\",{\"1\":{\"151\":1}}],[\"选中文本\",{\"1\":{\"151\":1}}],[\"选择文件\",{\"1\":{\"28\":1}}],[\"且在替换前要求用户确认\",{\"1\":{\"151\":1}}],[\"反向重复前一个查找操作\",{\"1\":{\"151\":1}}],[\"9<\",{\"1\":{\"168\":1}}],[\"9\",{\"1\":{\"151\":1,\"168\":1}}],[\"光标移动到第一行\",{\"1\":{\"151\":1}}],[\"光标移动到第n行\",{\"1\":{\"151\":1}}],[\"光标移动到最后一行\",{\"1\":{\"151\":1}}],[\"光标移动到本行末尾\",{\"1\":{\"151\":1}}],[\"光标移动到本行开头\",{\"1\":{\"151\":1}}],[\"光标会向右移动这一行的n个字符\",{\"1\":{\"151\":1}}],[\"光标向下移动n行\",{\"1\":{\"151\":1}}],[\"光标向下移动一个字符\",{\"1\":{\"151\":1}}],[\"光标向右移动一个字符\",{\"1\":{\"151\":1}}],[\"光标向上移动一个字符\",{\"1\":{\"151\":1}}],[\"光标向左移动一个字符\",{\"1\":{\"151\":1}}],[\"按下数字后再按空格\",{\"1\":{\"151\":1}}],[\"7\",{\"1\":{\"151\":1,\"577\":1}}],[\"向有序集合中添加元素\",{\"1\":{\"476\":1}}],[\"向集合中添加元素\",{\"1\":{\"472\":1}}],[\"向光标之上寻找第一个值为word的字符串\",{\"1\":{\"151\":1}}],[\"向光标之下寻找第一个值为word的字符串\",{\"1\":{\"151\":1}}],[\"向右箭头\",{\"1\":{\"151\":1}}],[\"向上箭头\",{\"1\":{\"151\":1}}],[\"向下箭头\",{\"1\":{\"151\":1}}],[\"k\",{\"1\":{\"151\":1}}],[\"key=\",{\"1\":{\"525\":1}}],[\"key采用string的序列化方式\",{\"1\":{\"484\":1}}],[\"keys\",{\"1\":{\"466\":1}}],[\"key的时候使用通配符\",{\"1\":{\"426\":1}}],[\"keyproperty=\",{\"1\":{\"248\":1}}],[\"keygen\",{\"1\":{\"120\":1,\"153\":2}}],[\"key\",{\"0\":{\"465\":1},\"1\":{\"91\":5,\"120\":1,\"446\":2,\"448\":2,\"451\":1,\"474\":8}}],[\"左箭头键\",{\"1\":{\"151\":1}}],[\"先实现一个拦截对象\",{\"0\":{\"586\":1}}],[\"先按第一个排序\",{\"1\":{\"372\":1}}],[\"先按ctrl\",{\"1\":{\"133\":1}}],[\"先生成一对密钥\",{\"1\":{\"153\":1}}],[\"先进入到mysql中\",{\"1\":{\"148\":1}}],[\"只是便于理解\",{\"1\":{\"529\":1}}],[\"只管保存\",{\"1\":{\"491\":1}}],[\"只能存入字符串\",{\"1\":{\"484\":1}}],[\"只不过topic\",{\"1\":{\"426\":1}}],[\"只有队列的routingkey与消息的routingkey完全一致\",{\"1\":{\"418\":1}}],[\"只有出现runtimeexception才回滚异常\",{\"1\":{\"303\":1}}],[\"只执行一次\",{\"1\":{\"390\":1}}],[\"只导出表结构\",{\"1\":{\"141\":1}}],[\"只需建立连接\",{\"1\":{\"38\":1}}],[\"用于接收json数据\",{\"1\":{\"570\":1}}],[\"用于接收url地址参数\",{\"1\":{\"570\":1}}],[\"用默认no即可\",{\"1\":{\"496\":1}}],[\"用mysqldump命令导出数据库\",{\"1\":{\"138\":1}}],[\"用户名已存在\",{\"1\":{\"91\":1}}],[\"用户名不能为空\",{\"1\":{\"91\":2}}],[\"用户给收件人发出邮件的同时把该邮件抄送给另外的人\",{\"1\":{\"58\":1}}],[\"导航栏\",{\"1\":{\"194\":1,\"234\":1}}],[\"导入\",{\"1\":{\"508\":1}}],[\"导入sql文件\",{\"1\":{\"149\":1}}],[\"导入数据库\",{\"0\":{\"145\":1}}],[\"导出完整数据库\",{\"0\":{\"137\":1}}],[\"导致数据传输效率较低\",{\"1\":{\"49\":1}}],[\"运行镜像\",{\"1\":{\"135\":1}}],[\"运行目录下\",{\"1\":{\"29\":1}}],[\"例子\",{\"0\":{\"134\":1}}],[\"例如a依赖了b\",{\"1\":{\"165\":1}}],[\"例如\",{\"1\":{\"139\":1,\"143\":1,\"146\":1,\"426\":1,\"472\":10,\"474\":8,\"476\":10}}],[\"例如断开连接或网络故障\",{\"1\":{\"50\":1}}],[\"例如examplebucket\",{\"1\":{\"15\":1}}],[\"网络等信息\",{\"1\":{\"133\":1}}],[\"内置sql注入剥离器\",{\"1\":{\"267\":1}}],[\"内置全局拦截插件\",{\"1\":{\"267\":1}}],[\"内置性能分析插件\",{\"1\":{\"266\":1}}],[\"内置分页插件\",{\"1\":{\"266\":1}}],[\"内置代码生成器\",{\"1\":{\"266\":1}}],[\"内存\",{\"1\":{\"133\":1}}],[\"内容\",{\"1\":{\"58\":1,\"386\":1,\"531\":1}}],[\"包括cpu\",{\"1\":{\"133\":1}}],[\"包括锁定\",{\"1\":{\"86\":1}}],[\"体积更大\",{\"1\":{\"133\":1}}],[\"仅保存容器当时的快照状态\",{\"1\":{\"133\":1}}],[\"再有交换机发给队列\",{\"1\":{\"404\":1}}],[\"再按ctrl\",{\"1\":{\"133\":1}}],[\"再重新登录回来\",{\"1\":{\"129\":1}}],[\"重写时是否可以运用appendfsync\",{\"1\":{\"496\":1}}],[\"重启消息也在\",{\"1\":{\"386\":1}}],[\"重启容器\",{\"1\":{\"133\":1}}],[\"重复前一个查找操作\",{\"1\":{\"151\":1}}],[\"重命名容器\",{\"1\":{\"133\":1}}],[\"重命名\",{\"1\":{\"29\":1}}],[\"停止容器\",{\"1\":{\"133\":1}}],[\"利用镜像ubuntu\",{\"1\":{\"133\":1}}],[\"容器\",{\"0\":{\"132\":1}}],[\"或者\",{\"1\":{\"329\":1,\"354\":1,\"514\":1}}],[\"或\",{\"1\":{\"131\":1,\"133\":1,\"151\":7,\"351\":1,\"355\":1}}],[\"列表中的值\",{\"1\":{\"346\":1}}],[\"列出本地所有镜像\",{\"1\":{\"131\":1}}],[\"列举文件\",{\"1\":{\"17\":1}}],[\"拉取一个镜像\",{\"1\":{\"131\":1}}],[\"拉取远程分支xxx\",{\"1\":{\"110\":1}}],[\"镜像\",{\"0\":{\"130\":1}}],[\"如二进制协议\",{\"1\":{\"479\":1}}],[\"如hincrby\",{\"1\":{\"474\":1}}],[\"如何在\",{\"1\":{\"127\":1}}],[\"如果有返回值\",{\"1\":{\"539\":1}}],[\"如果key不存在\",{\"1\":{\"474\":1}}],[\"如果存在则不创建\",{\"1\":{\"468\":1}}],[\"如果队列中有消息\",{\"1\":{\"384\":1}}],[\"如果在多个操作中涉及到较多的i\",{\"1\":{\"301\":1}}],[\"如果在多个操作中发生了错误\",{\"1\":{\"299\":1}}],[\"如果只需要导出表结构\",{\"1\":{\"141\":1}}],[\"如果服务器端不能正常关闭连接\",{\"1\":{\"43\":1}}],[\"如果要删除目录\",{\"1\":{\"19\":1}}],[\"如果设置keyprefix\",{\"1\":{\"17\":1}}],[\"如果不设置keyprefix\",{\"1\":{\"17\":1}}],[\"为属性赋值\",{\"1\":{\"573\":1}}],[\"为了更有效地使用内存\",{\"1\":{\"478\":1}}],[\"为了一直消费信息\",{\"1\":{\"388\":1}}],[\"为了避免每次使用docker命令都需要加上sudo权限\",{\"1\":{\"126\":1}}],[\"为空\",{\"1\":{\"350\":1}}],[\"为简化开发\",{\"1\":{\"260\":1}}],[\"为例\",{\"1\":{\"15\":1}}],[\"将功能增强\",{\"1\":{\"533\":1}}],[\"将name移入到数据库1中\",{\"1\":{\"466\":1}}],[\"将通道声明到交换机\",{\"1\":{\"408\":1}}],[\"将所有操作合并到一个事务中可以减少i\",{\"1\":{\"301\":1}}],[\"将数据回滚至操作之前的状态\",{\"1\":{\"299\":1}}],[\"将全文代码格式化\",{\"1\":{\"151\":1}}],[\"将全文的word1替换为word2\",{\"1\":{\"151\":2}}],[\"将选中的文本整体向左缩进一次\",{\"1\":{\"151\":1}}],[\"将选中的文本整体向右缩进一次\",{\"1\":{\"151\":1}}],[\"将复制的数据在光标的下一行\",{\"1\":{\"151\":1}}],[\"将本地文件xxx\",{\"1\":{\"133\":1}}],[\"将本地内容推送到远程仓库\",{\"1\":{\"120\":2}}],[\"将容器container导出到本地文件xxx\",{\"1\":{\"133\":1}}],[\"将镜像ubuntu\",{\"1\":{\"131\":2}}],[\"将当前用户添加到docker用户组\",{\"0\":{\"125\":1}}],[\"克隆之后使用和查看\",{\"1\":{\"120\":1}}],[\"克隆远程仓库\",{\"1\":{\"120\":1}}],[\"之后\",{\"1\":{\"120\":1}}],[\"远程仓库\",{\"0\":{\"119\":1}}],[\"六\",{\"0\":{\"119\":1},\"1\":{\"562\":1}}],[\"恢复\",{\"1\":{\"118\":1}}],[\"删错了\",{\"1\":{\"118\":1}}],[\"删除key对应的hash中的一个或多个field\",{\"1\":{\"474\":1}}],[\"删除一个hello\",{\"1\":{\"470\":1}}],[\"删除左右头部\",{\"1\":{\"470\":1}}],[\"删除所有数据\",{\"1\":{\"323\":1}}],[\"删除所有已停止的容器\",{\"1\":{\"133\":1}}],[\"删除多个\",{\"1\":{\"272\":1}}],[\"删除当前行\",{\"1\":{\"151\":1}}],[\"删除选中的文本\",{\"1\":{\"151\":1}}],[\"删除容器\",{\"1\":{\"133\":1}}],[\"删除镜像ubuntu\",{\"1\":{\"131\":1}}],[\"删除远程仓库\",{\"1\":{\"120\":1}}],[\"删除文件\",{\"0\":{\"117\":1}}],[\"删除文件或目录\",{\"1\":{\"19\":1}}],[\"删除本地分支xxx\",{\"1\":{\"110\":1}}],[\"删除图片\",{\"0\":{\"18\":1}}],[\"删除\",{\"1\":{\"13\":1}}],[\"五大数据类型\",{\"0\":{\"464\":1}}],[\"五\",{\"0\":{\"117\":1},\"1\":{\"562\":1}}],[\"若已提交\",{\"1\":{\"116\":1}}],[\"若该文件隐藏\",{\"1\":{\"112\":1}}],[\"丢弃暂存区的修改\",{\"1\":{\"116\":1}}],[\"丢弃工作区的修改\",{\"1\":{\"116\":1}}],[\"即撤销修改\",{\"1\":{\"116\":1}}],[\"即当浏览器不支持\",{\"1\":{\"35\":1}}],[\"简称\",{\"1\":{\"260\":1}}],[\"简单类型注入\",{\"1\":{\"531\":1}}],[\"简单\",{\"0\":{\"439\":1}}],[\"简单命令\",{\"0\":{\"161\":1}}],[\"简单易用\",{\"1\":{\"38\":1}}],[\"简洁查看\",{\"1\":{\"116\":1}}],[\"从有序集合中删除元素\",{\"1\":{\"476\":1}}],[\"从集合中弹出一个随机元素\",{\"1\":{\"472\":1}}],[\"从集合中删除元素\",{\"1\":{\"472\":1}}],[\"从最近到最远\",{\"1\":{\"116\":1}}],[\"从而使得浏览器与服务器之间的通信始终保持稳定和高效\",{\"1\":{\"35\":1}}],[\"四\",{\"0\":{\"115\":1},\"1\":{\"562\":1}}],[\"39\",{\"1\":{\"151\":1}}],[\"38\",{\"1\":{\"151\":1}}],[\"37\",{\"1\":{\"151\":1}}],[\"36\",{\"1\":{\"151\":1}}],[\"35\",{\"1\":{\"151\":1}}],[\"34\",{\"1\":{\"151\":1}}],[\"33\",{\"1\":{\"151\":1}}],[\"32\",{\"1\":{\"151\":1}}],[\"31\",{\"1\":{\"151\":1}}],[\"30\",{\"1\":{\"151\":1}}],[\"3\",{\"0\":{\"578\":1},\"1\":{\"114\":1,\"151\":1,\"171\":1,\"272\":1,\"468\":1,\"508\":1,\"512\":1,\"546\":1}}],[\"提高数据库操作的性能\",{\"1\":{\"301\":1}}],[\"提高性能\",{\"1\":{\"301\":1}}],[\"提高效率而生\",{\"1\":{\"260\":1}}],[\"提交\",{\"1\":{\"114\":1}}],[\"提示\",{\"1\":{\"62\":1,\"222\":1}}],[\"添加用户时出现异常\",{\"1\":{\"305\":2}}],[\"添加用户\",{\"1\":{\"305\":1}}],[\"添加\",{\"0\":{\"246\":1},\"1\":{\"114\":1}}],[\"添加apioperiation注解的被扫描\",{\"1\":{\"103\":1}}],[\"把用户传过来的token\",{\"1\":{\"573\":1}}],[\"把表中字段和实体类对应\",{\"1\":{\"280\":1}}],[\"把文件添加add和提交commit到版本库\",{\"0\":{\"113\":1}}],[\"把新建的分支yyy上传\",{\"1\":{\"110\":1}}],[\"三\",{\"0\":{\"113\":1},\"1\":{\"272\":1,\"562\":1}}],[\"则新建一个\",{\"1\":{\"474\":1}}],[\"则回退\",{\"1\":{\"116\":1}}],[\"则使用ls\",{\"1\":{\"112\":1}}],[\"则列举包含指定前缀的文件\",{\"1\":{\"17\":1}}],[\"则列举存储空间下的所有文件\",{\"1\":{\"17\":1}}],[\"新建本地分支\",{\"1\":{\"110\":1}}],[\"新建分支xxx\",{\"1\":{\"110\":1}}],[\"仍然删除分支xxx\",{\"1\":{\"110\":1}}],[\"忽略修改\",{\"1\":{\"110\":1}}],[\"并打印异常信息\",{\"1\":{\"305\":1}}],[\"并发控制\",{\"1\":{\"300\":1}}],[\"并且\",{\"1\":{\"352\":1}}],[\"并且传递的依赖是没有数量和层级的限制的\",{\"1\":{\"165\":1}}],[\"并且切换过去\",{\"1\":{\"110\":1}}],[\"并将结果存储到新的有序集合中\",{\"1\":{\"476\":2}}],[\"并将该字符串替换为word2\",{\"1\":{\"151\":1}}],[\"并将镜像命名为image\",{\"1\":{\"133\":1}}],[\"并提供了api接口\",{\"1\":{\"86\":1}}],[\"x\",{\"1\":{\"451\":2}}],[\"xxx\",{\"1\":{\"110\":5,\"133\":6,\"433\":1,\"531\":1}}],[\"xml配置详解\",{\"1\":{\"245\":1}}],[\"xml\",{\"1\":{\"55\":1,\"507\":1,\"509\":1,\"512\":1,\"517\":1,\"531\":1,\"545\":1}}],[\"二进制协议是redis自定义的序列化格式\",{\"1\":{\"479\":1}}],[\"二\",{\"0\":{\"109\":1,\"111\":1},\"1\":{\"272\":1,\"562\":1}}],[\"$s\",{\"1\":{\"151\":2}}],[\"$user\",{\"1\":{\"128\":1}}],[\"$\",{\"1\":{\"108\":2,\"112\":4,\"114\":3,\"116\":8,\"118\":4,\"120\":11,\"151\":1,\"531\":1}}],[\"$refs\",{\"1\":{\"82\":1}}],[\"一般\",{\"1\":{\"522\":1}}],[\"一般对象都是直接通过new出来\",{\"1\":{\"505\":1}}],[\"一种思想\",{\"1\":{\"504\":1}}],[\"一条消息\",{\"1\":{\"414\":1}}],[\"一套玩转mybatis\",{\"1\":{\"261\":1}}],[\"一次性提交多个文件\",{\"1\":{\"114\":1}}],[\"一分支管理\",{\"0\":{\"109\":1}}],[\"一\",{\"0\":{\"107\":1},\"1\":{\"272\":1,\"562\":1}}],[\"版本控制\",{\"0\":{\"106\":1,\"115\":1}}],[\"根本不需要的描述\",{\"1\":{\"103\":1}}],[\"搭建\",{\"0\":{\"101\":1}}],[\"666\",{\"1\":{\"272\":2,\"541\":1}}],[\"6379\",{\"1\":{\"97\":1}}],[\"6\",{\"1\":{\"95\":1,\"151\":1,\"519\":1,\"566\":1}}],[\"引入\",{\"1\":{\"94\":1}}],[\"qian\",{\"1\":{\"539\":1}}],[\"queues\",{\"1\":{\"455\":1}}],[\"queuestodeclare\",{\"1\":{\"440\":1,\"442\":2}}],[\"queuebinding\",{\"1\":{\"444\":2,\"446\":2,\"448\":2}}],[\"queuebind\",{\"1\":{\"410\":1,\"422\":3,\"423\":1,\"433\":3}}],[\"queue\",{\"1\":{\"410\":3,\"422\":5,\"423\":3,\"433\":5,\"440\":1,\"442\":2,\"444\":2,\"446\":2,\"448\":2,\"451\":5,\"455\":1}}],[\"queuedeclare\",{\"1\":{\"386\":1,\"388\":1,\"398\":1,\"410\":1,\"422\":1,\"423\":1,\"433\":1}}],[\"querywrapper<>\",{\"1\":{\"291\":1}}],[\"querywrapper<record>\",{\"1\":{\"291\":1}}],[\"querywrapper<web>\",{\"1\":{\"91\":2}}],[\"querywrapper\",{\"1\":{\"91\":3,\"269\":8,\"291\":3}}],[\"q\",{\"1\":{\"151\":3,\"272\":3,\"294\":5}}],[\"q可以挂起容器\",{\"1\":{\"133\":1}}],[\"qq\",{\"1\":{\"54\":2,\"60\":3}}],[\"密码加密的文章\",{\"0\":{\"206\":1}}],[\"密码长度不能超过50\",{\"1\":{\"91\":1}}],[\"密码不能为空\",{\"1\":{\"91\":1}}],[\"避免了锁过期的问题\",{\"1\":{\"88\":1}}],[\"保证数据安全性\",{\"1\":{\"496\":1}}],[\"保证数据的完整性\",{\"1\":{\"299\":1}}],[\"保证了锁的操作原子性\",{\"1\":{\"87\":1}}],[\"保存配置\",{\"1\":{\"491\":1}}],[\"保存并退出\",{\"1\":{\"151\":1}}],[\"保存临时位置\",{\"1\":{\"30\":1}}],[\"保存\",{\"1\":{\"29\":1,\"151\":1}}],[\"需要退出服务器\",{\"1\":{\"129\":1}}],[\"需要自己实现保证操作的原子性\",{\"1\":{\"87\":1}}],[\"需要使用polyfill或其他技术\",{\"1\":{\"42\":1}}],[\"使数据占用的空间更小\",{\"1\":{\"478\":1}}],[\"使事务回滚\",{\"1\":{\"305\":1}}],[\"使得锁的使用变得简单\",{\"1\":{\"86\":1}}],[\"使用场景\",{\"1\":{\"573\":1}}],[\"使用mapper继承basemapper<t>即可开箱即用\",{\"1\":{\"271\":1}}],[\"使用mysql命令导入\",{\"1\":{\"146\":1}}],[\"使用坐标主动排除掉\",{\"1\":{\"170\":1}}],[\"使用已创建的数据库\",{\"1\":{\"149\":1}}],[\"使用sources命令导入\",{\"1\":{\"148\":1}}],[\"使用cron表达式指定执行时间\",{\"0\":{\"69\":1}}],[\"使用\",{\"0\":{\"582\":1},\"1\":{\"66\":1,\"98\":1,\"112\":1,\"290\":1,\"537\":1}}],[\"使用ram用户访问密钥发起请求\",{\"1\":{\"13\":1}}],[\"使用ram访问\",{\"0\":{\"10\":1}}],[\"使用指南\",{\"1\":{\"218\":1,\"219\":1},\"2\":{\"1\":1,\"7\":1,\"20\":1,\"104\":1,\"121\":1,\"154\":1,\"189\":1,\"204\":1,\"210\":1,\"239\":1,\"240\":1,\"256\":1,\"306\":1,\"456\":1,\"497\":1,\"592\":1}}],[\"释放锁等\",{\"1\":{\"86\":1}}],[\"读取图片文件\",{\"1\":{\"82\":1}}],[\"对有序集合中指定元素的分数进行增加\",{\"1\":{\"476\":1}}],[\"对于\",{\"1\":{\"224\":1}}],[\"对于老的浏览器\",{\"1\":{\"42\":1}}],[\"对象\",{\"1\":{\"82\":1}}],[\"创建拦截器\",{\"0\":{\"576\":1}}],[\"创建自定义注解\",{\"0\":{\"574\":1}}],[\"创建使用\",{\"0\":{\"544\":1}}],[\"创建对象\",{\"1\":{\"504\":1}}],[\"创建连接对象\",{\"1\":{\"408\":1}}],[\"创建mq的连接工厂对象\",{\"1\":{\"386\":1,\"388\":1}}],[\"创建新的数据库\",{\"1\":{\"149\":1}}],[\"创建并启动一个容器\",{\"1\":{\"133\":1}}],[\"创建某个container的镜像\",{\"1\":{\"131\":1}}],[\"创建ssh\",{\"1\":{\"120\":1}}],[\"创建版本库\",{\"0\":{\"111\":1}}],[\"创建\",{\"1\":{\"82\":1,\"112\":1,\"135\":1}}],[\"预览图片的\",{\"1\":{\"82\":1}}],[\"依赖注入\",{\"0\":{\"515\":1},\"1\":{\"520\":1}}],[\"依赖范围\",{\"0\":{\"172\":1}}],[\"依赖传递\",{\"0\":{\"164\":1}}],[\"依赖管理\",{\"0\":{\"163\":1}}],[\"依赖\",{\"1\":{\"74\":1,\"243\":1}}],[\"数据源\",{\"1\":{\"531\":1}}],[\"数据库切换\",{\"1\":{\"463\":1}}],[\"数据库名\",{\"1\":{\"138\":2,\"142\":2,\"144\":1,\"146\":2}}],[\"数据模型\",{\"1\":{\"309\":1}}],[\"数据一致性\",{\"1\":{\"298\":1}}],[\"数据校验\",{\"0\":{\"73\":1}}],[\"数据格式紧凑\",{\"1\":{\"39\":1}}],[\"5s\",{\"1\":{\"466\":1}}],[\"5672\",{\"1\":{\"386\":1,\"388\":1,\"390\":1,\"436\":1}}],[\"50\",{\"1\":{\"368\":1}}],[\"500mb\",{\"1\":{\"133\":1}}],[\"5000ms\",{\"1\":{\"72\":1}}],[\"5000l\",{\"1\":{\"72\":1}}],[\"5000\",{\"1\":{\"68\":2}}],[\"5\",{\"0\":{\"582\":1},\"1\":{\"91\":1,\"151\":1,\"244\":1,\"466\":1,\"566\":1}}],[\"5<\",{\"1\":{\"27\":1,\"95\":1,\"244\":1}}],[\"配置拦截器\",{\"0\":{\"578\":1}}],[\"配置tomcat启动即可\",{\"1\":{\"551\":1}}],[\"配置bean\",{\"1\":{\"510\":1}}],[\"配置实在是多\",{\"1\":{\"506\":1}}],[\"配置redistemplate\",{\"1\":{\"484\":1}}],[\"配置\",{\"0\":{\"588\":1},\"1\":{\"64\":1,\"76\":1,\"514\":1}}],[\"在里面加载spring配置\",{\"1\":{\"550\":1}}],[\"在哪里执行\",{\"1\":{\"535\":1}}],[\"在key对应的hash中设置field对应的value\",{\"1\":{\"474\":1}}],[\"在fanout的模式下\",{\"1\":{\"414\":1}}],[\"在多个操作之间存在依赖关系的情况下\",{\"1\":{\"298\":1}}],[\"在\",{\"1\":{\"260\":1}}],[\"在页面禁用功能与布局\",{\"1\":{\"192\":1}}],[\"在第n1行与n2行之间寻找word1这个字符串\",{\"1\":{\"151\":1}}],[\"在本地和容器间复制文件\",{\"1\":{\"133\":1}}],[\"在容器中执行命令\",{\"1\":{\"133\":1}}],[\"在图片文件读取完毕后设置预览图片的\",{\"1\":{\"82\":1}}],[\"在spring\",{\"1\":{\"63\":1}}],[\"在这种抄送方式中\",{\"1\":{\"58\":1}}],[\"29\",{\"1\":{\"151\":1}}],[\"28\",{\"1\":{\"151\":1}}],[\"27\",{\"1\":{\"151\":1}}],[\"26\",{\"1\":{\"151\":1}}],[\"25\",{\"1\":{\"151\":1}}],[\"24\",{\"1\":{\"151\":1}}],[\"23<\",{\"1\":{\"508\":1,\"546\":1}}],[\"23\",{\"1\":{\"151\":1}}],[\"21\",{\"1\":{\"151\":1,\"293\":1}}],[\"2022版mybatisplus教程\",{\"1\":{\"261\":1}}],[\"2020\",{\"1\":{\"217\":1}}],[\"20000\",{\"1\":{\"135\":1}}],[\"20\",{\"1\":{\"131\":11,\"133\":3,\"151\":1,\"468\":2}}],[\"20l\",{\"1\":{\"91\":1}}],[\"22\",{\"1\":{\"127\":1,\"135\":1,\"151\":1,\"294\":1}}],[\"2\",{\"0\":{\"576\":1,\"588\":1},\"1\":{\"60\":1,\"79\":1,\"103\":1,\"141\":1,\"148\":1,\"151\":1,\"209\":14,\"272\":2,\"470\":1,\"476\":6,\"510\":1}}],[\"jackson2jsonredisserializer\",{\"1\":{\"484\":6}}],[\"java\",{\"1\":{\"481\":1,\"483\":1,\"511\":1,\"517\":1,\"550\":2}}],[\"javamailsender\",{\"1\":{\"58\":7}}],[\"javax\",{\"1\":{\"54\":1}}],[\"java上传文件概述和文件下载\",{\"0\":{\"9\":1}}],[\"jsp\",{\"1\":{\"564\":3}}],[\"jsp页面\",{\"1\":{\"564\":1}}],[\"json数据传递参数\",{\"1\":{\"561\":1}}],[\"jsonautodetect\",{\"1\":{\"484\":1}}],[\"json和messagepack是常用的序列化格式\",{\"1\":{\"479\":1}}],[\"json\",{\"1\":{\"479\":1,\"562\":1}}],[\"jsonobject\",{\"1\":{\"291\":3}}],[\"js\",{\"1\":{\"432\":1}}],[\"jkl\",{\"1\":{\"272\":1}}],[\"j\",{\"1\":{\"151\":1}}],[\"jwtutil\",{\"1\":{\"91\":1,\"577\":1}}],[\"jwt\",{\"1\":{\"91\":2}}],[\"jpg\",{\"1\":{\"60\":1}}],[\"42\",{\"1\":{\"151\":1}}],[\"41\",{\"1\":{\"151\":1}}],[\"40\",{\"1\":{\"151\":1}}],[\"4\",{\"0\":{\"580\":1},\"1\":{\"151\":1,\"470\":2,\"512\":1}}],[\"47f4c019880711ebb6edd017c2d2eca2\",{\"1\":{\"60\":1}}],[\"465\",{\"1\":{\"54\":1}}],[\"1<\",{\"1\":{\"171\":1,\"546\":1}}],[\"19\",{\"1\":{\"151\":1}}],[\"19138084894\",{\"1\":{\"60\":3}}],[\"18\",{\"1\":{\"151\":1}}],[\"17\",{\"1\":{\"151\":1}}],[\"16\",{\"1\":{\"151\":1}}],[\"163\",{\"1\":{\"60\":3}}],[\"15\",{\"1\":{\"151\":1}}],[\"14\",{\"1\":{\"151\":1,\"567\":1}}],[\"13\",{\"1\":{\"151\":1}}],[\"11\",{\"1\":{\"151\":1}}],[\"1\",{\"0\":{\"574\":1,\"586\":1},\"1\":{\"79\":1,\"91\":2,\"99\":1,\"103\":1,\"135\":1,\"146\":1,\"151\":3,\"153\":3,\"208\":12,\"217\":2,\"253\":1,\"272\":1,\"293\":1,\"294\":2,\"376\":1,\"386\":1,\"388\":1,\"390\":1,\"398\":1,\"436\":1,\"466\":1,\"470\":3,\"474\":8,\"476\":4,\"486\":1,\"508\":1}}],[\"1000\",{\"1\":{\"398\":1}}],[\"100\",{\"1\":{\"79\":1,\"82\":2}}],[\"10\",{\"1\":{\"79\":1,\"151\":1,\"291\":1,\"377\":3,\"438\":1}}],[\"10mb\",{\"1\":{\"30\":2}}],[\"123\",{\"1\":{\"517\":1}}],[\"123root\",{\"1\":{\"272\":1}}],[\"127\",{\"1\":{\"153\":3,\"386\":1,\"388\":1,\"390\":1,\"436\":1}}],[\"12\",{\"0\":{\"69\":1},\"1\":{\"70\":1,\"151\":1}}],[\"附带图片\",{\"1\":{\"58\":1}}],[\"主键\",{\"1\":{\"277\":1}}],[\"主键返回\",{\"0\":{\"246\":1}}],[\"主代码\",{\"1\":{\"174\":1}}],[\"主题包含了一个自定义徽章可以使用\",{\"1\":{\"225\":1}}],[\"主题\",{\"1\":{\"58\":1}}],[\"主账号accesskey泄露会威胁您所有资源的安全\",{\"1\":{\"12\":1}}],[\"知道发件人把该邮件抄送给了另外哪些人\",{\"1\":{\"58\":1}}],[\"抄送人\",{\"1\":{\"58\":1}}],[\"抄送\",{\"1\":{\"58\":1}}],[\"80\",{\"1\":{\"272\":1}}],[\"880\",{\"1\":{\"272\":2}}],[\"8\",{\"1\":{\"54\":1,\"149\":1,\"151\":1}}],[\"邮件配置\",{\"1\":{\"54\":1}}],[\"因为sockjs在不支持websocket的浏览器中使用的是长轮询技术\",{\"1\":{\"49\":1}}],[\"因此可以保证数据的完整性\",{\"1\":{\"495\":1}}],[\"因此可能会遇到连接不稳定的情况\",{\"1\":{\"50\":1}}],[\"因此\",{\"1\":{\"302\":1}}],[\"因此需要发送大量的头部信息\",{\"1\":{\"49\":1}}],[\"因此在不支持websocket的浏览器中也可以使用\",{\"1\":{\"46\":1}}],[\"因此只有在支持html5的浏览器中才能使用\",{\"1\":{\"42\":1}}],[\"因此数据传输的效率非常高\",{\"1\":{\"39\":1}}],[\"头部信息较大\",{\"1\":{\"49\":1}}],[\"甚至包括ie6\",{\"1\":{\"45\":1}}],[\"跨浏览器\",{\"1\":{\"45\":1}}],[\"跨域放行\",{\"1\":{\"13\":1}}],[\"可能会导致丢失这1s数据\",{\"1\":{\"496\":1}}],[\"可能会导致资源浪费和性能问题\",{\"1\":{\"43\":1}}],[\"可选依赖\",{\"0\":{\"166\":1},\"1\":{\"168\":1}}],[\"可靠性\",{\"1\":{\"47\":1}}],[\"可以把id拿出来\",{\"1\":{\"247\":1}}],[\"可以取消当前正在执行的命令\",{\"1\":{\"151\":1}}],[\"可以使用以下命令找到导出的数据库\",{\"1\":{\"144\":1}}],[\"可以将当前用户加入安装中自动创建的docker用户组\",{\"1\":{\"126\":1}}],[\"可以看到3次\",{\"1\":{\"116\":1}}],[\"可以保证数据的可靠性\",{\"1\":{\"47\":1}}],[\"可以同时在客户端和服务器端发送和接收消息\",{\"1\":{\"40\":1}}],[\"可以自动降级为支持长轮询等传输方式的\",{\"1\":{\"35\":1}}],[\"可以有效降低accesskey泄露的风险\",{\"1\":{\"12\":1}}],[\"双向通信\",{\"1\":{\"40\":1}}],[\"高效性\",{\"1\":{\"39\":1}}],[\"就消费掉\",{\"1\":{\"384\":1}}],[\"就可以进行双向通信\",{\"1\":{\"38\":1}}],[\"就建一个\",{\"1\":{\"29\":1}}],[\"它是\",{\"1\":{\"489\":1,\"495\":1}}],[\"它们可以方便地与其他语言和系统进行交互\",{\"1\":{\"479\":1}}],[\"它们都有自己的优势和缺点\",{\"1\":{\"36\":1}}],[\"它可以最大程度地减少数据占用的空间\",{\"1\":{\"479\":1}}],[\"它需要对存储的数据进行序列化\",{\"1\":{\"478\":1}}],[\"它实现了浏览器与服务器全双工通信\",{\"1\":{\"35\":1}}],[\"时间\",{\"1\":{\"562\":1}}],[\"时\",{\"1\":{\"35\":1}}],[\"而是要指定一个routingkey\",{\"1\":{\"416\":1}}],[\"而redisson分布式锁是基于redis的redisson分布式框架实现的\",{\"1\":{\"85\":1}}],[\"而\",{\"1\":{\"35\":1}}],[\"是保证数据库安全和稳定运行的基本手段\",{\"1\":{\"302\":1}}],[\"是一个\",{\"1\":{\"260\":1}}],[\"是\",{\"1\":{\"35\":2,\"489\":1,\"495\":1}}],[\"是否以append\",{\"1\":{\"496\":1}}],[\"是否开启多个消息同时确认\",{\"1\":{\"398\":1}}],[\"是否开启上传\",{\"1\":{\"30\":1}}],[\"是否消费结束后自动删除\",{\"1\":{\"386\":1,\"388\":1}}],[\"是否独占队列\",{\"1\":{\"386\":1,\"388\":1}}],[\"是否延迟解析\",{\"1\":{\"30\":1}}],[\"具体应该根据实际情况来选择\",{\"1\":{\"35\":1}}],[\"应用场景\",{\"1\":{\"34\":1,\"384\":1}}],[\"和远程分支连接起来\",{\"1\":{\"110\":1}}],[\"和\",{\"0\":{\"33\":1},\"1\":{\"35\":1,\"127\":1,\"219\":1}}],[\"backimg\",{\"1\":{\"583\":1}}],[\"basicack\",{\"1\":{\"398\":1}}],[\"basicqos\",{\"1\":{\"398\":1}}],[\"basicproperties\",{\"1\":{\"388\":1,\"398\":1,\"410\":1,\"422\":1,\"423\":1,\"433\":1}}],[\"basicpublish\",{\"1\":{\"386\":1,\"408\":1,\"420\":1,\"432\":1}}],[\"basicconsume\",{\"1\":{\"388\":1,\"398\":1,\"410\":1,\"422\":1,\"423\":1,\"433\":1}}],[\"basic\",{\"1\":{\"386\":1}}],[\"basemapper<t>\",{\"1\":{\"269\":1}}],[\"basemapper\",{\"0\":{\"268\":1}}],[\"bgsave\",{\"1\":{\"491\":1}}],[\"bdsize\",{\"1\":{\"463\":1}}],[\"body\",{\"1\":{\"388\":3,\"398\":3,\"410\":3,\"422\":2,\"423\":2,\"433\":2}}],[\"book\",{\"1\":{\"521\":2}}],[\"bookserviceimpl\",{\"1\":{\"510\":1,\"519\":1}}],[\"bookservice\",{\"1\":{\"510\":1,\"519\":1}}],[\"bookdao1\",{\"1\":{\"512\":2}}],[\"bookdaoimpl\",{\"1\":{\"510\":1,\"512\":1,\"517\":1,\"519\":1,\"523\":1,\"525\":1,\"531\":1}}],[\"bookdao\",{\"1\":{\"510\":1,\"512\":6,\"517\":1,\"519\":3,\"521\":4,\"525\":1,\"531\":2,\"535\":1,\"539\":1,\"541\":1}}],[\"boolean\",{\"1\":{\"91\":1,\"305\":1,\"577\":1,\"581\":1,\"587\":1}}],[\"boot应用程序中使用\",{\"1\":{\"63\":1}}],[\"boot\",{\"0\":{\"434\":1},\"1\":{\"32\":1,\"56\":1,\"75\":1,\"435\":1}}],[\"boot<\",{\"1\":{\"32\":1,\"56\":1,\"75\":1,\"435\":1}}],[\"b2\",{\"1\":{\"386\":1,\"388\":1}}],[\"b1\",{\"1\":{\"386\":1,\"388\":1}}],[\"byte\",{\"1\":{\"388\":1,\"398\":1,\"410\":1,\"422\":1,\"423\":1,\"433\":1}}],[\"by\",{\"1\":{\"325\":2,\"326\":2,\"368\":1,\"373\":1}}],[\"bilibili\",{\"1\":{\"261\":1,\"309\":1,\"380\":1,\"501\":1,\"543\":1,\"561\":1,\"567\":1}}],[\"bind\",{\"1\":{\"451\":1}}],[\"bindingbuilder\",{\"1\":{\"451\":1}}],[\"binding\",{\"1\":{\"451\":1}}],[\"bindings\",{\"1\":{\"444\":2,\"446\":2,\"448\":2}}],[\"bindingresult\",{\"1\":{\"81\":4}}],[\"bin\",{\"1\":{\"140\":1}}],[\"blog\",{\"1\":{\"251\":2,\"253\":2,\"255\":2}}],[\"beink\",{\"1\":{\"510\":2,\"517\":1,\"519\":2,\"525\":1,\"531\":1,\"535\":1,\"537\":1,\"539\":1,\"541\":1,\"550\":1}}],[\"between\",{\"1\":{\"343\":1}}],[\"be\",{\"1\":{\"171\":1}}],[\"bean>\",{\"1\":{\"517\":1,\"519\":2,\"525\":1}}],[\"bean\",{\"0\":{\"513\":1},\"1\":{\"97\":1,\"103\":1,\"289\":1,\"451\":3,\"484\":1}}],[\"b依赖了c和d\",{\"1\":{\"165\":1}}],[\"b\",{\"1\":{\"110\":2,\"386\":2,\"388\":1}}],[\"branch\",{\"1\":{\"110\":3}}],[\"but\",{\"1\":{\"17\":1,\"19\":1}}],[\"bucket\",{\"1\":{\"17\":1,\"19\":1}}],[\"bucketname\",{\"1\":{\"15\":2}}],[\"build\",{\"1\":{\"15\":1,\"17\":1,\"19\":1,\"103\":2}}],[\"热加载\",{\"0\":{\"31\":1}}],[\"总大小\",{\"1\":{\"30\":1}}],[\"09\",{\"1\":{\"561\":1}}],[\"02\",{\"1\":{\"543\":1}}],[\"01\",{\"1\":{\"501\":1}}],[\"04创建一个容器\",{\"1\":{\"133\":1}}],[\"04从本地文件ubuntu\",{\"1\":{\"131\":1}}],[\"04导出到本地文件ubuntu\",{\"1\":{\"131\":1}}],[\"04\",{\"1\":{\"127\":1,\"131\":9,\"133\":2,\"309\":1}}],[\"0<\",{\"1\":{\"102\":1}}],[\"0\",{\"0\":{\"69\":2},\"1\":{\"30\":1,\"70\":2,\"82\":1,\"91\":6,\"97\":1,\"102\":1,\"103\":1,\"135\":1,\"151\":1,\"153\":6,\"377\":1,\"386\":2,\"388\":2,\"390\":2,\"436\":2,\"438\":1,\"468\":1,\"470\":2,\"476\":1,\"541\":1,\"546\":1}}],[\"返回一个串\",{\"1\":{\"564\":1}}],[\"返回值\",{\"1\":{\"570\":1}}],[\"返回值类型\",{\"1\":{\"548\":1}}],[\"返回值为null\",{\"1\":{\"283\":1}}],[\"返回对象必须是object\",{\"1\":{\"539\":1}}],[\"返回有序集合中元素的数量\",{\"1\":{\"476\":1}}],[\"返回有序集合中指定元素的排名\",{\"1\":{\"476\":1}}],[\"返回有序集合中指定分数范围的元素数量\",{\"1\":{\"476\":1}}],[\"返回有序集合中指定分数范围的元素\",{\"1\":{\"476\":1}}],[\"返回有序集合中指定范围的元素\",{\"1\":{\"476\":1}}],[\"返回多个集合的交集\",{\"1\":{\"472\":1}}],[\"返回多个集合的差集\",{\"1\":{\"472\":1}}],[\"返回多个集合的并集\",{\"1\":{\"472\":1}}],[\"返回集合中元素的数量\",{\"1\":{\"472\":1}}],[\"返回集合中所有元素\",{\"1\":{\"472\":1}}],[\"返回顶部按钮\",{\"1\":{\"203\":1,\"237\":1}}],[\"返回路径\",{\"1\":{\"29\":1}}],[\"返回所有的链接\",{\"1\":{\"17\":1}}],[\"uroot\",{\"1\":{\"140\":1,\"144\":1,\"147\":1}}],[\"url>\",{\"1\":{\"160\":1}}],[\"url\",{\"1\":{\"82\":1}}],[\"usr\",{\"1\":{\"140\":1}}],[\"usegeneratedkeys=\",{\"1\":{\"248\":1}}],[\"use\",{\"1\":{\"149\":1}}],[\"usesingleserver\",{\"1\":{\"97\":1}}],[\"userinfoimpl\",{\"1\":{\"579\":1,\"581\":1}}],[\"userinfo\",{\"1\":{\"575\":1,\"581\":1,\"583\":1}}],[\"usercontroler类\",{\"1\":{\"547\":1}}],[\"usercontroller\",{\"1\":{\"81\":1,\"548\":1}}],[\"userlist\",{\"1\":{\"291\":1}}],[\"usermapper\",{\"1\":{\"272\":9,\"305\":3}}],[\"usermod\",{\"1\":{\"128\":1}}],[\"user\",{\"1\":{\"77\":4,\"79\":6,\"81\":2,\"108\":2,\"153\":1,\"272\":17,\"305\":3,\"438\":1,\"448\":3,\"474\":8,\"562\":2,\"579\":1,\"583\":1,\"589\":2}}],[\"userservice\",{\"1\":{\"305\":1}}],[\"userserviceimpl\",{\"1\":{\"305\":1}}],[\"users\",{\"1\":{\"60\":2,\"272\":6}}],[\"username\",{\"1\":{\"54\":1,\"436\":1,\"562\":2}}],[\"u用户名\",{\"1\":{\"138\":1,\"142\":1,\"146\":1}}],[\"ubuntu\",{\"1\":{\"127\":1,\"131\":6,\"133\":2}}],[\"u\",{\"1\":{\"120\":1,\"151\":1}}],[\"unlock\",{\"1\":{\"99\":1}}],[\"up\",{\"1\":{\"248\":2,\"293\":2,\"294\":2}}],[\"updatewrapper<article>\",{\"1\":{\"293\":1}}],[\"updatewrapper<>\",{\"1\":{\"272\":1,\"293\":1}}],[\"updatewrapper<user>\",{\"1\":{\"272\":1}}],[\"updatewrapper\",{\"1\":{\"269\":1,\"293\":3}}],[\"update\",{\"0\":{\"318\":1},\"1\":{\"133\":1,\"247\":1,\"248\":1,\"269\":1,\"272\":1,\"293\":1,\"294\":1,\"319\":1,\"461\":1}}],[\"updatebyid\",{\"1\":{\"99\":1,\"269\":1}}],[\"uploadfile\",{\"1\":{\"28\":1,\"29\":5}}],[\"upload\",{\"1\":{\"28\":1,\"29\":2}}],[\"uploadobject\",{\"1\":{\"15\":1}}],[\"utf8mb4\",{\"1\":{\"310\":1}}],[\"utf\",{\"1\":{\"54\":1,\"149\":1}}],[\"uuid\",{\"1\":{\"29\":1,\"91\":1}}],[\"没有文件夹\",{\"1\":{\"29\":1}}],[\"yy\",{\"1\":{\"151\":1}}],[\"yyy\",{\"1\":{\"110\":1}}],[\"yyyy\",{\"1\":{\"29\":1}}],[\"y\",{\"1\":{\"151\":1,\"178\":1,\"179\":1,\"180\":1,\"182\":1,\"184\":1,\"185\":1,\"187\":1}}],[\"yml\",{\"1\":{\"53\":1,\"531\":1}}],[\"youremail\",{\"1\":{\"120\":1}}],[\"your\",{\"1\":{\"17\":1,\"19\":1,\"70\":1,\"108\":1}}],[\"youraccesskeysecret\",{\"1\":{\"15\":1}}],[\"youraccesskeyid\",{\"1\":{\"15\":1}}],[\"><\",{\"1\":{\"525\":1}}],[\"><img\",{\"1\":{\"60\":1}}],[\">=\",{\"1\":{\"337\":1}}],[\">aaa\",{\"1\":{\"144\":1}}],[\">50\",{\"1\":{\"91\":1}}],[\">\",{\"1\":{\"28\":3,\"60\":1,\"72\":1,\"82\":4,\"95\":1,\"138\":1,\"140\":1,\"142\":1,\"151\":1,\"171\":1,\"244\":1,\"248\":1,\"251\":3,\"253\":3,\"255\":4,\"336\":1,\"368\":1,\"428\":1,\"430\":1,\"453\":1,\"508\":1,\"510\":3,\"514\":1,\"517\":3,\"519\":6,\"525\":3}}],[\"dump\",{\"1\":{\"492\":1,\"493\":1}}],[\"disposablebean\",{\"1\":{\"514\":1}}],[\"distinct\",{\"1\":{\"331\":1,\"332\":1}}],[\"direct\",{\"1\":{\"420\":3,\"422\":5,\"423\":3,\"432\":1,\"438\":3,\"446\":4,\"451\":1}}],[\"direct类型的exchange\",{\"1\":{\"415\":1}}],[\"div>\",{\"1\":{\"82\":1}}],[\"dbtype\",{\"1\":{\"289\":1}}],[\"dao\",{\"1\":{\"510\":1,\"517\":1,\"519\":1,\"521\":2,\"525\":1,\"535\":1,\"537\":1,\"539\":1,\"541\":1}}],[\"daisy\",{\"1\":{\"120\":2}}],[\"date\",{\"1\":{\"29\":1,\"91\":2}}],[\"database\",{\"1\":{\"489\":1}}],[\"databases\",{\"1\":{\"149\":1}}],[\"data\",{\"1\":{\"28\":1}}],[\"d\",{\"1\":{\"110\":2,\"142\":1,\"144\":1,\"151\":1}}],[\"documented\",{\"1\":{\"575\":1}}],[\"documentationtype\",{\"1\":{\"103\":1}}],[\"docker安装rabbitmq详细步骤\",{\"1\":{\"380\":1}}],[\"docker\",{\"0\":{\"124\":1},\"1\":{\"127\":2,\"128\":1,\"131\":7,\"133\":19,\"135\":3}}],[\"docket\",{\"1\":{\"103\":2}}],[\"dotask\",{\"1\":{\"70\":1}}],[\"dd\",{\"1\":{\"29\":1,\"151\":1}}],[\"destroy\",{\"1\":{\"514\":1}}],[\"destory\",{\"1\":{\"514\":3}}],[\"desc\",{\"1\":{\"371\":1,\"373\":1}}],[\"description\",{\"1\":{\"103\":1,\"274\":1,\"286\":1,\"413\":1,\"425\":1}}],[\"dectby\",{\"1\":{\"468\":1}}],[\"decr\",{\"1\":{\"468\":1}}],[\"decimalmax\",{\"1\":{\"79\":1}}],[\"decimalmin\",{\"1\":{\"79\":1}}],[\"dependencies>\",{\"1\":{\"546\":1}}],[\"dependency>\",{\"1\":{\"27\":1,\"32\":1,\"56\":1,\"75\":1,\"95\":1,\"102\":1,\"168\":1,\"171\":2,\"244\":1,\"435\":1,\"508\":1,\"546\":2}}],[\"deplyconsumer\",{\"1\":{\"455\":1}}],[\"deplyproducer\",{\"1\":{\"453\":1}}],[\"deplybinding\",{\"1\":{\"451\":1}}],[\"delaytime\",{\"1\":{\"453\":3}}],[\"delayqueue\",{\"1\":{\"451\":2}}],[\"delayed\",{\"1\":{\"451\":2}}],[\"delayexchange\",{\"1\":{\"451\":2}}],[\"delay\",{\"1\":{\"451\":3}}],[\"deletebatchids\",{\"1\":{\"269\":1,\"272\":1}}],[\"deletebymap\",{\"1\":{\"269\":1,\"272\":1}}],[\"deletebyid\",{\"1\":{\"269\":1,\"272\":1}}],[\"delete\",{\"0\":{\"321\":1},\"1\":{\"91\":1,\"269\":1,\"272\":2,\"322\":1,\"323\":1,\"568\":1}}],[\"deleteobject\",{\"1\":{\"13\":1,\"19\":2}}],[\"dead\",{\"1\":{\"451\":6,\"453\":4,\"455\":1}}],[\"debug\",{\"1\":{\"54\":1}}],[\"defaulttyping\",{\"1\":{\"484\":1}}],[\"defaultconsumer\",{\"1\":{\"388\":1,\"398\":1,\"410\":1,\"422\":1,\"423\":1,\"433\":1}}],[\"default\",{\"1\":{\"54\":1,\"82\":1}}],[\"devtools<\",{\"1\":{\"32\":1}}],[\"visibility\",{\"1\":{\"484\":1}}],[\"virtual\",{\"1\":{\"436\":1}}],[\"views\",{\"1\":{\"248\":2,\"294\":2}}],[\"vim\",{\"0\":{\"150\":1}}],[\"vuepress\",{\"1\":{\"224\":1}}],[\"version\",{\"1\":{\"103\":1,\"171\":2}}],[\"version>\",{\"1\":{\"27\":1,\"95\":1,\"102\":1,\"168\":1,\"171\":2,\"244\":1,\"508\":1,\"546\":2}}],[\"v\",{\"1\":{\"91\":3,\"120\":2,\"151\":1,\"466\":1}}],[\"validated\",{\"1\":{\"81\":1}}],[\"validationmessages\",{\"1\":{\"76\":1}}],[\"validation<\",{\"1\":{\"75\":1}}],[\"value>\",{\"1\":{\"525\":2}}],[\"value序列化方式采用jackson\",{\"1\":{\"484\":1}}],[\"value的长度\",{\"1\":{\"468\":1}}],[\"value后面增加world\",{\"1\":{\"468\":1}}],[\"values\",{\"1\":{\"248\":1,\"313\":1,\"315\":2,\"317\":1}}],[\"valueoperations\",{\"1\":{\"91\":1}}],[\"valueof\",{\"1\":{\"68\":1,\"99\":1}}],[\"value\",{\"1\":{\"79\":2,\"91\":3,\"440\":1,\"444\":4,\"446\":4,\"448\":4,\"474\":1,\"531\":1,\"568\":2,\"570\":1}}],[\"value=\",{\"1\":{\"28\":2,\"281\":1,\"517\":2,\"519\":2,\"525\":1}}],[\"void\",{\"1\":{\"25\":1,\"58\":3,\"60\":3,\"70\":1,\"72\":2,\"79\":4,\"272\":4,\"386\":1,\"388\":2,\"390\":1,\"398\":2,\"408\":1,\"410\":2,\"420\":1,\"422\":2,\"423\":2,\"432\":1,\"433\":2,\"438\":5,\"440\":1,\"442\":2,\"444\":2,\"446\":2,\"448\":2,\"453\":1,\"455\":1,\"486\":1,\"512\":1,\"514\":2,\"521\":1,\"535\":3,\"539\":4,\"541\":2,\"568\":2,\"579\":2,\"587\":2,\"589\":1}}],[\"gash\",{\"1\":{\"438\":1}}],[\"gas\",{\"1\":{\"433\":2}}],[\"gag\",{\"1\":{\"433\":1}}],[\"group\",{\"1\":{\"325\":1,\"326\":1,\"368\":1}}],[\"groupid>\",{\"1\":{\"27\":1,\"32\":1,\"56\":1,\"75\":1,\"95\":1,\"102\":1,\"168\":1,\"171\":3,\"244\":1,\"435\":1,\"508\":1,\"546\":2}}],[\"gc\",{\"1\":{\"151\":1}}],[\"gg=g\",{\"1\":{\"151\":1}}],[\"gg\",{\"1\":{\"151\":1}}],[\"g\",{\"1\":{\"151\":3,\"433\":1}}],[\"globalinterceptor\",{\"1\":{\"577\":1,\"579\":1}}],[\"global\",{\"1\":{\"108\":2}}],[\"gitskills\",{\"1\":{\"120\":1}}],[\"github\",{\"1\":{\"120\":2}}],[\"git文件\",{\"1\":{\"112\":1}}],[\"git安装后\",{\"0\":{\"107\":1}}],[\"git\",{\"1\":{\"91\":2,\"108\":2,\"110\":8,\"112\":1,\"114\":3,\"116\":7,\"118\":3,\"120\":12}}],[\"getnativerequest\",{\"1\":{\"581\":1}}],[\"getname\",{\"1\":{\"58\":1,\"79\":1}}],[\"getparameterannotation\",{\"1\":{\"581\":1}}],[\"getheader\",{\"1\":{\"577\":1}}],[\"gethostid\",{\"1\":{\"17\":1,\"19\":1}}],[\"getbean\",{\"1\":{\"512\":1}}],[\"getbytes\",{\"1\":{\"386\":1,\"408\":1,\"420\":1,\"432\":1,\"453\":1}}],[\"getrange\",{\"1\":{\"468\":1}}],[\"getrecords\",{\"1\":{\"291\":1}}],[\"getrealpath\",{\"1\":{\"29\":1}}],[\"getrequestid\",{\"1\":{\"17\":1,\"19\":1}}],[\"getqueue\",{\"1\":{\"410\":1,\"422\":1,\"423\":1,\"433\":1}}],[\"getdeliverytag\",{\"1\":{\"398\":1}}],[\"getdefaultmessage\",{\"1\":{\"81\":3}}],[\"getconnection\",{\"1\":{\"390\":1,\"398\":1,\"408\":1,\"410\":1,\"420\":1,\"422\":1,\"423\":1,\"432\":1,\"433\":1}}],[\"getmessageproperties\",{\"1\":{\"453\":1}}],[\"getmessage\",{\"1\":{\"388\":1}}],[\"getmapping\",{\"1\":{\"72\":1,\"570\":1}}],[\"getid\",{\"1\":{\"294\":1}}],[\"getinputstream\",{\"1\":{\"15\":1}}],[\"getviews\",{\"1\":{\"99\":1}}],[\"getlock\",{\"1\":{\"99\":1}}],[\"getlist\",{\"1\":{\"15\":1,\"17\":1,\"19\":1}}],[\"get\",{\"0\":{\"553\":1},\"1\":{\"91\":1,\"466\":1,\"486\":1,\"566\":1,\"568\":3,\"570\":5,\"583\":2}}],[\"getemail\",{\"1\":{\"79\":1}}],[\"geterrorcode\",{\"1\":{\"17\":1,\"19\":1}}],[\"geterrormessage\",{\"1\":{\"17\":1,\"19\":1}}],[\"getattribute\",{\"1\":{\"581\":1}}],[\"getargs\",{\"1\":{\"541\":1}}],[\"getallerrors\",{\"1\":{\"81\":1}}],[\"getage\",{\"1\":{\"79\":1}}],[\"getaddress\",{\"1\":{\"79\":1}}],[\"getsubject\",{\"1\":{\"577\":1}}],[\"getscheme\",{\"1\":{\"29\":1}}],[\"getset\",{\"1\":{\"468\":1}}],[\"getservletmappings\",{\"1\":{\"550\":1}}],[\"getservletcontext\",{\"1\":{\"29\":1}}],[\"getserverport\",{\"1\":{\"29\":1}}],[\"getservername\",{\"1\":{\"29\":1}}],[\"getsession\",{\"1\":{\"29\":1,\"577\":1,\"581\":1}}],[\"getkey\",{\"1\":{\"17\":2}}],[\"getobjectsummaries\",{\"1\":{\"17\":1}}],[\"getoriginalfilename\",{\"1\":{\"15\":1,\"29\":1}}],[\"<map>\",{\"1\":{\"525\":1}}],[\"<mirrorof>central<\",{\"1\":{\"160\":1}}],[\"<mirror>\",{\"1\":{\"160\":1}}],[\"<value>world<\",{\"1\":{\"525\":1}}],[\"<value>hello\",{\"1\":{\"525\":1}}],[\"<version>4\",{\"1\":{\"546\":1}}],[\"<version>5\",{\"1\":{\"508\":1,\"546\":1}}],[\"<version>$\",{\"1\":{\"171\":1}}],[\"<version>3\",{\"1\":{\"95\":1,\"102\":1,\"171\":1,\"244\":1}}],[\"<version>2\",{\"1\":{\"27\":1,\"168\":1}}],[\"<array>\",{\"1\":{\"525\":1}}],[\"<artifactid>javax\",{\"1\":{\"546\":1}}],[\"<artifactid>joda\",{\"1\":{\"168\":1}}],[\"<artifactid>mybatis<\",{\"1\":{\"244\":1}}],[\"<artifactid>asm<\",{\"1\":{\"171\":2}}],[\"<artifactid>redisson<\",{\"1\":{\"95\":1}}],[\"<artifactid>struts2\",{\"1\":{\"171\":1}}],[\"<artifactid>springfox\",{\"1\":{\"102\":1}}],[\"<artifactid>spring\",{\"1\":{\"32\":1,\"56\":1,\"75\":1,\"435\":1,\"508\":1,\"546\":1}}],[\"<artifactid>servlet\",{\"1\":{\"27\":1}}],[\"<constructor\",{\"1\":{\"519\":3}}],[\"<choose>\",{\"1\":{\"253\":1}}],[\"<property\",{\"1\":{\"517\":2,\"525\":2}}],[\"<bean\",{\"1\":{\"510\":2,\"514\":1,\"517\":1,\"519\":2,\"525\":1}}],[\"<>\",{\"1\":{\"484\":1}}],[\"<>或\",{\"1\":{\"341\":1}}],[\"<=\",{\"1\":{\"339\":1}}],[\"<entry\",{\"1\":{\"525\":1}}],[\"<e\",{\"1\":{\"269\":2}}],[\"<exclusion>\",{\"1\":{\"171\":1}}],[\"<exclusions>\",{\"1\":{\"171\":1}}],[\"<otherwise>\",{\"1\":{\"253\":1}}],[\"<optional>true<\",{\"1\":{\"32\":1,\"168\":1}}],[\"<when\",{\"1\":{\"253\":2}}],[\"<select\",{\"1\":{\"251\":1,\"253\":1,\"255\":1}}],[\"<script>\",{\"1\":{\"82\":1}}],[\"<scope>provided<\",{\"1\":{\"27\":1,\"546\":1}}],[\"<url>http\",{\"1\":{\"160\":1}}],[\"<name>aliyun\",{\"1\":{\"160\":1}}],[\"<dependencies>\",{\"1\":{\"546\":1}}],[\"<dependency>\",{\"1\":{\"27\":1,\"32\":1,\"56\":1,\"75\":1,\"95\":1,\"102\":1,\"168\":1,\"171\":2,\"244\":1,\"435\":1,\"508\":1,\"546\":2}}],[\"<div>\",{\"1\":{\"82\":1}}],[\"<template>\",{\"1\":{\"82\":1}}],[\"<if\",{\"1\":{\"251\":2,\"255\":3}}],[\"<insert\",{\"1\":{\"248\":1}}],[\"<input\",{\"1\":{\"28\":2,\"82\":1}}],[\"<id>alimaven<\",{\"1\":{\"160\":1}}],[\"<img\",{\"1\":{\"60\":1,\"82\":1}}],[\"<第一步获得的密钥>\",{\"1\":{\"54\":1}}],[\"<groupid>asm<\",{\"1\":{\"171\":2}}],[\"<groupid>joda\",{\"1\":{\"168\":1}}],[\"<groupid>javax\",{\"1\":{\"27\":1,\"546\":1}}],[\"<groupid>io\",{\"1\":{\"102\":1}}],[\"<groupid>org\",{\"1\":{\"32\":1,\"56\":1,\"75\":1,\"95\":1,\"171\":1,\"244\":1,\"435\":1,\"508\":1,\"546\":1}}],[\"<form\",{\"1\":{\"28\":1}}],[\"<\",{\"1\":{\"27\":1,\"28\":1,\"32\":1,\"56\":1,\"75\":1,\"82\":5,\"95\":2,\"102\":1,\"146\":1,\"147\":1,\"151\":1,\"160\":2,\"168\":1,\"171\":6,\"244\":2,\"248\":1,\"251\":3,\"253\":5,\"255\":4,\"338\":1,\"435\":1,\"438\":1,\"508\":2,\"510\":1,\"517\":1,\"519\":3,\"525\":6,\"546\":3}}],[\"ltrim\",{\"1\":{\"470\":1}}],[\"lts\",{\"1\":{\"127\":1}}],[\"lrem\",{\"1\":{\"470\":1}}],[\"lrange\",{\"1\":{\"470\":1}}],[\"llen\",{\"1\":{\"470\":1}}],[\"lpop\",{\"1\":{\"470\":1}}],[\"lpush\",{\"1\":{\"470\":1}}],[\"l\",{\"1\":{\"151\":1}}],[\"lset\",{\"1\":{\"470\":1}}],[\"ls\",{\"1\":{\"120\":1}}],[\"load会保存完整记录\",{\"1\":{\"133\":1}}],[\"load的区别\",{\"1\":{\"133\":1}}],[\"load\",{\"1\":{\"131\":1}}],[\"log\",{\"1\":{\"116\":2}}],[\"local\",{\"1\":{\"140\":1}}],[\"localhost\",{\"1\":{\"97\":1}}],[\"location\",{\"1\":{\"30\":1}}],[\"locations\",{\"1\":{\"24\":1}}],[\"lock\",{\"1\":{\"91\":1,\"99\":4}}],[\"lesson\",{\"1\":{\"135\":1}}],[\"learngit\",{\"1\":{\"112\":2}}],[\"length\",{\"1\":{\"58\":3,\"91\":3}}],[\"lastsave\",{\"1\":{\"491\":1}}],[\"lastindexof\",{\"1\":{\"29\":1}}],[\"lambdaupdatewrapper<>\",{\"1\":{\"294\":1}}],[\"lambdaupdatewrapper<article>\",{\"1\":{\"294\":1}}],[\"lazily\",{\"1\":{\"30\":1}}],[\"liming\",{\"1\":{\"486\":1}}],[\"limit\",{\"1\":{\"325\":1,\"326\":1,\"375\":1,\"377\":2}}],[\"lindex\",{\"1\":{\"470\":1}}],[\"linux\",{\"0\":{\"123\":1},\"1\":{\"6\":1}}],[\"like\",{\"1\":{\"251\":2,\"253\":2,\"255\":2,\"347\":1}}],[\"list<handlermethodargumentresolver>\",{\"1\":{\"579\":1}}],[\"list<record>\",{\"1\":{\"291\":1}}],[\"list<user>\",{\"1\":{\"272\":3}}],[\"list<integer>\",{\"1\":{\"272\":2}}],[\"list<map<string\",{\"1\":{\"269\":1}}],[\"list<t>\",{\"1\":{\"269\":3}}],[\"list<web>\",{\"1\":{\"91\":1}}],[\"list<object>\",{\"1\":{\"269\":1}}],[\"list<objecterror>\",{\"1\":{\"81\":1}}],[\"list<ossobjectsummary>\",{\"1\":{\"17\":1}}],[\"list<string>\",{\"1\":{\"81\":1,\"562\":1}}],[\"list\",{\"0\":{\"469\":1},\"1\":{\"15\":1,\"17\":4,\"19\":1,\"272\":4,\"291\":2,\"470\":8,\"525\":1,\"562\":1,\"583\":3}}],[\"listobjects\",{\"1\":{\"13\":1,\"17\":1}}],[\"书本\",{\"0\":{\"22\":1}}],[\"nu\",{\"1\":{\"151\":1}}],[\"null\",{\"1\":{\"17\":2,\"19\":2,\"72\":1,\"91\":2,\"251\":3,\"253\":3,\"255\":4,\"272\":1,\"291\":1,\"293\":1,\"294\":1,\"349\":1,\"358\":1,\"386\":2,\"388\":1,\"398\":1,\"408\":1,\"420\":1,\"432\":1,\"550\":1}}],[\"no\",{\"1\":{\"496\":3}}],[\"noargs\",{\"1\":{\"451\":1}}],[\"not\",{\"1\":{\"355\":1}}],[\"notnull\",{\"1\":{\"77\":1,\"79\":2}}],[\"non\",{\"1\":{\"484\":1}}],[\"none\",{\"1\":{\"279\":1}}],[\"nonu\",{\"1\":{\"151\":1}}],[\"noh\",{\"1\":{\"151\":1}}],[\"nopaste\",{\"1\":{\"151\":1}}],[\"n2s\",{\"1\":{\"151\":1}}],[\"n1与n2为数字\",{\"1\":{\"151\":1}}],[\"n1\",{\"1\":{\"151\":1}}],[\"n<enter>\",{\"1\":{\"151\":1}}],[\"n<space>\",{\"1\":{\"151\":1}}],[\"n为数字\",{\"1\":{\"151\":2}}],[\"ng\",{\"1\":{\"151\":1}}],[\"n表示数字\",{\"1\":{\"151\":1}}],[\"n\",{\"1\":{\"91\":2,\"151\":3}}],[\"nativerequest\",{\"1\":{\"581\":2}}],[\"nativewebrequest\",{\"1\":{\"581\":3}}],[\"nanotime\",{\"1\":{\"91\":1}}],[\"name>\",{\"1\":{\"160\":1}}],[\"names\",{\"1\":{\"149\":1}}],[\"name\",{\"1\":{\"77\":2,\"79\":6,\"91\":1,\"108\":2,\"131\":1,\"133\":2,\"135\":1,\"144\":1,\"248\":2,\"251\":3,\"253\":3,\"255\":3,\"281\":1,\"329\":2,\"331\":1,\"420\":2,\"422\":4,\"423\":2,\"432\":2,\"433\":4,\"463\":1,\"466\":7,\"468\":3,\"474\":4,\"482\":1,\"531\":1,\"555\":2,\"557\":2,\"562\":1}}],[\"name=name\",{\"1\":{\"554\":1}}],[\"name=hello\",{\"1\":{\"531\":1}}],[\"name=\",{\"1\":{\"28\":1,\"517\":2,\"519\":3,\"525\":2}}],[\"nexus\",{\"1\":{\"160\":1}}],[\"net\",{\"1\":{\"54\":1}}],[\"newconnection\",{\"1\":{\"386\":1,\"388\":1,\"390\":1}}],[\"newname\",{\"1\":{\"29\":3}}],[\"new\",{\"1\":{\"15\":1,\"17\":2,\"19\":1,\"29\":5,\"58\":5,\"60\":3,\"72\":1,\"81\":1,\"82\":1,\"91\":12,\"97\":1,\"99\":1,\"103\":2,\"272\":5,\"289\":2,\"291\":3,\"293\":1,\"294\":1,\"305\":2,\"386\":1,\"388\":4,\"390\":1,\"398\":3,\"410\":3,\"422\":2,\"423\":2,\"433\":2,\"451\":3,\"453\":2,\"476\":2,\"484\":4,\"486\":1,\"512\":2,\"531\":1,\"550\":2,\"579\":2}}],[\"warn\",{\"1\":{\"420\":1,\"422\":1,\"423\":1,\"432\":1,\"433\":1,\"438\":1,\"446\":2}}],[\"wapper条件构造器\",{\"0\":{\"273\":1}}],[\"was\",{\"1\":{\"17\":1,\"19\":1}}],[\"wrapper<t>\",{\"1\":{\"269\":9}}],[\"wrote\",{\"1\":{\"114\":1}}],[\"while\",{\"1\":{\"384\":1}}],[\"which\",{\"1\":{\"17\":1,\"19\":1}}],[\"when>\",{\"1\":{\"253\":2}}],[\"where\",{\"1\":{\"251\":1,\"253\":1,\"255\":1,\"272\":2,\"319\":1,\"322\":1,\"325\":1,\"326\":1}}],[\"we\",{\"1\":{\"171\":1}}],[\"webdatabinderfactory\",{\"1\":{\"581\":2}}],[\"webapplicationcontext\",{\"1\":{\"550\":2}}],[\"web1\",{\"1\":{\"91\":7}}],[\"webmvcconfigurationsupport\",{\"1\":{\"579\":1,\"589\":1}}],[\"webmvcconfigurer\",{\"1\":{\"25\":1,\"589\":1}}],[\"webmvc<\",{\"1\":{\"546\":1}}],[\"webmapper\",{\"1\":{\"91\":2}}],[\"webs\",{\"1\":{\"91\":2}}],[\"websocket在连接建立后会一直保持连接\",{\"1\":{\"43\":1}}],[\"websocket是html5标准的一部分\",{\"1\":{\"42\":1}}],[\"websocket是一个非常简单的协议\",{\"1\":{\"38\":1}}],[\"websocket提供了双向通信的功能\",{\"1\":{\"40\":1}}],[\"websocket的缺点\",{\"0\":{\"41\":1}}],[\"websocket的头部信息非常小\",{\"1\":{\"39\":1}}],[\"websocket的优势\",{\"0\":{\"37\":1}}],[\"websocket和sockjs都是在web应用程序中使用实时通信的协议\",{\"1\":{\"36\":1}}],[\"websocket\",{\"0\":{\"33\":1},\"1\":{\"35\":5}}],[\"web\",{\"1\":{\"24\":1,\"91\":2}}],[\"wq\",{\"1\":{\"151\":1}}],[\"w\",{\"1\":{\"151\":2}}],[\"work2\",{\"1\":{\"442\":1}}],[\"work1\",{\"1\":{\"442\":1}}],[\"workconsumer\",{\"1\":{\"442\":1}}],[\"work\",{\"1\":{\"438\":4,\"442\":2}}],[\"word2\",{\"1\":{\"151\":3}}],[\"word1\",{\"1\":{\"151\":3}}],[\"word\",{\"1\":{\"151\":2,\"398\":2}}],[\"world\",{\"1\":{\"58\":1,\"408\":1,\"438\":1,\"468\":1,\"525\":1,\"531\":1,\"548\":1,\"555\":1,\"557\":1,\"562\":1}}],[\"width\",{\"1\":{\"82\":1}}],[\"withmethodannotation\",{\"1\":{\"103\":1}}],[\"with\",{\"1\":{\"17\":1,\"19\":1,\"451\":1}}],[\"ioc容器来控制对象的创建\",{\"1\":{\"505\":1}}],[\"ioc\",{\"0\":{\"502\":1},\"1\":{\"503\":1}}],[\"ioexception\",{\"1\":{\"15\":1,\"29\":1,\"386\":1,\"388\":2,\"390\":2,\"398\":2,\"408\":1,\"410\":2,\"420\":1,\"422\":2,\"423\":2,\"432\":1,\"433\":2}}],[\"ipage<record>\",{\"1\":{\"291\":1}}],[\"ipage<map<string\",{\"1\":{\"269\":1}}],[\"ipage<t>>\",{\"1\":{\"269\":1}}],[\"is\",{\"1\":{\"349\":1}}],[\"isempty\",{\"1\":{\"91\":1,\"272\":1}}],[\"isdirectory\",{\"1\":{\"29\":1}}],[\"impl\",{\"1\":{\"510\":2,\"517\":2,\"519\":2,\"525\":1}}],[\"implements\",{\"1\":{\"25\":1,\"72\":1,\"305\":1,\"482\":1,\"514\":1,\"577\":1,\"581\":1,\"587\":1,\"589\":1}}],[\"import会丢弃历史记录和元数据信息\",{\"1\":{\"133\":1}}],[\"import与docker\",{\"1\":{\"133\":1}}],[\"import\",{\"1\":{\"133\":1}}],[\"img\",{\"1\":{\"82\":1,\"559\":1}}],[\"images\",{\"0\":{\"130\":1},\"1\":{\"131\":1}}],[\"image\",{\"1\":{\"82\":2,\"131\":2,\"133\":1}}],[\"index\",{\"1\":{\"564\":3}}],[\"inversion\",{\"1\":{\"503\":1}}],[\"incrby\",{\"1\":{\"468\":1}}],[\"incr\",{\"1\":{\"468\":1}}],[\"info\",{\"1\":{\"422\":1,\"423\":1,\"433\":3,\"446\":1}}],[\"in\",{\"1\":{\"272\":1,\"345\":1}}],[\"install\",{\"1\":{\"162\":1,\"461\":1}}],[\"insert>\",{\"1\":{\"248\":1}}],[\"insert\",{\"0\":{\"311\":1},\"1\":{\"91\":2,\"248\":1,\"269\":1,\"272\":1,\"305\":1,\"313\":1,\"315\":2,\"317\":1,\"426\":1}}],[\"initializingbean\",{\"1\":{\"514\":1}}],[\"initialdelay\",{\"1\":{\"68\":1}}],[\"init\",{\"1\":{\"112\":1,\"514\":4}}],[\"input\",{\"1\":{\"82\":1}}],[\"interceptorregistry\",{\"1\":{\"579\":1,\"589\":1}}],[\"interceptor\",{\"1\":{\"289\":3,\"579\":1}}],[\"interface\",{\"1\":{\"269\":1,\"575\":1}}],[\"integer\",{\"1\":{\"79\":3,\"99\":1,\"269\":1,\"291\":1,\"453\":1,\"482\":1}}],[\"into\",{\"1\":{\"248\":1,\"313\":1,\"315\":2,\"317\":1}}],[\"int\",{\"1\":{\"58\":1,\"99\":1,\"247\":1,\"269\":7,\"272\":2,\"438\":1,\"517\":1,\"523\":2}}],[\"i\",{\"1\":{\"58\":2,\"68\":1,\"99\":1,\"131\":1,\"151\":1,\"247\":1,\"438\":2}}],[\"i++\",{\"1\":{\"58\":1,\"68\":1,\"438\":1}}],[\"i<srcpath\",{\"1\":{\"58\":1}}],[\"i=0\",{\"1\":{\"58\":1}}],[\"if>\",{\"1\":{\"251\":2,\"255\":3}}],[\"if\",{\"1\":{\"17\":1,\"19\":1,\"29\":1,\"58\":1,\"72\":1,\"81\":1,\"82\":1,\"91\":7,\"250\":1,\"390\":2}}],[\"idtype\",{\"1\":{\"278\":1,\"279\":1}}],[\"idlist\",{\"1\":{\"269\":2}}],[\"id=5\",{\"1\":{\"570\":1}}],[\"id=\",{\"1\":{\"248\":1,\"251\":1,\"253\":1,\"255\":1,\"510\":2,\"517\":1,\"519\":2,\"525\":1}}],[\"id>\",{\"1\":{\"160\":1}}],[\"id\",{\"1\":{\"17\":2,\"19\":2,\"99\":3,\"116\":1,\"153\":1,\"248\":3,\"269\":2,\"272\":1,\"291\":1,\"293\":1,\"373\":1,\"482\":1,\"557\":2,\"562\":2,\"568\":6,\"570\":2}}],[\"item\",{\"1\":{\"426\":1}}],[\"itd\",{\"1\":{\"133\":1,\"135\":1}}],[\"it\",{\"1\":{\"17\":1,\"19\":1,\"133\":1,\"171\":1}}],[\"mget\",{\"1\":{\"468\":1}}],[\"modelandview\",{\"1\":{\"587\":2}}],[\"modelandviewcontainer\",{\"1\":{\"581\":2}}],[\"move\",{\"1\":{\"466\":1}}],[\"more\",{\"1\":{\"213\":1}}],[\"mq的引言和不同mq的特点\",{\"1\":{\"380\":1}}],[\"mp\",{\"1\":{\"260\":1}}],[\"mset\",{\"1\":{\"468\":1}}],[\"ms\",{\"1\":{\"216\":1}}],[\"msg\",{\"1\":{\"58\":12,\"453\":3,\"455\":3}}],[\"mvnrepository\",{\"1\":{\"244\":1}}],[\"mvn\",{\"1\":{\"162\":5}}],[\"mvc\",{\"1\":{\"24\":1}}],[\"myinterceptor\",{\"1\":{\"587\":1,\"589\":3}}],[\"myaop\",{\"1\":{\"535\":1,\"539\":1,\"541\":1}}],[\"mysortedset\",{\"1\":{\"476\":8}}],[\"myset\",{\"1\":{\"472\":7}}],[\"mysql>\",{\"1\":{\"149\":4}}],[\"mysqldump\",{\"1\":{\"138\":1,\"140\":1,\"142\":1,\"144\":1}}],[\"mysql\",{\"0\":{\"136\":1,\"308\":1},\"1\":{\"140\":1,\"146\":1,\"147\":1,\"289\":1}}],[\"mybatis+字段+1\",{\"0\":{\"292\":1}}],[\"mybatisplusinterceptor\",{\"1\":{\"289\":4}}],[\"mybatisconfig\",{\"1\":{\"289\":1}}],[\"mybatisx\",{\"0\":{\"284\":1},\"1\":{\"285\":1}}],[\"mybatis<\",{\"1\":{\"244\":1}}],[\"mybatis\",{\"0\":{\"241\":1,\"258\":1,\"259\":1},\"1\":{\"244\":2,\"260\":3}}],[\"my\",{\"1\":{\"135\":1}}],[\"mytask\",{\"1\":{\"72\":2}}],[\"m\",{\"1\":{\"114\":2,\"118\":1}}],[\"mkdir\",{\"1\":{\"112\":1}}],[\"mkdirs\",{\"1\":{\"29\":1}}],[\"mirror>\",{\"1\":{\"160\":1}}],[\"mirrorof>\",{\"1\":{\"160\":1}}],[\"minimal\",{\"1\":{\"386\":1}}],[\"min\",{\"1\":{\"79\":1,\"326\":1,\"363\":1,\"364\":1,\"496\":1}}],[\"mimemessagehelper\",{\"1\":{\"58\":4}}],[\"mimemessage\",{\"1\":{\"58\":2}}],[\"md\",{\"1\":{\"60\":1}}],[\"mm\",{\"1\":{\"29\":1}}],[\"multipart\",{\"1\":{\"28\":1,\"30\":1}}],[\"multipartfile\",{\"1\":{\"15\":1,\"29\":1}}],[\"main\",{\"1\":{\"398\":1,\"408\":1,\"410\":1,\"420\":1,\"422\":1,\"423\":1,\"432\":1,\"433\":1,\"511\":1,\"512\":2}}],[\"mailservice\",{\"1\":{\"58\":1,\"60\":5}}],[\"mail<\",{\"1\":{\"56\":1}}],[\"mail\",{\"1\":{\"54\":2}}],[\"map>\",{\"1\":{\"525\":1}}],[\"map\",{\"1\":{\"272\":7,\"386\":1,\"388\":1,\"525\":1,\"562\":1,\"583\":2}}],[\"map<string\",{\"1\":{\"269\":2,\"451\":1,\"583\":1}}],[\"mapper<t>\",{\"1\":{\"269\":1}}],[\"mapper\",{\"1\":{\"247\":1}}],[\"maven<\",{\"1\":{\"160\":1}}],[\"maven\",{\"0\":{\"156\":1},\"1\":{\"160\":1}}],[\"master\",{\"1\":{\"120\":2}}],[\"max\",{\"1\":{\"30\":2,\"79\":1,\"82\":2,\"326\":1,\"363\":1,\"364\":1}}],[\"markdown\",{\"1\":{\"215\":1,\"221\":1,\"223\":1},\"2\":{\"21\":1,\"105\":1,\"122\":1,\"155\":1,\"190\":1,\"257\":1,\"307\":1,\"457\":1,\"498\":1,\"593\":1}}],[\"made\",{\"1\":{\"17\":1,\"19\":1}}],[\"memory\",{\"1\":{\"133\":1}}],[\"methodparameter\",{\"1\":{\"581\":5}}],[\"method\",{\"1\":{\"568\":2,\"570\":1}}],[\"methods\",{\"1\":{\"82\":1}}],[\"method=\",{\"1\":{\"28\":1,\"514\":2}}],[\"messagingexception\",{\"1\":{\"58\":2,\"60\":2}}],[\"messagepack等\",{\"1\":{\"479\":1}}],[\"messageproperties\",{\"1\":{\"386\":1,\"453\":5}}],[\"message2\",{\"1\":{\"442\":1,\"444\":1,\"446\":1,\"448\":1}}],[\"message1\",{\"1\":{\"442\":1,\"444\":1,\"446\":1,\"448\":1,\"453\":3}}],[\"message\",{\"1\":{\"17\":1,\"19\":1,\"79\":5,\"440\":3,\"442\":4,\"444\":4,\"446\":5,\"448\":5,\"451\":1,\"453\":4}}],[\"means\",{\"1\":{\"17\":1,\"19\":1}}],[\"+1\",{\"1\":{\"99\":1}}],[\"+999999\",{\"1\":{\"91\":1}}],[\"+\",{\"1\":{\"17\":6,\"19\":5,\"29\":9,\"60\":1,\"81\":1,\"91\":4,\"151\":2,\"293\":1,\"294\":2,\"388\":1,\"398\":1,\"410\":1,\"422\":1,\"423\":1,\"433\":1,\"440\":1,\"442\":2,\"444\":2,\"446\":2,\"448\":2,\"455\":1,\"557\":1,\"562\":1,\"570\":1}}],[\"percentage\",{\"1\":{\"496\":1}}],[\"persistent\",{\"1\":{\"386\":1}}],[\"p端\",{\"1\":{\"384\":1}}],[\"plus\",{\"0\":{\"258\":1,\"259\":1},\"1\":{\"260\":1,\"261\":1}}],[\"p\",{\"1\":{\"133\":1,\"135\":1,\"138\":1,\"140\":1,\"142\":1,\"144\":1,\"146\":1,\"147\":1,\"151\":1}}],[\"ps\",{\"1\":{\"133\":1}}],[\"pwd\",{\"1\":{\"112\":1}}],[\"p2\",{\"1\":{\"60\":1}}],[\"p1\",{\"1\":{\"60\":1}}],[\"png\",{\"1\":{\"60\":1}}],[\"pictures\",{\"1\":{\"60\":2}}],[\"prune\",{\"1\":{\"133\":1}}],[\"prehandle\",{\"1\":{\"577\":1,\"587\":2}}],[\"predestroy\",{\"1\":{\"531\":1}}],[\"prefer\",{\"1\":{\"171\":1}}],[\"pretty=oneline\",{\"1\":{\"116\":1}}],[\"previewimg\",{\"1\":{\"82\":2}}],[\"previewimage\",{\"1\":{\"82\":2}}],[\"protected\",{\"1\":{\"550\":3,\"579\":2,\"589\":1}}],[\"proceed\",{\"1\":{\"539\":1,\"541\":2}}],[\"proceedingjoinpoint\",{\"1\":{\"539\":1,\"541\":1}}],[\"propertysource\",{\"1\":{\"531\":1}}],[\"property>\",{\"1\":{\"525\":2}}],[\"propertyaccessor\",{\"1\":{\"484\":1}}],[\"properties\",{\"1\":{\"54\":1,\"76\":1,\"388\":1,\"398\":1,\"410\":1,\"422\":1,\"423\":1,\"433\":1}}],[\"producer\",{\"1\":{\"408\":1,\"420\":1,\"432\":1}}],[\"productapi\",{\"1\":{\"103\":1}}],[\"provided\",{\"1\":{\"183\":1}}],[\"printstacktrace\",{\"1\":{\"305\":1,\"390\":1}}],[\"println\",{\"1\":{\"17\":6,\"19\":5,\"29\":1,\"58\":1,\"68\":1,\"72\":1,\"81\":1,\"91\":2,\"272\":6,\"293\":1,\"294\":1,\"388\":1,\"398\":1,\"410\":1,\"422\":1,\"423\":1,\"433\":1,\"440\":1,\"442\":2,\"444\":2,\"446\":2,\"448\":2,\"455\":1,\"486\":1,\"514\":2,\"535\":1,\"539\":3,\"541\":1,\"548\":1,\"555\":1,\"557\":1,\"562\":1,\"568\":2,\"587\":3}}],[\"private\",{\"1\":{\"60\":1,\"72\":3,\"79\":4,\"103\":1,\"305\":1,\"390\":1,\"438\":1,\"482\":2,\"486\":1,\"517\":2,\"521\":1,\"523\":2,\"531\":2,\"535\":1,\"539\":1,\"541\":1,\"589\":1}}],[\"parsejwt\",{\"1\":{\"577\":1}}],[\"parameter\",{\"1\":{\"575\":1}}],[\"param\",{\"1\":{\"269\":15,\"589\":1}}],[\"paginationinnerinterceptor\",{\"1\":{\"289\":1}}],[\"page<>\",{\"1\":{\"291\":1}}],[\"page\",{\"1\":{\"269\":2,\"291\":2}}],[\"package\",{\"1\":{\"162\":1}}],[\"paste\",{\"1\":{\"151\":1}}],[\"pass\",{\"1\":{\"91\":2}}],[\"passwordencoder\",{\"1\":{\"91\":1}}],[\"password\",{\"1\":{\"54\":1,\"91\":4,\"272\":3,\"436\":1}}],[\"pattern\",{\"1\":{\"24\":1,\"77\":1,\"79\":1}}],[\"pathvariable\",{\"1\":{\"568\":2,\"570\":1}}],[\"pathselectors\",{\"1\":{\"103\":1}}],[\"paths\",{\"1\":{\"103\":1}}],[\"path\",{\"1\":{\"24\":1}}],[\"pointcut\",{\"1\":{\"535\":1,\"537\":1,\"539\":1,\"541\":1}}],[\"pojo\",{\"1\":{\"78\":1}}],[\"pom\",{\"1\":{\"55\":1,\"507\":1,\"545\":1}}],[\"port\",{\"1\":{\"54\":1,\"436\":1}}],[\"polyfill\",{\"1\":{\"35\":1}}],[\"posthandle\",{\"1\":{\"587\":2}}],[\"post乱码处理\",{\"0\":{\"558\":1}}],[\"postconstruct\",{\"1\":{\"72\":1,\"531\":1}}],[\"postmapping\",{\"1\":{\"29\":1,\"81\":1,\"583\":1}}],[\"post\",{\"0\":{\"556\":1},\"1\":{\"28\":1,\"568\":1}}],[\"put\",{\"1\":{\"272\":3,\"291\":2,\"451\":1,\"566\":1,\"568\":3}}],[\"putobject\",{\"1\":{\"13\":1,\"15\":1}}],[\"pull\",{\"1\":{\"131\":1}}],[\"push\",{\"1\":{\"110\":1,\"120\":2}}],[\"publicmapper\",{\"1\":{\"91\":1}}],[\"public\",{\"1\":{\"15\":1,\"17\":1,\"19\":1,\"25\":2,\"29\":2,\"58\":4,\"65\":1,\"68\":1,\"70\":1,\"72\":4,\"79\":9,\"81\":2,\"91\":2,\"97\":1,\"99\":1,\"103\":2,\"224\":1,\"269\":1,\"289\":2,\"291\":1,\"305\":2,\"388\":1,\"390\":3,\"398\":3,\"408\":2,\"410\":3,\"420\":2,\"422\":3,\"423\":3,\"432\":2,\"433\":3,\"438\":1,\"440\":2,\"442\":3,\"444\":3,\"446\":3,\"448\":3,\"451\":7,\"453\":2,\"455\":2,\"482\":1,\"484\":2,\"512\":2,\"514\":2,\"521\":1,\"523\":1,\"535\":2,\"539\":3,\"541\":2,\"548\":2,\"550\":2,\"555\":1,\"557\":1,\"562\":1,\"564\":2,\"568\":2,\"575\":1,\"577\":2,\"579\":1,\"581\":3,\"583\":1,\"587\":4,\"589\":1}}],[\"flushall\",{\"1\":{\"463\":1,\"492\":1}}],[\"flushdb\",{\"1\":{\"463\":1}}],[\"factory\",{\"1\":{\"484\":2}}],[\"fanout2\",{\"1\":{\"444\":1}}],[\"fanout1\",{\"1\":{\"444\":1}}],[\"fanoutconsumer\",{\"1\":{\"444\":1}}],[\"fanout\",{\"1\":{\"408\":1,\"410\":1,\"438\":4,\"444\":4}}],[\"false\",{\"1\":{\"30\":1,\"283\":1,\"386\":3,\"388\":3,\"398\":7,\"451\":1,\"587\":1}}],[\"featured\",{\"1\":{\"253\":1}}],[\"fetch\",{\"1\":{\"110\":1}}],[\"frontmatter\",{\"1\":{\"192\":1,\"215\":1,\"238\":1}}],[\"from\",{\"1\":{\"58\":6,\"251\":1,\"253\":1,\"255\":1,\"272\":2,\"322\":1,\"323\":1,\"325\":1,\"329\":2,\"331\":1,\"360\":1,\"362\":1,\"364\":2,\"368\":1,\"373\":1,\"375\":1,\"377\":2}}],[\"folder\",{\"1\":{\"29\":4}}],[\"foreach\",{\"1\":{\"272\":3}}],[\"format\",{\"1\":{\"29\":4}}],[\"form>\",{\"1\":{\"28\":1}}],[\"form\",{\"1\":{\"28\":1}}],[\"for\",{\"1\":{\"17\":2,\"19\":1,\"58\":1,\"81\":1,\"438\":1}}],[\"field\",{\"1\":{\"474\":5}}],[\"findactivebloglike\",{\"1\":{\"251\":1,\"253\":1,\"255\":1}}],[\"find\",{\"1\":{\"144\":1}}],[\"final\",{\"1\":{\"91\":2,\"451\":3,\"484\":1}}],[\"finally\",{\"1\":{\"17\":1,\"19\":1,\"99\":1}}],[\"first\",{\"1\":{\"110\":2}}],[\"fixedrate\",{\"1\":{\"68\":1}}],[\"filereader\",{\"1\":{\"82\":2}}],[\"files\",{\"1\":{\"82\":1,\"114\":1}}],[\"filesystemresource\",{\"1\":{\"58\":2}}],[\"filepath\",{\"1\":{\"29\":2}}],[\"fileuploadcontroller\",{\"1\":{\"29\":1}}],[\"file\",{\"1\":{\"15\":3,\"28\":1,\"29\":3,\"30\":2,\"58\":5,\"60\":1,\"82\":4,\"114\":1,\"495\":1}}],[\"ttt\",{\"1\":{\"564\":1}}],[\"ttl\",{\"1\":{\"466\":1}}],[\"txt\",{\"1\":{\"114\":1,\"116\":3,\"118\":4}}],[\"timeoutexception\",{\"1\":{\"386\":1,\"388\":1,\"390\":2,\"398\":1,\"408\":1,\"410\":1,\"420\":1,\"422\":1,\"423\":1,\"432\":1,\"433\":1}}],[\"time<\",{\"1\":{\"168\":2}}],[\"timeunit\",{\"1\":{\"91\":1}}],[\"title\",{\"1\":{\"91\":3,\"103\":1,\"251\":3,\"253\":3,\"255\":3}}],[\"type\",{\"1\":{\"82\":1,\"444\":2,\"446\":2,\"448\":2,\"451\":1,\"463\":1}}],[\"type=\",{\"1\":{\"28\":2,\"82\":1,\"278\":1,\"279\":1}}],[\"tablefield\",{\"1\":{\"280\":1,\"281\":1,\"282\":1,\"283\":1}}],[\"tableid\",{\"1\":{\"277\":1,\"278\":1,\"279\":1}}],[\"tablename\",{\"1\":{\"276\":1}}],[\"tar导入成镜像\",{\"1\":{\"133\":1}}],[\"tar中加载出来\",{\"1\":{\"131\":1}}],[\"tar中\",{\"1\":{\"131\":1,\"133\":1}}],[\"tar\",{\"1\":{\"131\":2,\"133\":2}}],[\"target\",{\"1\":{\"82\":1,\"575\":1}}],[\"tag\",{\"1\":{\"131\":1,\"133\":2}}],[\"taskscheduler\",{\"1\":{\"72\":3}}],[\"task\",{\"1\":{\"70\":1,\"72\":1}}],[\"testdelayqueueconfig\",{\"1\":{\"451\":1}}],[\"testdelete\",{\"1\":{\"272\":1}}],[\"testselect\",{\"1\":{\"272\":1}}],[\"testupdata\",{\"1\":{\"272\":1}}],[\"testinsert\",{\"1\":{\"272\":1}}],[\"test=\",{\"1\":{\"251\":2,\"253\":2,\"255\":3}}],[\"test1\",{\"1\":{\"247\":1,\"248\":1}}],[\"test\",{\"0\":{\"437\":1},\"1\":{\"59\":1,\"60\":6,\"114\":2,\"116\":3,\"118\":4,\"162\":1,\"181\":1,\"272\":4,\"386\":1,\"388\":1,\"438\":6,\"486\":1}}],[\"template\",{\"1\":{\"484\":9}}],[\"template>\",{\"1\":{\"82\":1}}],[\"temp\",{\"1\":{\"30\":1}}],[\"transactional\",{\"1\":{\"296\":1,\"304\":1,\"305\":1}}],[\"transferto\",{\"1\":{\"29\":1}}],[\"trim\",{\"1\":{\"91\":1,\"254\":1}}],[\"true\",{\"1\":{\"30\":1,\"54\":1,\"58\":3,\"72\":1,\"91\":1,\"248\":1,\"388\":1,\"410\":1,\"422\":1,\"423\":1,\"433\":1,\"451\":2,\"517\":1,\"519\":1,\"577\":1,\"587\":2}}],[\"try\",{\"1\":{\"17\":1,\"19\":1,\"29\":1,\"99\":1,\"305\":1,\"390\":1}}],[\"the\",{\"1\":{\"171\":1}}],[\"though\",{\"1\":{\"171\":1}}],[\"thread\",{\"1\":{\"398\":1}}],[\"threshold\",{\"1\":{\"30\":1}}],[\"throwable\",{\"1\":{\"539\":1,\"541\":1}}],[\"throw\",{\"1\":{\"29\":1,\"305\":2}}],[\"throws\",{\"1\":{\"15\":1,\"58\":2,\"60\":2,\"386\":1,\"388\":2,\"390\":1,\"398\":2,\"408\":1,\"410\":2,\"420\":1,\"422\":2,\"423\":2,\"432\":1,\"433\":2,\"539\":1,\"541\":1,\"577\":1,\"581\":1,\"587\":3}}],[\"this\",{\"1\":{\"19\":1,\"79\":4,\"82\":1,\"521\":1,\"523\":2}}],[\"token\",{\"1\":{\"577\":2}}],[\"toattpage\",{\"1\":{\"564\":1}}],[\"toapage\",{\"1\":{\"564\":1}}],[\"tom\",{\"1\":{\"474\":1}}],[\"toc\",{\"1\":{\"231\":1}}],[\"topage\",{\"1\":{\"564\":1}}],[\"topic2\",{\"1\":{\"448\":1}}],[\"topic1\",{\"1\":{\"448\":1}}],[\"topicconsumer\",{\"1\":{\"448\":1}}],[\"topic\",{\"1\":{\"432\":2,\"433\":5,\"438\":3,\"448\":4}}],[\"topic类型的exchange与direct\",{\"1\":{\"426\":1}}],[\"top\",{\"1\":{\"133\":1}}],[\"totryeverything\",{\"1\":{\"54\":1,\"60\":4}}],[\"tostring\",{\"1\":{\"29\":1,\"91\":1,\"272\":1,\"541\":1}}],[\"to\",{\"1\":{\"17\":1,\"19\":1,\"58\":6,\"451\":1}}],[\"t\",{\"1\":{\"17\":1,\"120\":1,\"269\":5}}],[\"rdb\",{\"0\":{\"488\":1},\"1\":{\"489\":2,\"492\":1,\"493\":1}}],[\"rpop\",{\"1\":{\"470\":1}}],[\"round\",{\"1\":{\"539\":1,\"541\":1}}],[\"routing\",{\"1\":{\"451\":2,\"453\":2}}],[\"routingkey\",{\"1\":{\"420\":2,\"422\":1,\"423\":1,\"432\":2,\"433\":1}}],[\"route2\",{\"1\":{\"446\":1}}],[\"route1\",{\"1\":{\"446\":1}}],[\"routeconsumer\",{\"1\":{\"446\":1}}],[\"route\",{\"1\":{\"438\":1}}],[\"rollbackfor\",{\"1\":{\"304\":1,\"305\":1}}],[\"rollbackfor属性用于控制出现何种异常类型\",{\"1\":{\"303\":1}}],[\"r\",{\"1\":{\"151\":1,\"153\":1}}],[\"rsa\",{\"1\":{\"120\":1}}],[\"rmi\",{\"1\":{\"131\":1}}],[\"rm\",{\"1\":{\"118\":2,\"120\":1,\"131\":1,\"133\":1}}],[\"rlock\",{\"1\":{\"99\":1}}],[\"runtime\",{\"1\":{\"186\":1,\"575\":1}}],[\"runtimeexception\",{\"1\":{\"29\":1,\"305\":2}}],[\"run\",{\"1\":{\"72\":1,\"133\":1,\"135\":1}}],[\"runnable\",{\"1\":{\"72\":1}}],[\"rabbithandler\",{\"1\":{\"440\":1}}],[\"rabbitlistener\",{\"1\":{\"440\":1,\"442\":2,\"444\":2,\"446\":2,\"448\":2,\"455\":1}}],[\"rabbittemplate\",{\"1\":{\"438\":7,\"453\":4}}],[\"rabbit\",{\"1\":{\"386\":1}}],[\"rabbitmqtest\",{\"1\":{\"438\":1}}],[\"rabbitmqconnection\",{\"1\":{\"390\":1,\"398\":1,\"408\":1,\"410\":1,\"420\":1,\"422\":1,\"423\":1,\"432\":1,\"433\":1}}],[\"rabbitmq\",{\"0\":{\"379\":1},\"1\":{\"436\":1,\"440\":1}}],[\"randomuuid\",{\"1\":{\"29\":1,\"91\":1}}],[\"ram用户\",{\"1\":{\"12\":1}}],[\"retentionpolicy\",{\"1\":{\"575\":1}}],[\"retention\",{\"1\":{\"575\":1}}],[\"ret\",{\"1\":{\"541\":2}}],[\"return\",{\"1\":{\"15\":1,\"17\":2,\"19\":2,\"29\":1,\"58\":1,\"68\":1,\"72\":1,\"79\":4,\"81\":1,\"91\":7,\"97\":1,\"99\":1,\"103\":2,\"289\":1,\"291\":1,\"390\":1,\"451\":4,\"453\":1,\"484\":1,\"541\":1,\"548\":1,\"550\":3,\"555\":1,\"557\":1,\"562\":1,\"564\":2,\"577\":1,\"581\":2,\"583\":1,\"587\":1}}],[\"repository\",{\"1\":{\"530\":1}}],[\"repositories\",{\"1\":{\"160\":1}}],[\"rewrite\",{\"1\":{\"496\":3}}],[\"red对应id\",{\"1\":{\"519\":1}}],[\"redsi\",{\"0\":{\"465\":1}}],[\"redisconnectionfactory\",{\"1\":{\"484\":1}}],[\"redisconfig\",{\"1\":{\"483\":1,\"484\":1}}],[\"redistemplate\",{\"1\":{\"484\":3,\"486\":4}}],[\"redistemplate<string\",{\"1\":{\"484\":3}}],[\"redis默认使用的序列化格式\",{\"1\":{\"479\":1}}],[\"redis支持多种序列化格式\",{\"1\":{\"479\":1}}],[\"redis是一种内存数据库\",{\"1\":{\"478\":1}}],[\"redis详细解释\",{\"1\":{\"459\":1}}],[\"redis\",{\"0\":{\"458\":1},\"1\":{\"97\":1,\"461\":2,\"489\":2,\"491\":1,\"495\":2}}],[\"redissonclient\",{\"1\":{\"97\":1,\"99\":3}}],[\"redissonconfig\",{\"1\":{\"96\":1,\"97\":1}}],[\"redisson<\",{\"1\":{\"95\":1}}],[\"redisson学习地址\",{\"1\":{\"93\":1}}],[\"redisson\",{\"0\":{\"92\":1},\"1\":{\"95\":1,\"97\":2}}],[\"redisson分布式锁使用redlock算法避免了死锁的问题\",{\"1\":{\"89\":1}}],[\"redisson分布式锁内部封装了锁的自动续期机制\",{\"1\":{\"88\":1}}],[\"redisson分布式锁内部封装了redis的单线程模型\",{\"1\":{\"87\":1}}],[\"redisson分布式锁封装了锁逻辑\",{\"1\":{\"86\":1}}],[\"redis分布式锁\",{\"0\":{\"90\":1}}],[\"redis分布式锁在高并发场景下可能存在死锁的问题\",{\"1\":{\"89\":1}}],[\"redis分布式锁在锁定后需要手动维护锁的超时时间\",{\"1\":{\"88\":1}}],[\"redis分布式锁在进行锁定和解锁操作时\",{\"1\":{\"87\":1}}],[\"redis分布式锁需要手动编写锁逻辑代码\",{\"1\":{\"86\":1}}],[\"redis分布式锁是基于redis的setnx命令实现的\",{\"1\":{\"85\":1}}],[\"redis分布式锁和redisson分布式锁都是用于实现分布式系统中的分布式锁\",{\"0\":{\"84\":1}}],[\"recrive\",{\"1\":{\"440\":1}}],[\"records\",{\"1\":{\"291\":1}}],[\"recordmapper\",{\"1\":{\"291\":2}}],[\"recordipage\",{\"1\":{\"291\":2}}],[\"rename\",{\"1\":{\"133\":1}}],[\"remote\",{\"1\":{\"120\":5}}],[\"remove\",{\"1\":{\"118\":1}}],[\"reflog\",{\"1\":{\"116\":1}}],[\"ref=\",{\"1\":{\"82\":1,\"519\":1}}],[\"register\",{\"1\":{\"550\":1}}],[\"registry\",{\"1\":{\"25\":2,\"579\":3,\"589\":3}}],[\"regasdgsdgister\",{\"1\":{\"91\":1}}],[\"readasdataurl\",{\"1\":{\"82\":1}}],[\"reader\",{\"1\":{\"82\":4}}],[\"readme\",{\"1\":{\"60\":1}}],[\"realpath\",{\"1\":{\"29\":3}}],[\"reason\",{\"1\":{\"17\":1,\"19\":1}}],[\"req\",{\"1\":{\"29\":5}}],[\"requestmethod\",{\"1\":{\"568\":2,\"570\":1}}],[\"requestmapping\",{\"1\":{\"548\":1,\"555\":1,\"557\":1,\"564\":2,\"568\":2,\"570\":2}}],[\"requestparam\",{\"1\":{\"562\":2,\"570\":1,\"583\":1}}],[\"requesthandlerselectors\",{\"1\":{\"103\":1}}],[\"request\",{\"1\":{\"17\":2,\"19\":2,\"30\":1,\"577\":3,\"585\":1,\"587\":3}}],[\"resp\",{\"1\":{\"291\":4}}],[\"responsebody\",{\"1\":{\"548\":1,\"555\":1,\"557\":1,\"562\":1,\"564\":1,\"568\":2,\"570\":3}}],[\"response\",{\"1\":{\"17\":1,\"19\":1,\"577\":1,\"585\":1,\"587\":3}}],[\"restful快速开发\",{\"1\":{\"567\":1}}],[\"rest风格\",{\"0\":{\"565\":1}}],[\"restart\",{\"1\":{\"133\":1}}],[\"restcontroller\",{\"1\":{\"29\":1,\"72\":1,\"81\":1,\"570\":1}}],[\"reset\",{\"1\":{\"116\":2}}],[\"resulttype=\",{\"1\":{\"251\":1,\"253\":1,\"255\":1}}],[\"result\",{\"1\":{\"82\":1,\"91\":7,\"99\":2,\"583\":1}}],[\"res\",{\"1\":{\"58\":2,\"91\":2,\"272\":4}}],[\"resids\",{\"1\":{\"58\":2}}],[\"resolveargument\",{\"1\":{\"581\":1}}],[\"resolve\",{\"1\":{\"30\":1}}],[\"resource\",{\"1\":{\"453\":1}}],[\"resourcehandlerregistry\",{\"1\":{\"25\":1}}],[\"resources\",{\"1\":{\"24\":1}}],[\"rejected\",{\"1\":{\"17\":1,\"19\":1}}],[\"sdiff\",{\"1\":{\"472\":2}}],[\"sdf\",{\"1\":{\"29\":2}}],[\"spop\",{\"1\":{\"472\":2}}],[\"springboot\",{\"0\":{\"596\":1}}],[\"springboottest\",{\"1\":{\"438\":1}}],[\"springmvcconfig\",{\"1\":{\"550\":3}}],[\"springmvc入门案例\",{\"1\":{\"543\":1}}],[\"springmvc\",{\"0\":{\"499\":1,\"542\":1},\"1\":{\"543\":1,\"561\":1,\"567\":1}}],[\"springfox<\",{\"1\":{\"102\":1}}],[\"springframework<\",{\"1\":{\"508\":1,\"546\":1}}],[\"springframework\",{\"1\":{\"32\":1,\"56\":1,\"75\":1,\"435\":1}}],[\"spring\",{\"0\":{\"434\":1,\"499\":1,\"500\":1},\"1\":{\"24\":1,\"30\":1,\"54\":1,\"436\":1,\"501\":1}}],[\"srandmember\",{\"1\":{\"472\":2}}],[\"srem\",{\"1\":{\"472\":2}}],[\"src\",{\"1\":{\"82\":1}}],[\"srcpath\",{\"1\":{\"58\":3}}],[\"smembers\",{\"1\":{\"472\":2}}],[\"smtp\",{\"1\":{\"54\":2}}],[\"sleep\",{\"1\":{\"398\":1}}],[\"sneakythrows\",{\"1\":{\"398\":1}}],[\"s1\",{\"1\":{\"386\":1,\"388\":1}}],[\"sadd\",{\"1\":{\"472\":2}}],[\"same\",{\"1\":{\"171\":1}}],[\"save\",{\"1\":{\"131\":1,\"133\":2,\"491\":1,\"512\":2,\"535\":1,\"539\":1,\"541\":1,\"548\":2,\"554\":1,\"555\":2,\"557\":2,\"562\":2,\"570\":1}}],[\"sql\",{\"1\":{\"138\":1,\"140\":1,\"142\":1,\"144\":2,\"146\":1,\"147\":1,\"149\":1}}],[\"ss\",{\"1\":{\"535\":2,\"539\":3,\"541\":2}}],[\"ssh\",{\"0\":{\"152\":1},\"1\":{\"120\":1,\"153\":4}}],[\"sslsocketfactory\",{\"1\":{\"54\":1}}],[\"ssl\",{\"1\":{\"54\":1}}],[\"swaggerconfig\",{\"1\":{\"103\":1}}],[\"swagger2<\",{\"1\":{\"102\":1}}],[\"swagger\",{\"0\":{\"100\":1},\"1\":{\"103\":1}}],[\"swap\",{\"0\":{\"31\":1}}],[\"should\",{\"1\":{\"171\":1}}],[\"showbyid\",{\"1\":{\"99\":1}}],[\"show\",{\"1\":{\"91\":1}}],[\"shutdown\",{\"1\":{\"15\":1,\"17\":1,\"19\":1}}],[\"scard\",{\"1\":{\"472\":2}}],[\"scope\",{\"1\":{\"173\":1,\"531\":1}}],[\"scope>\",{\"1\":{\"27\":1,\"546\":1}}],[\"script>\",{\"1\":{\"82\":1}}],[\"schedulewithfixeddelay\",{\"1\":{\"72\":1}}],[\"schedulecontroller\",{\"1\":{\"72\":1}}],[\"scheduledfuture\",{\"1\":{\"72\":4}}],[\"scheduledfuture<\",{\"1\":{\"72\":1}}],[\"scheduled\",{\"0\":{\"69\":1},\"1\":{\"68\":1,\"70\":1}}],[\"scheduledtasksconfig\",{\"1\":{\"65\":1}}],[\"scheduled注解标记的定时任务是在应用程序启动时自动启动的\",{\"1\":{\"63\":1}}],[\"schedul\",{\"1\":{\"68\":1}}],[\"sex\",{\"1\":{\"368\":3}}],[\"serializable>\",{\"1\":{\"269\":2}}],[\"serializable\",{\"1\":{\"269\":2,\"482\":1}}],[\"server\",{\"1\":{\"135\":1,\"461\":1}}],[\"service\",{\"1\":{\"57\":1,\"58\":1,\"305\":1,\"510\":1,\"519\":1,\"528\":1}}],[\"servletinitconfig\",{\"1\":{\"550\":2}}],[\"servlet\",{\"1\":{\"30\":1,\"546\":1}}],[\"servlet<\",{\"1\":{\"27\":1,\"546\":1}}],[\"selectpage\",{\"1\":{\"269\":1,\"291\":1}}],[\"selectobjs\",{\"1\":{\"269\":1}}],[\"selectone\",{\"1\":{\"269\":1}}],[\"selectmapspage\",{\"1\":{\"269\":1}}],[\"selectmaps\",{\"1\":{\"269\":1}}],[\"selectcount\",{\"1\":{\"269\":1,\"291\":1}}],[\"selectbymap\",{\"1\":{\"269\":1,\"272\":1}}],[\"selectbyid\",{\"1\":{\"99\":1,\"269\":1,\"272\":1}}],[\"selectbatchids\",{\"1\":{\"269\":1,\"272\":1}}],[\"select>\",{\"1\":{\"251\":1,\"253\":1,\"255\":1}}],[\"select\",{\"0\":{\"324\":1},\"1\":{\"103\":1,\"251\":1,\"253\":1,\"255\":1,\"283\":1,\"325\":1,\"329\":2,\"331\":1,\"360\":1,\"362\":1,\"364\":2,\"368\":1,\"373\":1,\"375\":1,\"377\":2,\"463\":1}}],[\"selectlist\",{\"1\":{\"91\":1,\"269\":1,\"272\":1}}],[\"seconds\",{\"1\":{\"91\":1}}],[\"sendimgmail\",{\"1\":{\"60\":1}}],[\"sendmailimg\",{\"1\":{\"58\":1,\"60\":1}}],[\"sendfailmail\",{\"1\":{\"58\":1,\"60\":2}}],[\"send\",{\"1\":{\"58\":3,\"386\":1,\"453\":1}}],[\"sendsimplemail\",{\"1\":{\"58\":1,\"60\":2}}],[\"setcolor\",{\"1\":{\"583\":2}}],[\"setconnectionfactory\",{\"1\":{\"484\":1}}],[\"setbookdao\",{\"1\":{\"521\":1}}],[\"setbackimg\",{\"1\":{\"91\":1}}],[\"sethashvalueserializer\",{\"1\":{\"484\":1}}],[\"sethashkeyserializer\",{\"1\":{\"484\":1}}],[\"sethost\",{\"1\":{\"386\":1,\"388\":1,\"390\":1}}],[\"setvalueserializer\",{\"1\":{\"484\":2}}],[\"setvisibility\",{\"1\":{\"484\":1}}],[\"setvirtualhost\",{\"1\":{\"386\":1,\"388\":1,\"390\":1}}],[\"setviews\",{\"1\":{\"99\":1}}],[\"setkeyserializer\",{\"1\":{\"484\":1}}],[\"setobjectmapper\",{\"1\":{\"484\":1}}],[\"set3\",{\"1\":{\"472\":3}}],[\"set2\",{\"1\":{\"472\":3}}],[\"set1\",{\"1\":{\"472\":3}}],[\"setnx\",{\"1\":{\"468\":1}}],[\"setname\",{\"1\":{\"79\":1}}],[\"setdelay\",{\"1\":{\"453\":2}}],[\"setdatabase\",{\"1\":{\"97\":1}}],[\"setdate\",{\"1\":{\"91\":1}}],[\"setusername\",{\"1\":{\"386\":1,\"388\":1,\"390\":1}}],[\"setport\",{\"1\":{\"386\":1,\"388\":1,\"390\":1}}],[\"setpassword\",{\"1\":{\"91\":1,\"272\":1,\"386\":1,\"388\":1,\"390\":1}}],[\"sets\",{\"0\":{\"475\":1}}],[\"setsql\",{\"1\":{\"293\":1,\"294\":2}}],[\"setsubject\",{\"1\":{\"58\":3}}],[\"setid\",{\"1\":{\"272\":1}}],[\"setifabsent\",{\"1\":{\"91\":1}}],[\"set\",{\"0\":{\"471\":1},\"1\":{\"149\":1,\"151\":4,\"319\":1,\"466\":1,\"486\":1,\"535\":1,\"539\":1}}],[\"setlist\",{\"1\":{\"91\":1}}],[\"setemail\",{\"1\":{\"79\":1}}],[\"setattribute\",{\"1\":{\"577\":1}}],[\"setaccount\",{\"1\":{\"91\":1,\"272\":2}}],[\"setage\",{\"1\":{\"79\":1}}],[\"setaddress\",{\"1\":{\"79\":1,\"97\":1}}],[\"setter\",{\"0\":{\"516\":1}}],[\"settext\",{\"1\":{\"58\":3}}],[\"setto\",{\"1\":{\"58\":3}}],[\"setfrom\",{\"1\":{\"58\":3}}],[\"sortedset2\",{\"1\":{\"476\":2}}],[\"sortedset1\",{\"1\":{\"476\":2}}],[\"sortedset\",{\"1\":{\"476\":2}}],[\"sorted\",{\"0\":{\"475\":1}}],[\"source\",{\"1\":{\"149\":1}}],[\"socketfactory\",{\"1\":{\"54\":1}}],[\"sockjs的缺点\",{\"0\":{\"48\":1}}],[\"sockjs的优势\",{\"0\":{\"44\":1}}],[\"sockjs在不支持websocket的浏览器中使用的是长轮询技术\",{\"1\":{\"47\":1}}],[\"sockjs可以通过polyfill模拟websocket的功能\",{\"1\":{\"46\":1}}],[\"sockjs可以在所有支持javascript的浏览器中运行\",{\"1\":{\"45\":1}}],[\"sockjs\",{\"0\":{\"33\":1},\"1\":{\"35\":3}}],[\"some\",{\"1\":{\"17\":1,\"19\":1}}],[\"singleton\",{\"1\":{\"531\":1}}],[\"sinter\",{\"1\":{\"472\":2}}],[\"sismember\",{\"1\":{\"472\":2}}],[\"simple简单模式\",{\"0\":{\"381\":1}}],[\"simplemailmessage\",{\"1\":{\"58\":2}}],[\"simpledateformat\",{\"1\":{\"29\":2}}],[\"size\",{\"1\":{\"30\":3,\"77\":2,\"79\":4,\"496\":1}}],[\"support\",{\"1\":{\"589\":1}}],[\"supportsparameter\",{\"1\":{\"581\":1}}],[\"super\",{\"1\":{\"579\":1}}],[\"sunion\",{\"1\":{\"472\":2}}],[\"sum\",{\"1\":{\"326\":1,\"359\":1,\"360\":1}}],[\"sums\",{\"1\":{\"17\":2}}],[\"sudo\",{\"1\":{\"128\":1,\"461\":2}}],[\"success\",{\"1\":{\"91\":1,\"99\":1}}],[\"subject\",{\"1\":{\"58\":6}}],[\"substring\",{\"1\":{\"29\":1,\"577\":1}}],[\"submit\",{\"1\":{\"28\":1}}],[\"stu\",{\"1\":{\"481\":1,\"482\":1,\"486\":4}}],[\"study\",{\"1\":{\"52\":1,\"367\":1,\"382\":1,\"392\":1}}],[\"strlen\",{\"1\":{\"468\":1}}],[\"struts\",{\"1\":{\"171\":1}}],[\"struts<\",{\"1\":{\"171\":1}}],[\"stringredisserializer\",{\"1\":{\"484\":6}}],[\"stringredistemplate\",{\"1\":{\"91\":3}}],[\"string>map\",{\"1\":{\"583\":1}}],[\"string>\",{\"1\":{\"484\":1}}],[\"string\",{\"0\":{\"467\":1},\"1\":{\"15\":5,\"19\":1,\"29\":6,\"58\":14,\"60\":2,\"68\":2,\"72\":1,\"79\":9,\"91\":8,\"99\":1,\"388\":3,\"398\":4,\"408\":1,\"410\":5,\"420\":2,\"422\":4,\"423\":4,\"432\":2,\"433\":4,\"440\":1,\"442\":2,\"444\":2,\"446\":2,\"448\":2,\"451\":3,\"453\":1,\"455\":1,\"482\":1,\"512\":1,\"517\":1,\"523\":2,\"531\":1,\"548\":1,\"550\":2,\"555\":2,\"557\":3,\"562\":3,\"564\":2,\"568\":2,\"577\":1,\"583\":3}}],[\"style=\",{\"1\":{\"82\":1}}],[\"stop\",{\"1\":{\"72\":3,\"133\":1}}],[\"state\",{\"1\":{\"251\":1,\"253\":1,\"255\":3}}],[\"stats\",{\"1\":{\"133\":1}}],[\"status\",{\"1\":{\"116\":1}}],[\"statichandles\",{\"1\":{\"25\":1}}],[\"static\",{\"1\":{\"24\":4,\"25\":2,\"390\":3,\"398\":1,\"408\":1,\"410\":1,\"420\":1,\"422\":1,\"423\":1,\"432\":1,\"433\":1,\"451\":3,\"512\":1}}],[\"startswith\",{\"1\":{\"82\":1}}],[\"start\",{\"1\":{\"72\":1,\"133\":1}}],[\"starter\",{\"1\":{\"56\":1,\"75\":1,\"435\":1}}],[\"s为图片的名字\",{\"1\":{\"19\":1}}],[\"system\",{\"1\":{\"17\":6,\"19\":5,\"29\":1,\"58\":1,\"68\":1,\"72\":1,\"81\":1,\"91\":3,\"272\":6,\"293\":1,\"294\":1,\"388\":1,\"398\":1,\"410\":1,\"422\":1,\"423\":1,\"433\":1,\"440\":1,\"442\":2,\"444\":2,\"446\":2,\"448\":2,\"455\":1,\"486\":1,\"514\":2,\"535\":1,\"539\":3,\"541\":1,\"548\":1,\"555\":1,\"557\":1,\"562\":1,\"568\":2,\"587\":3}}],[\"s\",{\"1\":{\"17\":3,\"19\":2,\"368\":1,\"373\":1,\"377\":2,\"386\":2,\"388\":2,\"517\":2,\"519\":1,\"523\":4,\"531\":1}}],[\"oother\",{\"0\":{\"595\":1}}],[\"other\",{\"0\":{\"594\":1}}],[\"otherwise>\",{\"1\":{\"253\":1}}],[\"of\",{\"1\":{\"503\":1}}],[\"om\",{\"1\":{\"484\":4}}],[\"on\",{\"1\":{\"496\":1}}],[\"only模式作为持久化方式\",{\"1\":{\"496\":1}}],[\"only\",{\"1\":{\"495\":1}}],[\"onload\",{\"1\":{\"82\":1}}],[\"onmessage\",{\"1\":{\"455\":1}}],[\"one\",{\"1\":{\"408\":2,\"410\":2}}],[\"o操作和网络传输\",{\"1\":{\"301\":1}}],[\"o操作或网络传输\",{\"1\":{\"301\":1}}],[\"or或\",{\"1\":{\"353\":1}}],[\"order\",{\"1\":{\"325\":1,\"326\":1,\"373\":1}}],[\"orderbyasc\",{\"1\":{\"291\":1}}],[\"org\",{\"1\":{\"244\":1}}],[\"origin\",{\"1\":{\"110\":3,\"120\":4}}],[\"originalfilename\",{\"1\":{\"15\":2}}],[\"our\",{\"1\":{\"171\":1}}],[\"out\",{\"1\":{\"17\":6,\"19\":5,\"29\":1,\"58\":1,\"68\":1,\"72\":1,\"81\":1,\"91\":2,\"272\":6,\"293\":1,\"294\":1,\"388\":1,\"398\":1,\"410\":1,\"422\":1,\"423\":1,\"433\":1,\"440\":1,\"442\":2,\"444\":2,\"446\":2,\"448\":2,\"455\":1,\"486\":1,\"514\":2,\"535\":1,\"539\":3,\"541\":1,\"548\":1,\"555\":1,\"557\":1,\"562\":1,\"568\":2,\"587\":3}}],[\"o\",{\"1\":{\"131\":1,\"133\":1}}],[\"optional为true时不让别人知道自己所用依赖\",{\"1\":{\"167\":1}}],[\"optional>\",{\"1\":{\"32\":1,\"168\":1}}],[\"opsforvalue\",{\"1\":{\"91\":1,\"486\":2}}],[\"objectmapper\",{\"1\":{\"484\":3}}],[\"object\",{\"1\":{\"484\":1,\"541\":3,\"577\":1,\"581\":1,\"587\":3}}],[\"object>>>\",{\"1\":{\"269\":1}}],[\"object>>\",{\"1\":{\"269\":1}}],[\"object>\",{\"1\":{\"269\":2,\"272\":2,\"451\":2,\"484\":2}}],[\"objecterror\",{\"1\":{\"81\":1}}],[\"objectlisting\",{\"1\":{\"17\":3}}],[\"oldname\",{\"1\":{\"29\":3}}],[\"override\",{\"1\":{\"25\":1,\"72\":1,\"99\":1,\"291\":1,\"305\":1,\"388\":1,\"398\":1,\"410\":1,\"422\":1,\"423\":1,\"433\":1,\"550\":3,\"577\":1,\"579\":2,\"581\":2,\"587\":3,\"589\":1}}],[\"oe\",{\"1\":{\"17\":5,\"19\":5}}],[\"os\",{\"1\":{\"15\":3}}],[\"ossexception\",{\"1\":{\"17\":2,\"19\":2}}],[\"ossobjectsummary\",{\"1\":{\"17\":1}}],[\"ossclient\",{\"1\":{\"17\":4,\"19\":4}}],[\"ossclientbuilder\",{\"1\":{\"15\":1,\"17\":1,\"19\":1}}],[\"oss\",{\"1\":{\"13\":3,\"15\":2,\"17\":2,\"19\":2}}],[\"everysec\",{\"1\":{\"496\":2}}],[\"event\",{\"1\":{\"82\":2}}],[\"elementtype\",{\"1\":{\"575\":1}}],[\"element2\",{\"1\":{\"472\":1,\"476\":1}}],[\"element1\",{\"1\":{\"472\":3,\"476\":4}}],[\"ems\",{\"1\":{\"386\":3,\"388\":3,\"390\":3,\"436\":3}}],[\"email\",{\"1\":{\"77\":2,\"79\":7,\"108\":2}}],[\"et\",{\"1\":{\"269\":2}}],[\"ew\",{\"1\":{\"269\":9}}],[\"esc\",{\"1\":{\"151\":1}}],[\"equals\",{\"1\":{\"91\":1}}],[\"eq\",{\"1\":{\"91\":1,\"272\":1,\"293\":1,\"294\":1}}],[\"ex\",{\"1\":{\"587\":1}}],[\"exists\",{\"1\":{\"466\":1}}],[\"exist=false\",{\"1\":{\"282\":1}}],[\"exchange\",{\"1\":{\"444\":4,\"446\":4,\"448\":4,\"451\":3,\"453\":2}}],[\"exchange在发送消息时\",{\"1\":{\"418\":1}}],[\"exchangedeclare\",{\"1\":{\"408\":1,\"410\":1,\"420\":1,\"422\":1,\"423\":1,\"432\":1,\"433\":1}}],[\"exception\",{\"1\":{\"304\":1,\"305\":2,\"577\":1,\"581\":1,\"587\":4}}],[\"exclusions>\",{\"1\":{\"171\":1}}],[\"exclusion>\",{\"1\":{\"171\":1}}],[\"extends\",{\"1\":{\"269\":5,\"550\":1,\"579\":1,\"589\":1}}],[\"execution\",{\"1\":{\"535\":1,\"537\":1,\"539\":1,\"541\":1}}],[\"executing\",{\"1\":{\"72\":1}}],[\"exec\",{\"1\":{\"133\":1}}],[\"example\",{\"1\":{\"108\":1,\"120\":1}}],[\"examplebucket\",{\"1\":{\"15\":1}}],[\"explicit\",{\"1\":{\"171\":1}}],[\"expire\",{\"1\":{\"91\":1,\"466\":1}}],[\"export\",{\"1\":{\"82\":1,\"133\":3}}],[\"e\",{\"1\":{\"29\":2,\"30\":1,\"60\":1,\"81\":4,\"269\":4,\"305\":2,\"390\":2,\"539\":2,\"541\":4}}],[\"entry>\",{\"1\":{\"525\":1}}],[\"entity\",{\"1\":{\"269\":3}}],[\"envelope\",{\"1\":{\"388\":2,\"398\":3,\"410\":2,\"422\":2,\"423\":2,\"433\":2}}],[\"end\",{\"1\":{\"151\":1}}],[\"endpoint\",{\"1\":{\"15\":2,\"17\":1,\"19\":1}}],[\"endpoint以华东1\",{\"1\":{\"15\":1}}],[\"enableswagger2\",{\"1\":{\"103\":1}}],[\"enablescheduling\",{\"1\":{\"65\":1}}],[\"enabledefaulttyping\",{\"1\":{\"484\":1}}],[\"enabled\",{\"1\":{\"30\":1}}],[\"encode\",{\"1\":{\"91\":1}}],[\"encoding\",{\"1\":{\"54\":1}}],[\"enctype=\",{\"1\":{\"28\":1}}],[\"error\",{\"1\":{\"17\":3,\"19\":3,\"81\":3,\"422\":2,\"433\":4}}],[\"填写bucket名称\",{\"1\":{\"15\":1}}],[\"风险很高\",{\"1\":{\"15\":1}}],[\"ctx\",{\"1\":{\"550\":3}}],[\"ctrl\",{\"1\":{\"151\":2}}],[\"customexchange\",{\"1\":{\"451\":2}}],[\"curd\",{\"0\":{\"270\":1}}],[\"c端\",{\"1\":{\"384\":1}}],[\"cm\",{\"1\":{\"269\":2}}],[\"central\",{\"1\":{\"160\":1}}],[\"cp\",{\"1\":{\"133\":2}}],[\"cli\",{\"1\":{\"461\":1}}],[\"closechannelandconnection\",{\"1\":{\"390\":1}}],[\"close\",{\"1\":{\"386\":2,\"388\":2,\"390\":2,\"408\":2,\"420\":2,\"432\":2}}],[\"clone\",{\"1\":{\"120\":1}}],[\"clean\",{\"1\":{\"162\":1}}],[\"class=\",{\"1\":{\"510\":2,\"517\":1,\"519\":2,\"525\":1}}],[\"class\",{\"1\":{\"25\":1,\"29\":1,\"54\":1,\"58\":1,\"65\":1,\"72\":2,\"79\":1,\"81\":1,\"97\":1,\"103\":2,\"289\":1,\"304\":1,\"305\":2,\"390\":1,\"398\":1,\"408\":1,\"410\":1,\"420\":1,\"422\":1,\"423\":1,\"432\":1,\"433\":1,\"438\":1,\"440\":1,\"442\":1,\"444\":1,\"446\":1,\"448\":1,\"451\":1,\"453\":1,\"455\":1,\"482\":1,\"484\":2,\"512\":1,\"535\":1,\"539\":1,\"541\":1,\"548\":1,\"550\":3,\"577\":1,\"579\":1,\"581\":2,\"587\":1,\"589\":1}}],[\"classpathxmlapplicationcontext\",{\"1\":{\"512\":1}}],[\"classpath\",{\"1\":{\"24\":1,\"25\":1}}],[\"cd\",{\"1\":{\"112\":1,\"120\":1}}],[\"channel\",{\"1\":{\"386\":5,\"388\":6,\"390\":4,\"398\":7,\"408\":5,\"410\":7,\"420\":5,\"422\":9,\"423\":7,\"432\":5,\"433\":9}}],[\"change=\",{\"1\":{\"82\":1}}],[\"choose>\",{\"1\":{\"253\":1}}],[\"choose\",{\"1\":{\"252\":1}}],[\"checkout\",{\"1\":{\"110\":2,\"116\":1,\"118\":1}}],[\"chenkout\",{\"1\":{\"110\":1}}],[\"createrootapplicationcontext\",{\"1\":{\"550\":1}}],[\"createservletapplicationcontext\",{\"1\":{\"550\":1}}],[\"createchannel\",{\"1\":{\"386\":1,\"388\":1,\"398\":1,\"408\":1,\"410\":1,\"420\":1,\"422\":1,\"423\":1,\"432\":1,\"433\":1}}],[\"create\",{\"1\":{\"97\":1,\"133\":1,\"149\":1}}],[\"createjwt\",{\"1\":{\"91\":1}}],[\"createmimemessage\",{\"1\":{\"58\":2}}],[\"cron\",{\"0\":{\"69\":1},\"1\":{\"70\":1}}],[\"c\",{\"1\":{\"60\":3,\"120\":1}}],[\"cc\",{\"1\":{\"58\":1}}],[\"count\",{\"1\":{\"291\":1,\"326\":1,\"368\":1}}],[\"colorservice\",{\"1\":{\"583\":1}}],[\"color\",{\"1\":{\"579\":1,\"583\":3}}],[\"collection<\",{\"1\":{\"269\":2}}],[\"coll\",{\"1\":{\"269\":2}}],[\"columnmap\",{\"1\":{\"269\":2}}],[\"core<\",{\"1\":{\"171\":1}}],[\"copy\",{\"1\":{\"153\":1}}],[\"convertandsend\",{\"1\":{\"438\":5,\"453\":2}}],[\"con\",{\"1\":{\"390\":3}}],[\"connection\",{\"1\":{\"386\":4,\"388\":4,\"390\":2,\"398\":3,\"408\":4,\"410\":3,\"420\":4,\"422\":3,\"423\":3,\"432\":4,\"433\":3}}],[\"connectionfactory\",{\"1\":{\"386\":9,\"388\":9,\"390\":10}}],[\"consumertwo\",{\"1\":{\"423\":1}}],[\"consumertag\",{\"1\":{\"388\":1,\"398\":1,\"410\":1,\"422\":1,\"423\":1,\"433\":1}}],[\"consumerone\",{\"1\":{\"410\":1,\"422\":1,\"433\":1}}],[\"consumer2\",{\"1\":{\"398\":1}}],[\"consumer\",{\"0\":{\"397\":1},\"1\":{\"384\":1}}],[\"const\",{\"1\":{\"82\":2}}],[\"config类\",{\"1\":{\"549\":1}}],[\"config\",{\"1\":{\"97\":5,\"108\":2,\"288\":1,\"450\":1}}],[\"configuration\",{\"1\":{\"25\":1,\"65\":1,\"97\":1,\"103\":1,\"289\":1,\"451\":1,\"484\":1,\"531\":1,\"550\":1,\"579\":1,\"589\":1}}],[\"control\",{\"1\":{\"503\":1}}],[\"controller\",{\"1\":{\"80\":1,\"529\":1,\"548\":1,\"550\":1,\"570\":2}}],[\"context<\",{\"1\":{\"508\":1}}],[\"contextloads\",{\"1\":{\"486\":1}}],[\"content\",{\"1\":{\"58\":6,\"91\":2,\"160\":1}}],[\"contaienr\",{\"1\":{\"133\":1}}],[\"container2\",{\"1\":{\"133\":1}}],[\"container1\",{\"1\":{\"133\":1}}],[\"container\",{\"0\":{\"132\":1},\"1\":{\"131\":2,\"133\":19}}],[\"code\",{\"1\":{\"17\":1,\"19\":1,\"70\":1}}],[\"componentscan\",{\"1\":{\"531\":1,\"550\":1}}],[\"component\",{\"1\":{\"440\":1,\"442\":1,\"444\":1,\"446\":1,\"448\":1,\"453\":1,\"455\":1,\"527\":1,\"535\":1,\"587\":1}}],[\"compose\",{\"1\":{\"127\":1}}],[\"compile\",{\"1\":{\"162\":1,\"177\":1}}],[\"command\",{\"1\":{\"133\":1}}],[\"commit\",{\"1\":{\"114\":2,\"116\":1,\"118\":1,\"131\":1}}],[\"com\",{\"1\":{\"15\":1,\"54\":2,\"60\":6,\"108\":1,\"120\":3,\"160\":1,\"244\":1,\"380\":1,\"510\":2,\"517\":1,\"519\":2,\"525\":1,\"531\":1,\"535\":1,\"537\":1,\"539\":1,\"541\":1,\"550\":1}}],[\"cat\",{\"1\":{\"116\":1}}],[\"catch\",{\"1\":{\"17\":1,\"19\":1,\"29\":1,\"305\":1,\"390\":1}}],[\"cancel\",{\"1\":{\"72\":1}}],[\"caught\",{\"1\":{\"17\":1,\"19\":1}}],[\"cnblogs\",{\"1\":{\"380\":1}}],[\"cn\",{\"1\":{\"15\":1}}],[\"abstractdispatcherservletinitializer\",{\"1\":{\"550\":1}}],[\"abc\",{\"1\":{\"428\":1}}],[\"aftercompletion\",{\"1\":{\"587\":2}}],[\"afterthrowing\",{\"1\":{\"539\":1}}],[\"afterreturning\",{\"1\":{\"535\":1,\"539\":2}}],[\"afterpropertiesset\",{\"1\":{\"484\":1}}],[\"aop\",{\"0\":{\"532\":1},\"1\":{\"535\":1,\"539\":1}}],[\"aof持久化策略的配置\",{\"1\":{\"496\":1}}],[\"aof\",{\"0\":{\"494\":1},\"1\":{\"495\":2,\"496\":4}}],[\"atx\",{\"1\":{\"512\":2}}],[\"attach\",{\"1\":{\"133\":1}}],[\"amqp<\",{\"1\":{\"435\":1}}],[\"amqp\",{\"1\":{\"388\":1,\"398\":1,\"410\":1,\"422\":1,\"423\":1,\"433\":1}}],[\"aspect\",{\"1\":{\"535\":1}}],[\"asg\",{\"1\":{\"433\":1}}],[\"asc\",{\"1\":{\"370\":1,\"373\":1}}],[\"as\",{\"1\":{\"329\":1,\"332\":1}}],[\"aslist\",{\"1\":{\"272\":2}}],[\"avg\",{\"1\":{\"326\":1,\"361\":1,\"368\":1}}],[\"auto\",{\"1\":{\"278\":1,\"496\":2}}],[\"autowired\",{\"1\":{\"58\":1,\"60\":1,\"72\":1,\"99\":1,\"305\":1,\"438\":1,\"486\":1,\"531\":1,\"589\":1}}],[\"authorization\",{\"1\":{\"577\":1}}],[\"author\",{\"1\":{\"251\":4,\"253\":4,\"255\":4}}],[\"aaa\",{\"1\":{\"140\":2,\"144\":1,\"147\":2,\"149\":3,\"433\":1}}],[\"agsdga\",{\"1\":{\"433\":1}}],[\"agv\",{\"1\":{\"362\":1}}],[\"ag\",{\"1\":{\"128\":1}}],[\"age\",{\"1\":{\"77\":2,\"79\":7,\"362\":1,\"364\":2,\"368\":1,\"373\":1,\"468\":4}}],[\"akgit\",{\"1\":{\"120\":2}}],[\"a\",{\"1\":{\"114\":1,\"133\":1,\"517\":2,\"519\":1,\"523\":4}}],[\"ah\",{\"1\":{\"112\":1}}],[\"always\",{\"1\":{\"496\":1}}],[\"all\",{\"1\":{\"484\":1}}],[\"allerrors\",{\"1\":{\"81\":2}}],[\"aliyun\",{\"1\":{\"160\":1}}],[\"aliyuncs\",{\"1\":{\"15\":1}}],[\"admin\",{\"1\":{\"428\":3,\"430\":2}}],[\"administrator\",{\"1\":{\"60\":2}}],[\"adress\",{\"1\":{\"77\":1}}],[\"addpathpatterns\",{\"1\":{\"579\":1,\"589\":1}}],[\"addargumentresolvers\",{\"1\":{\"579\":1}}],[\"addattachment\",{\"1\":{\"58\":1}}],[\"addinterceptor\",{\"1\":{\"579\":1,\"589\":1}}],[\"addinterceptors\",{\"1\":{\"579\":2,\"589\":1}}],[\"addinnerinterceptor\",{\"1\":{\"289\":1}}],[\"addinline\",{\"1\":{\"58\":1}}],[\"adduser\",{\"1\":{\"81\":2,\"305\":1}}],[\"address\",{\"1\":{\"77\":1,\"79\":6}}],[\"addresourcelocations\",{\"1\":{\"25\":1}}],[\"addresourcehandler\",{\"1\":{\"25\":1}}],[\"addresourcehandlers\",{\"1\":{\"25\":1}}],[\"add\",{\"1\":{\"17\":1,\"81\":1,\"114\":2,\"120\":1,\"579\":1}}],[\"appendfsync\",{\"1\":{\"496\":3}}],[\"appendfilename\",{\"1\":{\"496\":2}}],[\"appendonly\",{\"1\":{\"496\":2}}],[\"append\",{\"1\":{\"468\":1,\"495\":1}}],[\"applicationcontext\",{\"1\":{\"509\":1,\"512\":2}}],[\"application\",{\"1\":{\"53\":1}}],[\"apt\",{\"1\":{\"461\":2}}],[\"apache\",{\"1\":{\"171\":1}}],[\"apioperation\",{\"1\":{\"103\":1}}],[\"apis\",{\"1\":{\"103\":1}}],[\"apiinfobuilder\",{\"1\":{\"103\":1}}],[\"apiinfo\",{\"1\":{\"103\":4}}],[\"api<\",{\"1\":{\"27\":1,\"546\":1}}],[\"around\",{\"1\":{\"539\":1,\"541\":1}}],[\"argumentresolvers\",{\"1\":{\"579\":2}}],[\"arg\",{\"1\":{\"519\":3}}],[\"args\",{\"1\":{\"398\":1,\"408\":1,\"410\":1,\"420\":1,\"422\":1,\"423\":1,\"432\":1,\"433\":1,\"451\":3,\"512\":1,\"541\":4}}],[\"array>\",{\"1\":{\"525\":1}}],[\"arrays\",{\"1\":{\"272\":2,\"541\":1}}],[\"arraylist<>\",{\"1\":{\"17\":1,\"81\":1}}],[\"arraylist<string>\",{\"1\":{\"17\":1,\"81\":1}}],[\"artifact\",{\"1\":{\"244\":1}}],[\"artifactid>\",{\"1\":{\"27\":1,\"32\":1,\"56\":1,\"75\":1,\"95\":1,\"102\":1,\"168\":1,\"171\":3,\"244\":1,\"435\":1,\"508\":1,\"546\":2}}],[\"articlemapper\",{\"1\":{\"99\":2,\"293\":1,\"294\":1}}],[\"article\",{\"1\":{\"99\":6,\"294\":1}}],[\"annotationconfigwebapplicationcontext\",{\"1\":{\"550\":2}}],[\"and\",{\"1\":{\"251\":3,\"253\":4,\"255\":3,\"272\":1,\"343\":1,\"351\":1}}],[\"any\",{\"1\":{\"103\":1,\"484\":1}}],[\"an\",{\"1\":{\"17\":2,\"19\":2}}],[\"active\",{\"1\":{\"251\":1,\"253\":1}}],[\"action=\",{\"1\":{\"28\":1}}],[\"action\",{\"1\":{\"13\":1}}],[\"account\",{\"1\":{\"91\":11,\"272\":3,\"577\":1,\"579\":1,\"581\":1,\"583\":3}}],[\"accept=\",{\"1\":{\"82\":1}}],[\"accesskeysecert\",{\"1\":{\"17\":1,\"19\":1}}],[\"accesskeysecret\",{\"1\":{\"15\":2}}],[\"accesskeyid\",{\"1\":{\"15\":2,\"17\":1,\"19\":1}}],[\"accesskey进行操作\",{\"1\":{\"12\":1}}],[\"hmget等\",{\"1\":{\"474\":1}}],[\"hmset\",{\"1\":{\"474\":1}}],[\"hvals\",{\"1\":{\"474\":2}}],[\"hkeys\",{\"1\":{\"474\":2}}],[\"hlen\",{\"1\":{\"474\":2}}],[\"hdel\",{\"1\":{\"474\":2}}],[\"hgetall\",{\"1\":{\"474\":2}}],[\"hget\",{\"1\":{\"474\":2}}],[\"hset\",{\"1\":{\"474\":2}}],[\"hh\",{\"1\":{\"428\":2,\"430\":1,\"438\":1,\"466\":1,\"486\":2}}],[\"hhh\",{\"1\":{\"272\":1,\"466\":1,\"548\":1}}],[\"h\",{\"1\":{\"151\":1}}],[\"handlermethodargumentresolver\",{\"1\":{\"581\":1}}],[\"handler\",{\"1\":{\"577\":1,\"587\":3}}],[\"handlerinterceptor\",{\"1\":{\"577\":1,\"587\":1}}],[\"handledelivery\",{\"1\":{\"388\":1,\"398\":1,\"410\":1,\"422\":1,\"423\":1,\"433\":1}}],[\"hangzhou\",{\"1\":{\"15\":1}}],[\"having\",{\"1\":{\"325\":1,\"368\":1}}],[\"hash的value序列化方式采用jackson\",{\"1\":{\"484\":1}}],[\"hash的key也采用string的序列化方式\",{\"1\":{\"484\":1}}],[\"hash命令\",{\"1\":{\"474\":1}}],[\"hash\",{\"0\":{\"473\":1}}],[\"hashmap<>\",{\"1\":{\"272\":2}}],[\"hashmap<string\",{\"1\":{\"272\":2,\"451\":1}}],[\"haserrors\",{\"1\":{\"81\":1}}],[\"hard\",{\"1\":{\"116\":1}}],[\"hexists\",{\"1\":{\"474\":2}}],[\"head\",{\"1\":{\"116\":1}}],[\"head~100\",{\"1\":{\"116\":1}}],[\"head^\",{\"1\":{\"116\":1}}],[\"height\",{\"1\":{\"82\":1}}],[\"here\",{\"1\":{\"70\":1}}],[\"hello\",{\"1\":{\"58\":1,\"386\":3,\"388\":2,\"408\":1,\"438\":7,\"440\":1,\"470\":3,\"525\":1,\"548\":1,\"555\":1,\"557\":1,\"562\":1}}],[\"helper\",{\"1\":{\"58\":12}}],[\"html5\",{\"1\":{\"35\":1}}],[\"httpservletresponse\",{\"1\":{\"577\":1,\"585\":1,\"587\":3}}],[\"httpservletrequest\",{\"1\":{\"29\":1,\"577\":1,\"581\":2,\"585\":1,\"587\":3}}],[\"https\",{\"1\":{\"15\":1,\"244\":1}}],[\"hou\",{\"1\":{\"539\":1}}],[\"hope\",{\"1\":{\"216\":1}}],[\"hot\",{\"0\":{\"31\":1}}],[\"hostname\",{\"1\":{\"153\":1}}],[\"host\",{\"1\":{\"17\":1,\"19\":1,\"54\":1,\"153\":1,\"436\":2}}],[\"home\",{\"0\":{\"0\":1},\"1\":{\"151\":1},\"2\":{\"2\":1}}],[\"=null\",{\"1\":{\"390\":2,\"581\":1}}],[\"===\",{\"1\":{\"531\":1}}],[\"==0\",{\"1\":{\"91\":1}}],[\"==\",{\"1\":{\"91\":2,\"570\":1}}],[\"=>\",{\"1\":{\"82\":1}}],[\"=resids\",{\"1\":{\"58\":1}}],[\"=\",{\"0\":{\"69\":1},\"1\":{\"15\":6,\"17\":5,\"19\":2,\"29\":7,\"58\":6,\"68\":2,\"70\":1,\"72\":2,\"77\":4,\"79\":13,\"81\":3,\"82\":4,\"91\":12,\"97\":1,\"99\":3,\"247\":1,\"251\":4,\"253\":5,\"255\":5,\"272\":15,\"283\":1,\"289\":1,\"291\":4,\"293\":2,\"294\":3,\"304\":1,\"305\":1,\"340\":1,\"341\":1,\"376\":1,\"386\":3,\"388\":4,\"390\":1,\"398\":3,\"408\":2,\"410\":4,\"420\":3,\"422\":3,\"423\":3,\"432\":3,\"433\":3,\"438\":1,\"440\":3,\"442\":4,\"444\":12,\"446\":14,\"448\":14,\"451\":4,\"453\":2,\"455\":2,\"484\":4,\"486\":1,\"512\":3,\"521\":1,\"523\":2,\"531\":1,\"541\":3,\"550\":1,\"568\":4,\"570\":3,\"577\":1,\"581\":1,\"583\":2}}],[\"杭州\",{\"1\":{\"15\":1}}],[\"③\",{\"1\":{\"13\":1}}],[\"权限\",{\"1\":{\"13\":1}}],[\"放行权限\",{\"1\":{\"13\":1}}],[\"②\",{\"1\":{\"13\":1}}],[\"①\",{\"1\":{\"13\":1}}],[\"建议使用子账号\",{\"1\":{\"12\":1}}],[\"警告\",{\"1\":{\"11\":1}}],[\"阿里镜像\",{\"0\":{\"159\":1}}],[\"阿里云账号accesskey拥有所有api的访问权限\",{\"1\":{\"15\":1}}],[\"阿里云对象存储\",{\"0\":{\"8\":1}}],[\"阿里官方文档\",{\"0\":{\"9\":1}}],[\"幻灯片页\",{\"0\":{\"3\":1}}]],\"serializationVersion\":2}";