const rt="ENTRIES",W="KEYS",$="VALUES",F="";class M{constructor(t,s){const n=t._tree,u=Array.from(n.keys());this.set=t,this._type=s,this._path=u.length>0?[{node:n,keys:u}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=C(this._path);if(C(s)===F)return{done:!1,value:this.result()};const n=t.get(C(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=C(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>C(t)).filter(t=>t!==F).join("")}value(){return C(this._path).node.get(F)}result(){switch(this._type){case $:return this.value();case W:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const C=e=>e[e.length-1],ct=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const u=t.length+1,o=u+s,i=new Uint8Array(o*u).fill(s+1);for(let r=0;r<u;++r)i[r]=r;for(let r=1;r<o;++r)i[r*u]=r;return R(e,t,s,n,i,1,u,""),n},R=(e,t,s,n,u,o,i,r)=>{const h=o*i;t:for(const c of e.keys())if(c===F){const a=u[h-1];a<=s&&n.set(r,[e.get(c),a])}else{let a=o;for(let l=0;l<c.length;++l,++a){const m=c[l],g=i*a,f=g-i;let d=u[g];const p=Math.max(0,a-s-1),_=Math.min(i-1,a+s);for(let A=p;A<_;++A){const O=m!==t[A],x=u[f+A]+ +O,y=u[f+A+1]+1,k=u[g+A]+1,T=u[g+A+1]=Math.min(x,y,k);T<d&&(d=T)}if(d>s)continue t}R(e.get(c),t,s,n,u,a,i,r+c)}};let q=class w{constructor(t=new Map,s=""){this._size=void 0,this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=v(this._tree,t.slice(this._prefix.length));if(s===void 0){const[u,o]=j(n);for(const i of u.keys())if(i!==F&&i.startsWith(o)){const r=new Map;return r.set(i.slice(o.length),u.get(i)),new w(r,t)}}return new w(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,lt(this._tree,t)}entries(){return new M(this,rt)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return ct(this._tree,t,s)}get(t){const s=B(this._tree,t);return s!==void 0?s.get(F):void 0}has(t){const s=B(this._tree,t);return s!==void 0&&s.has(F)}keys(){return new M(this,W)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,S(this._tree,t).set(F,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=S(this._tree,t);return n.set(F,s(n.get(F))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=S(this._tree,t);let u=n.get(F);return u===void 0&&n.set(F,u=s()),u}values(){return new M(this,$)}[Symbol.iterator](){return this.entries()}static from(t){const s=new w;for(const[n,u]of t)s.set(n,u);return s}static fromObject(t){return w.from(Object.entries(t))}};const v=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==F&&t.startsWith(n))return s.push([e,n]),v(e.get(n),t.slice(n.length),s);return s.push([e,t]),v(void 0,"",s)},B=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==F&&t.startsWith(s))return B(e.get(s),t.slice(s.length))},S=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const o of e.keys())if(o!==F&&t[n]===o[0]){const i=Math.min(s-n,o.length);let r=1;for(;r<i&&t[n+r]===o[r];)++r;const h=e.get(o);if(r===o.length)e=h;else{const c=new Map;c.set(o.slice(r),h),e.set(t.slice(n,n+r),c),e.delete(o),e=c}n+=r;continue t}const u=new Map;return e.set(t.slice(n),u),u}return e},lt=(e,t)=>{const[s,n]=v(e,t);if(s!==void 0){if(s.delete(F),s.size===0)P(n);else if(s.size===1){const[u,o]=s.entries().next().value;N(n,u,o)}}},P=e=>{if(e.length===0)return;const[t,s]=j(e);if(t.delete(s),t.size===0)P(e.slice(0,-1));else if(t.size===1){const[n,u]=t.entries().next().value;n!==F&&N(e.slice(0,-1),n,u)}},N=(e,t,s)=>{if(e.length===0)return;const[n,u]=j(e);n.set(u+t,s),n.delete(u)},j=e=>e[e.length-1],ht=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,L="or",G="and",dt="and_not",at=(e,t)=>{e.includes(t)||e.push(t)},J=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},U=({score:e},{score:t})=>t-e,ft=()=>new Map,b=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},H=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,gt={[L]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:u,terms:o,match:i}=t.get(s);n.score=n.score+u,n.match=Object.assign(n.match,i),J(n.terms,o)}}return e},[G]:(e,t)=>{const s=new Map;for(const n of t.keys()){const u=e.get(n);if(u==null)continue;const{score:o,terms:i,match:r}=t.get(n);J(u.terms,i),s.set(n,{score:u.score+o,terms:u.terms,match:Object.assign(u.match,r)})}return s},[dt]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},pt=(e,t,s,n,u,o)=>{const{k:i,b:r,d:h}=o;return Math.log(1+(s-t+.5)/(t+.5))*(h+e*(i+1)/(e+i*(1-r+r*n/u)))},mt=e=>(t,s,n)=>{const u=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,o=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:u,prefix:o}},Ft={k:1.2,b:.7,d:.5},_t={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(ht),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof(console==null?void 0:console[e])=="function"&&console[e](t)},autoVacuum:!0},K={combineWith:L,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:Ft},At={combineWith:G,prefix:(e,t,s)=>t===s.length-1},yt={batchSize:1e3,batchWait:10},X={minDirtFactor:.1,minDirtCount:20},Ct={...yt,...X};class zt{constructor(t){if((t==null?void 0:t.fields)==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?Ct:t.autoVacuum;this._options={..._t,...t,autoVacuum:s,searchOptions:{...K,...t.searchOptions||{}},autoSuggestOptions:{...At,...t.autoSuggestOptions||{}}},this._index=new q,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=X,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const u={};for(const[o,i]of n)u[o]=Object.fromEntries(i);t.push([s,u])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const Y=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},Q=(e,t,s,n)=>{for(const u of Object.keys(e._fieldIds))if(e._fieldIds[u]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${u}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},Et=(e,t,s,n)=>{if(!e._index.has(n)){Q(e,s,t,n);return}const u=e._index.fetch(n,ft),o=u.get(t);o==null||o.get(s)==null?Q(e,s,t,n):o.get(s)<=1?o.size<=1?u.delete(t):o.delete(s):o.set(s,o.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},Z=(e,t=L)=>{if(e.length===0)return new Map;const s=t.toLowerCase();return e.reduce(gt[s])||new Map},V=(e,t,s,n,u,o,i,r,h=new Map)=>{if(u==null)return h;for(const c of Object.keys(o)){const a=o[c],l=e._fieldIds[c],m=u.get(l);if(m==null)continue;let g=m.size;const f=e._avgFieldLength[l];for(const d of m.keys()){if(!e._documentIds.has(d)){Et(e,l,d,s),g-=1;continue}const p=i?i(e._documentIds.get(d),s,e._storedFields.get(d)):1;if(!p)continue;const _=m.get(d),A=e._fieldLength.get(d)[l],O=pt(_,g,e._documentCount,A,f,r),x=n*a*p*O,y=h.get(d);if(y){y.score+=x,at(y.terms,t);const k=H(y.match,s);k?k.push(c):y.match[s]=[c]}else h.set(d,{score:x,terms:[t],match:{[s]:[c]}})}}return h},wt=(e,t,s)=>{const n={...e._options.searchOptions,...s},u=(n.fields||e._options.fields).reduce((d,p)=>({...d,[p]:H(n.boost,p)||1}),{}),{boostDocument:o,weights:i,maxFuzzy:r,bm25:h}=n,{fuzzy:c,prefix:a}={...K.weights,...i},l=e._index.get(t.term),m=V(e,t.term,t.term,1,l,u,o,h);let g,f;if(t.prefix&&(g=e._index.atPrefix(t.term)),t.fuzzy){const d=t.fuzzy===!0?.2:t.fuzzy,p=d<1?Math.min(r,Math.round(t.term.length*d)):d;p&&(f=e._index.fuzzyGet(t.term,p))}if(g)for(const[d,p]of g){const _=d.length-t.term.length;if(!_)continue;f==null||f.delete(d);const A=a*d.length/(d.length+.3*_);V(e,t.term,d,A,p,u,o,h,m)}if(f)for(const d of f.keys()){const[p,_]=f.get(d);if(!_)continue;const A=c*d.length/(d.length+_);V(e,t.term,d,A,p,u,o,h,m)}return m},tt=(e,t,s={})=>{if(typeof t!="string"){const a={...s,...t,queries:void 0},l=t.queries.map(m=>tt(e,m,a));return Z(l,a.combineWith)}const{tokenize:n,processTerm:u,searchOptions:o}=e._options,i={tokenize:n,processTerm:u,...o,...s},{tokenize:r,processTerm:h}=i,c=r(t).flatMap(a=>h(a)).filter(a=>!!a).map(mt(i)).map(a=>wt(e,a,i));return Z(c,i.combineWith)},et=(e,t,s={})=>{const n=tt(e,t,s),u=[];for(const[o,{score:i,terms:r,match:h}]of n){const c=r.length,a={id:e._documentIds.get(o),score:i*c,terms:Object.keys(h),match:h};Object.assign(a,e._storedFields.get(o)),(s.filter==null||s.filter(a))&&u.push(a)}return u.sort(U),u},xt=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:o,terms:i}of et(e,t,s)){const r=i.join(" "),h=n.get(r);h!=null?(h.score+=o,h.count+=1):n.set(r,{score:o,terms:i,count:1})}const u=[];for(const[o,{score:i,terms:r,count:h}]of n)u.push({suggestion:o,terms:r,score:i/h});return u.sort(U),u},kt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:u,fieldLength:o,averageFieldLength:i,storedFields:r,dirtCount:h,serializationVersion:c},a)=>{if(c!==1&&c!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const l=new zt(a);l._documentCount=t,l._nextId=s,l._documentIds=b(n),l._idToShortId=new Map,l._fieldIds=u,l._fieldLength=b(o),l._avgFieldLength=i,l._storedFields=b(r),l._dirtCount=h||0,l._index=new q;for(const[m,g]of l._documentIds)l._idToShortId.set(g,m);for(const[m,g]of e){const f=new Map;for(const d of Object.keys(g)){let p=g[d];c===1&&(p=p.ds),f.set(parseInt(d,10),b(p))}l._index.set(m,f)}return l},st=Object.entries,vt=Object.fromEntries,z=100,E=20,D=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),u=[];let o=0,i=0;const r=(c,a=!1)=>{let l="";i===0?l=c.length>E?`… ${c.slice(-E)}`:c:a?l=c.length+i>z?`${c.slice(0,z-i)}… `:c:l=c.length>E?`${c.slice(0,E)} … ${c.slice(-E)}`:c,l&&u.push(l),i+=l.length,a||(u.push(["mark",t]),i+=t.length,i>=z&&u.push(" …"))};let h=s.indexOf(n,o);if(h===-1)return null;for(;h>=0;){const c=h+n.length;if(r(e.slice(o,h)),o=c,i>z)break;h=s.indexOf(n,o)}return i<z&&r(e.slice(o),!0),u},nt=/[\u4e00-\u9fa5]/g,ut=(e={})=>({fuzzy:.2,prefix:!0,processTerm:t=>{const s=t.match(nt)||[],n=t.replace(nt,"").toLowerCase();return n?[n,...s]:[...s]},...e}),ot=(e,t,s={})=>{const n={};return et(t,e,ut({boost:{h:2,t:1,c:4},...s})).forEach(u=>{const{id:o,terms:i,score:r}=u,h=o.includes("/"),c=!h&&o.includes("#"),a=o.includes("@"),[l,m]=o.split(/[#@]/),{contents:g}=n[l]??={title:"",contents:[]};if(c)g.push([{type:"heading",key:l,anchor:u.a,display:i.map(f=>D(u.h,f)).filter(f=>f!==null)},r]);else if(h){const[f]=m.split("/"),{h:d="",a:p=""}=Y(t,`${l}#${f}`)||{};g.push([{type:"text",key:l,header:d,anchor:p,display:i.map(_=>D(u.t,_)).filter(_=>_!==null)},r])}else a?g.push([{type:"customField",key:l,index:m,display:i.map(f=>u.c.map(d=>D(d,f))).flat().filter(f=>f!==null)},r]):g.push([{type:"title",key:l,display:i.map(f=>D(u.h,f)).filter(f=>f!==null)},r])}),st(n).sort(([,u],[,o])=>o.contents.reduce((i,[,r])=>i+r,0)-u.contents.reduce((i,[,r])=>i+r,0)).map(([u,{title:o,contents:i}])=>{if(!o){const r=Y(t,u);r&&(o=r.h)}return{title:o,contents:i.map(([r])=>r)}})},it=(e,t,s={})=>xt(t,e,ut(s)).map(({suggestion:n})=>n),I=vt(st(JSON.parse("{\"/\":{\"documentCount\":599,\"nextId\":599,\"documentIds\":{\"0\":\"v-8daa1a0e\",\"1\":\"v-8daa1a0e@0\",\"2\":\"v-8daa1a0e@1\",\"3\":\"v-2e3eac9e\",\"4\":\"v-145ac574\",\"5\":\"v-145ac574#1\",\"6\":\"v-145ac574#1/0\",\"7\":\"v-145ac574@0\",\"8\":\"v-75f5fc4b\",\"9\":\"v-75f5fc4b#0/0\",\"10\":\"v-75f5fc4b#0/1\",\"11\":\"v-75f5fc4b#0/2\",\"12\":\"v-75f5fc4b#0/3\",\"13\":\"v-75f5fc4b#0/4\",\"14\":\"v-75f5fc4b#0/5\",\"15\":\"v-75f5fc4b#0/6\",\"16\":\"v-75f5fc4b#0/7\",\"17\":\"v-75f5fc4b#0/8\",\"18\":\"v-75f5fc4b#0/9\",\"19\":\"v-75f5fc4b#0/10\",\"20\":\"v-75f5fc4b#0/11\",\"21\":\"v-75f5fc4b@0\",\"22\":\"v-75f5fc4b@1\",\"23\":\"v-3c8012ee\",\"24\":\"v-3c8012ee#0/0\",\"25\":\"v-3c8012ee#0/1\",\"26\":\"v-3c8012ee#0/2\",\"27\":\"v-3c8012ee@0\",\"28\":\"v-3c8012ee@1\",\"29\":\"v-6cb33ee0\",\"30\":\"v-6cb33ee0#0/0\",\"31\":\"v-6cb33ee0#1\",\"32\":\"v-6cb33ee0#1/0\",\"33\":\"v-6cb33ee0#1/1\",\"34\":\"v-6cb33ee0#1/2\",\"35\":\"v-6cb33ee0#1/3\",\"36\":\"v-6cb33ee0#1/4\",\"37\":\"v-6cb33ee0#2\",\"38\":\"v-6cb33ee0#2/0\",\"39\":\"v-6cb33ee0#2/1\",\"40\":\"v-6cb33ee0#2/2\",\"41\":\"v-6cb33ee0#2/3\",\"42\":\"v-6cb33ee0#2/4\",\"43\":\"v-6cb33ee0#2/5\",\"44\":\"v-6cb33ee0#3\",\"45\":\"v-6cb33ee0#3/0\",\"46\":\"v-6cb33ee0#3/1\",\"47\":\"v-6cb33ee0#3/2\",\"48\":\"v-6cb33ee0#3/3\",\"49\":\"v-6cb33ee0#3/4\",\"50\":\"v-6cb33ee0#3/5\",\"51\":\"v-6cb33ee0#3/6\",\"52\":\"v-6cb33ee0#3/7\",\"53\":\"v-6cb33ee0#3/8\",\"54\":\"v-6cb33ee0#3/9\",\"55\":\"v-6cb33ee0#3/10\",\"56\":\"v-6cb33ee0@0\",\"57\":\"v-6cb33ee0@1\",\"58\":\"v-0232aca2\",\"59\":\"v-0232aca2#0/0\",\"60\":\"v-0232aca2#0/1\",\"61\":\"v-0232aca2#0/2\",\"62\":\"v-0232aca2#0/3\",\"63\":\"v-0232aca2#1\",\"64\":\"v-0232aca2#1/0\",\"65\":\"v-0232aca2#1/1\",\"66\":\"v-0232aca2#2\",\"67\":\"v-0232aca2#2/2\",\"68\":\"v-0232aca2#2/3\",\"69\":\"v-0232aca2#2/4\",\"70\":\"v-0232aca2#2/5\",\"71\":\"v-0232aca2#2/6\",\"72\":\"v-0232aca2#2/7\",\"73\":\"v-0232aca2@0\",\"74\":\"v-0232aca2@1\",\"75\":\"v-b324bab0\",\"76\":\"v-b324bab0#1\",\"77\":\"v-b324bab0#1/0\",\"78\":\"v-b324bab0#1/1\",\"79\":\"v-b324bab0#1/2\",\"80\":\"v-b324bab0#1/3\",\"81\":\"v-b324bab0#1/4\",\"82\":\"v-b324bab0#1/5\",\"83\":\"v-b324bab0#1/6\",\"84\":\"v-b324bab0#1/7\",\"85\":\"v-b324bab0#2\",\"86\":\"v-b324bab0#2/0\",\"87\":\"v-b324bab0#3\",\"88\":\"v-b324bab0#3/1\",\"89\":\"v-b324bab0#3/2\",\"90\":\"v-b324bab0#4\",\"91\":\"v-b324bab0#4/3\",\"92\":\"v-b324bab0#5\",\"93\":\"v-b324bab0#5/0\",\"94\":\"v-b324bab0#5/1\",\"95\":\"v-b324bab0#5/2\",\"96\":\"v-b324bab0#5/3\",\"97\":\"v-b324bab0#5/4\",\"98\":\"v-b324bab0#5/5\",\"99\":\"v-b324bab0#5/6\",\"100\":\"v-b324bab0#5/7\",\"101\":\"v-b324bab0#6\",\"102\":\"v-b324bab0#6/0\",\"103\":\"v-b324bab0#6/1\",\"104\":\"v-b324bab0#7\",\"105\":\"v-b324bab0#7/0\",\"106\":\"v-b324bab0#7/1\",\"107\":\"v-b324bab0#7/2\",\"108\":\"v-b324bab0#7/3\",\"109\":\"v-b324bab0#8\",\"110\":\"v-b324bab0#8/4\",\"111\":\"v-b324bab0#8/5\",\"112\":\"v-b324bab0#9\",\"113\":\"v-b324bab0#9/6\",\"114\":\"v-b324bab0#9/7\",\"115\":\"v-b324bab0#9/8\",\"116\":\"v-b324bab0#9/9\",\"117\":\"v-b324bab0#9/10\",\"118\":\"v-b324bab0#9/11\",\"119\":\"v-b324bab0#9/12\",\"120\":\"v-b324bab0#9/13\",\"121\":\"v-b324bab0#9/14\",\"122\":\"v-b324bab0#9/15\",\"123\":\"v-b324bab0@0\",\"124\":\"v-b324bab0@1\",\"125\":\"v-243fa3da\",\"126\":\"v-243fa3da#0/0\",\"127\":\"v-243fa3da#0/1\",\"128\":\"v-243fa3da#1\",\"129\":\"v-243fa3da#1/0\",\"130\":\"v-243fa3da#1/1\",\"131\":\"v-243fa3da#1/2\",\"132\":\"v-243fa3da#1/3\",\"133\":\"v-243fa3da#1/4\",\"134\":\"v-243fa3da#1/5\",\"135\":\"v-243fa3da#2\",\"136\":\"v-243fa3da#2/6\",\"137\":\"v-243fa3da#2/7\",\"138\":\"v-243fa3da#3\",\"139\":\"v-243fa3da#3/0\",\"140\":\"v-243fa3da#3/1\",\"141\":\"v-243fa3da#4\",\"142\":\"v-243fa3da#4/0\",\"143\":\"v-243fa3da#4/1\",\"144\":\"v-243fa3da#5\",\"145\":\"v-243fa3da#5/0\",\"146\":\"v-243fa3da#5/1\",\"147\":\"v-243fa3da#5/2\",\"148\":\"v-243fa3da#5/3\",\"149\":\"v-243fa3da#5/4\",\"150\":\"v-243fa3da#6\",\"151\":\"v-243fa3da#6/0\",\"152\":\"v-243fa3da#6/1\",\"153\":\"v-243fa3da#6/2\",\"154\":\"v-243fa3da#6/3\",\"155\":\"v-243fa3da#6/4\",\"156\":\"v-243fa3da#6/5\",\"157\":\"v-243fa3da#6/6\",\"158\":\"v-243fa3da#6/7\",\"159\":\"v-243fa3da#6/8\",\"160\":\"v-243fa3da#6/9\",\"161\":\"v-243fa3da#6/10\",\"162\":\"v-243fa3da#6/11\",\"163\":\"v-243fa3da#6/12\",\"164\":\"v-243fa3da#6/13\",\"165\":\"v-243fa3da#6/14\",\"166\":\"v-243fa3da#6/15\",\"167\":\"v-243fa3da#6/16\",\"168\":\"v-243fa3da#6/17\",\"169\":\"v-243fa3da#6/18\",\"170\":\"v-243fa3da#6/19\",\"171\":\"v-243fa3da#6/20\",\"172\":\"v-243fa3da#6/21\",\"173\":\"v-243fa3da#6/22\",\"174\":\"v-243fa3da#7\",\"175\":\"v-243fa3da#7/0\",\"176\":\"v-243fa3da#7/1\",\"177\":\"v-243fa3da#7/2\",\"178\":\"v-243fa3da#7/3\",\"179\":\"v-243fa3da#7/4\",\"180\":\"v-243fa3da#7/5\",\"181\":\"v-243fa3da#7/6\",\"182\":\"v-243fa3da#8\",\"183\":\"v-243fa3da#8/7\",\"184\":\"v-243fa3da#8/8\",\"185\":\"v-243fa3da#8/9\",\"186\":\"v-243fa3da#9\",\"187\":\"v-243fa3da#9/10\",\"188\":\"v-243fa3da#9/11\",\"189\":\"v-243fa3da#9/12\",\"190\":\"v-243fa3da#9/13\",\"191\":\"v-243fa3da#10\",\"192\":\"v-243fa3da#10/14\",\"193\":\"v-243fa3da#10/15\",\"194\":\"v-243fa3da#10/16\",\"195\":\"v-243fa3da#11\",\"196\":\"v-243fa3da@0\",\"197\":\"v-243fa3da@1\",\"198\":\"v-4229923f\",\"199\":\"v-4229923f#0/0\",\"200\":\"v-4229923f#1\",\"201\":\"v-4229923f#1/0\",\"202\":\"v-4229923f#1/1\",\"203\":\"v-4229923f#1/2\",\"204\":\"v-4229923f#2\",\"205\":\"v-4229923f#2/0\",\"206\":\"v-4229923f#3\",\"207\":\"v-4229923f#3/1\",\"208\":\"v-4229923f#4\",\"209\":\"v-4229923f#4/2\",\"210\":\"v-4229923f#5\",\"211\":\"v-4229923f#5/3\",\"212\":\"v-4229923f#5/4\",\"213\":\"v-4229923f#5/5\",\"214\":\"v-4229923f#5/6\",\"215\":\"v-4229923f#5/7\",\"216\":\"v-4229923f#6\",\"217\":\"v-4229923f#6/0\",\"218\":\"v-4229923f#7\",\"219\":\"v-4229923f#7/1\",\"220\":\"v-4229923f#7/2\",\"221\":\"v-4229923f#7/3\",\"222\":\"v-4229923f#7/4\",\"223\":\"v-4229923f#7/5\",\"224\":\"v-4229923f#7/6\",\"225\":\"v-4229923f#7/7\",\"226\":\"v-4229923f#8\",\"227\":\"v-4229923f#8/0\",\"228\":\"v-4229923f#9\",\"229\":\"v-4229923f#9/1\",\"230\":\"v-4229923f#10\",\"231\":\"v-4229923f#11\",\"232\":\"v-4229923f#11/2\",\"233\":\"v-4229923f#11/3\",\"234\":\"v-4229923f#11/4\",\"235\":\"v-4229923f#11/5\",\"236\":\"v-4229923f#11/6\",\"237\":\"v-4229923f#11/7\",\"238\":\"v-4229923f#12\",\"239\":\"v-4229923f#12/0\",\"240\":\"v-4229923f#13\",\"241\":\"v-4229923f#13/1\",\"242\":\"v-4229923f#13/2\",\"243\":\"v-4229923f#14\",\"244\":\"v-4229923f#14/3\",\"245\":\"v-4229923f#14/4\",\"246\":\"v-4229923f#14/5\",\"247\":\"v-4229923f#14/6\",\"248\":\"v-4229923f#14/7\",\"249\":\"v-4229923f#14/8\",\"250\":\"v-4229923f#15\",\"251\":\"v-4229923f#15/0\",\"252\":\"v-4229923f#15/1\",\"253\":\"v-4229923f#16\",\"254\":\"v-4229923f#16/2\",\"255\":\"v-4229923f#16/3\",\"256\":\"v-4229923f#17\",\"257\":\"v-4229923f#17/4\",\"258\":\"v-4229923f#18\",\"259\":\"v-4229923f#18/5\",\"260\":\"v-4229923f#19\",\"261\":\"v-4229923f#19/6\",\"262\":\"v-4229923f#20\",\"263\":\"v-4229923f#20/7\",\"264\":\"v-4229923f#21\",\"265\":\"v-4229923f#21/8\",\"266\":\"v-4229923f#22\",\"267\":\"v-4229923f#22/9\",\"268\":\"v-4229923f#23\",\"269\":\"v-4229923f#23/10\",\"270\":\"v-4229923f#23/11\",\"271\":\"v-4229923f#24\",\"272\":\"v-4229923f#24/12\",\"273\":\"v-4229923f#25\",\"274\":\"v-4229923f#25/13\",\"275\":\"v-4229923f@0\",\"276\":\"v-4229923f@1\",\"277\":\"v-6c8528da\",\"278\":\"v-6c8528da#0/0\",\"279\":\"v-6c8528da#1\",\"280\":\"v-6c8528da#1/0\",\"281\":\"v-6c8528da#2\",\"282\":\"v-6c8528da#2/1\",\"283\":\"v-6c8528da#3\",\"284\":\"v-6c8528da#4\",\"285\":\"v-6c8528da#4/2\",\"286\":\"v-6c8528da#5\",\"287\":\"v-6c8528da#5/3\",\"288\":\"v-6c8528da#6\",\"289\":\"v-6c8528da#6/4\",\"290\":\"v-6c8528da#7\",\"291\":\"v-6c8528da#7/5\",\"292\":\"v-6c8528da#8\",\"293\":\"v-6c8528da#8/6\",\"294\":\"v-6c8528da#9\",\"295\":\"v-6c8528da#9/7\",\"296\":\"v-6c8528da#10\",\"297\":\"v-6c8528da#10/8\",\"298\":\"v-6c8528da#10/9\",\"299\":\"v-6c8528da#11\",\"300\":\"v-6c8528da#11/0\",\"301\":\"v-6c8528da#11/1\",\"302\":\"v-6c8528da#11/2\",\"303\":\"v-6c8528da#11/3\",\"304\":\"v-6c8528da#12\",\"305\":\"v-6c8528da#12/4\",\"306\":\"v-6c8528da#13\",\"307\":\"v-6c8528da#14\",\"308\":\"v-6c8528da#14/5\",\"309\":\"v-6c8528da#15\",\"310\":\"v-6c8528da#15/0\",\"311\":\"v-6c8528da#15/1\",\"312\":\"v-6c8528da#15/2\",\"313\":\"v-6c8528da#16\",\"314\":\"v-6c8528da#16/0\",\"315\":\"v-6c8528da#16/1\",\"316\":\"v-6c8528da@0\",\"317\":\"v-6c8528da@1\",\"318\":\"v-3eed5af0\",\"319\":\"v-3eed5af0#1\",\"320\":\"v-3eed5af0#1/0\",\"321\":\"v-3eed5af0#2\",\"322\":\"v-3eed5af0#2/0\",\"323\":\"v-3eed5af0#2/1\",\"324\":\"v-3eed5af0#2/2\",\"325\":\"v-3eed5af0#2/3\",\"326\":\"v-3eed5af0#2/4\",\"327\":\"v-3eed5af0#2/5\",\"328\":\"v-3eed5af0#2/6\",\"329\":\"v-3eed5af0#2/7\",\"330\":\"v-3eed5af0#2/8\",\"331\":\"v-3eed5af0#2/9\",\"332\":\"v-3eed5af0#3\",\"333\":\"v-3eed5af0#3/10\",\"334\":\"v-3eed5af0#4\",\"335\":\"v-3eed5af0#5\",\"336\":\"v-3eed5af0#5/0\",\"337\":\"v-3eed5af0#6\",\"338\":\"v-3eed5af0#6/1\",\"339\":\"v-3eed5af0#6/2\",\"340\":\"v-3eed5af0#6/3\",\"341\":\"v-3eed5af0#6/4\",\"342\":\"v-3eed5af0#6/5\",\"343\":\"v-3eed5af0#7\",\"344\":\"v-3eed5af0#7/6\",\"345\":\"v-3eed5af0#8\",\"346\":\"v-3eed5af0#8/7\",\"347\":\"v-3eed5af0#8/8\",\"348\":\"v-3eed5af0#8/9\",\"349\":\"v-3eed5af0#8/10\",\"350\":\"v-3eed5af0#8/11\",\"351\":\"v-3eed5af0#9\",\"352\":\"v-3eed5af0#9/12\",\"353\":\"v-3eed5af0#10\",\"354\":\"v-3eed5af0#10/0\",\"355\":\"v-3eed5af0#11\",\"356\":\"v-3eed5af0#11/1\",\"357\":\"v-3eed5af0#12\",\"358\":\"v-3eed5af0#12/2\",\"359\":\"v-3eed5af0#13\",\"360\":\"v-3eed5af0#13/3\",\"361\":\"v-3eed5af0#14\",\"362\":\"v-3eed5af0#14/4\",\"363\":\"v-3eed5af0#15\",\"364\":\"v-3eed5af0#15/0\",\"365\":\"v-3eed5af0#15/1\",\"366\":\"v-3eed5af0#15/2\",\"367\":\"v-3eed5af0#15/3\",\"368\":\"v-3eed5af0#15/4\",\"369\":\"v-3eed5af0#15/5\",\"370\":\"v-3eed5af0#15/6\",\"371\":\"v-3eed5af0#16\",\"372\":\"v-3eed5af0#17\",\"373\":\"v-3eed5af0#17/0\",\"374\":\"v-3eed5af0#17/1\",\"375\":\"v-3eed5af0#18\",\"376\":\"v-3eed5af0#18/2\",\"377\":\"v-3eed5af0#19\",\"378\":\"v-3eed5af0#19/3\",\"379\":\"v-3eed5af0#20\",\"380\":\"v-3eed5af0#20/0\",\"381\":\"v-3eed5af0#20/1\",\"382\":\"v-3eed5af0#21\",\"383\":\"v-3eed5af0#21/2\",\"384\":\"v-3eed5af0#22\",\"385\":\"v-3eed5af0#22/3\",\"386\":\"v-3eed5af0#22/4\",\"387\":\"v-3eed5af0#22/5\",\"388\":\"v-3eed5af0#23\",\"389\":\"v-3eed5af0#23/6\",\"390\":\"v-3eed5af0#24\",\"391\":\"v-3eed5af0#25\",\"392\":\"v-3eed5af0#25/7\",\"393\":\"v-3eed5af0#26\",\"394\":\"v-3eed5af0#26/0\",\"395\":\"v-3eed5af0#27\",\"396\":\"v-3eed5af0#27/1\",\"397\":\"v-3eed5af0#28\",\"398\":\"v-3eed5af0#28/2\",\"399\":\"v-3eed5af0#29\",\"400\":\"v-3eed5af0#29/3\",\"401\":\"v-3eed5af0#30\",\"402\":\"v-3eed5af0#30/4\",\"403\":\"v-3eed5af0#31\",\"404\":\"v-3eed5af0#31/5\",\"405\":\"v-3eed5af0#32\",\"406\":\"v-3eed5af0#32/0\",\"407\":\"v-3eed5af0#33\",\"408\":\"v-3eed5af0#33/1\",\"409\":\"v-3eed5af0#34\",\"410\":\"v-3eed5af0#35\",\"411\":\"v-3eed5af0@0\",\"412\":\"v-3eed5af0@1\",\"413\":\"v-e7d29956\",\"414\":\"v-e7d29956#1\",\"415\":\"v-e7d29956#2\",\"416\":\"v-e7d29956#2/0\",\"417\":\"v-e7d29956#2/1\",\"418\":\"v-e7d29956#2/2\",\"419\":\"v-e7d29956#3\",\"420\":\"v-e7d29956#3/0\",\"421\":\"v-e7d29956#4\",\"422\":\"v-e7d29956#4/1\",\"423\":\"v-e7d29956#5\",\"424\":\"v-e7d29956#5/2\",\"425\":\"v-e7d29956@0\",\"426\":\"v-e7d29956@1\",\"427\":\"v-870b7946\",\"428\":\"v-870b7946#1\",\"429\":\"v-870b7946#1/0\",\"430\":\"v-870b7946#1/1\",\"431\":\"v-870b7946#2\",\"432\":\"v-870b7946#2/2\",\"433\":\"v-870b7946#2/3\",\"434\":\"v-870b7946#2/4\",\"435\":\"v-870b7946#2/5\",\"436\":\"v-870b7946#3\",\"437\":\"v-870b7946#3/6\",\"438\":\"v-870b7946#4\",\"439\":\"v-870b7946#4/7\",\"440\":\"v-870b7946#4/8\",\"441\":\"v-870b7946#4/9\",\"442\":\"v-870b7946#5\",\"443\":\"v-870b7946#5/0\",\"444\":\"v-870b7946#5/1\",\"445\":\"v-870b7946#5/2\",\"446\":\"v-870b7946#6\",\"447\":\"v-870b7946#6/0\",\"448\":\"v-870b7946#6/1\",\"449\":\"v-870b7946#7\",\"450\":\"v-870b7946#7/0\",\"451\":\"v-870b7946#7/1\",\"452\":\"v-870b7946#7/2\",\"453\":\"v-870b7946#8\",\"454\":\"v-870b7946#8/0\",\"455\":\"v-870b7946#8/1\",\"456\":\"v-870b7946#9\",\"457\":\"v-870b7946#9/0\",\"458\":\"v-870b7946#9/1\",\"459\":\"v-870b7946#9/2\",\"460\":\"v-870b7946#9/3\",\"461\":\"v-870b7946#9/4\",\"462\":\"v-870b7946#9/5\",\"463\":\"v-870b7946#9/6\",\"464\":\"v-870b7946#9/7\",\"465\":\"v-870b7946#9/8\",\"466\":\"v-870b7946#10\",\"467\":\"v-870b7946#10/9\",\"468\":\"v-870b7946#10/10\",\"469\":\"v-870b7946#10/11\",\"470\":\"v-870b7946#10/12\",\"471\":\"v-870b7946#10/13\",\"472\":\"v-870b7946#10/14\",\"473\":\"v-870b7946#10/15\",\"474\":\"v-870b7946#11\",\"475\":\"v-870b7946#11/16\",\"476\":\"v-870b7946#11/17\",\"477\":\"v-870b7946#11/18\",\"478\":\"v-870b7946#12\",\"479\":\"v-870b7946#12/19\",\"480\":\"v-870b7946#12/20\",\"481\":\"v-870b7946#12/21\",\"482\":\"v-870b7946#12/22\",\"483\":\"v-870b7946#12/23\",\"484\":\"v-870b7946#12/24\",\"485\":\"v-870b7946#12/25\",\"486\":\"v-870b7946#12/26\",\"487\":\"v-870b7946#12/27\",\"488\":\"v-870b7946#13\",\"489\":\"v-870b7946#14\",\"490\":\"v-870b7946#14/28\",\"491\":\"v-870b7946#14/29\",\"492\":\"v-870b7946#14/30\",\"493\":\"v-870b7946#14/31\",\"494\":\"v-870b7946#14/32\",\"495\":\"v-870b7946#15\",\"496\":\"v-870b7946#15/0\",\"497\":\"v-870b7946#16\",\"498\":\"v-870b7946#16/1\",\"499\":\"v-870b7946#16/2\",\"500\":\"v-870b7946#16/3\",\"501\":\"v-870b7946#16/4\",\"502\":\"v-870b7946#16/5\",\"503\":\"v-870b7946#16/6\",\"504\":\"v-870b7946#16/7\",\"505\":\"v-870b7946#17\",\"506\":\"v-870b7946#18\",\"507\":\"v-870b7946#18/8\",\"508\":\"v-870b7946#18/9\",\"509\":\"v-870b7946@0\",\"510\":\"v-870b7946@1\",\"511\":\"v-2bcb26fa\",\"512\":\"v-2bcb26fa#1\",\"513\":\"v-2bcb26fa#1/0\",\"514\":\"v-2bcb26fa#2\",\"515\":\"v-2bcb26fa#2/1\",\"516\":\"v-2bcb26fa#3\",\"517\":\"v-2bcb26fa#3/2\",\"518\":\"v-2bcb26fa#4\",\"519\":\"v-2bcb26fa#4/3\",\"520\":\"v-2bcb26fa#5\",\"521\":\"v-2bcb26fa#5/4\",\"522\":\"v-2bcb26fa#6\",\"523\":\"v-2bcb26fa#6/5\",\"524\":\"v-2bcb26fa#7\",\"525\":\"v-2bcb26fa#7/6\",\"526\":\"v-2bcb26fa@0\",\"527\":\"v-2bcb26fa@1\",\"528\":\"v-083f0e38\",\"529\":\"v-083f0e38#1\",\"530\":\"v-083f0e38#2\",\"531\":\"v-083f0e38#2/0\",\"532\":\"v-083f0e38#2/1\",\"533\":\"v-083f0e38#2/2\",\"534\":\"v-083f0e38#2/3\",\"535\":\"v-083f0e38#3\",\"536\":\"v-083f0e38#3/0\",\"537\":\"v-083f0e38#4\",\"538\":\"v-083f0e38#4/1\",\"539\":\"v-083f0e38#5\",\"540\":\"v-083f0e38#5/2\",\"541\":\"v-083f0e38#6\",\"542\":\"v-083f0e38#7\",\"543\":\"v-083f0e38#7/3\",\"544\":\"v-083f0e38#7/4\",\"545\":\"v-083f0e38#7/5\",\"546\":\"v-083f0e38#7/6\",\"547\":\"v-083f0e38#7/7\",\"548\":\"v-083f0e38#7/8\",\"549\":\"v-083f0e38#7/9\",\"550\":\"v-083f0e38#8\",\"551\":\"v-083f0e38#8/10\",\"552\":\"v-083f0e38#8/11\",\"553\":\"v-083f0e38#8/12\",\"554\":\"v-083f0e38#8/13\",\"555\":\"v-083f0e38#9\",\"556\":\"v-083f0e38#9/14\",\"557\":\"v-083f0e38#10\",\"558\":\"v-083f0e38#10/15\",\"559\":\"v-083f0e38@0\",\"560\":\"v-083f0e38@1\",\"561\":\"v-9e67bfbe\",\"562\":\"v-9e67bfbe#1\",\"563\":\"v-9e67bfbe#1/0\",\"564\":\"v-9e67bfbe#2\",\"565\":\"v-9e67bfbe#2/0\",\"566\":\"v-9e67bfbe#3\",\"567\":\"v-9e67bfbe#3/1\",\"568\":\"v-9e67bfbe#4\",\"569\":\"v-9e67bfbe#5\",\"570\":\"v-9e67bfbe#5/2\",\"571\":\"v-9e67bfbe#6\",\"572\":\"v-9e67bfbe#6/0\",\"573\":\"v-9e67bfbe#6/1\",\"574\":\"v-9e67bfbe#7\",\"575\":\"v-9e67bfbe#7/2\",\"576\":\"v-9e67bfbe#7/3\",\"577\":\"v-9e67bfbe#8\",\"578\":\"v-9e67bfbe#8/4\",\"579\":\"v-9e67bfbe#8/5\",\"580\":\"v-9e67bfbe#8/6\",\"581\":\"v-9e67bfbe#8/7\",\"582\":\"v-9e67bfbe#8/8\",\"583\":\"v-9e67bfbe#8/9\",\"584\":\"v-9e67bfbe#8/10\",\"585\":\"v-9e67bfbe#8/11\",\"586\":\"v-9e67bfbe#8/12\",\"587\":\"v-9e67bfbe#8/13\",\"588\":\"v-9e67bfbe#8/14\",\"589\":\"v-9e67bfbe#8/15\",\"590\":\"v-9e67bfbe#8/16\",\"591\":\"v-9e67bfbe#8/17\",\"592\":\"v-9e67bfbe#8/18\",\"593\":\"v-9e67bfbe#9\",\"594\":\"v-9e67bfbe@0\",\"595\":\"v-9e67bfbe@1\",\"596\":\"v-3fc7045a\",\"597\":\"v-d5b928c8\",\"598\":\"v-5e797cda\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1],\"1\":[null,null,1],\"2\":[null,null,1],\"3\":[1],\"4\":[1],\"5\":[1],\"6\":[null,1],\"7\":[null,null,1],\"8\":[1],\"9\":[null,4],\"10\":[null,3],\"11\":[null,1],\"12\":[null,1],\"13\":[null,1],\"14\":[null,1],\"15\":[null,1],\"16\":[null,1],\"17\":[null,3],\"18\":[null,1],\"19\":[null,1],\"20\":[null,1],\"21\":[null,null,1],\"22\":[null,null,1],\"23\":[1],\"24\":[null,2],\"25\":[null,5],\"26\":[null,5],\"27\":[null,null,1],\"28\":[null,null,1],\"29\":[1],\"30\":[null,3],\"31\":[1],\"32\":[null,6],\"33\":[null,4],\"34\":[null,6],\"35\":[null,3],\"36\":[null,5],\"37\":[1],\"38\":[null,3],\"39\":[null,1],\"40\":[null,6],\"41\":[null,7],\"42\":[null,2],\"43\":[null,4],\"44\":[1],\"45\":[null,2],\"46\":[null,1],\"47\":[null,1],\"48\":[null,3],\"49\":[null,2],\"50\":[null,1],\"51\":[null,1],\"52\":[null,1],\"53\":[null,1],\"54\":[null,1],\"55\":[null,4],\"56\":[null,null,1],\"57\":[null,null,2],\"58\":[1],\"59\":[null,1],\"60\":[null,1],\"61\":[null,20],\"62\":[null,2],\"63\":[2],\"64\":[null,8],\"65\":[null,18],\"66\":[1],\"67\":[null,1],\"68\":[null,26],\"69\":[null,1],\"70\":[null,32],\"71\":[null,1],\"72\":[null,25],\"73\":[null,null,1],\"74\":[null,null,1],\"75\":[2],\"76\":[2],\"77\":[null,11],\"78\":[null,7],\"79\":[null,3],\"80\":[null,2],\"81\":[null,2],\"82\":[null,2],\"83\":[null,3],\"84\":[null,2],\"85\":[1],\"86\":[null,53],\"87\":[1],\"88\":[null,1],\"89\":[null,79],\"90\":[1],\"91\":[null,1],\"92\":[1],\"93\":[null,3],\"94\":[null,3],\"95\":[null,6],\"96\":[null,7],\"97\":[null,3],\"98\":[null,5],\"99\":[null,4],\"100\":[null,7],\"101\":[1],\"102\":[null,1],\"103\":[null,1],\"104\":[1],\"105\":[null,1],\"106\":[null,16],\"107\":[null,1],\"108\":[null,30],\"109\":[1],\"110\":[null,19],\"111\":[null,21],\"112\":[1],\"113\":[null,5],\"114\":[null,2],\"115\":[null,8],\"116\":[null,7],\"117\":[null,6],\"118\":[null,8],\"119\":[null,5],\"120\":[null,5],\"121\":[null,7],\"122\":[null,36],\"123\":[null,null,1],\"124\":[null,null,1],\"125\":[1],\"126\":[null,2],\"127\":[null,2],\"128\":[1],\"129\":[null,1],\"130\":[null,9],\"131\":[null,1],\"132\":[null,9],\"133\":[null,1],\"134\":[null,7],\"135\":[1],\"136\":[null,8],\"137\":[null,2],\"138\":[1],\"139\":[null,6],\"140\":[null,4],\"141\":[1],\"142\":[null,16],\"143\":[null,16],\"144\":[1],\"145\":[null,1],\"146\":[null,8],\"147\":[null,1],\"148\":[null,6],\"149\":[null,4],\"150\":[1],\"151\":[null,1],\"152\":[null,1],\"153\":[null,1],\"154\":[null,1],\"155\":[null,1],\"156\":[null,1],\"157\":[null,1],\"158\":[null,2],\"159\":[null,1],\"160\":[null,3],\"161\":[null,2],\"162\":[null,2],\"163\":[null,2],\"164\":[null,2],\"165\":[null,4],\"166\":[null,2],\"167\":[null,1],\"168\":[null,3],\"169\":[null,1],\"170\":[null,2],\"171\":[null,1],\"172\":[null,3],\"173\":[null,1],\"174\":[1],\"175\":[null,2],\"176\":[null,1],\"177\":[null,5],\"178\":[null,1],\"179\":[null,6],\"180\":[null,3],\"181\":[null,7],\"182\":[1],\"183\":[null,1],\"184\":[null,1],\"185\":[null,13],\"186\":[1],\"187\":[null,4],\"188\":[null,2],\"189\":[null,3],\"190\":[null,10],\"191\":[1],\"192\":[null,7],\"193\":[null,6],\"194\":[null,7],\"195\":[1],\"196\":[null,null,1],\"197\":[null,null,1],\"198\":[1],\"199\":[null,10],\"200\":[1],\"201\":[null,1],\"202\":[null,1],\"203\":[null,19],\"204\":[1],\"205\":[null,65],\"206\":[1],\"207\":[null,78],\"208\":[1],\"209\":[null,50],\"210\":[1],\"211\":[null,1],\"212\":[null,4],\"213\":[null,2],\"214\":[null,1],\"215\":[null,2],\"216\":[1],\"217\":[null,55],\"218\":[1],\"219\":[null,2],\"220\":[null,1],\"221\":[null,1],\"222\":[null,1],\"223\":[null,3],\"224\":[null,1],\"225\":[null,1],\"226\":[1],\"227\":[null,33],\"228\":[1],\"229\":[null,49],\"230\":[1],\"231\":[1],\"232\":[null,1],\"233\":[null,5],\"234\":[null,2],\"235\":[null,5],\"236\":[null,3],\"237\":[null,4],\"238\":[1],\"239\":[null,30],\"240\":[1],\"241\":[null,53],\"242\":[null,52],\"243\":[1],\"244\":[null,1],\"245\":[null,12],\"246\":[null,2],\"247\":[null,5],\"248\":[null,2],\"249\":[null,3],\"250\":[1],\"251\":[null,32],\"252\":[null,61],\"253\":[3],\"254\":[null,13],\"255\":[null,13],\"256\":[1],\"257\":[null,34],\"258\":[1],\"259\":[null,24],\"260\":[1],\"261\":[null,22],\"262\":[1],\"263\":[null,26],\"264\":[1],\"265\":[null,29],\"266\":[1],\"267\":[null,28],\"268\":[1],\"269\":[null,2],\"270\":[null,44],\"271\":[1],\"272\":[null,30],\"273\":[1],\"274\":[null,19],\"275\":[null,null,1],\"276\":[null,null,1],\"277\":[1],\"278\":[null,1],\"279\":[1],\"280\":[null,9],\"281\":[1],\"282\":[null,12],\"283\":[1],\"284\":[2],\"285\":[null,23],\"286\":[1],\"287\":[null,29],\"288\":[1],\"289\":[null,25],\"290\":[1],\"291\":[null,28],\"292\":[1],\"293\":[null,33],\"294\":[2],\"295\":[null,35],\"296\":[1],\"297\":[null,6],\"298\":[null,10],\"299\":[1],\"300\":[null,2],\"301\":[null,11],\"302\":[null,2],\"303\":[null,52],\"304\":[1],\"305\":[null,20],\"306\":[1],\"307\":[1],\"308\":[null,12],\"309\":[1],\"310\":[null,12],\"311\":[null,10],\"312\":[null,5],\"313\":[1],\"314\":[null,13],\"315\":[null,33],\"316\":[null,null,1],\"317\":[null,null,1],\"318\":[2],\"319\":[1],\"320\":[null,5],\"321\":[1],\"322\":[null,4],\"323\":[null,3],\"324\":[null,3],\"325\":[null,1],\"326\":[null,2],\"327\":[null,17],\"328\":[null,2],\"329\":[null,17],\"330\":[null,2],\"331\":[null,26],\"332\":[1],\"333\":[null,23],\"334\":[1],\"335\":[1],\"336\":[null,25],\"337\":[1],\"338\":[null,27],\"339\":[null,1],\"340\":[null,11],\"341\":[null,2],\"342\":[null,10],\"343\":[1],\"344\":[null,32],\"345\":[1],\"346\":[null,4],\"347\":[null,2],\"348\":[null,4],\"349\":[null,2],\"350\":[null,40],\"351\":[1],\"352\":[null,2],\"353\":[1],\"354\":[null,25],\"355\":[1],\"356\":[null,8],\"357\":[1],\"358\":[null,34],\"359\":[1],\"360\":[null,38],\"361\":[1],\"362\":[null,5],\"363\":[1],\"364\":[null,2],\"365\":[null,26],\"366\":[null,1],\"367\":[null,19],\"368\":[null,1],\"369\":[null,34],\"370\":[null,2],\"371\":[1],\"372\":[1],\"373\":[null,3],\"374\":[null,13],\"375\":[1],\"376\":[null,15],\"377\":[1],\"378\":[null,1],\"379\":[1],\"380\":[null,5],\"381\":[null,32],\"382\":[1],\"383\":[null,15],\"384\":[1],\"385\":[null,5],\"386\":[null,5],\"387\":[null,21],\"388\":[1],\"389\":[null,25],\"390\":[1],\"391\":[1],\"392\":[null,5],\"393\":[2],\"394\":[null,11],\"395\":[4],\"396\":[null,32],\"397\":[2],\"398\":[null,26],\"399\":[2],\"400\":[null,32],\"401\":[2],\"402\":[null,20],\"403\":[1],\"404\":[null,6],\"405\":[2],\"406\":[null,36],\"407\":[2],\"408\":[null,26],\"409\":[1],\"410\":[1],\"411\":[null,null,1],\"412\":[null,null,1],\"413\":[1],\"414\":[2],\"415\":[2],\"416\":[null,1],\"417\":[null,6],\"418\":[null,15],\"419\":[1],\"420\":[null,45],\"421\":[1],\"422\":[null,75],\"423\":[1],\"424\":[null,63],\"425\":[null,null,1],\"426\":[null,null,1],\"427\":[1],\"428\":[1],\"429\":[null,10],\"430\":[null,16],\"431\":[1],\"432\":[null,15],\"433\":[null,22],\"434\":[null,60],\"435\":[null,24],\"436\":[4],\"437\":[null,14],\"438\":[3],\"439\":[null,1],\"440\":[null,20],\"441\":[null,3],\"442\":[2],\"443\":[null,5],\"444\":[null,5],\"445\":[null,4],\"446\":[2],\"447\":[null,6],\"448\":[null,5],\"449\":[2],\"450\":[null,4],\"451\":[null,4],\"452\":[null,4],\"453\":[2],\"454\":[null,5],\"455\":[null,5],\"456\":[1],\"457\":[null,1],\"458\":[null,2],\"459\":[null,27],\"460\":[null,2],\"461\":[null,13],\"462\":[null,1],\"463\":[null,70],\"464\":[null,1],\"465\":[null,42],\"466\":[1],\"467\":[null,1],\"468\":[null,4],\"469\":[null,1],\"470\":[null,6],\"471\":[null,1],\"472\":[null,2],\"473\":[null,16],\"474\":[7],\"475\":[null,14],\"476\":[null,2],\"477\":[null,38],\"478\":[1],\"479\":[null,1],\"480\":[null,13],\"481\":[null,3],\"482\":[null,11],\"483\":[null,1],\"484\":[null,40],\"485\":[null,1],\"486\":[null,34],\"487\":[null,58],\"488\":[1],\"489\":[3],\"490\":[null,3],\"491\":[null,7],\"492\":[null,5],\"493\":[null,4],\"494\":[null,3],\"495\":[1],\"496\":[null,85],\"497\":[1],\"498\":[null,1],\"499\":[null,1],\"500\":[null,15],\"501\":[null,1],\"502\":[null,22],\"503\":[null,1],\"504\":[null,32],\"505\":[1],\"506\":[1],\"507\":[null,14],\"508\":[null,35],\"509\":[null,null,1],\"510\":[null,null,1],\"511\":[1],\"512\":[3],\"513\":[null,12],\"514\":[2],\"515\":[null,25],\"516\":[2],\"517\":[null,17],\"518\":[2],\"519\":[null,16],\"520\":[2],\"521\":[null,32],\"522\":[2],\"523\":[null,13],\"524\":[2],\"525\":[null,39],\"526\":[null,null,1],\"527\":[null,null,1],\"528\":[1],\"529\":[1],\"530\":[1],\"531\":[null,2],\"532\":[null,9],\"533\":[null,6],\"534\":[null,5],\"535\":[3],\"536\":[null,31],\"537\":[3],\"538\":[null,76],\"539\":[1],\"540\":[null,15],\"541\":[1],\"542\":[1],\"543\":[null,9],\"544\":[null,1],\"545\":[null,11],\"546\":[null,3],\"547\":[null,8],\"548\":[null,1],\"549\":[null,12],\"550\":[1],\"551\":[null,9],\"552\":[null,7],\"553\":[null,3],\"554\":[null,17],\"555\":[1],\"556\":[null,150],\"557\":[2],\"558\":[null,20],\"559\":[null,null,1],\"560\":[null,null,1],\"561\":[1],\"562\":[1],\"563\":[null,1],\"564\":[1],\"565\":[null,20],\"566\":[1],\"567\":[null,12],\"568\":[1],\"569\":[1],\"570\":[null,7],\"571\":[1],\"572\":[null,2],\"573\":[null,16],\"574\":[1],\"575\":[null,3],\"576\":[null,35],\"577\":[1],\"578\":[null,1],\"579\":[null,1],\"580\":[null,1],\"581\":[null,1],\"582\":[null,3],\"583\":[null,1],\"584\":[null,1],\"585\":[null,1],\"586\":[null,1],\"587\":[null,1],\"588\":[null,1],\"589\":[null,1],\"590\":[null,1],\"591\":[null,1],\"592\":[null,1],\"593\":[1],\"594\":[null,null,1],\"595\":[null,null,1],\"596\":[1],\"597\":[1],\"598\":[1]},\"averageFieldLength\":[1.119625707158616,10.336904853095493,0.7971884676161837],\"storedFields\":{\"0\":{\"h\":\"Home\"},\"1\":{\"c\":[\"使用指南\"]},\"2\":{\"c\":[\"Home\"]},\"3\":{\"h\":\"幻灯片页\"},\"4\":{\"h\":\"学习与记录\"},\"5\":{\"h\":\"目录\",\"a\":\"目录\"},\"6\":{\"t\":\"Linux\"},\"7\":{\"c\":[\"使用指南\"]},\"8\":{\"h\":\"布局与功能禁用\"},\"9\":{\"t\":\"你可以通过设置页面的 Frontmatter，在页面禁用功能与布局。\"},\"10\":{\"t\":\"本页面就是一个示例，禁用了如下功能:\"},\"11\":{\"t\":\"导航栏\"},\"12\":{\"t\":\"侧边栏\"},\"13\":{\"t\":\"路径导航\"},\"14\":{\"t\":\"页面信息\"},\"15\":{\"t\":\"贡献者\"},\"16\":{\"t\":\"更新时间\"},\"17\":{\"t\":\"上一篇/下一篇 链接\"},\"18\":{\"t\":\"评论\"},\"19\":{\"t\":\"页脚\"},\"20\":{\"t\":\"返回顶部按钮\"},\"21\":{\"c\":[\"使用指南\"]},\"22\":{\"c\":[\"禁用\"]},\"23\":{\"h\":\"密码加密的文章\"},\"24\":{\"t\":\"实际的文章内容。\"},\"25\":{\"t\":\"段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字段落 1 文字。\"},\"26\":{\"t\":\"段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字段落 2 文字。\"},\"27\":{\"c\":[\"使用指南\"]},\"28\":{\"c\":[\"文章加密\"]},\"29\":{\"h\":\"页面配置\"},\"30\":{\"t\":\"more 注释之前的内容被视为文章摘要。\"},\"31\":{\"h\":\"页面信息\",\"a\":\"页面信息\"},\"32\":{\"t\":\"你可以在 Markdown 的 Frontmatter 中设置页面信息。\"},\"33\":{\"t\":\"作者设置为 Ms.Hope。\"},\"34\":{\"t\":\"写作日期为 2020 年 1 月 1 日\"},\"35\":{\"t\":\"分类为 “使用指南”\"},\"36\":{\"t\":\"标签为 “页面配置” 和 “使用指南”\"},\"37\":{\"h\":\"页面内容\",\"a\":\"页面内容\"},\"38\":{\"t\":\"你可以自由在这里书写你的 Markdown。\"},\"39\":{\"t\":\"提示\"},\"40\":{\"t\":\"你可以将图片和 Markdown 文件放置在一起，但是你需要使用相对链接./ 进行引用。\"},\"41\":{\"t\":\"对于 .vuepress/public 文件夹的图片，请使用绝对链接 / 进行引用。\"},\"42\":{\"t\":\"主题包含了一个自定义徽章可以使用:\"},\"43\":{\"t\":\"文字结尾应该有深蓝色的 徽章文字 徽章。 \"},\"44\":{\"h\":\"页面结构\",\"a\":\"页面结构\"},\"45\":{\"t\":\"此页面应当包含:\"},\"46\":{\"t\":\"路径导航\"},\"47\":{\"t\":\"标题和页面信息\"},\"48\":{\"t\":\"TOC (文章标题列表)\"},\"49\":{\"t\":\"贡献者、更新时间等页面元信息\"},\"50\":{\"t\":\"评论\"},\"51\":{\"t\":\"导航栏\"},\"52\":{\"t\":\"侧边栏\"},\"53\":{\"t\":\"页脚\"},\"54\":{\"t\":\"返回顶部按钮\"},\"55\":{\"t\":\"你可以通过主题选项和页面 Frontmatter 自定义它们。\"},\"56\":{\"c\":[\"使用指南\"]},\"57\":{\"c\":[\"页面配置\",\"使用指南\"]},\"58\":{\"h\":\"Mybatis\"},\"59\":{\"t\":\"官网学习地址\"},\"60\":{\"t\":\"依赖\"},\"61\":{\"t\":\"<!-- https://mvnrepository.com/artifact/org.mybatis/mybatis --> <dependency> <groupId>org.mybatis</groupId> <artifactId>mybatis</artifactId> <version>3.5.5</version> </dependency> \"},\"62\":{\"t\":\"xml配置详解 \"},\"63\":{\"h\":\"添加-主键返回\",\"a\":\"添加-主键返回\"},\"64\":{\"t\":\"int i = mapper.update(test1); 可以把id拿出来 \"},\"65\":{\"t\":\" <insert id=\\\"update\\\" useGeneratedKeys=\\\"true\\\" keyProperty=\\\"id\\\"> insert into test1 (id, name, views, up) values ( #{id}, #{name}, #{views}, #{up} ); </insert> \"},\"66\":{\"h\":\"动态条件查询\",\"a\":\"动态条件查询\"},\"67\":{\"t\":\"if\"},\"68\":{\"t\":\"<select id=\\\"findActiveBlogLike\\\" resultType=\\\"Blog\\\"> SELECT * FROM BLOG WHERE state = ‘ACTIVE’ <if test=\\\"title != null\\\"> AND title like #{title} </if> <if test=\\\"author != null and author.name != null\\\"> AND author_name like #{author.name} </if> </select> \"},\"69\":{\"t\":\"choose\"},\"70\":{\"t\":\"<select id=\\\"findActiveBlogLike\\\" resultType=\\\"Blog\\\"> SELECT * FROM BLOG WHERE state = ‘ACTIVE’ <choose> <when test=\\\"title != null\\\"> AND title like #{title} </when> <when test=\\\"author != null and author.name != null\\\"> AND author_name like #{author.name} </when> <otherwise> AND featured = 1 </otherwise> </choose> </select> \"},\"71\":{\"t\":\"trim\"},\"72\":{\"t\":\"<select id=\\\"findActiveBlogLike\\\" resultType=\\\"Blog\\\"> SELECT * FROM BLOG WHERE <if test=\\\"state != null\\\"> state = #{state} </if> <if test=\\\"title != null\\\"> AND title like #{title} </if> <if test=\\\"author != null and author.name != null\\\"> AND author_name like #{author.name} </if> </select> \"},\"73\":{\"c\":[\"使用指南\"]},\"74\":{\"c\":[\"Markdown\"]},\"75\":{\"h\":\"Mybatis Plus\"},\"76\":{\"h\":\"Mybatis Plus\",\"a\":\"mybatis-plus\"},\"77\":{\"t\":\"MyBatis-Plus（简称 MP）是一个 MyBatis 的增强工具，在 MyBatis 的基础上只做增强不做改变，为简化开发、提高效率而生。\"},\"78\":{\"t\":\"【尚硅谷】2022版MyBatisPlus教程（一套玩转mybatis-plus）_哔哩哔哩_bilibili\"},\"79\":{\"t\":\"无侵入、损耗小、强大的CRUD操作\"},\"80\":{\"t\":\"支持Lambda形式调用，支持多种数据库\"},\"81\":{\"t\":\"支持主键自动生成，支持ActiveRecord模式\"},\"82\":{\"t\":\"支持自定义全局通用操作，支持关键词自动转义\"},\"83\":{\"t\":\"内置代码生成器、内置分页插件、内置性能分析插件\"},\"84\":{\"t\":\"内置全局拦截插件、内置SQL注入剥离器\"},\"85\":{\"h\":\"BaseMapper\",\"a\":\"basemapper\"},\"86\":{\"t\":\"public interface BaseMapper<T> extends Mapper<T> { int insert(T entity); int deleteById(Serializable id); int deleteByMap(@Param(\\\"cm\\\") Map<String, Object> columnMap); int delete(@Param(\\\"ew\\\") Wrapper<T> queryWrapper); int deleteBatchIds(@Param(\\\"coll\\\") Collection<? extends Serializable> idList); int updateById(@Param(\\\"et\\\") T entity); int update(@Param(\\\"et\\\") T entity, @Param(\\\"ew\\\") Wrapper<T> updateWrapper); T selectById(Serializable id); List<T> selectBatchIds(@Param(\\\"coll\\\") Collection<? extends Serializable> idList); List<T> selectByMap(@Param(\\\"cm\\\") Map<String, Object> columnMap); T selectOne(@Param(\\\"ew\\\") Wrapper<T> queryWrapper); Integer selectCount(@Param(\\\"ew\\\") Wrapper<T> queryWrapper); List<T> selectList(@Param(\\\"ew\\\") Wrapper<T> queryWrapper); List<Map<String, Object>> selectMaps(@Param(\\\"ew\\\") Wrapper<T> queryWrapper); List<Object> selectObjs(@Param(\\\"ew\\\") Wrapper<T> queryWrapper); <E extends IPage<T>> E selectPage(E page, @Param(\\\"ew\\\") Wrapper<T> queryWrapper); <E extends IPage<Map<String, Object>>> E selectMapsPage(E page, @Param(\\\"ew\\\") Wrapper<T> queryWrapper); } \"},\"87\":{\"h\":\"CURD\",\"a\":\"curd\"},\"88\":{\"t\":\"使用mapper继承BaseMapper<T>即可开箱即用\"},\"89\":{\"t\":\" @Test void TestInsert(){ user user = new user(); user.setId(880); user.setAccount(\\\"天天学习\\\"); user.setPassword(\\\"hhh\\\"); int res = UserMapper.insert(user); System.out.println(res); } @Test void TestDelete(){ // 一： // int res = UserMapper.deleteById(1); // System.out.println(res); // 二: // delete from user where account = ? and password = ? // HashMap<String, Object> map = new HashMap<>(); // map.put(\\\"account\\\",\\\"jkl\\\"); // map.put(\\\"password\\\",\\\"123root\\\"); // UserMapper.deleteByMap(map); // 三: // 删除多个 // DELETE FROM user WHERE id IN ( ? , ? ) List<Integer> list = Arrays.asList(80,880); UserMapper.deleteBatchIds(list); } @Test void TestUpdata(){ user user = new user(); user.setAccount(\\\"改了\\\"); UpdateWrapper<user> q = new UpdateWrapper<>(); q.eq(\\\"password\\\",\\\"666\\\"); // 不屑password 不被修改 UserMapper.update(user,q); } @Test void TestSelect(){ // 通过id查询信息 // user user = UserMapper.selectById(2); // System.out.println(user.toString().isEmpty()); // 通过多个id进行查询 // List<Integer> list = Arrays.asList(3,2); // List<user> users = UserMapper.selectBatchIds(list); // users.forEach(System.out::println); // 通过map查询 // HashMap<String, Object> map = new HashMap<>(); // map.put(\\\"account\\\",666); // List<user> users = UserMapper.selectByMap(map); // users.forEach(System.out::println); // 所有的数据 // List<user> users = UserMapper.selectList(null); // users.forEach(System.out::println); } \"},\"90\":{\"h\":\"wapper条件构造器\",\"a\":\"wapper条件构造器\"},\"91\":{\"t\":\"Description\"},\"92\":{\"h\":\"注解说明\",\"a\":\"注解说明\"},\"93\":{\"t\":\"@TableName 表名\"},\"94\":{\"t\":\"@TableId 主键\"},\"95\":{\"t\":\"---@TableId(type= IdType.AUTO) 自增\"},\"96\":{\"t\":\"---@TableId(type= IdType.NONE) 雪花算法 赋值\"},\"97\":{\"t\":\"@TableField 把表中字段和实体类对应\"},\"98\":{\"t\":\"---@TableField(value=\\\"name\\\") 映射\"},\"99\":{\"t\":\"---@TableField(exist=false) 不是数据库中字段\"},\"100\":{\"t\":\"---@TableField(select = false) 不会参与查询 返回值为null\"},\"101\":{\"h\":\"MybatisX\",\"a\":\"mybatisx\"},\"102\":{\"t\":\"MybatisX\"},\"103\":{\"t\":\"Description\"},\"104\":{\"h\":\"分页\",\"a\":\"分页\"},\"105\":{\"t\":\"config\"},\"106\":{\"t\":\"@Configuration public class MybatisConfig { @Bean public MybatisPlusInterceptor mybatisPlusInterceptor(){ MybatisPlusInterceptor interceptor = new MybatisPlusInterceptor(); interceptor.addInnerInterceptor(new PaginationInnerInterceptor(DbType.MYSQL)); return interceptor; } } \"},\"107\":{\"t\":\"使用\"},\"108\":{\"t\":\" @Override public JSONObject userList(Integer page) { IPage<Record> recordIPage = new Page<>(page,10); QueryWrapper<Record> queryWrapper = new QueryWrapper<>(); queryWrapper.orderByAsc(\\\"id\\\"); List<Record> list = recordMapper.selectPage(recordIPage,queryWrapper).getRecords(); JSONObject resp = new JSONObject(); resp.put(\\\"records\\\",list); resp.put(\\\"count\\\",recordMapper.selectCount(null)); return resp; } \"},\"109\":{\"h\":\"Mybatis+字段+1\",\"a\":\"mybatis-字段-1\"},\"110\":{\"t\":\" UpdateWrapper<article> updateWrapper = new UpdateWrapper<>(); updateWrapper.setSql(\\\"up = up + 1\\\").eq(\\\"id\\\",21); System.out.println(articleMapper.update(null, updateWrapper)); \"},\"111\":{\"t\":\" LambdaUpdateWrapper<article> q = new LambdaUpdateWrapper<>(); q.setSql(\\\"up = up + 1\\\"); q.setSql(\\\"views = views + 1\\\"); q.eq(article::getId,22); System.out.println(articleMapper.update(null, q)); \"},\"112\":{\"h\":\"事务\",\"a\":\"事务\"},\"113\":{\"t\":\"测试时加入@Transactional 不会改变数据，不会污染数据，不管如何都会回滚\"},\"114\":{\"t\":\"事务主要的作用体现在以下几个方面：\"},\"115\":{\"t\":\"数据一致性：事务可以确保多个操作在一个逻辑单元中执行，要么全部执行成功，要么全部失败回滚。在多个操作之间存在依赖关系的情况下，事务可以确保数据的一致性，防止数据冲突和数据丢失等问题。\"},\"116\":{\"t\":\"错误回滚：事务可以在发生错误或异常时回滚到之前的状态，保证数据的完整性。如果在多个操作中发生了错误，事务会自动将所有操作撤消，将数据回滚至操作之前的状态。\"},\"117\":{\"t\":\"并发控制：事务可以解决数据库并发访问的问题。当多个用户同时对同一数据进行操作时，事务可以通过锁机制来控制这些操作的执行顺序，以避免并发访问引起的数据冲突和错误。\"},\"118\":{\"t\":\"提高性能：事务可以优化数据库操作的性能。如果在多个操作中涉及到较多的I/O操作或网络传输，将所有操作合并到一个事务中可以减少I/O操作和网络传输，提高数据库操作的性能。\"},\"119\":{\"t\":\"因此，事务对于确保数据的正确性、完整性和一致性非常重要，是保证数据库安全和稳定运行的基本手段。\"},\"120\":{\"t\":\"默认形况下、只有出现RuntimeException才回滚异常。rollbackFor属性用于控制出现何种异常类型，回滚事务。\"},\"121\":{\"t\":\"@Transactional(rollbackFor = Exception.class)任何异常都回滚\"},\"122\":{\"t\":\"@Service public class UserServiceImpl implements UserService { @Autowired private UserMapper userMapper; @Override @Transactional(rollbackFor = Exception.class) public boolean addUser(User user) { try { // 添加用户 userMapper.insert(user); // 手动抛出异常，模拟事务回滚 throw new RuntimeException(\\\"添加用户时出现异常\\\"); } catch (Exception e) { // 捕获异常，并打印异常信息 e.printStackTrace(); // 抛出运行时异常，使事务回滚 throw new RuntimeException(\\\"添加用户时出现异常\\\"); } } } \"},\"123\":{\"c\":[\"使用指南\"]},\"124\":{\"c\":[\"Markdown\"]},\"125\":{\"h\":\"Mysql\"},\"126\":{\"t\":\"哔哩哔哩_bilibili\"},\"127\":{\"t\":\"utf8mb4: 编码格式\"},\"128\":{\"h\":\"insert\",\"a\":\"insert\"},\"129\":{\"t\":\"给指定字段添加值\"},\"130\":{\"t\":\"insert into 表名 (字段1，字段2..) values(值1，值2..); \"},\"131\":{\"t\":\"给指定字段批量添加值\"},\"132\":{\"t\":\"insert into 表名 (字段1，字段2..) values(值1，值2..),(值1，值2..),(值1，值2..); insert into 表名 values(值1，值2..),(值1，值2..),(值1，值2..); \"},\"133\":{\"t\":\"给全部字段添加值\"},\"134\":{\"t\":\"insert into 表名 values(值1，值2..); \"},\"135\":{\"h\":\"update\",\"a\":\"update\"},\"136\":{\"t\":\"update 表名 set 字段1=值1，字段2=值2... [where 条件]; \"},\"137\":{\"t\":\"不写条件 更新所有\"},\"138\":{\"h\":\"delete\",\"a\":\"delete\"},\"139\":{\"t\":\"delete from 表名 [where 条件]; \"},\"140\":{\"t\":\"delete from 表名 删除所有数据\"},\"141\":{\"h\":\"select\",\"a\":\"select\"},\"142\":{\"t\":\"select [字段列表] from [表名列表] where [条件列表] group by [分组字段列表] having [分组后条件列表] order by [排序字段列表] limit [分页] \"},\"143\":{\"t\":\"条件查询(where)、聚合查询(count,max,min,avg,sum)、分组查询(group by)、排序查询(order by)、分页查询(limit)\"},\"144\":{\"h\":\"基本查询\",\"a\":\"基本查询\"},\"145\":{\"t\":\"起别名\"},\"146\":{\"t\":\"select name as '姓名' from 表名; 或者 select name '姓名' from 表名; \"},\"147\":{\"t\":\"不重复\"},\"148\":{\"t\":\"select distinct name from 表名; \"},\"149\":{\"t\":\"distinct: 去重 as: 别名\"},\"150\":{\"h\":\"条件查询\",\"a\":\"条件查询\"},\"151\":{\"t\":\"比较运算符\"},\"152\":{\"t\":\"功能\"},\"153\":{\"t\":\">\"},\"154\":{\"t\":\">=\"},\"155\":{\"t\":\"<\"},\"156\":{\"t\":\"<=\"},\"157\":{\"t\":\"=\"},\"158\":{\"t\":\"<>或!=\"},\"159\":{\"t\":\"不等于\"},\"160\":{\"t\":\"between...and...\"},\"161\":{\"t\":\"某个范围之内 []\"},\"162\":{\"t\":\"in(..)\"},\"163\":{\"t\":\"列表中的值，多选一\"},\"164\":{\"t\":\"like 占位符\"},\"165\":{\"t\":\"模糊匹配（_单个字符、%任意个字符）\"},\"166\":{\"t\":\"is null\"},\"167\":{\"t\":\"为空\"},\"168\":{\"t\":\"and 或 &&\"},\"169\":{\"t\":\"并且\"},\"170\":{\"t\":\"or或 ||\"},\"171\":{\"t\":\"或者\"},\"172\":{\"t\":\"not 或 ！\"},\"173\":{\"t\":\"非\"},\"174\":{\"h\":\"聚合函数\",\"a\":\"聚合函数\"},\"175\":{\"t\":\"null 不参与计算\"},\"176\":{\"t\":\"sum\"},\"177\":{\"t\":\"select sum(*) from 表名; \"},\"178\":{\"t\":\"avg\"},\"179\":{\"t\":\"select agv(age) from 表名; \"},\"180\":{\"t\":\"max | min\"},\"181\":{\"t\":\"select max(age) from 表名; select min(age) from 表名; \"},\"182\":{\"h\":\"分组查询\",\"a\":\"分组查询\"},\"183\":{\"t\":\"分组后的列只有待分组的字段和聚合函数\"},\"184\":{\"t\":\"study\"},\"185\":{\"t\":\"select sex,count(sex) from s group by sex having avg(age) > 50; \"},\"186\":{\"h\":\"排序查询\",\"a\":\"排序查询\"},\"187\":{\"t\":\"ASC 升序（默认）\"},\"188\":{\"t\":\"DESC 降序\"},\"189\":{\"t\":\"多字段排序，先按第一个排序，然后相同的按照第二个方式排序\"},\"190\":{\"t\":\"select * from s order by age asc , id desc; \"},\"191\":{\"h\":\"分页查询\",\"a\":\"分页查询\"},\"192\":{\"t\":\"select * from 表名 limit 起始索引，查询记录数 \"},\"193\":{\"t\":\"起始索引从0开始， 起始索引 = （查询页码-1）* 每页记录数\"},\"194\":{\"t\":\"select * from s limit 0,10; select * from s limit 10,10; \"},\"195\":{\"h\":\"函数\",\"a\":\"函数\"},\"196\":{\"c\":[\"使用指南\"]},\"197\":{\"c\":[\"Markdown\"]},\"198\":{\"h\":\"RabbitMQ\"},\"199\":{\"t\":\"安装地址 Docker安装RabbitMQ详细步骤 - 逊老头 - 博客园 (cnblogs.com) 学习地址 MQ的引言和不同MQ的特点_哔哩哔哩_bilibili\"},\"200\":{\"h\":\"simple简单模式\",\"a\":\"simple简单模式\"},\"201\":{\"t\":\"study\"},\"202\":{\"t\":\"消息产生者将消息放入队列\"},\"203\":{\"t\":\"消息的消费者(consumer) 监听(while) 消息队列,如果队列中有消息,就消费掉,消息被拿走后,自动从队列中删除(隐患 消息可能没有被消费者正确处理,已经从队列中消失了,造成消息的丢失)应用场景:聊天(中间有一个过度的服务器;p端,c端)\"},\"204\":{\"h\":\"生产消息\",\"a\":\"生产消息\"},\"205\":{\"t\":\"//生产者 @Test void send() throws IOException, TimeoutException { // 创建MQ的连接工厂对象 ConnectionFactory connectionFactory = new ConnectionFactory(); // 设置连接mq主机 connectionFactory.setHost(\\\"127.0.0.1\\\"); // 端口号 connectionFactory.setPort(5672); // 设置连接哪一个虚拟主机 connectionFactory.setVirtualHost(\\\"/ems\\\"); // 设置用户名和密码 connectionFactory.setUsername(\\\"ems\\\"); connectionFactory.setPassword(\\\"ems\\\"); // 获取连接对象 Connection connection = connectionFactory.newConnection(); // 获取连接中的通道 Channel channel = connection.createChannel(); // 通道绑定对应的消息队列 // s：队列名称 b:队列是否持久化 b1:是否独占队列(其他的连接不可用) // b2: 是否消费结束后自动删除 map: channel.queueDeclare(\\\"hello\\\",false,false,false,null); // 发布消息 // s： 交换机名称 s1:通道名称 b: MessageProperties.MINIMAL_PERSISTENT_BASIC（ 重启消息也在 ) // 最后：内容 channel.basicPublish(\\\"\\\",\\\"hello\\\",null,\\\"hello rabbit\\\".getBytes()); channel.close(); connection.close(); } \"},\"206\":{\"h\":\"消费消息\",\"a\":\"消费消息\"},\"207\":{\"t\":\" // 消费者 @Test void getMessage() throws IOException, TimeoutException { // 创建MQ的连接工厂对象 ConnectionFactory connectionFactory = new ConnectionFactory(); // 设置连接mq主机 connectionFactory.setHost(\\\"127.0.0.1\\\"); // 端口号 connectionFactory.setPort(5672); // 设置连接哪一个虚拟主机 connectionFactory.setVirtualHost(\\\"/ems\\\"); // 设置用户名和密码 connectionFactory.setUsername(\\\"ems\\\"); connectionFactory.setPassword(\\\"ems\\\"); // 获取连接对象 Connection connection = connectionFactory.newConnection(); // 获取连接中的通道 Channel channel = connection.createChannel(); // 通道绑定对应的消息队列 // s：队列名称 b:队列是否持久化 b1:是否独占队列(其他的连接不可用) // b2: 是否消费结束后自动删除 map: channel.queueDeclare(\\\"hello\\\",false,false,false,null); // 消费消息 // s： 交换机名称 s1:开始消息的自动确认机制 最后：消费时的回调接口 channel.basicConsume(\\\"hello\\\",true, new DefaultConsumer(channel){ @Override public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException { System.out.println(\\\"new String (body) = \\\" + new String (body)); } }); //不关闭 为了一直消费信息 // channel.close(); // connection.close(); } \"},\"208\":{\"h\":\"实现工具类\",\"a\":\"实现工具类\"},\"209\":{\"t\":\"public class RabbitMQConnection { private static ConnectionFactory connectionFactory; //静态代码块 只执行一次 static { connectionFactory = new ConnectionFactory(); connectionFactory.setHost(\\\"127.0.0.1\\\"); // 设置连接mq主机 connectionFactory.setPort(5672);// 端口号 connectionFactory.setVirtualHost(\\\"/ems\\\");// 设置连接哪一个虚拟主机 connectionFactory.setUsername(\\\"ems\\\");// 设置用户名和密码 connectionFactory.setPassword(\\\"ems\\\"); } // 获取 连接对象方法 public static Connection getConnection() throws IOException, TimeoutException { // 获取连接对象 return connectionFactory.newConnection(); } // 关闭通道和连接 public void closeChannelAndConnection(Connection con, Channel channel){ try { if(con!=null)con.close(); if(channel!=null)channel.close(); } catch (IOException | TimeoutException e) { e.printStackTrace(); } } } \"},\"210\":{\"h\":\"任务模型\",\"a\":\"任务模型\"},\"211\":{\"t\":\"study\"},\"212\":{\"t\":\"两个消费者 消费同一个队列 默认会平均分配内容 叫做循环\"},\"213\":{\"t\":\"目前要求能者多劳！！！\"},\"214\":{\"t\":\"设置通道一次只能消费一个消息\"},\"215\":{\"t\":\"关闭消息的自动确认，开始手动确认消息\"},\"216\":{\"h\":\"Consumer\",\"a\":\"consumer\"},\"217\":{\"t\":\"public class consumer2 { public static void main(String[] args) throws IOException, TimeoutException { Connection connection = RabbitMQConnection.getConnection(); Channel channel = connection.createChannel(); channel.queueDeclare(\\\"word\\\",false,false,false,null); channel.basicQos(1);// 每次消费一个 // false 关闭自动确定 channel.basicConsume(\\\"word\\\",false, new DefaultConsumer(channel){ @SneakyThrows @Override public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException { Thread.sleep(1000);//模拟执行的漫 System.out.println(\\\"new String (body) = \\\" + new String (body)); /** * 参数 * - 手动确认的表示 * - false 是否开启多个消息同时确认 */ channel.basicAck(envelope.getDeliveryTag(),false); } }); } } \"},\"218\":{\"h\":\"广播\",\"a\":\"广播\"},\"219\":{\"t\":\" 流程如下：\"},\"220\":{\"t\":\"有多个消费者\"},\"221\":{\"t\":\"每个消费者有自己的队列\"},\"222\":{\"t\":\"每个队列都绑定了交换机\"},\"223\":{\"t\":\"生产者只能向交换机发送消息，再有交换机发给队列，生产者无权决定\"},\"224\":{\"t\":\"交换机吧消息发给和自己绑定的队列\"},\"225\":{\"t\":\"队列中的消费者都可以拿到消息\"},\"226\":{\"h\":\"生产者\",\"a\":\"生产者\"},\"227\":{\"t\":\"public class producer { public static void main(String[] args) throws IOException, TimeoutException { // 创建连接对象 Connection connection = RabbitMQConnection.getConnection(); Channel channel = connection.createChannel(); // 将通道声明到交换机 (交换机名称，类型) channel.exchangeDeclare(\\\"one\\\",\\\"fanout\\\"); channel.basicPublish(\\\"one\\\",\\\"\\\",null,\\\"hello world\\\".getBytes()); channel.close(); connection.close(); } } \"},\"228\":{\"h\":\"消费者\",\"a\":\"消费者\"},\"229\":{\"t\":\"public class consumerOne { public static void main(String[] args) throws IOException, TimeoutException { Connection connection = RabbitMQConnection.getConnection(); Channel channel = connection.createChannel(); // 通道绑定交换机 channel.exchangeDeclare(\\\"one\\\",\\\"fanout\\\"); // 临时队列 String queue = channel.queueDeclare().getQueue(); // 交换机和队列绑定 channel.queueBind(queue,\\\"one\\\",\\\"\\\"); // 消费消息 channel.basicConsume(queue,true,new DefaultConsumer(channel){ @Override public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException { System.out.println(\\\"new String(body) = \\\" + new String(body)); } }); } } \"},\"230\":{\"h\":\"路由模型\",\"a\":\"路由模型\"},\"231\":{\"h\":\"直连\",\"a\":\"直连\"},\"232\":{\"t\":\"Description\"},\"233\":{\"t\":\"在fanout的模式下，一条消息，会被订阅的队列消费。但有时我们希望不同的消息被不同的队列消费，\"},\"234\":{\"t\":\"此时就用到了 Direct类型的Exchange\"},\"235\":{\"t\":\"队列与交换机绑定，不再是任意绑定了，而是要指定一个RoutingKey(路由key)\"},\"236\":{\"t\":\"消息 的发送方在向exchang发送消息时，也必须要指定一个RoutingKey\"},\"237\":{\"t\":\"Exchange在发送消息时，会根据指定的RoutingKey进行判断，只有队列的RoutingKey与消息的RoutingKey完全一致，才会收到消息\"},\"238\":{\"h\":\"生产者\",\"a\":\"生产者-1\"},\"239\":{\"t\":\"public class producer { public static void main(String[] args) throws IOException, TimeoutException { Connection connection = RabbitMQConnection.getConnection(); Channel channel = connection.createChannel(); channel.exchangeDeclare(\\\"name_direct\\\",\\\"direct\\\"); String RoutingKey = \\\"warn\\\"; channel.basicPublish(\\\"name_direct\\\", RoutingKey,null, \\\"这是direct发布于的\\\".getBytes()); channel.close(); connection.close(); } } \"},\"240\":{\"h\":\"消费者\",\"a\":\"消费者-1\"},\"241\":{\"t\":\"public class consumerOne { public static void main(String[] args) throws IOException, TimeoutException { Connection connection = RabbitMQConnection.getConnection(); Channel channel = connection.createChannel(); // 通道绑定交换机 channel.exchangeDeclare(\\\"name_direct\\\",\\\"direct\\\"); // 临时队列 String queue = channel.queueDeclare().getQueue(); // 交换机和队列绑定和 RoutingKey channel.queueBind(queue,\\\"name_direct\\\",\\\"error\\\"); channel.queueBind(queue,\\\"name_direct\\\",\\\"info\\\"); channel.queueBind(queue,\\\"name_direct\\\",\\\"warn\\\"); // 消费消息 channel.basicConsume(queue,true,new DefaultConsumer(channel){ @Override public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException { System.out.println(\\\"error \\\" + new String(body)); } }); } } \"},\"242\":{\"t\":\"public class consumerTwo { public static void main(String[] args) throws IOException, TimeoutException { Connection connection = RabbitMQConnection.getConnection(); Channel channel = connection.createChannel(); // 通道绑定交换机 channel.exchangeDeclare(\\\"name_direct\\\",\\\"direct\\\"); // 临时队列 String queue = channel.queueDeclare().getQueue(); // 交换机和队列绑定和 RoutingKey channel.queueBind(queue,\\\"name_direct\\\",\\\"warn\\\"); // 消费消息 channel.basicConsume(queue,true,new DefaultConsumer(channel){ @Override public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException { System.out.println(\\\"info \\\" + new String(body)); } }); } } \"},\"243\":{\"h\":\"动态\",\"a\":\"动态\"},\"244\":{\"t\":\"Description\"},\"245\":{\"t\":\"Topic类型的Exchange与Direct 相比，都是可以根据Routinghey把消息路由到不同的队列。只不过Topic 类型Exchange可以让队列在绑定Routing key的时候使用通配符!这种模型Routingkey一般都是由一个或多个单词组成，多个单词之间以\\\". \\\"分割，例如:item.insert\"},\"246\":{\"t\":\"* 匹配不多不少恰好一个单词\"},\"247\":{\"t\":\"admin.* --> admin.hh.abc | admin.hh\"},\"248\":{\"t\":\"# 匹配一个或多个单词\"},\"249\":{\"t\":\"admin.# --> admin.hh\"},\"250\":{\"h\":\"代码\",\"a\":\"代码\"},\"251\":{\"t\":\"public class producer { public static void main(String[] args) throws IOException, TimeoutException { Connection connection = RabbitMQConnection.getConnection(); Channel channel = connection.createChannel(); channel.exchangeDeclare(\\\"name_topic\\\",\\\"topic\\\"); String RoutingKey = \\\"warn.js\\\"; channel.basicPublish(\\\"name_direct\\\", RoutingKey,null, \\\"这是direct发布于的\\\".getBytes()); channel.close(); connection.close(); } } \"},\"252\":{\"t\":\"public class consumerOne { public static void main(String[] args) throws IOException, TimeoutException { Connection connection = RabbitMQConnection.getConnection(); Channel channel = connection.createChannel(); // 通道绑定交换机 channel.exchangeDeclare(\\\"name_topic\\\",\\\"topic\\\"); // 临时队列 String queue = channel.queueDeclare().getQueue(); // 交换机和队列绑定和 RoutingKey channel.queueBind(queue,\\\"name_topic\\\",\\\"error.*\\\"); //error.xxx | error.aaa channel.queueBind(queue,\\\"name_topic\\\",\\\"info.#\\\");//info.gag.agsdga | info.gas.gas.g.asg. channel.queueBind(queue,\\\"name_topic\\\",\\\"warn\\\"); // 消费消息 channel.basicConsume(queue,true,new DefaultConsumer(channel){ @Override public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException { System.out.println(\\\"error \\\" + new String(body)); } }); } } \"},\"253\":{\"h\":\"spring boot 整合\",\"a\":\"spring-boot-整合\"},\"254\":{\"t\":\" <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-amqp</artifactId> </dependency> \"},\"255\":{\"t\":\"spring: rabbitmq: host: 127.0.0.1 port: 5672 username: ems password: ems virtual-host: /ems \"},\"256\":{\"h\":\"Test\",\"a\":\"test\"},\"257\":{\"t\":\"@SpringBootTest public class rabbitMQTest { @Autowired private RabbitTemplate rabbitTemplate; // hello @Test void test(){ rabbitTemplate.convertAndSend(\\\"hello\\\",\\\"hello world\\\"); } // work @Test void work(){ for (int i = 0; i < 10; i++) { rabbitTemplate.convertAndSend(\\\"work\\\",\\\"hello work\\\"); } } //fanout @Test void fanout(){ rabbitTemplate.convertAndSend(\\\"fanout\\\",\\\"\\\",\\\"hello fanout\\\"); } // route @Test void direct(){ rabbitTemplate.convertAndSend(\\\"direct\\\",\\\"warn\\\",\\\"hello direct\\\"); } // 动态路由 @Test void Topic(){ rabbitTemplate.convertAndSend(\\\"topic\\\",\\\"user.hh.gash\\\",\\\"hello topic\\\"); } } \"},\"258\":{\"h\":\"简单\",\"a\":\"简单\"},\"259\":{\"t\":\"@Component //默认队列持久化 非独占 不是autodelete @RabbitListener(queuesToDeclare = @Queue(value = \\\"hello\\\")) public class RabbitMQ { // 第一种模式 @RabbitHandler public void recrive(String message){ System.out.println(\\\"message = \\\" + message); } } \"},\"260\":{\"h\":\"任务\",\"a\":\"任务\"},\"261\":{\"t\":\"@Component public class workConsumer { //公平消费 @RabbitListener(queuesToDeclare = @Queue(\\\"work\\\")) public void work1(String message){ System.out.println(\\\"message1 = \\\" + message); } @RabbitListener(queuesToDeclare = @Queue(\\\"work\\\")) public void work2(String message){ System.out.println(\\\"message2 = \\\" + message); } } \"},\"262\":{\"h\":\"广播\",\"a\":\"广播-1\"},\"263\":{\"t\":\"@Component public class fanoutConsumer { @RabbitListener(bindings = { @QueueBinding( value = @Queue, exchange = @Exchange(value = \\\"fanout\\\",type = \\\"fanout\\\") ) }) public void fanout1(String message){ System.out.println(\\\"message1 = \\\" + message); } @RabbitListener(bindings = { @QueueBinding( value = @Queue, exchange = @Exchange(value = \\\"fanout\\\",type = \\\"fanout\\\") ) }) public void fanout2(String message){ System.out.println(\\\"message2 = \\\" + message); } } \"},\"264\":{\"h\":\"静态路由\",\"a\":\"静态路由\"},\"265\":{\"t\":\"@Component public class routeConsumer { @RabbitListener(bindings = { @QueueBinding( value = @Queue, exchange = @Exchange(value = \\\"direct\\\",type = \\\"direct\\\"), key = {\\\"info\\\",\\\"warn\\\"} ) }) public void route1(String message){ System.out.println(\\\"message1 = \\\" + message); } @RabbitListener(bindings = { @QueueBinding( value = @Queue, exchange = @Exchange(value = \\\"direct\\\",type = \\\"direct\\\"), key = {\\\"warn\\\",\\\"message\\\"} ) }) public void route2(String message){ System.out.println(\\\"message2 = \\\" + message); } } \"},\"266\":{\"h\":\"动态路由\",\"a\":\"动态路由\"},\"267\":{\"t\":\"@Component public class topicConsumer { @RabbitListener(bindings = { @QueueBinding( value = @Queue, exchange = @Exchange(value = \\\"topic\\\",type = \\\"topic\\\"), key = {\\\"user.*\\\",\\\"user.#\\\"} ) }) public void topic1(String message){ System.out.println(\\\"message1 = \\\" + message); } @RabbitListener(bindings = { @QueueBinding( value = @Queue, exchange = @Exchange(value = \\\"topic\\\",type = \\\"topic\\\"), key = {\\\"user.*\\\",\\\"message\\\"} ) }) public void topic2(String message){ System.out.println(\\\"message2 = \\\" + message); } } \"},\"268\":{\"h\":\"延迟队列\",\"a\":\"延迟队列\"},\"269\":{\"t\":\"安装插件以及使用 config\"},\"270\":{\"t\":\"@Configuration public class TestDelayQueueConfig { public static final String DEAD_EXCHANGE = \\\"delay_exchange\\\"; public static final String DEAD_QUEUE = \\\"delay_queue\\\"; public static final String DEAD_ROUTING = \\\"delay_key\\\"; @Bean public CustomExchange delayExchange() { Map<String, Object> args = new HashMap<String, Object>(); args.put(\\\"x-delayed-type\\\", \\\"direct\\\"); return new CustomExchange(DEAD_EXCHANGE, \\\"x-delayed-message\\\", true, false, args); } /** * 延迟消息队列 * @return */ @Bean public Queue delayQueue() { return new Queue(DEAD_QUEUE, true); } @Bean public Binding deplyBinding() { return BindingBuilder .bind(delayQueue()) .to(delayExchange()) .with(DEAD_ROUTING) .noargs(); } } \"},\"271\":{\"h\":\"生产者\",\"a\":\"生产者-2\"},\"272\":{\"t\":\"@Component public class DeplyProducer { @Resource RabbitTemplate rabbitTemplate; public void send(String msg, Integer delayTime){ // MessageProperties messageProperties = new MessageProperties(); // messageProperties.setDelay(delayTime); // Message message = new Message(msg.getBytes(), messageProperties); // rabbitTemplate.convertAndSend(DEAD_EXCHANGE, DEAD_ROUTING, message); rabbitTemplate.convertAndSend(DEAD_EXCHANGE, DEAD_ROUTING, msg, message1 -> { message1.getMessageProperties().setDelay(delayTime); return message1;} ); } } \"},\"273\":{\"h\":\"消费者\",\"a\":\"消费者-2\"},\"274\":{\"t\":\"@Component public class DeplyConsumer { @RabbitListener(queues = DEAD_QUEUE) public void onMessage(String msg) { System.out.println(\\\"收到信息了 msg = \\\" + msg); } } \"},\"275\":{\"c\":[\"使用指南\"]},\"276\":{\"c\":[\"Markdown\"]},\"277\":{\"h\":\"Redis\"},\"278\":{\"t\":\"Redis详细解释\"},\"279\":{\"h\":\"安装\",\"a\":\"安装\"},\"280\":{\"t\":\"sudo apt update sudo apt install redis-server redis-cli 启动命令 \"},\"281\":{\"h\":\"基本命令\",\"a\":\"基本命令\"},\"282\":{\"t\":\"bdsize 当前数据库大小 select 数据库切换 flushdb 清空当前数据库 flushall 清空所有数据库 type name 查看key的类型 \"},\"283\":{\"h\":\"五大数据类型\",\"a\":\"五大数据类型\"},\"284\":{\"h\":\"Redsi-Key\",\"a\":\"redsi-key\"},\"285\":{\"t\":\"keys * 打印所有的key set name hhh 设置k-v(\\\"name\\\",\\\"hh\\\") get name 打印name的value exists name 判断key是否存在 move name 1 将name移入到数据库1中 expire name 5 设置name 5s 过期 ttl name 查看name剩余过期时间 \"},\"286\":{\"h\":\"String\",\"a\":\"string\"},\"287\":{\"t\":\"append name \\\"world\\\" #value后面增加world strlen name #value的长度 incr age #实现自增 incrby age 20 #增加20 decr age #实现自减 dectby age 20 #减少20 getrange name 0 3 #串的截取 mget mset #批量set或get setnx #如果存在则不创建 getset #找不到就创建 找到就设置 \"},\"288\":{\"h\":\"List\",\"a\":\"list\"},\"289\":{\"t\":\"lpush list hello #往list中加入hello lrange list 0 -1 #打印所有 lpop/rpop list #删除左右头部 lindex list 1 # 打印下标1的值 llen list # 长度 lrem list 1 hello # 删除一个hello ltrim list 2 4 # 截取 剩余2-4 lset list 0 hello # 指定下标值替换为hello \"},\"290\":{\"h\":\"set\",\"a\":\"set\"},\"291\":{\"t\":\"sadd: 向集合中添加元素。例如：sadd myset \\\"element1\\\" \\\"element2\\\" smembers: 返回集合中所有元素。例如：smembers myset sismember: 判断元素是否在集合中。例如：sismember myset \\\"element1\\\" scard: 返回集合中元素的数量。例如：scard myset srem: 从集合中删除元素。例如：srem myset \\\"element1\\\" spop: 从集合中弹出一个随机元素。例如：spop myset sunion: 返回多个集合的并集。例如：sunion set1 set2 set3 sdiff: 返回多个集合的差集。例如：sdiff set1 set2 set3 sinter: 返回多个集合的交集。例如：sinter set1 set2 set3 srandmember: 随机返回集合中的一个元素。例如：srandmember myset \"},\"292\":{\"h\":\"Hash\",\"a\":\"hash\"},\"293\":{\"t\":\"hset key field value : 在key对应的hash中设置field对应的value。如果key不存在，则新建一个。 例如:hset user:1 name \\\"tom\\\" hget key field : 获取key对应的hash中field对应的value。 例如: hget user:1 name hgetall key : 获取key对应的hash中所有的键值对。 例如: hgetall user:1 hdel key field [field ...] : 删除key对应的hash中的一个或多个field。 例如: hdel user:1 name hlen key : 获取key对应的hash中field的数量。 例如: hlen user:1 hexists key field : 检查key对应的hash中是否存在field。 例如: hexists user:1 name hkeys key : 获取key对应的hash中所有的field。 例如: hkeys user:1 hvals key : 获取key对应的hash中所有的value。 例如: hvals user:1 这里是一些基本的Redis Hash命令。实际上还有许多其他的命令可供使用，如hincrby、hmset、hmget等。 \"},\"294\":{\"h\":\"Sorted sets\",\"a\":\"sorted-sets\"},\"295\":{\"t\":\"zadd: 向有序集合中添加元素，支持指定分数。例如：zadd mysortedset 1 \\\"element1\\\" 2 \\\"element2\\\" zrange: 返回有序集合中指定范围的元素。例如：zrange mysortedset 0 -1 zrangebyscore: 返回有序集合中指定分数范围的元素。例如：zrangebyscore mysortedset 1 2 zrank: 返回有序集合中指定元素的排名。例如：zrank mysortedset \\\"element1\\\" zrem: 从有序集合中删除元素。例如：zrem mysortedset \\\"element1\\\" zcount: 返回有序集合中指定分数范围的元素数量。例如：zcount mysortedset 1 2 zincrby: 对有序集合中指定元素的分数进行增加/减少操作。例如：zincrby mysortedset 2 \\\"element1\\\" zcard: 返回有序集合中元素的数量。例如：zcard mysortedset zunionstore: 计算多个有序集合的并集，并将结果存储到新的有序集合中。例如：zunionstore new_sortedset 2 sortedset1 sortedset2 zinterstore: 计算多个有序集合的交集，并将结果存储到新的有序集合中。例如：zinterstore new_sortedset 2 sortedset1 sortedset2 \"},\"296\":{\"h\":\"序列化\",\"a\":\"序列化\"},\"297\":{\"t\":\"Redis是一种内存数据库，为了更有效地使用内存，它需要对存储的数据进行序列化，使数据占用的空间更小。序列化是指将数据结构转换为字节流的过程。\"},\"298\":{\"t\":\"Redis支持多种序列化格式，如二进制协议（Redis默认使用的序列化格式）、JSON、MessagePack等。二进制协议是Redis自定义的序列化格式，它可以最大程度地减少数据占用的空间。JSON和MessagePack是常用的序列化格式，它们可以方便地与其他语言和系统进行交互。\"},\"299\":{\"h\":\"实现\",\"a\":\"实现\"},\"300\":{\"t\":\"stu.java\"},\"301\":{\"t\":\"public class stu implements Serializable { private Integer id; private String name; } \"},\"302\":{\"t\":\"RedisConfig.java\"},\"303\":{\"t\":\"@Configuration public class RedisConfig{ @Bean //配置redisTemplate // 默认情况下的模板只能支持 RedisTemplate<String,String>， // 只能存入字符串，很多时候，我们需要自定义 RedisTemplate ，设置序列化器 public RedisTemplate<String,Object> redisTemplate(RedisConnectionFactory factory){ RedisTemplate<String,Object> template = new RedisTemplate <>(); template.setConnectionFactory(factory); Jackson2JsonRedisSerializer jackson2JsonRedisSerializer = new Jackson2JsonRedisSerializer(Object.class); ObjectMapper om = new ObjectMapper(); om.setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.ANY); om.enableDefaultTyping(ObjectMapper.DefaultTyping.NON_FINAL); jackson2JsonRedisSerializer.setObjectMapper(om); StringRedisSerializer stringRedisSerializer = new StringRedisSerializer(); // key采用String的序列化方式 template.setKeySerializer(stringRedisSerializer); template.setValueSerializer(stringRedisSerializer); // hash的key也采用String的序列化方式 template.setHashKeySerializer(stringRedisSerializer); // value序列化方式采用jackson template.setValueSerializer(jackson2JsonRedisSerializer); // hash的value序列化方式采用jackson template.setHashValueSerializer(jackson2JsonRedisSerializer); template.afterPropertiesSet(); return template; } } \"},\"304\":{\"h\":\"测试\",\"a\":\"测试\"},\"305\":{\"t\":\" @Autowired private RedisTemplate redisTemplate; @Test void contextLoads() { stu stu = new stu(1, \\\"liming\\\"); redisTemplate.opsForValue().set(\\\"hh\\\",stu); System.out.println(redisTemplate.opsForValue().get(\\\"hh\\\")); } \"},\"306\":{\"h\":\"持久化\",\"a\":\"持久化\"},\"307\":{\"h\":\"RDB\",\"a\":\"rdb\"},\"308\":{\"t\":\"RDB 是 Redis Database 文件的缩写，它是 Redis 的默认数据持久化方式。RDB 文件是在指定的时间间隔内（通常是每几秒或几分钟）自动生成的快照文件。这种方式可以在损失一定数据的情况下更快地恢复数据库。\"},\"309\":{\"h\":\"触发\",\"a\":\"触发\"},\"310\":{\"t\":\"保存配置： -- save：只管保存，其他不管，全部阻塞。 -- bgsave：Redis 会在后台异步进行快照操作，快照同时还可以响应客户端请求。 -- lastsave：获取最后一次成功执行快照的时间。\"},\"311\":{\"t\":\"执行 flushall 命令，也会产生 dump.rdb 文件，但里面是空的，无意义 。\"},\"312\":{\"t\":\"退出的时候也会产生 dump.rdb 文件。\"},\"313\":{\"h\":\"AOF\",\"a\":\"aof\"},\"314\":{\"t\":\"AOF 是 Append-Only File 的缩写，它是 Redis 的另一种数据持久化方式。AOF 文件是将 Redis 所有写操作命令追加到文件的过程，因此可以保证数据的完整性。\"},\"315\":{\"t\":\"# 是否以append only模式作为持久化方式，默认使用的是rdb方式持久化，这种方式在许多应用中已经足够用了 appendonly no # appendfilename AOF 文件名称 appendfilename \\\"appendonly.aof\\\" # appendfsync aof持久化策略的配置： # no：不执行fsync，由操作系统保证数据同步到磁盘，速度最快。 # always：每次写入都执行fsync，以保证数据同步到磁盘。 # everysec：每秒执行一次fsync，可能会导致丢失这1s数据。 appendfsync everysec # 重写时是否可以运用Appendfsync，用默认no即可，保证数据安全性 No-appendfsync-on-rewrite # 设置重写的基准值 Auto-aof-rewrite-min-size # 设置重写的基准值 Auto-aof-rewrite-percentage \"},\"316\":{\"c\":[\"使用指南\"]},\"317\":{\"c\":[\"Markdown\"]},\"318\":{\"h\":\"Spring SpringMVC\"},\"319\":{\"h\":\"Spring\",\"a\":\"spring\"},\"320\":{\"t\":\"Spring-01-初识Spring_哔哩哔哩_bilibili\"},\"321\":{\"h\":\"IoC\",\"a\":\"ioc\"},\"322\":{\"t\":\"Ioc—Inversion of Control\"},\"323\":{\"t\":\"一种思想。 创建对象、管理对象\"},\"324\":{\"t\":\"一般对象都是直接通过new出来 ，交由IoC管理后，IoC容器来控制对象的创建\"},\"325\":{\"t\":\"配置实在是多\"},\"326\":{\"t\":\"pom.xml\"},\"327\":{\"t\":\"<dependency> <!-- 1.导入--> <groupId>org.springframework</groupId> <artifactId>spring-context</artifactId> <version>5.3.23</version> </dependency> \"},\"328\":{\"t\":\"applicationContext.xml\"},\"329\":{\"t\":\"<!-- 2.配置Bean--> <bean id=\\\"bookDao\\\" class=\\\"com.beink.dao.Impl.bookDaoImpl\\\"/> <bean id=\\\"bookService\\\" class=\\\"com.beink.service.Impl.bookServiceImpl\\\"/> \"},\"330\":{\"t\":\"Main.java\"},\"331\":{\"t\":\"public class Main { public static void main(String[] args) { // 3.获取容器 ApplicationContext atx = new ClassPathXmlApplicationContext(\\\"applicationContext.xml\\\"); // 4. 获取bean bookDao bookDao = (bookDao) atx.getBean(\\\"bookDao\\\"); bookDao.save(); // 等同于 bookDao bookDao1 = new bookDaoImpl(); bookDao1.save(); } } \"},\"332\":{\"h\":\"Bean\",\"a\":\"bean\"},\"333\":{\"t\":\"被构造 调用的是无参构造 生命周期： ``` public void init(){ System.out.println(\\\"init\\\"); } public void destory(){ System.out.println(\\\"destory\\\"); } 配置 <bean init-method=\\\"init\\\" destroy-method=\\\"destory\\\"/> 或者 直接 implements InitializingBean, DisposableBean 同样效果 ``` \"},\"334\":{\"h\":\"依赖注入\",\"a\":\"依赖注入\"},\"335\":{\"h\":\"setter\",\"a\":\"setter\"},\"336\":{\"t\":\".xml <bean id=\\\"bookDao\\\" class=\\\"com.beink.dao.Impl.bookDaoImpl\\\"> <property name=\\\"a\\\" value=\\\"123\\\"/> <property name=\\\"s\\\" value=\\\"true\\\"/> </bean> Impl.java private String s; private int a; \"},\"337\":{\"h\":\"构造器\",\"a\":\"构造器\"},\"338\":{\"t\":\"<bean id=\\\"bookDao\\\" class=\\\"com.beink.dao.Impl.bookDaoImpl\\\"> <constructor-arg name=\\\"a\\\" value=\\\"6\\\"/> <constructor-arg name=\\\"s\\\" value=\\\"true\\\"/> </bean> <bean id=\\\"bookService\\\" class=\\\"com.beink.service.Impl.bookServiceImpl\\\"> <!--red对应ID--> <constructor-arg name=\\\"bookdao\\\" ref=\\\"bookDao\\\"/> </bean> \"},\"339\":{\"t\":\"依赖注入\"},\"340\":{\"t\":\"private bookDao book_dao; public void setBookdao(bookDao bookdao){ this.book_dao = bookdao; } \"},\"341\":{\"t\":\"一般 注入\"},\"342\":{\"t\":\"private String s; private int a; public bookDaoImpl(String s, int a) { this.s = s; this.a = a; } \"},\"343\":{\"h\":\"集合注入\",\"a\":\"集合注入\"},\"344\":{\"t\":\" <bean id=\\\"bookDao\\\" class=\\\"com.beink.dao.Impl.bookDaoImpl\\\"> <property name=\\\"list\\\"> <array> <value>hello </value> <value>world</value> </array> </property> <property name=\\\"map\\\"> <map> <entry key=\\\"hello\\\" value=\\\"world\\\"></entry> </map> </property> </bean> \"},\"345\":{\"h\":\"注解开发\",\"a\":\"注解开发\"},\"346\":{\"t\":\"@Component(\\\"名字\\\") 定义Bean\"},\"347\":{\"t\":\"---@Service\"},\"348\":{\"t\":\"---@Controller(同样效果 只是便于理解)\"},\"349\":{\"t\":\"---@Repository\"},\"350\":{\"t\":\"@Configuration 设置位配置类 类似于applicationContext.xml @ComponentScan(\\\"com.beink\\\") 扫描路径 自动装配到spring的bean @Scope(\\\"singleton\\\") 单例 @PostConstruct 生命周期-初始化 @PreDestroy 生命周期-销毁 @Autowired 自动装配 === private bookDao bookdao = new bookDaoImpl(); @Value(\\\"${name}\\\") 简单类型注入 private String s; @PropertySource(\\\"xxx.yml\\\") 数据源 内容--（name=hello world） \"},\"351\":{\"h\":\"AOP\",\"a\":\"aop\"},\"352\":{\"t\":\"不改变原始设计 将功能增强\"},\"353\":{\"h\":\"举例\",\"a\":\"举例\"},\"354\":{\"t\":\"@Component @Aspect //这是个aop public class MyAop { // 在哪里执行 @Pointcut(\\\"execution(void com.beink.dao.bookDao.save())\\\") private void ss(){} // 绑定 @AfterReturning(\\\"ss()\\\") public void set(){ System.out.println(\\\"AOP\\\"); } } \"},\"355\":{\"h\":\"切入点表达式\",\"a\":\"切入点表达式\"},\"356\":{\"t\":\"使用*通配符即可 @Pointcut(\\\"execution( * * com.beink.dao.*)\\\") \"},\"357\":{\"h\":\"通知类型\",\"a\":\"通知类型\"},\"358\":{\"t\":\"public class MyAop { @Pointcut(\\\"execution(void com.beink.dao.bookDao.save())\\\") private void ss(){} @AfterReturning(\\\"ss()\\\") public void set(){ System.out.println(\\\"AOP\\\"); } // 环绕 @Around(\\\"ss()\\\") public void round(ProceedingJoinPoint e) throws Throwable { System.out.println(\\\"qian\\\"); e.proceed();/*调用原始操作*/ System.out.println(\\\"hou\\\"); // 如果有返回值 返回对象必须是Object } // @AfterReturning // @AfterThrowing } \"},\"359\":{\"h\":\"获取通知数据\",\"a\":\"获取通知数据\"},\"360\":{\"t\":\"public class MyAop { @Pointcut(\\\"execution(void com.beink.dao.bookDao.save(..))\\\") private void ss(){} // 环绕 @Around(\\\"ss()\\\") public Object round(ProceedingJoinPoint e) throws Throwable { Object[] args = e.getArgs(); e.proceed();/*调用原始操作*/ System.out.println(Arrays.toString(args));/*获取参数*/ // 修改参数 args[0] = 666; Object ret = e.proceed(args); return ret; } } \"},\"361\":{\"h\":\"SpringMVC\",\"a\":\"springmvc\"},\"362\":{\"t\":\"SpringMVC-02-SpringMVC入门案例_哔哩哔哩_bilibili\"},\"363\":{\"h\":\"创建使用\",\"a\":\"创建使用\"},\"364\":{\"t\":\"pom.xml\"},\"365\":{\"t\":\" <dependencies> <dependency> <groupId>javax.servlet</groupId> <artifactId>javax.servlet-api</artifactId> <version>4.0.1</version> <scope>provided</scope> </dependency> <dependency> <groupId>org.springframework</groupId> <artifactId>spring-webmvc</artifactId> <version>5.3.23</version> </dependency> </dependencies> \"},\"366\":{\"t\":\"userControler类\"},\"367\":{\"t\":\"@Controller //定义Bean public class userController { // 访问路径 @RequestMapping(\\\"/save\\\") // 返回值类型 @ResponseBody public String save(){ System.out.println(\\\"hhh\\\"); return \\\"hello world\\\"; } } \"},\"368\":{\"t\":\"config类\"},\"369\":{\"t\":\"servletinitConfig.java //定义一个servlet启动配置，在里面加载spring配置 public class servletinitConfig extends AbstractDispatcherServletInitializer { // 加载springMVC配置 @Override protected WebApplicationContext createServletApplicationContext() { AnnotationConfigWebApplicationContext ctx = new AnnotationConfigWebApplicationContext(); ctx.register(springMVCConfig.class); return ctx; } //设置那些请求归springMVC处理 @Override protected String[] getServletMappings() { return new String[]{\\\"/\\\"}; } //加载spring配置 @Override protected WebApplicationContext createRootApplicationContext() { return null; } } springMVCConfig.java //加载对应的Bean @ComponentScan(\\\"com.beink.controller\\\") //加载配置 @Configuration public class springMVCConfig { } \"},\"370\":{\"t\":\"配置Tomcat启动即可。。\"},\"371\":{\"h\":\"请求\",\"a\":\"请求\"},\"372\":{\"h\":\"get\",\"a\":\"get\"},\"373\":{\"t\":\"/save?name=name\"},\"374\":{\"t\":\" @RequestMapping(\\\"/save\\\") @ResponseBody public String save(String name){ System.out.println(name); return \\\"hello world\\\"; } \"},\"375\":{\"h\":\"post\",\"a\":\"post\"},\"376\":{\"t\":\" @RequestMapping(\\\"/save\\\") @ResponseBody public String save(String name,String id){ System.out.println(name + id); return \\\"hello world\\\"; } \"},\"377\":{\"h\":\"post乱码处理\",\"a\":\"post乱码处理\"},\"378\":{\"t\":\"img\"},\"379\":{\"h\":\"参数类型\",\"a\":\"参数类型\"},\"380\":{\"t\":\"SpringMVC-09-json数据传递参数_哔哩哔哩_bilibili\"},\"381\":{\"t\":\" @ResponseBody public String save(@RequestParam(\\\"name\\\") String userName, String id){ // 一： 会把地址中的name映射给userName // 二： save(User user) 当名字一样使 会自动把属性放进去 // 三：Map List.....@RequestParam List<String> // 四：JSON // 五：时间 // 六：。。。 System.out.println(userName + id); return \\\"hello world\\\"; } \"},\"382\":{\"h\":\"响应\",\"a\":\"响应\"},\"383\":{\"t\":\" @RequestMapping(\\\"topage\\\") public String toapage(){ // 跳转到index.jsp页面 return \\\"index.jsp\\\"; } @RequestMapping(\\\"ttt\\\") @ResponseBody public String toattpage(){ // 返回一个串“index.jsp” return \\\"index.jsp\\\"; } \"},\"384\":{\"h\":\"Rest风格\",\"a\":\"rest风格\"},\"385\":{\"t\":\"访问形式： /put/5 /get/6\"},\"386\":{\"t\":\"SpringMVC-14-RESTful快速开发_哔哩哔哩_bilibili\"},\"387\":{\"t\":\" @RequestMapping(value = \\\"/put/{id}\\\",method = RequestMethod.PUT) @ResponseBody public void put(@PathVariable String id){ System.out.println(id); } @RequestMapping(value = \\\"/get/{id}\\\",method = RequestMethod.GET) @ResponseBody public void get(@PathVariable String id){ System.out.println(id); } POST DELETE .... \"},\"388\":{\"h\":\"注解说明\",\"a\":\"注解说明\"},\"389\":{\"t\":\"@Controller //定义Bean @RequestMapping(\\\"/save\\\") // 访问路径 @ResponseBody //返回值 @RequestParam //用于接收url地址参数 /get?id=5 @ResponseBody //用于接收JSON数据 @PathVariable //接受url地址参数 /get/ @RestController //= @Controller + @ResponseBody @GetMapping(\\\"/get/{id}\\\") // == @RequestMapping(value = \\\"/get/{id}\\\",method = RequestMethod.GET) \"},\"390\":{\"h\":\"其他\",\"a\":\"其他\"},\"391\":{\"h\":\"自定义注解为属性赋值\",\"a\":\"自定义注解为属性赋值\"},\"392\":{\"t\":\"使用场景： 把用户传过来的token，解析出来用户信息， 为属性赋值。\"},\"393\":{\"h\":\"1.创建自定义注解\",\"a\":\"_1-创建自定义注解\"},\"394\":{\"t\":\"@Target({ElementType.PARAMETER}) @Documented @Retention(RetentionPolicy.RUNTIME) public @interface UserInfo { } \"},\"395\":{\"h\":\"2.创建拦截器 ,获得token,存入作用域中\",\"a\":\"_2-创建拦截器-获得token-存入作用域中\"},\"396\":{\"t\":\"public class GlobalInterceptor implements HandlerInterceptor { @Override public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception { String token = request.getHeader(\\\"Authorization\\\").substring(7); request.getSession().setAttribute(\\\"account\\\", JwtUtil.parseJWT(token).getSubject()); return true; } } \"},\"397\":{\"h\":\"3.配置拦截器\",\"a\":\"_3-配置拦截器\"},\"398\":{\"t\":\"@Configuration public class interceptor extends WebMvcConfigurationSupport { @Override protected void addArgumentResolvers(List<HandlerMethodArgumentResolver> argumentResolvers) { argumentResolvers.add(new UserInfoImpl()); } @Override protected void addInterceptors(InterceptorRegistry registry) { registry.addInterceptor(new GlobalInterceptor()).addPathPatterns(\\\"/user/account/color/\\\"); super.addInterceptors(registry); } } \"},\"399\":{\"h\":\"4.实现自定义注解\",\"a\":\"_4-实现自定义注解\"},\"400\":{\"t\":\"public class UserInfoImpl implements HandlerMethodArgumentResolver { @Override public boolean supportsParameter(MethodParameter methodParameter) { return methodParameter.getParameterAnnotation(UserInfo.class)!=null; } @Override public Object resolveArgument(MethodParameter methodParameter, ModelAndViewContainer modelAndViewContainer, NativeWebRequest nativeWebRequest, WebDataBinderFactory webDataBinderFactory) throws Exception { HttpServletRequest nativeRequest = (HttpServletRequest) nativeWebRequest.getNativeRequest(); return nativeRequest.getSession().getAttribute(\\\"account\\\"); } } \"},\"401\":{\"h\":\"5.使用\",\"a\":\"_5-使用\"},\"402\":{\"t\":\" @PostMapping(\\\"/user/account/color/\\\") public Result setColor(@UserInfo String account, @RequestParam Map<String,String>map){ String color = map.get(\\\"backImg\\\"); String list = map.get(\\\"list\\\"); return colorService.setColor(account,color,list); } \"},\"403\":{\"h\":\"拦截器\",\"a\":\"拦截器\"},\"404\":{\"t\":\"HttpServletRequest request 发送过来的信息 HttpServletResponse response 发送走的信息\"},\"405\":{\"h\":\"1.先实现一个拦截对象\",\"a\":\"_1-先实现一个拦截对象\"},\"406\":{\"t\":\"@Component public class MyInterceptor implements HandlerInterceptor { // 被拦截的操作之前运行 @Override public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception { System.out.println(\\\"preHandle...\\\"); // true 通行 // false 拦截 return true; } // 被拦截的操作之后运行 @Override public void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView) throws Exception { System.out.println(\\\"postHandle...\\\"); } // 也是后面 也在posthandle之后 @Override public void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex) throws Exception { System.out.println(\\\"afterCompletion...\\\"); } } \"},\"407\":{\"h\":\"2.配置\",\"a\":\"_2-配置\"},\"408\":{\"t\":\"@Configuration public class Support extends WebMvcConfigurationSupport { //implements WebMvcConfigurer 也行 // 拦截器对象 @Autowired private MyInterceptor myInterceptor; /** * * @param registry */ @Override protected void addInterceptors(InterceptorRegistry registry) { // 拦截路径 registry.addInterceptor(myInterceptor).addPathPatterns(\\\"/user\\\",\\\"/user*\\\"); } } \"},\"409\":{\"h\":\"过滤器\",\"a\":\"过滤器\"},\"410\":{\"h\":\"枚举\",\"a\":\"枚举\"},\"411\":{\"c\":[\"使用指南\"]},\"412\":{\"c\":[\"Markdown\"]},\"413\":{\"h\":\"阿里云对象存储\"},\"414\":{\"h\":\"阿里官方文档 Java上传文件概述和文件下载\",\"a\":\"阿里官方文档java上传文件概述和文件下载\"},\"415\":{\"h\":\"使用RAM访问 更安全\",\"a\":\"使用ram访问-更安全\"},\"416\":{\"t\":\"警告\"},\"417\":{\"t\":\"主账号AccessKey泄露会威胁您所有资源的安全。建议使用子账号（RAM用户）AccessKey进行操作，可以有效降低AccessKey泄露的风险。\"},\"418\":{\"t\":\"① 使用RAM用户访问密钥发起请求 ② \\\"Action\\\": [ \\\"oss:PutObject\\\", \\\"oss:ListObjects\\\", \\\"oss:DeleteObject\\\" ],放行权限 上传/目录/删除 权限 ③ 跨域放行\"},\"419\":{\"h\":\"上传图片\",\"a\":\"上传图片\"},\"420\":{\"t\":\"public List uploadObject(MultipartFile file) throws IOException { // Endpoint以华东1（杭州）为例，其它Region请按实际情况填写。 String Endpoint = \\\"https://oss-cn-hangzhou.aliyuncs.com\\\"; // 阿里云账号AccessKey拥有所有API的访问权限，风险很高。强烈建议您创建并使用RAM用户进行API访问或日常运维，请登录RAM控制台创建RAM用户。 String AccessKeyId = \\\"yourAccessKeyId\\\"; String AccessKeySecret = \\\"yourAccessKeySecret\\\"; // 填写Bucket名称，例如examplebucket。 String BucketName = \\\"examplebucket\\\"; String originalFilename = file.getOriginalFilename(); OSS os = new OSSClientBuilder().build( Endpoint , AccessKeyId , AccessKeySecret ); os.putObject( BucketName , originalFilename, file.getInputStream() ); os.shutdown(); return getList(); } \"},\"421\":{\"h\":\"目录列表\",\"a\":\"目录列表\"},\"422\":{\"t\":\"public List getList(){ OSS ossClient = new OSSClientBuilder().build( Endpoint ,AccessKeyId ,AccessKeySecert); try { // 列举文件。如果不设置keyPrefix，则列举存储空间下的所有文件。如果设置keyPrefix，则列举包含指定前缀的文件。 ObjectListing objectListing = ossClient.listObjects(Bucket); List<OSSObjectSummary> sums = objectListing.getObjectSummaries(); ArrayList<String> list = new ArrayList<>(); for (OSSObjectSummary s : sums) { // System.out.println(\\\"\\\\t\\\" + s.getKey()); list.add(s.getKey());//返回所有的链接 } return list; } catch (OSSException oe) { System.out.println(\\\"Caught an OSSException, which means your request made it to OSS, \\\" + \\\"but was rejected with an error response for some reason.\\\"); System.out.println(\\\"Error Message:\\\" + oe.getErrorMessage()); System.out.println(\\\"Error Code:\\\" + oe.getErrorCode()); System.out.println(\\\"Request ID:\\\" + oe.getRequestId()); System.out.println(\\\"Host ID:\\\" + oe.getHostId()); } finally { if (ossClient != null) { ossClient.shutdown(); } } return null; } \"},\"423\":{\"h\":\"删除图片\",\"a\":\"删除图片\"},\"424\":{\"t\":\"public List deleteObject(String s){ //s为图片的名字 OSS ossClient = new OSSClientBuilder().build( Endpoint() ,AccessKeyId() ,AccessKeySecert()); try { // 删除文件或目录。如果要删除目录，目录必须为空。 ossClient.deleteObject(Bucket(), s); return this.getList(); } catch (OSSException oe) { System.out.println(\\\"Caught an OSSException, which means your request made it to OSS, \\\" + \\\"but was rejected with an error response for some reason.\\\"); System.out.println(\\\"Error Message:\\\" + oe.getErrorMessage()); System.out.println(\\\"Error Code:\\\" + oe.getErrorCode()); System.out.println(\\\"Request ID:\\\" + oe.getRequestId()); System.out.println(\\\"Host ID:\\\" + oe.getHostId()); } finally { if (ossClient != null) { ossClient.shutdown(); } } return null; } \"},\"425\":{\"c\":[\"使用指南\"]},\"426\":{\"c\":[\"Markdown\"]},\"427\":{\"h\":\"书本\"},\"428\":{\"h\":\"静态资源访问\",\"a\":\"静态资源访问\"},\"429\":{\"t\":\"spring: mvc: static-path-pattern: /static/** web: resources: static-locations: classpath:/static/ \"},\"430\":{\"t\":\"@Configuration public class staticHandles implements WebMvcConfigurer { @Override public void addResourceHandlers(ResourceHandlerRegistry registry) { registry.addResourceHandler(\\\"/static/**\\\") .addResourceLocations(\\\"classpath:/static/\\\"); } } \"},\"431\":{\"h\":\"文件上传\",\"a\":\"文件上传\"},\"432\":{\"t\":\" <dependency> <groupId>javax.servlet</groupId> <artifactId>servlet-api</artifactId> <version>2.5</version> <scope>provided</scope> </dependency> \"},\"433\":{\"t\":\" <form action=\\\"/upload\\\" method=\\\"post\\\" enctype=\\\"multipart/form-data\\\"> <input type=\\\"file\\\" name=\\\"uploadFile\\\" value=\\\"选择文件\\\"> <input type=\\\"submit\\\" value=\\\"上传\\\"> </form> \"},\"434\":{\"t\":\"@RestController public class FileUploadController { SimpleDateFormat sdf = new SimpleDateFormat(\\\"yyyy/MM/dd\\\"); @PostMapping(\\\"/upload\\\") public String upload(MultipartFile uploadFile, HttpServletRequest req){ // 运行目录下 没有文件夹 就建一个 String realPath = req.getSession().getServletContext().getRealPath(\\\"/uploadFile/\\\"); System.out.println(realPath); String format = sdf.format(new Date()); File folder = new File(realPath + format); if(!folder.isDirectory()){ folder.mkdirs(); } // 重命名 String oldName = uploadFile.getOriginalFilename(); String newName = UUID.randomUUID().toString() + oldName.substring(oldName.lastIndexOf(\\\".\\\")); try{ // 保存 uploadFile.transferTo(new File(folder,newName)); // 返回路径 String filePath = req.getScheme() + \\\"://\\\" + req.getServerName() + \\\":\\\" + req.getServerPort() + \\\"/uploadFile/\\\" + format + newName; return filePath; } catch (IOException e) { throw new RuntimeException(e); } } } \"},\"435\":{\"t\":\"spring: servlet: multipart: # 是否开启上传 enabled: true file-size-threshold: 0 # 保存临时位置 location: E:\\\\\\\\temp # 最大 max-file-size: 10MB # 总大小 max-request-size: 10MB # 是否延迟解析 resolve-lazily: false \"},\"436\":{\"h\":\"热加载（Hot Swap）\",\"a\":\"热加载-hot-swap\"},\"437\":{\"t\":\" <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-devtools</artifactId> <optional>true</optional> </dependency> \"},\"438\":{\"h\":\"WebSocket 和 SockJS\",\"a\":\"websocket-和-sockjs\"},\"439\":{\"t\":\"应用场景\"},\"440\":{\"t\":\"WebSocket 和 SockJS 两者都应用广泛，具体应该根据实际情况来选择。WebSocket 是 HTML5 的一种新协议，它实现了浏览器与服务器全双工通信，实现了客户端与服务器端的实时通信。而 SockJS 是 WebSocket 的一个 polyfill 实现，即当浏览器不支持 WebSocket 时，SockJS 可以自动降级为支持长轮询等传输方式的 WebSocket 模拟实现，从而使得浏览器与服务器之间的通信始终保持稳定和高效。\"},\"441\":{\"t\":\"WebSocket和SockJS都是在Web应用程序中使用实时通信的协议，它们都有自己的优势和缺点。\"},\"442\":{\"h\":\"WebSocket的优势：\",\"a\":\"websocket的优势\"},\"443\":{\"t\":\"简单易用：WebSocket是一个非常简单的协议，只需建立连接，就可以进行双向通信。\"},\"444\":{\"t\":\"高效性：WebSocket的头部信息非常小，数据格式紧凑，因此数据传输的效率非常高。\"},\"445\":{\"t\":\"双向通信：WebSocket提供了双向通信的功能，可以同时在客户端和服务器端发送和接收消息。\"},\"446\":{\"h\":\"WebSocket的缺点：\",\"a\":\"websocket的缺点\"},\"447\":{\"t\":\"支持性：WebSocket是HTML5标准的一部分，因此只有在支持HTML5的浏览器中才能使用。对于老的浏览器，需要使用polyfill或其他技术。\"},\"448\":{\"t\":\"长连接：WebSocket在连接建立后会一直保持连接，如果服务器端不能正常关闭连接，可能会导致资源浪费和性能问题。\"},\"449\":{\"h\":\"SockJS的优势：\",\"a\":\"sockjs的优势\"},\"450\":{\"t\":\"跨浏览器：SockJS可以在所有支持JavaScript的浏览器中运行，甚至包括IE6。\"},\"451\":{\"t\":\"支持性：SockJS可以通过polyfill模拟WebSocket的功能，因此在不支持WebSocket的浏览器中也可以使用。\"},\"452\":{\"t\":\"可靠性：SockJS在不支持WebSocket的浏览器中使用的是长轮询技术，可以保证数据的可靠性。\"},\"453\":{\"h\":\"SockJS的缺点：\",\"a\":\"sockjs的缺点\"},\"454\":{\"t\":\"头部信息较大：因为SockJS在不支持WebSocket的浏览器中使用的是长轮询技术，因此需要发送大量的头部信息，导致数据传输效率较低。\"},\"455\":{\"t\":\"连接不稳定：由于SockJS在不支持WebSocket的浏览器中使用的是长轮询技术，因此可能会遇到连接不稳定的情况，例如断开连接或网络故障。\"},\"456\":{\"h\":\"发送邮件\",\"a\":\"发送邮件\"},\"457\":{\"t\":\"study\"},\"458\":{\"t\":\"application.yml\"},\"459\":{\"t\":\"spring: # 邮件配置 mail: host: smtp.qq.com port: 465 username: totryeverything@qq.com password:<第一步获得的密钥> default-encoding: utf-8 properties: mail: smtp: socketFactory: class: javax.net.ssl.SSLSocketFactory debug: true \"},\"460\":{\"t\":\"pom.xml\"},\"461\":{\"t\":\" <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-mail</artifactId> </dependency> \"},\"462\":{\"t\":\"Service\"},\"463\":{\"t\":\" @Service public class MailService { @Autowired JavaMailSender javaMailSender; // 抄送（CC），用户给收件人发出邮件的同时把该邮件抄送给另外的人，在这种抄送方式中，“收件人”知道发件人把该邮件抄送给了另外哪些人。 // 发送者 收件人 抄送人 主题 内容 public void sendSimpleMail(String from,String to, String subject,String content){ SimpleMailMessage msg = new SimpleMailMessage(); msg.setFrom(from); msg.setTo(to); msg.setSubject(subject); msg.setText(content); javaMailSender.send(msg); } // 发送带附件的邮件 public void sendFailMail(String from,String to, String subject,String content, File file) throws MessagingException { MimeMessage msg = javaMailSender.createMimeMessage(); MimeMessageHelper helper = new MimeMessageHelper(msg,true); helper.setFrom(from); helper.setTo(to); helper.setText(content); helper.setSubject(subject); helper.addAttachment(file.getName(),file); javaMailSender.send(msg); } // 附带图片 public void sendMailImg(String from,String to, String subject,String content, String[] srcPath, String[] resIds) throws MessagingException { if(srcPath.length!=resIds.length){ System.out.println(\\\"hello world\\\"); return ; } MimeMessage msg = javaMailSender.createMimeMessage(); MimeMessageHelper helper = new MimeMessageHelper(msg, true); helper.setFrom(from); helper.setTo(to); helper.setText(content,true);//表示正文是HTML格式 helper.setSubject(subject); for(int i=0;i<srcPath.length;i++){ FileSystemResource res = new FileSystemResource(new File(srcPath[i])); helper.addInline(resIds[i],res); } javaMailSender.send(msg); } } \"},\"464\":{\"t\":\"Test\"},\"465\":{\"t\":\" @Autowired private MailService mailService; @Test void sendSimpleMail() { mailService.sendSimpleMail(\\\"totryeverything@qq.com\\\",\\\"19138084894@163.com\\\", \\\"Test\\\",\\\"这只不过是一个测试而已\\\"); } @Test void sendFailMail() throws MessagingException { mailService.sendFailMail(\\\"totryeverything@qq.com\\\",\\\"19138084894@163.com\\\", \\\"Test\\\",\\\"这只不过是一个测试而已\\\",new File(\\\"E:\\\\\\\\c\\\\\\\\ToTryEveryThing\\\\\\\\README.md\\\")); } @Test void sendImgMail() throws MessagingException { mailService.sendMailImg(\\\"totryeverything@qq.com\\\",\\\"19138084894@163.com\\\", \\\"Test\\\", \\\"这只不过是一个测试而已\\\" + \\\"<img /><img />\\\", new String []{\\\"C:\\\\\\\\Users\\\\\\\\Administrator\\\\\\\\Pictures\\\\\\\\47f4c019880711ebb6edd017c2d2eca2.jpg\\\",\\\"C:\\\\\\\\Users\\\\\\\\Administrator\\\\\\\\Pictures\\\\\\\\下载 (2).png\\\"}, new String[]{\\\"p1\\\",\\\"p2\\\"} ); } \"},\"466\":{\"h\":\"定时任务\",\"a\":\"定时任务\"},\"467\":{\"t\":\"提示\"},\"468\":{\"t\":\"在Spring Boot应用程序中使用@Scheduled注解标记的定时任务是在应用程序启动时自动启动的。\"},\"469\":{\"t\":\"配置\"},\"470\":{\"t\":\"@Configuration @EnableScheduling public class ScheduledTasksConfig { } \"},\"471\":{\"t\":\"使用\"},\"472\":{\"t\":\"延迟5s启动 然后每隔5s运行一次\"},\"473\":{\"t\":\" @Scheduled(fixedRate = 5000,initialDelay = 5000) public String schedul (){ System.out.println(i++); return String.valueOf(i); } \"},\"474\":{\"h\":\"@Scheduled(cron = \\\"0 0 12 * * ?\\\"): 使用CRON表达式指定执行时间。\",\"a\":\"scheduled-cron-0-0-12-使用cron表达式指定执行时间。\"},\"475\":{\"t\":\"// 每天中午12点执行任务 @Scheduled(cron = \\\"0 0 12 * * ?\\\") public void doTask() { // your task code here } \"},\"476\":{\"t\":\"自启动 通过get方法停止任务\"},\"477\":{\"t\":\"@RestController public class ScheduleController { @Autowired private TaskScheduler taskScheduler; private ScheduledFuture<?> scheduledFuture; @PostConstruct public void start() { scheduledFuture = taskScheduler.scheduleWithFixedDelay(new MyTask(), 5000L);//5000ms } @GetMapping(\\\"/stop\\\") public String stop() { if (scheduledFuture != null) { scheduledFuture.cancel(true); } return \\\"stop\\\"; } private class MyTask implements Runnable { @Override public void run() { System.out.println(\\\"Task executing...\\\"); } } } \"},\"478\":{\"h\":\"数据校验\",\"a\":\"数据校验\"},\"479\":{\"t\":\"依赖\"},\"480\":{\"t\":\" <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-validation</artifactId> </dependency> \"},\"481\":{\"t\":\"配置 ValidationMessages.properties\"},\"482\":{\"t\":\"user.name.size = name user.address.notnull = adress user.age.size = age user.email.pattern = email \"},\"483\":{\"t\":\"pojo\"},\"484\":{\"t\":\"public class User { @Size(min = 2,max = 10, message = \\\"{user.name.size}\\\") private String name; @NotNull(message = \\\"{user.address.notnull}\\\") private String address; @DecimalMin(value = \\\"1\\\" ,message = \\\"{user.age.size}\\\") @DecimalMax(value = \\\"100\\\" ,message = \\\"{user.age.size}\\\") private Integer age; @Email(message = \\\"{user.email.pattern}\\\") private String email; public String getName() { return name; } public void setName(String name) { this.name = name; } public String getAddress() { return address; } public void setAddress(String address) { this.address = address; } public Integer getAge() { return age; } public void setAge(Integer age) { this.age = age; } public String getEmail() { return email; } public void setEmail(String email) { this.email = email; } } \"},\"485\":{\"t\":\"controller\"},\"486\":{\"t\":\"@RestController public class UserController { @PostMapping(\\\"/adduser/\\\") public List<String> addUser(@Validated User user, BindingResult bindingResult){ ArrayList<String> error = new ArrayList<>(); if(bindingResult.hasErrors()){ List<ObjectError> allErrors = bindingResult.getAllErrors(); for(ObjectError e : allErrors){ error.add(e.getDefaultMessage()); System.out.println(\\\"e.getDefaultMessage() = \\\" + e.getDefaultMessage()); } } return error; } } \"},\"487\":{\"t\":\"<template> <div> <!-- input 标签用于选择图片 --> <input type=\\\"file\\\" accept=\\\"image/*\\\" @change=\\\"previewImage\\\"> <!-- 预览图片的 img 标签 --> <img ref=\\\"previewImg\\\" style=\\\"max-width: 100%; max-height: 100%;\\\" /> </div> </template> <script> export default { methods: { previewImage(event) { // 获取选择的文件 const file = event.target.files[0]; // 判断是否是图片类型 if (file.type.startsWith('image/')) { // 创建 FileReader 对象 const reader = new FileReader(); // 读取图片文件 reader.readAsDataURL(file); // 在图片文件读取完毕后设置预览图片的 URL reader.onload = () => { this.$refs.previewImg.src = reader.result; }; } }, }, }; </script> \"},\"488\":{\"h\":\"分布式锁\",\"a\":\"分布式锁\"},\"489\":{\"h\":\"Redis分布式锁和Redisson分布式锁都是用于实现分布式系统中的分布式锁，但它们之间有以下区别：\",\"a\":\"redis分布式锁和redisson分布式锁都是用于实现分布式系统中的分布式锁-但它们之间有以下区别\"},\"490\":{\"t\":\"Redis分布式锁是基于Redis的SETNX命令实现的，而Redisson分布式锁是基于Redis的Redisson分布式框架实现的。\"},\"491\":{\"t\":\"Redis分布式锁需要手动编写锁逻辑代码，包括锁定、释放锁等。Redisson分布式锁封装了锁逻辑，并提供了API接口，使得锁的使用变得简单。\"},\"492\":{\"t\":\"Redis分布式锁在进行锁定和解锁操作时，需要自己实现保证操作的原子性。Redisson分布式锁内部封装了Redis的单线程模型，保证了锁的操作原子性。\"},\"493\":{\"t\":\"Redis分布式锁在锁定后需要手动维护锁的超时时间。Redisson分布式锁内部封装了锁的自动续期机制，避免了锁过期的问题。\"},\"494\":{\"t\":\"Redis分布式锁在高并发场景下可能存在死锁的问题。Redisson分布式锁使用Redlock算法避免了死锁的问题。\"},\"495\":{\"h\":\"redis分布式锁\",\"a\":\"redis分布式锁\"},\"496\":{\"t\":\"public Result regasdgsdgister(String account, String password) { final String key = account + \\\"-lock\\\"; final String value = System.nanoTime() + \\\" \\\" + UUID.randomUUID(); ValueOperations v = stringRedisTemplate.opsForValue(); Boolean res = v.setIfAbsent(key,value); if(res){ stringRedisTemplate.expire(key,20L, TimeUnit.SECONDS); if(account == null){ return new Result(0,\\\"用户名不能为空\\\"); } if(password.length() == 0){ return new Result(0,\\\"密码不能为空\\\"); } account = account.trim(); if(account.length()==0){ return new Result(0,\\\"用户名不能为空\\\"); } if(password.length()>50){ return new Result(0,\\\"密码长度不能超过50\\\"); } QueryWrapper<web> queryWrapper = new QueryWrapper<web>(); queryWrapper.eq(\\\"account\\\",account); List<web> webs = webMapper.selectList(queryWrapper); if(!webs.isEmpty()){ return new Result(0,\\\"用户名已存在\\\"); } String pass = passwordEncoder.encode(password); String jwt = JwtUtil.createJWT(account); web web1 = new web(); web1.setBackimg(\\\"5\\\"); web1.setList(\\\"[]\\\"); web1.setPassword(pass); web1.setAccount(account); web1.setDate(new Date()); webMapper.insert(web1); String git = \\\"[{\\\\\\\"title\\\\\\\":\\\\\\\"你好\\\\\\\",\\\\\\\"name\\\\\\\":1,\\\\\\\"content\\\\\\\":\\\\\\\"## new content\\\\\\\",\\\\\\\"show\\\\\\\":true}]\\\\n\\\" + \\\"\\\\n\\\"; String title = \\\"[\\\\\\\"你好\\\\\\\"]\\\"; System.out.println(publicMapper.insert(new Public(account, title,git))+999999); System.out.println(new Date()); if(value.equals(v.get(key).toString())){ stringRedisTemplate.delete(key); } return new Result(1,\\\"success\\\",jwt); } return null; } \"},\"497\":{\"h\":\"Redisson\",\"a\":\"redisson\"},\"498\":{\"t\":\"Redisson学习地址\"},\"499\":{\"t\":\"引入\"},\"500\":{\"t\":\"<!-- redisson--> <dependency> <groupId>org.redisson</groupId> <artifactId>redisson</artifactId> <version>3.6.5</version> </dependency> \"},\"501\":{\"t\":\"RedissonConfig\"},\"502\":{\"t\":\"@Configuration public class RedissonConfig { @Bean RedissonClient redisson() { Config config = new Config(); config.useSingleServer().setAddress(\\\"redis://localhost:6379\\\").setDatabase(0); return Redisson.create(config); } } \"},\"503\":{\"t\":\"使用\"},\"504\":{\"t\":\" @Autowired RedissonClient redissonClient; @Override public Result showbyid(Integer id) { RLock lock = redissonClient.getLock(String.valueOf(id)); lock.lock(); try{ article article = articleMapper.selectById(id); article.setViews(article.getViews()+1); int i = articleMapper.updateById(article); return new Result(1,\\\"success\\\",article); }finally { lock.unlock(); } } \"},\"505\":{\"h\":\"Swagger\",\"a\":\"swagger\"},\"506\":{\"h\":\"搭建\",\"a\":\"搭建\"},\"507\":{\"t\":\" <dependency> <groupId>io.springfox</groupId> <artifactId>springfox-swagger2</artifactId> <version>3.0.0</version> </dependency> \"},\"508\":{\"t\":\"@Configuration @EnableSwagger2 public class SwaggerConfig { @Bean public Docket productApi() { return new Docket(DocumentationType.SWAGGER_2) .apiInfo(apiInfo()) .select() .apis(RequestHandlerSelectors.withMethodAnnotation(ApiOperation.class)) //添加ApiOperiation注解的被扫描 .paths(PathSelectors.any()) .build(); } private ApiInfo apiInfo() { return new ApiInfoBuilder().title(\\\"都是书本上的呀\\\").description(\\\"根本不需要的描述\\\") .version(\\\"1.0\\\").build(); } } \"},\"509\":{\"c\":[\"使用指南\"]},\"510\":{\"c\":[\"Markdown\"]},\"511\":{\"h\":\"版本控制\"},\"512\":{\"h\":\"一、git安装后-指定名称和邮箱\",\"a\":\"一、git安装后-指定名称和邮箱\"},\"513\":{\"t\":\"$ git config --global user.name \\\"Your Name\\\" $ git config --global user.email \\\"email@example.com\\\" \"},\"514\":{\"h\":\"二.一分支管理\",\"a\":\"二-一分支管理\"},\"515\":{\"t\":\"git branch #查看分支 git chenkout xxx #切换为分支xxx git checkout -b xxx #新建分支xxx 并且切换过去 git branch -d xxx # 删除本地分支xxx git branch -D xxx #忽略修改 仍然删除分支xxx git fetch origin xxx #拉取远程分支xxx git push origin yyy # 把新建的分支yyy上传 git checkout -b first origin/first ##新建本地分支 和远程分支连接起来 \"},\"516\":{\"h\":\"二、创建版本库\",\"a\":\"二、创建版本库\"},\"517\":{\"t\":\"$ mkdir learngit //创建 $ cd learngit //使用 $ pwd //查看当前目录 $ git init //初始化，生成.git文件(若该文件隐藏，则使用ls -ah) \"},\"518\":{\"h\":\"三、把文件添加add和提交commit到版本库\",\"a\":\"三、把文件添加add和提交commit到版本库\"},\"519\":{\"t\":\"$ git add test.txt //添加 $ git commit -m \\\"wrote a test file\\\" //提交 $ git commit -m \\\"add 3 files.\\\" //一次性提交多个文件 \"},\"520\":{\"h\":\"四、版本控制\",\"a\":\"四、版本控制\"},\"521\":{\"t\":\"$ git log //查看提交历史记录，从最近到最远，可以看到3次 $ git log --pretty=oneline //加参，简洁查看 $ git reflog //查看每一次修改历史 $ cat test.txt //查看文件内容 $ git status //查看工作区中文件当前状态 $ git reset --hard HEAD^（HEAD~100）（commit id） //回退版本 $ git checkout -- test.txt //丢弃工作区的修改，即撤销修改 $ git reset HEAD test.txt //丢弃暂存区的修改（若已提交，则回退） \"},\"522\":{\"h\":\"五、删除文件\",\"a\":\"五、删除文件\"},\"523\":{\"t\":\"$ rm test.txt //直接删除 $ git rm test.txt $ git commit -m \\\"remove test.txt\\\" //删错了，恢复 $ git checkout -- test.txt \"},\"524\":{\"h\":\"六、远程仓库\",\"a\":\"六、远程仓库\"},\"525\":{\"t\":\"$ ssh-keygen -t rsa -C \\\"youremail@example.com\\\" //创建SSH Key $ git remote add origin git@github.com:Daisy/AKgit.git //关联 $ git push -u origin master //将本地内容推送到远程仓库（第一次） $ git push origin master //将本地内容推送到远程仓库（之后） $ git remote -v //查看远程仓库信息 $ git remote rm origin //删除远程仓库（解绑） $ git clone git@github.com: Daisy/AKgit.git //克隆远程仓库 //克隆之后使用和查看 $ cd gitskills $ ls $ git remote //查看远程库的信息 $ git remote -v //查看远程库的详细信息 \"},\"526\":{\"c\":[\"使用指南\"]},\"527\":{\"c\":[\"Markdown\"]},\"528\":{\"h\":\"Linux\"},\"529\":{\"h\":\"docker\",\"a\":\"docker\"},\"530\":{\"h\":\"将当前用户添加到docker用户组\",\"a\":\"将当前用户添加到docker用户组\"},\"531\":{\"t\":\"为了避免每次使用docker命令都需要加上sudo权限，可以将当前用户加入安装中自动创建的docker用户组\"},\"532\":{\"t\":\"如何在 Ubuntu 22.04 LTS 中安装 Docker 和 Docker Compose\"},\"533\":{\"t\":\"sudo usermod -aG docker $USER \"},\"534\":{\"t\":\"执行完此操作后，需要退出服务器，再重新登录回来，才可以省去sudo权限。\"},\"535\":{\"h\":\"镜像（images）\",\"a\":\"镜像-images\"},\"536\":{\"t\":\"docker pull ubuntu:20.04：拉取一个镜像 docker images：列出本地所有镜像 docker image rm ubuntu:20.04 或 docker rmi ubuntu:20.04：删除镜像ubuntu:20.04 docker [container] commit CONTAINER IMAGE_NAME:TAG：创建某个container的镜像 docker save -o ubuntu_20_04.tar ubuntu:20.04：将镜像ubuntu:20.04导出到本地文件ubuntu_20_04.tar中 docker load -i ubuntu_20_04.tar：将镜像ubuntu:20.04从本地文件ubuntu_20_04.tar中加载出来 \"},\"537\":{\"h\":\"容器(container)\",\"a\":\"容器-container\"},\"538\":{\"t\":\"docker [container] create -it ubuntu:20.04：利用镜像ubuntu:20.04创建一个容器。 docker ps -a：查看本地的所有容器 docker [container] start CONTAINER：启动容器 docker [container] stop CONTAINER：停止容器 docker [container] restart CONTAINER：重启容器 docker [contaienr] run -itd ubuntu:20.04：创建并启动一个容器 docker [container] attach CONTAINER：进入容器 先按Ctrl-p，再按Ctrl-q可以挂起容器 docker [container] exec CONTAINER COMMAND：在容器中执行命令 docker [container] rm CONTAINER：删除容器 docker container prune：删除所有已停止的容器 docker export -o xxx.tar CONTAINER：将容器CONTAINER导出到本地文件xxx.tar中 docker import xxx.tar image_name:tag：将本地文件xxx.tar导入成镜像，并将镜像命名为image_name:tag docker export/import与docker save/load的区别： export/import会丢弃历史记录和元数据信息，仅保存容器当时的快照状态 save/load会保存完整记录，体积更大 docker top CONTAINER：查看某个容器内的所有进程 docker stats：查看所有容器的统计信息，包括CPU、内存、存储、网络等信息 docker cp xxx CONTAINER:xxx 或 docker cp CONTAINER:xxx xxx：在本地和容器间复制文件 docker rename CONTAINER1 CONTAINER2：重命名容器 docker update CONTAINER --memory 500MB：修改容器限制 \"},\"539\":{\"h\":\"例子\",\"a\":\"例子\"},\"540\":{\"t\":\"创建 运行镜像 docker run -p 20000:22 --name my_docker_server -itd docker_lesson:1.0 \"},\"541\":{\"h\":\"mysql\",\"a\":\"mysql\"},\"542\":{\"h\":\"导出完整数据库\",\"a\":\"导出完整数据库\"},\"543\":{\"t\":\"用mysqldump命令导出数据库（此命令的路径即mysql的安装路径） mysqldump -u用户名 -p 数据库名 > 数据库名.sql \"},\"544\":{\"t\":\"例如\"},\"545\":{\"t\":\"/usr/local/mysql/bin mysqldump -uroot -p aaa > aaa.sql \"},\"546\":{\"t\":\"2、只导出表结构 如果只需要导出表结构\"},\"547\":{\"t\":\"mysqldump -u用户名 -p -d 数据库名 > 数据库名.sql \"},\"548\":{\"t\":\"例如\"},\"549\":{\"t\":\"mysqldump -uroot -p -d aaa >aaa.sql 可以使用以下命令找到导出的数据库 find / -name 数据库名.sql \"},\"550\":{\"h\":\"导入数据库\",\"a\":\"导入数据库\"},\"551\":{\"t\":\"1、使用mysql命令导入 mysql -u用户名 -p 数据库名 < 数据库名.sql 例如\"},\"552\":{\"t\":\"mysql -uroot -p aaa < aaa.sql \"},\"553\":{\"t\":\"2、使用sources命令导入 先进入到mysql中\"},\"554\":{\"t\":\"mysql> create databases aaa; #创建新的数据库 mysql> use aaa; #使用已创建的数据库 mysql> set names utf-8; #设置编码 mysql> source /aaa.sql #导入sql文件，注意sql的路径 \"},\"555\":{\"h\":\"vim\",\"a\":\"vim\"},\"556\":{\"t\":\"(1) i：进入编辑模式 (2) ESC：进入一般命令模式 (3) h 或 左箭头键：光标向左移动一个字符 (4) j 或 向下箭头：光标向下移动一个字符 (5) k 或 向上箭头：光标向上移动一个字符 (6) l 或 向右箭头：光标向右移动一个字符 (7) n<Space>：n表示数字，按下数字后再按空格，光标会向右移动这一行的n个字符 (8) 0 或 功能键[Home]：光标移动到本行开头 (9) $ 或 功能键[End]：光标移动到本行末尾 (10) G：光标移动到最后一行 (11) :n 或 nG：n为数字，光标移动到第n行 (12) gg：光标移动到第一行，相当于1G (13) n<Enter>：n为数字，光标向下移动n行 (14) /word：向光标之下寻找第一个值为word的字符串。 (15) ?word：向光标之上寻找第一个值为word的字符串。 (16) n：重复前一个查找操作 (17) N：反向重复前一个查找操作 (18) :n1,n2s/word1/word2/g：n1与n2为数字，在第n1行与n2行之间寻找word1这个字符串，并将该字符串替换为word2 (19) :1,$s/word1/word2/g：将全文的word1替换为word2 (20) :1,$s/word1/word2/gc：将全文的word1替换为word2，且在替换前要求用户确认。 (21) v：选中文本 (22) d：删除选中的文本 (23) dd: 删除当前行 (24) y：复制选中的文本 (25) yy: 复制当前行 (26) p: 将复制的数据在光标的下一行/下一个位置粘贴 (27) u：撤销 (28) Ctrl + r：取消撤销 (29) 大于号 >：将选中的文本整体向右缩进一次 (30) 小于号 <：将选中的文本整体向左缩进一次 (31) :w 保存 (32) :w! 强制保存 (33) :q 退出 (34) :q! 强制退出 (35) :wq 保存并退出 (36) :set paste 设置成粘贴模式，取消代码自动缩进 (37) :set nopaste 取消粘贴模式，开启代码自动缩进 (38) :set nu 显示行号 (39) :set nonu 隐藏行号 (40) gg=G：将全文代码格式化 (41) :noh 关闭查找关键词高亮 (42) Ctrl + q：当vim卡死时，可以取消当前正在执行的命令 \"},\"557\":{\"h\":\"ssh 免密登录\",\"a\":\"ssh-免密登录\"},\"558\":{\"t\":\"ssh-keygen 先生成一对密钥 ssh-keygen -R 127.0.0.1 清除公钥信息 ssh-copy-id 127.0.0.1 发送公钥 /.ssh 下创建config文件 Host 别名 Hostname 127.0.0.1 User 登录名 最后即可使用ssh 别名登录 \"},\"559\":{\"c\":[\"使用指南\"]},\"560\":{\"c\":[\"Markdown\"]},\"561\":{\"h\":\"Maven\"},\"562\":{\"h\":\"安装\",\"a\":\"安装\"},\"563\":{\"t\":\"下载地址中央仓库配置本地仓库\"},\"564\":{\"h\":\"阿里镜像\",\"a\":\"阿里镜像\"},\"565\":{\"t\":\"<mirror> <id>alimaven</id> <mirrorOf>central</mirrorOf> <name>aliyun maven</name> <url>http://maven.aliyun.com/nexus/content/repositories/central/</url> </mirror> \"},\"566\":{\"h\":\"简单命令\",\"a\":\"简单命令\"},\"567\":{\"t\":\"mvn compile #编译 mvn clean #清理 mvn test #测试 mvn package #打包 mvn install #安装到本地仓库 \"},\"568\":{\"h\":\"依赖管理\",\"a\":\"依赖管理\"},\"569\":{\"h\":\"依赖传递\",\"a\":\"依赖传递\"},\"570\":{\"t\":\"例如A依赖了B，B依赖了C和D，那么你就可以在A中，像主动依赖了C和D一样使用它们。并且传递的依赖是没有数量和层级的限制的，非常方便。\"},\"571\":{\"h\":\"可选依赖\",\"a\":\"可选依赖\"},\"572\":{\"t\":\"当别的项目引用这个jar包，optional为true时不让别人知道自己所用依赖\"},\"573\":{\"t\":\" <dependency> <groupId>joda-time</groupId> <artifactId>joda-time</artifactId> <version>2.9.9</version> // 可选依赖 <optional>true</optional> </dependency> \"},\"574\":{\"h\":\"排除依赖\",\"a\":\"排除依赖\"},\"575\":{\"t\":\"加入某个jar包依赖后，不想使用其中的某个依赖，使用坐标主动排除掉\"},\"576\":{\"t\":\"<dependency> <groupId>org.apache.struts</groupId> <artifactId>struts2-core</artifactId> <version>${struts.version}</version> <exclusions> <exclusion> <!-- we prefer our explicit version, though it should be the same --> <groupId>asm</groupId> <artifactId>asm</artifactId> </exclusion> </exclusions> </dependency> <dependency> <groupId>asm</groupId> <artifactId>asm</artifactId> <version>3.3.1</version> </dependency> \"},\"577\":{\"h\":\"依赖范围\",\"a\":\"依赖范围\"},\"578\":{\"t\":\"scope\"},\"579\":{\"t\":\"主代码\"},\"580\":{\"t\":\"测试代码\"},\"581\":{\"t\":\"打包\"},\"582\":{\"t\":\"compile(默认)\"},\"583\":{\"t\":\"Y\"},\"584\":{\"t\":\"Y\"},\"585\":{\"t\":\"Y\"},\"586\":{\"t\":\"test\"},\"587\":{\"t\":\"Y\"},\"588\":{\"t\":\"provided\"},\"589\":{\"t\":\"Y\"},\"590\":{\"t\":\"Y\"},\"591\":{\"t\":\"runtime\"},\"592\":{\"t\":\"Y\"},\"593\":{\"h\":\"\",\"a\":\"\"},\"594\":{\"c\":[\"使用指南\"]},\"595\":{\"c\":[\"Markdown\"]},\"596\":{\"h\":\"Oother\"},\"597\":{\"h\":\"Springboot\"},\"598\":{\"h\":\"Other\"}},\"dirtCount\":0,\"index\":[[\"排除依赖\",{\"0\":{\"574\":1}}],[\"排序查询\",{\"0\":{\"186\":1},\"1\":{\"143\":1}}],[\"排序字段列表\",{\"1\":{\"142\":1}}],[\"像主动依赖了c和d一样使用它们\",{\"1\":{\"570\":1}}],[\"那么你就可以在a中\",{\"1\":{\"570\":1}}],[\"打包\",{\"1\":{\"567\":1,\"581\":1}}],[\"打印下标1的值\",{\"1\":{\"289\":1}}],[\"打印所有\",{\"1\":{\"289\":1}}],[\"打印所有的key\",{\"1\":{\"285\":1}}],[\"打印name的value\",{\"1\":{\"285\":1}}],[\"编译\",{\"1\":{\"567\":1}}],[\"编码格式\",{\"1\":{\"127\":1}}],[\"登录名\",{\"1\":{\"558\":1}}],[\"清理\",{\"1\":{\"567\":1}}],[\"清除公钥信息\",{\"1\":{\"558\":1}}],[\"清空所有数据库\",{\"1\":{\"282\":1}}],[\"清空当前数据库\",{\"1\":{\"282\":1}}],[\"免密登录\",{\"0\":{\"557\":1}}],[\"隐藏行号\",{\"1\":{\"556\":1}}],[\"隐患\",{\"1\":{\"203\":1}}],[\"显示行号\",{\"1\":{\"556\":1}}],[\"开启代码自动缩进\",{\"1\":{\"556\":1}}],[\"开始手动确认消息\",{\"1\":{\"215\":1}}],[\"开始消息的自动确认机制\",{\"1\":{\"207\":1}}],[\"取消粘贴模式\",{\"1\":{\"556\":1}}],[\"取消代码自动缩进\",{\"1\":{\"556\":1}}],[\"取消撤销\",{\"1\":{\"556\":1}}],[\"退出\",{\"1\":{\"556\":1}}],[\"退出的时候也会产生\",{\"1\":{\"312\":1}}],[\"小于号\",{\"1\":{\"556\":1}}],[\"大于号\",{\"1\":{\"556\":1}}],[\"撤销\",{\"1\":{\"556\":1}}],[\"复制当前行\",{\"1\":{\"556\":1}}],[\"复制选中的文本\",{\"1\":{\"556\":1}}],[\"选中文本\",{\"1\":{\"556\":1}}],[\"选择文件\",{\"1\":{\"433\":1}}],[\"且在替换前要求用户确认\",{\"1\":{\"556\":1}}],[\"反向重复前一个查找操作\",{\"1\":{\"556\":1}}],[\"相当于1g\",{\"1\":{\"556\":1}}],[\"相比\",{\"1\":{\"245\":1}}],[\"9<\",{\"1\":{\"573\":1}}],[\"9\",{\"1\":{\"556\":1,\"573\":1}}],[\"光标移动到第一行\",{\"1\":{\"556\":1}}],[\"光标移动到第n行\",{\"1\":{\"556\":1}}],[\"光标移动到最后一行\",{\"1\":{\"556\":1}}],[\"光标移动到本行末尾\",{\"1\":{\"556\":1}}],[\"光标移动到本行开头\",{\"1\":{\"556\":1}}],[\"光标会向右移动这一行的n个字符\",{\"1\":{\"556\":1}}],[\"光标向下移动n行\",{\"1\":{\"556\":1}}],[\"光标向下移动一个字符\",{\"1\":{\"556\":1}}],[\"光标向右移动一个字符\",{\"1\":{\"556\":1}}],[\"光标向上移动一个字符\",{\"1\":{\"556\":1}}],[\"光标向左移动一个字符\",{\"1\":{\"556\":1}}],[\"按下数字后再按空格\",{\"1\":{\"556\":1}}],[\"k\",{\"1\":{\"556\":1}}],[\"keygen\",{\"1\":{\"525\":1,\"558\":2}}],[\"key=\",{\"1\":{\"344\":1}}],[\"key采用string的序列化方式\",{\"1\":{\"303\":1}}],[\"keys\",{\"1\":{\"285\":1}}],[\"key\",{\"0\":{\"284\":1},\"1\":{\"265\":2,\"267\":2,\"270\":1,\"293\":8,\"496\":5,\"525\":1}}],[\"key的时候使用通配符\",{\"1\":{\"245\":1}}],[\"keyproperty=\",{\"1\":{\"65\":1}}],[\"左箭头键\",{\"1\":{\"556\":1}}],[\"运行镜像\",{\"1\":{\"540\":1}}],[\"运行目录下\",{\"1\":{\"434\":1}}],[\"例子\",{\"0\":{\"539\":1}}],[\"例如a依赖了b\",{\"1\":{\"570\":1}}],[\"例如断开连接或网络故障\",{\"1\":{\"455\":1}}],[\"例如examplebucket\",{\"1\":{\"420\":1}}],[\"例如\",{\"1\":{\"245\":1,\"291\":10,\"293\":8,\"295\":10,\"544\":1,\"548\":1,\"551\":1}}],[\"修改容器限制\",{\"1\":{\"538\":1}}],[\"修改参数\",{\"1\":{\"360\":1}}],[\"网络等信息\",{\"1\":{\"538\":1}}],[\"存储\",{\"1\":{\"538\":1}}],[\"存入作用域中\",{\"0\":{\"395\":1}}],[\"包括cpu\",{\"1\":{\"538\":1}}],[\"包括锁定\",{\"1\":{\"491\":1}}],[\"体积更大\",{\"1\":{\"538\":1}}],[\"仅保存容器当时的快照状态\",{\"1\":{\"538\":1}}],[\"进入一般命令模式\",{\"1\":{\"556\":1}}],[\"进入编辑模式\",{\"1\":{\"556\":1}}],[\"进入容器\",{\"1\":{\"538\":1}}],[\"进行引用\",{\"1\":{\"40\":1,\"41\":1}}],[\"停止容器\",{\"1\":{\"538\":1}}],[\"启动容器\",{\"1\":{\"538\":1}}],[\"启动命令\",{\"1\":{\"280\":1}}],[\"利用镜像ubuntu\",{\"1\":{\"538\":1}}],[\"容器\",{\"0\":{\"537\":1}}],[\"拉取一个镜像\",{\"1\":{\"536\":1}}],[\"拉取远程分支xxx\",{\"1\":{\"515\":1}}],[\"镜像\",{\"0\":{\"535\":1}}],[\"才可以省去sudo权限\",{\"1\":{\"534\":1}}],[\"才会收到消息\",{\"1\":{\"237\":1}}],[\"再按ctrl\",{\"1\":{\"538\":1}}],[\"再重新登录回来\",{\"1\":{\"534\":1}}],[\"再有交换机发给队列\",{\"1\":{\"223\":1}}],[\"克隆之后使用和查看\",{\"1\":{\"525\":1}}],[\"克隆远程仓库\",{\"1\":{\"525\":1}}],[\"解绑\",{\"1\":{\"525\":1}}],[\"解析出来用户信息\",{\"1\":{\"392\":1}}],[\"之后\",{\"1\":{\"525\":1}}],[\"第一次\",{\"1\":{\"525\":1}}],[\"第一种模式\",{\"1\":{\"259\":1}}],[\"关联\",{\"1\":{\"525\":1}}],[\"关闭查找关键词高亮\",{\"1\":{\"556\":1}}],[\"关闭自动确定\",{\"1\":{\"217\":1}}],[\"关闭消息的自动确认\",{\"1\":{\"215\":1}}],[\"关闭通道和连接\",{\"1\":{\"209\":1}}],[\"远程仓库\",{\"0\":{\"524\":1}}],[\"恢复\",{\"1\":{\"523\":1}}],[\"删错了\",{\"1\":{\"523\":1}}],[\"删除当前行\",{\"1\":{\"556\":1}}],[\"删除选中的文本\",{\"1\":{\"556\":1}}],[\"删除所有已停止的容器\",{\"1\":{\"538\":1}}],[\"删除所有数据\",{\"1\":{\"140\":1}}],[\"删除容器\",{\"1\":{\"538\":1}}],[\"删除镜像ubuntu\",{\"1\":{\"536\":1}}],[\"删除远程仓库\",{\"1\":{\"525\":1}}],[\"删除文件\",{\"0\":{\"522\":1}}],[\"删除文件或目录\",{\"1\":{\"424\":1}}],[\"删除本地分支xxx\",{\"1\":{\"515\":1}}],[\"删除图片\",{\"0\":{\"423\":1}}],[\"删除\",{\"1\":{\"418\":1}}],[\"删除key对应的hash中的一个或多个field\",{\"1\":{\"293\":1}}],[\"删除一个hello\",{\"1\":{\"289\":1}}],[\"删除左右头部\",{\"1\":{\"289\":1}}],[\"删除多个\",{\"1\":{\"89\":1}}],[\"若已提交\",{\"1\":{\"521\":1}}],[\"若该文件隐藏\",{\"1\":{\"517\":1}}],[\"丢弃暂存区的修改\",{\"1\":{\"521\":1}}],[\"丢弃工作区的修改\",{\"1\":{\"521\":1}}],[\"即撤销修改\",{\"1\":{\"521\":1}}],[\"即当浏览器不支持\",{\"1\":{\"440\":1}}],[\"回退版本\",{\"1\":{\"521\":1}}],[\"回滚事务\",{\"1\":{\"120\":1}}],[\"加入某个jar包依赖后\",{\"1\":{\"575\":1}}],[\"加参\",{\"1\":{\"521\":1}}],[\"加载配置\",{\"1\":{\"369\":1}}],[\"加载对应的bean\",{\"1\":{\"369\":1}}],[\"加载spring配置\",{\"1\":{\"369\":1}}],[\"加载springmvc配置\",{\"1\":{\"369\":1}}],[\"新建本地分支\",{\"1\":{\"515\":1}}],[\"新建分支xxx\",{\"1\":{\"515\":1}}],[\"仍然删除分支xxx\",{\"1\":{\"515\":1}}],[\"忽略修改\",{\"1\":{\"515\":1}}],[\"切换为分支xxx\",{\"1\":{\"515\":1}}],[\"切入点表达式\",{\"0\":{\"355\":1}}],[\"指定名称和邮箱\",{\"0\":{\"512\":1}}],[\"指定下标值替换为hello\",{\"1\":{\"289\":1}}],[\"版本控制\",{\"0\":{\"511\":1,\"520\":1}}],[\"根本不需要的描述\",{\"1\":{\"508\":1}}],[\"都是书本上的呀\",{\"1\":{\"508\":1}}],[\"都是可以根据routinghey把消息路由到不同的队列\",{\"1\":{\"245\":1}}],[\"搭建\",{\"0\":{\"506\":1}}],[\"引入\",{\"1\":{\"499\":1}}],[\"你好\",{\"1\":{\"496\":2}}],[\"你可以通过主题选项和页面\",{\"1\":{\"55\":1}}],[\"你可以通过设置页面的\",{\"1\":{\"9\":1}}],[\"你可以将图片和\",{\"1\":{\"40\":1}}],[\"你可以自由在这里书写你的\",{\"1\":{\"38\":1}}],[\"你可以在\",{\"1\":{\"32\":1}}],[\"密码长度不能超过50\",{\"1\":{\"496\":1}}],[\"密码不能为空\",{\"1\":{\"496\":1}}],[\"密码加密的文章\",{\"0\":{\"23\":1}}],[\"避免了锁过期的问题\",{\"1\":{\"493\":1}}],[\"需要退出服务器\",{\"1\":{\"534\":1}}],[\"需要自己实现保证操作的原子性\",{\"1\":{\"492\":1}}],[\"需要使用polyfill或其他技术\",{\"1\":{\"447\":1}}],[\"释放锁等\",{\"1\":{\"491\":1}}],[\"读取图片文件\",{\"1\":{\"487\":1}}],[\"预览图片的\",{\"1\":{\"487\":1}}],[\"然后每隔5s运行一次\",{\"1\":{\"472\":1}}],[\"然后相同的按照第二个方式排序\",{\"1\":{\"189\":1}}],[\"定时任务\",{\"0\":{\"466\":1}}],[\"定义一个servlet启动配置\",{\"1\":{\"369\":1}}],[\"定义bean\",{\"1\":{\"346\":1,\"367\":1,\"389\":1}}],[\"下创建config文件\",{\"1\":{\"558\":1}}],[\"下一个位置粘贴\",{\"1\":{\"556\":1}}],[\"下一篇\",{\"1\":{\"17\":1}}],[\"下载地址中央仓库配置本地仓库\",{\"1\":{\"563\":1}}],[\"下载\",{\"1\":{\"465\":1}}],[\"表示正文是html格式\",{\"1\":{\"463\":1}}],[\"表名列表\",{\"1\":{\"142\":1}}],[\"表名\",{\"1\":{\"93\":1,\"130\":1,\"132\":2,\"134\":1,\"136\":1,\"139\":1,\"140\":1,\"146\":2,\"148\":1,\"177\":1,\"179\":1,\"181\":2,\"192\":1}}],[\"附带图片\",{\"1\":{\"463\":1}}],[\"知道发件人把该邮件抄送给了另外哪些人\",{\"1\":{\"463\":1}}],[\"收件人\",{\"1\":{\"463\":2}}],[\"收到信息了\",{\"1\":{\"274\":1}}],[\"抄送人\",{\"1\":{\"463\":1}}],[\"抄送\",{\"1\":{\"463\":1}}],[\"邮件配置\",{\"1\":{\"459\":1}}],[\"由于sockjs在不支持websocket的浏览器中使用的是长轮询技术\",{\"1\":{\"455\":1}}],[\"由操作系统保证数据同步到磁盘\",{\"1\":{\"315\":1}}],[\"连接不稳定\",{\"1\":{\"455\":1}}],[\"连接对象方法\",{\"1\":{\"209\":1}}],[\"因为sockjs在不支持websocket的浏览器中使用的是长轮询技术\",{\"1\":{\"454\":1}}],[\"因此可能会遇到连接不稳定的情况\",{\"1\":{\"455\":1}}],[\"因此可以保证数据的完整性\",{\"1\":{\"314\":1}}],[\"因此需要发送大量的头部信息\",{\"1\":{\"454\":1}}],[\"因此在不支持websocket的浏览器中也可以使用\",{\"1\":{\"451\":1}}],[\"因此只有在支持html5的浏览器中才能使用\",{\"1\":{\"447\":1}}],[\"因此数据传输的效率非常高\",{\"1\":{\"444\":1}}],[\"因此\",{\"1\":{\"119\":1}}],[\"头部信息较大\",{\"1\":{\"454\":1}}],[\"甚至包括ie6\",{\"1\":{\"450\":1}}],[\"跨浏览器\",{\"1\":{\"450\":1}}],[\"跨域放行\",{\"1\":{\"418\":1}}],[\"长连接\",{\"1\":{\"448\":1}}],[\"长度\",{\"1\":{\"289\":1}}],[\"双向通信\",{\"1\":{\"445\":1}}],[\"高效性\",{\"1\":{\"444\":1}}],[\"时\",{\"1\":{\"440\":1}}],[\"时间\",{\"1\":{\"381\":1}}],[\"而redisson分布式锁是基于redis的redisson分布式框架实现的\",{\"1\":{\"490\":1}}],[\"而\",{\"1\":{\"440\":1}}],[\"而是要指定一个routingkey\",{\"1\":{\"235\":1}}],[\"具体应该根据实际情况来选择\",{\"1\":{\"440\":1}}],[\"两者都应用广泛\",{\"1\":{\"440\":1}}],[\"两个消费者\",{\"1\":{\"212\":1}}],[\"热加载\",{\"0\":{\"436\":1}}],[\"总大小\",{\"1\":{\"435\":1}}],[\"最大\",{\"1\":{\"435\":1}}],[\"最后即可使用ssh\",{\"1\":{\"558\":1}}],[\"最后\",{\"1\":{\"205\":1,\"207\":1}}],[\"就可以进行双向通信\",{\"1\":{\"443\":1}}],[\"就建一个\",{\"1\":{\"434\":1}}],[\"就消费掉\",{\"1\":{\"203\":1}}],[\"没有文件夹\",{\"1\":{\"434\":1}}],[\"书本\",{\"0\":{\"427\":1}}],[\"则回退\",{\"1\":{\"521\":1}}],[\"则使用ls\",{\"1\":{\"517\":1}}],[\"则列举包含指定前缀的文件\",{\"1\":{\"422\":1}}],[\"则列举存储空间下的所有文件\",{\"1\":{\"422\":1}}],[\"则新建一个\",{\"1\":{\"293\":1}}],[\"列出本地所有镜像\",{\"1\":{\"536\":1}}],[\"列举文件\",{\"1\":{\"422\":1}}],[\"列表中的值\",{\"1\":{\"163\":1}}],[\"填写bucket名称\",{\"1\":{\"420\":1}}],[\"yy\",{\"1\":{\"556\":1}}],[\"yyy\",{\"1\":{\"515\":1}}],[\"yyyy\",{\"1\":{\"434\":1}}],[\"y\",{\"1\":{\"556\":1,\"583\":1,\"584\":1,\"585\":1,\"587\":1,\"589\":1,\"590\":1,\"592\":1}}],[\"youremail\",{\"1\":{\"525\":1}}],[\"your\",{\"1\":{\"422\":1,\"424\":1,\"475\":1,\"513\":1}}],[\"youraccesskeysecret\",{\"1\":{\"420\":1}}],[\"youraccesskeyid\",{\"1\":{\"420\":1}}],[\"yml\",{\"1\":{\"350\":1,\"458\":1}}],[\"强制退出\",{\"1\":{\"556\":1}}],[\"强制保存\",{\"1\":{\"556\":1}}],[\"强烈建议您创建并使用ram用户进行api访问或日常运维\",{\"1\":{\"420\":1}}],[\"强大的crud操作\",{\"1\":{\"79\":1}}],[\"风险很高\",{\"1\":{\"420\":1}}],[\"其它region请按实际情况填写\",{\"1\":{\"420\":1}}],[\"其他\",{\"0\":{\"390\":1}}],[\"其他不管\",{\"1\":{\"310\":1}}],[\"其他的连接不可用\",{\"1\":{\"205\":1,\"207\":1}}],[\"杭州\",{\"1\":{\"420\":1}}],[\"③\",{\"1\":{\"418\":1}}],[\"权限\",{\"1\":{\"418\":1}}],[\"上传图片\",{\"0\":{\"419\":1}}],[\"上传\",{\"1\":{\"418\":1,\"433\":1}}],[\"上一篇\",{\"1\":{\"17\":1}}],[\"放行权限\",{\"1\":{\"418\":1}}],[\"②\",{\"1\":{\"418\":1}}],[\"①\",{\"1\":{\"418\":1}}],[\"建议使用子账号\",{\"1\":{\"417\":1}}],[\"警告\",{\"1\":{\"416\":1}}],[\"更安全\",{\"0\":{\"415\":1}}],[\"更新所有\",{\"1\":{\"137\":1}}],[\"更新时间等页面元信息\",{\"1\":{\"49\":1}}],[\"更新时间\",{\"1\":{\"16\":1}}],[\"阿里镜像\",{\"0\":{\"564\":1}}],[\"阿里云账号accesskey拥有所有api的访问权限\",{\"1\":{\"420\":1}}],[\"阿里云对象存储\",{\"0\":{\"413\":1}}],[\"阿里官方文档\",{\"0\":{\"414\":1}}],[\"枚举\",{\"0\":{\"410\":1}}],[\"过滤器\",{\"0\":{\"409\":1}}],[\"过期\",{\"1\":{\"285\":1}}],[\"拦截路径\",{\"1\":{\"408\":1}}],[\"拦截\",{\"1\":{\"406\":1}}],[\"拦截器对象\",{\"1\":{\"408\":1}}],[\"拦截器\",{\"0\":{\"403\":1}}],[\"被拦截的操作之后运行\",{\"1\":{\"406\":1}}],[\"被拦截的操作之前运行\",{\"1\":{\"406\":1}}],[\"被构造\",{\"1\":{\"333\":1}}],[\"先生成一对密钥\",{\"1\":{\"558\":1}}],[\"先进入到mysql中\",{\"1\":{\"553\":1}}],[\"先按ctrl\",{\"1\":{\"538\":1}}],[\"先按第一个排序\",{\"1\":{\"189\":1}}],[\"先实现一个拦截对象\",{\"0\":{\"405\":1}}],[\"发送公钥\",{\"1\":{\"558\":1}}],[\"发送带附件的邮件\",{\"1\":{\"463\":1}}],[\"发送者\",{\"1\":{\"463\":1}}],[\"发送邮件\",{\"0\":{\"456\":1}}],[\"发送走的信息\",{\"1\":{\"404\":1}}],[\"发送过来的信息\",{\"1\":{\"404\":1}}],[\"发布消息\",{\"1\":{\"205\":1}}],[\"7\",{\"1\":{\"396\":1,\"556\":1}}],[\"获得token\",{\"0\":{\"395\":1}}],[\"获取选择的文件\",{\"1\":{\"487\":1}}],[\"获取参数\",{\"1\":{\"360\":1}}],[\"获取通知数据\",{\"0\":{\"359\":1}}],[\"获取bean\",{\"1\":{\"331\":1}}],[\"获取容器\",{\"1\":{\"331\":1}}],[\"获取最后一次成功执行快照的时间\",{\"1\":{\"310\":1}}],[\"获取key对应的hash中所有的value\",{\"1\":{\"293\":1}}],[\"获取key对应的hash中所有的field\",{\"1\":{\"293\":1}}],[\"获取key对应的hash中所有的键值对\",{\"1\":{\"293\":1}}],[\"获取key对应的hash中field的数量\",{\"1\":{\"293\":1}}],[\"获取key对应的hash中field对应的value\",{\"1\":{\"293\":1}}],[\"获取\",{\"1\":{\"209\":1}}],[\"获取连接中的通道\",{\"1\":{\"205\":1,\"207\":1}}],[\"获取连接对象\",{\"1\":{\"205\":1,\"207\":1,\"209\":1}}],[\"把文件添加add和提交commit到版本库\",{\"0\":{\"518\":1}}],[\"把新建的分支yyy上传\",{\"1\":{\"515\":1}}],[\"把用户传过来的token\",{\"1\":{\"392\":1}}],[\"把表中字段和实体类对应\",{\"1\":{\"97\":1}}],[\"接受url地址参数\",{\"1\":{\"389\":1}}],[\"用mysqldump命令导出数据库\",{\"1\":{\"543\":1}}],[\"用户名已存在\",{\"1\":{\"496\":1}}],[\"用户名不能为空\",{\"1\":{\"496\":2}}],[\"用户给收件人发出邮件的同时把该邮件抄送给另外的人\",{\"1\":{\"463\":1}}],[\"用于接收json数据\",{\"1\":{\"389\":1}}],[\"用于接收url地址参数\",{\"1\":{\"389\":1}}],[\"用默认no即可\",{\"1\":{\"315\":1}}],[\"访问形式\",{\"1\":{\"385\":1}}],[\"访问路径\",{\"1\":{\"367\":1,\"389\":1}}],[\"跳转到index\",{\"1\":{\"383\":1}}],[\"响应\",{\"0\":{\"382\":1}}],[\"六\",{\"0\":{\"524\":1},\"1\":{\"381\":1}}],[\"五\",{\"0\":{\"522\":1},\"1\":{\"381\":1}}],[\"五大数据类型\",{\"0\":{\"283\":1}}],[\"四\",{\"0\":{\"520\":1},\"1\":{\"381\":1}}],[\"请登录ram控制台创建ram用户\",{\"1\":{\"420\":1}}],[\"请求\",{\"0\":{\"371\":1}}],[\"请使用绝对链接\",{\"1\":{\"41\":1}}],[\"调用原始操作\",{\"1\":{\"358\":1,\"360\":1}}],[\"调用的是无参构造\",{\"1\":{\"333\":1}}],[\"环绕\",{\"1\":{\"358\":1,\"360\":1}}],[\"绑定\",{\"1\":{\"354\":1}}],[\"举例\",{\"0\":{\"353\":1}}],[\"$s\",{\"1\":{\"556\":2}}],[\"$user\",{\"1\":{\"533\":1}}],[\"$refs\",{\"1\":{\"487\":1}}],[\"$\",{\"1\":{\"350\":1,\"513\":2,\"517\":4,\"519\":3,\"521\":8,\"523\":4,\"525\":11,\"556\":1}}],[\"销毁\",{\"1\":{\"350\":1}}],[\"初始化\",{\"1\":{\"350\":1,\"517\":1}}],[\"初识spring\",{\"1\":{\"320\":1}}],[\"单例\",{\"1\":{\"350\":1}}],[\"单个字符\",{\"1\":{\"165\":1}}],[\"扫描路径\",{\"1\":{\"350\":1}}],[\"类似于applicationcontext\",{\"1\":{\"350\":1}}],[\"类型exchange可以让队列在绑定routing\",{\"1\":{\"245\":1}}],[\"类型\",{\"1\":{\"227\":1}}],[\"名字\",{\"1\":{\"346\":1}}],[\"集合注入\",{\"0\":{\"343\":1}}],[\"6379\",{\"1\":{\"502\":1}}],[\"6\",{\"1\":{\"338\":1,\"385\":1,\"500\":1,\"556\":1}}],[\"666\",{\"1\":{\"89\":2,\"360\":1}}],[\"构造器\",{\"0\":{\"337\":1}}],[\"同样效果\",{\"1\":{\"333\":1,\"348\":1}}],[\"直接删除\",{\"1\":{\"523\":1}}],[\"直接\",{\"1\":{\"333\":1}}],[\"直连\",{\"0\":{\"231\":1}}],[\"```\",{\"1\":{\"333\":2}}],[\"生成\",{\"1\":{\"517\":1}}],[\"生命周期\",{\"1\":{\"333\":1,\"350\":2}}],[\"生产者无权决定\",{\"1\":{\"223\":1}}],[\"生产者只能向交换机发送消息\",{\"1\":{\"223\":1}}],[\"生产者\",{\"0\":{\"226\":1,\"238\":1,\"271\":1},\"1\":{\"205\":1}}],[\"生产消息\",{\"0\":{\"204\":1}}],[\"等同于\",{\"1\":{\"331\":1}}],[\"导出完整数据库\",{\"0\":{\"542\":1}}],[\"导致数据传输效率较低\",{\"1\":{\"454\":1}}],[\"导入sql文件\",{\"1\":{\"554\":1}}],[\"导入数据库\",{\"0\":{\"550\":1}}],[\"导入\",{\"1\":{\"327\":1}}],[\"导航栏\",{\"1\":{\"11\":1,\"51\":1}}],[\"配置拦截器\",{\"0\":{\"397\":1}}],[\"配置tomcat启动即可\",{\"1\":{\"370\":1}}],[\"配置\",{\"0\":{\"407\":1},\"1\":{\"333\":1,\"469\":1,\"481\":1}}],[\"配置bean\",{\"1\":{\"329\":1}}],[\"配置实在是多\",{\"1\":{\"325\":1}}],[\"配置redistemplate\",{\"1\":{\"303\":1}}],[\"交由ioc管理后\",{\"1\":{\"324\":1}}],[\"交换机和队列绑定和\",{\"1\":{\"241\":1,\"242\":1,\"252\":1}}],[\"交换机和队列绑定\",{\"1\":{\"229\":1}}],[\"交换机吧消息发给和自己绑定的队列\",{\"1\":{\"224\":1}}],[\"交换机名称\",{\"1\":{\"205\":1,\"207\":1,\"227\":1}}],[\"管理对象\",{\"1\":{\"323\":1}}],[\"重复前一个查找操作\",{\"1\":{\"556\":1}}],[\"重启容器\",{\"1\":{\"538\":1}}],[\"重启消息也在\",{\"1\":{\"205\":1}}],[\"重命名容器\",{\"1\":{\"538\":1}}],[\"重命名\",{\"1\":{\"434\":1}}],[\"重写时是否可以运用appendfsync\",{\"1\":{\"315\":1}}],[\"可选依赖\",{\"0\":{\"571\":1},\"1\":{\"573\":1}}],[\"可靠性\",{\"1\":{\"452\":1}}],[\"可能会导致资源浪费和性能问题\",{\"1\":{\"448\":1}}],[\"可能会导致丢失这1s数据\",{\"1\":{\"315\":1}}],[\"可以取消当前正在执行的命令\",{\"1\":{\"556\":1}}],[\"可以使用以下命令找到导出的数据库\",{\"1\":{\"549\":1}}],[\"可以将当前用户加入安装中自动创建的docker用户组\",{\"1\":{\"531\":1}}],[\"可以看到3次\",{\"1\":{\"521\":1}}],[\"可以保证数据的可靠性\",{\"1\":{\"452\":1}}],[\"可以同时在客户端和服务器端发送和接收消息\",{\"1\":{\"445\":1}}],[\"可以自动降级为支持长轮询等传输方式的\",{\"1\":{\"440\":1}}],[\"可以有效降低accesskey泄露的风险\",{\"1\":{\"417\":1}}],[\"可以把id拿出来\",{\"1\":{\"64\":1}}],[\"以保证数据同步到磁盘\",{\"1\":{\"315\":1}}],[\"以避免并发访问引起的数据冲突和错误\",{\"1\":{\"117\":1}}],[\"速度最快\",{\"1\":{\"315\":1}}],[\"所有写操作命令追加到文件的过程\",{\"1\":{\"314\":1}}],[\"所有的数据\",{\"1\":{\"89\":1}}],[\"无意义\",{\"1\":{\"311\":1}}],[\"无侵入\",{\"1\":{\"79\":1}}],[\"也行\",{\"1\":{\"408\":1}}],[\"也在posthandle之后\",{\"1\":{\"406\":1}}],[\"也是后面\",{\"1\":{\"406\":1}}],[\"也会产生\",{\"1\":{\"311\":1}}],[\"也必须要指定一个routingkey\",{\"1\":{\"236\":1}}],[\"命令\",{\"1\":{\"311\":1}}],[\"执行完此操作后\",{\"1\":{\"534\":1}}],[\"执行\",{\"1\":{\"311\":1}}],[\"快照同时还可以响应客户端请求\",{\"1\":{\"310\":1}}],[\"全部阻塞\",{\"1\":{\"310\":1}}],[\"保证了锁的操作原子性\",{\"1\":{\"492\":1}}],[\"保证数据安全性\",{\"1\":{\"315\":1}}],[\"保证数据的完整性\",{\"1\":{\"116\":1}}],[\"保存并退出\",{\"1\":{\"556\":1}}],[\"保存临时位置\",{\"1\":{\"435\":1}}],[\"保存\",{\"1\":{\"434\":1,\"556\":1}}],[\"保存配置\",{\"1\":{\"310\":1}}],[\"触发\",{\"0\":{\"309\":1}}],[\"持久化\",{\"0\":{\"306\":1}}],[\"测试代码\",{\"1\":{\"580\":1}}],[\"测试\",{\"0\":{\"304\":1},\"1\":{\"567\":1}}],[\"测试时加入\",{\"1\":{\"113\":1}}],[\"我们需要自定义\",{\"1\":{\"303\":1}}],[\"很多时候\",{\"1\":{\"303\":1}}],[\"它们都有自己的优势和缺点\",{\"1\":{\"441\":1}}],[\"它们可以方便地与其他语言和系统进行交互\",{\"1\":{\"298\":1}}],[\"它实现了浏览器与服务器全双工通信\",{\"1\":{\"440\":1}}],[\"它是\",{\"1\":{\"308\":1,\"314\":1}}],[\"它可以最大程度地减少数据占用的空间\",{\"1\":{\"298\":1}}],[\"它需要对存储的数据进行序列化\",{\"1\":{\"297\":1}}],[\"序列化是指将数据结构转换为字节流的过程\",{\"1\":{\"297\":1}}],[\"序列化\",{\"0\":{\"296\":1}}],[\"计算多个有序集合的交集\",{\"1\":{\"295\":1}}],[\"计算多个有序集合的并集\",{\"1\":{\"295\":1}}],[\"减少操作\",{\"1\":{\"295\":1}}],[\"减少20\",{\"1\":{\"287\":1}}],[\"对象\",{\"1\":{\"487\":1}}],[\"对有序集合中指定元素的分数进行增加\",{\"1\":{\"295\":1}}],[\"对于老的浏览器\",{\"1\":{\"447\":1}}],[\"对于\",{\"1\":{\"41\":1}}],[\"从最近到最远\",{\"1\":{\"521\":1}}],[\"从而使得浏览器与服务器之间的通信始终保持稳定和高效\",{\"1\":{\"440\":1}}],[\"从有序集合中删除元素\",{\"1\":{\"295\":1}}],[\"从集合中弹出一个随机元素\",{\"1\":{\"291\":1}}],[\"从集合中删除元素\",{\"1\":{\"291\":1}}],[\"zinterstore\",{\"1\":{\"295\":2}}],[\"zincrby\",{\"1\":{\"295\":2}}],[\"zunionstore\",{\"1\":{\"295\":2}}],[\"zcard\",{\"1\":{\"295\":2}}],[\"zcount\",{\"1\":{\"295\":2}}],[\"zrem\",{\"1\":{\"295\":2}}],[\"zrank\",{\"1\":{\"295\":2}}],[\"zrangebyscore\",{\"1\":{\"295\":2}}],[\"zrange\",{\"1\":{\"295\":2}}],[\"zadd\",{\"1\":{\"295\":2}}],[\"向光标之上寻找第一个值为word的字符串\",{\"1\":{\"556\":1}}],[\"向光标之下寻找第一个值为word的字符串\",{\"1\":{\"556\":1}}],[\"向右箭头\",{\"1\":{\"556\":1}}],[\"向上箭头\",{\"1\":{\"556\":1}}],[\"向下箭头\",{\"1\":{\"556\":1}}],[\"向有序集合中添加元素\",{\"1\":{\"295\":1}}],[\"向集合中添加元素\",{\"1\":{\"291\":1}}],[\"如何在\",{\"1\":{\"532\":1}}],[\"如二进制协议\",{\"1\":{\"298\":1}}],[\"如hincrby\",{\"1\":{\"293\":1}}],[\"如果只需要导出表结构\",{\"1\":{\"546\":1}}],[\"如果服务器端不能正常关闭连接\",{\"1\":{\"448\":1}}],[\"如果要删除目录\",{\"1\":{\"424\":1}}],[\"如果设置keyprefix\",{\"1\":{\"422\":1}}],[\"如果不设置keyprefix\",{\"1\":{\"422\":1}}],[\"如果有返回值\",{\"1\":{\"358\":1}}],[\"如果key不存在\",{\"1\":{\"293\":1}}],[\"如果存在则不创建\",{\"1\":{\"287\":1}}],[\"如果队列中有消息\",{\"1\":{\"203\":1}}],[\"如果在多个操作中涉及到较多的i\",{\"1\":{\"118\":1}}],[\"如果在多个操作中发生了错误\",{\"1\":{\"116\":1}}],[\"检查key对应的hash中是否存在field\",{\"1\":{\"293\":1}}],[\"随机返回集合中的一个元素\",{\"1\":{\"291\":1}}],[\"判断是否是图片类型\",{\"1\":{\"487\":1}}],[\"判断元素是否在集合中\",{\"1\":{\"291\":1}}],[\"判断key是否存在\",{\"1\":{\"285\":1}}],[\"剩余2\",{\"1\":{\"289\":1}}],[\"截取\",{\"1\":{\"289\":1}}],[\"42\",{\"1\":{\"556\":1}}],[\"41\",{\"1\":{\"556\":1}}],[\"40\",{\"1\":{\"556\":1}}],[\"47f4c019880711ebb6edd017c2d2eca2\",{\"1\":{\"465\":1}}],[\"465\",{\"1\":{\"459\":1}}],[\"4\",{\"0\":{\"399\":1},\"1\":{\"289\":2,\"331\":1,\"556\":1}}],[\"往list中加入hello\",{\"1\":{\"289\":1}}],[\"找到就设置\",{\"1\":{\"287\":1}}],[\"找不到就创建\",{\"1\":{\"287\":1}}],[\"批量set或get\",{\"1\":{\"287\":1}}],[\"串的截取\",{\"1\":{\"287\":1}}],[\"增加20\",{\"1\":{\"287\":1}}],[\"查看所有容器的统计信息\",{\"1\":{\"538\":1}}],[\"查看某个容器内的所有进程\",{\"1\":{\"538\":1}}],[\"查看本地的所有容器\",{\"1\":{\"538\":1}}],[\"查看远程库的详细信息\",{\"1\":{\"525\":1}}],[\"查看远程库的信息\",{\"1\":{\"525\":1}}],[\"查看远程仓库信息\",{\"1\":{\"525\":1}}],[\"查看工作区中文件当前状态\",{\"1\":{\"521\":1}}],[\"查看文件内容\",{\"1\":{\"521\":1}}],[\"查看每一次修改历史\",{\"1\":{\"521\":1}}],[\"查看提交历史记录\",{\"1\":{\"521\":1}}],[\"查看当前目录\",{\"1\":{\"517\":1}}],[\"查看分支\",{\"1\":{\"515\":1}}],[\"查看name剩余过期时间\",{\"1\":{\"285\":1}}],[\"查看key的类型\",{\"1\":{\"282\":1}}],[\"查询页码\",{\"1\":{\"193\":1}}],[\"查询记录数\",{\"1\":{\"192\":1}}],[\"数据库名\",{\"1\":{\"543\":2,\"547\":2,\"549\":1,\"551\":2}}],[\"数据库切换\",{\"1\":{\"282\":1}}],[\"数据校验\",{\"0\":{\"478\":1}}],[\"数据格式紧凑\",{\"1\":{\"444\":1}}],[\"数据源\",{\"1\":{\"350\":1}}],[\"数据一致性\",{\"1\":{\"115\":1}}],[\"当别的项目引用这个jar包\",{\"1\":{\"572\":1}}],[\"当vim卡死时\",{\"1\":{\"556\":1}}],[\"当名字一样使\",{\"1\":{\"381\":1}}],[\"当前数据库大小\",{\"1\":{\"282\":1}}],[\"当多个用户同时对同一数据进行操作时\",{\"1\":{\"117\":1}}],[\"基本命令\",{\"0\":{\"281\":1}}],[\"基本查询\",{\"0\":{\"144\":1}}],[\"延迟5s启动\",{\"1\":{\"472\":1}}],[\"延迟消息队列\",{\"1\":{\"270\":1}}],[\"延迟队列\",{\"0\":{\"268\":1}}],[\"安装到本地仓库\",{\"1\":{\"567\":1}}],[\"安装\",{\"0\":{\"279\":1,\"562\":1}}],[\"安装插件以及使用\",{\"1\":{\"269\":1}}],[\"安装地址\",{\"1\":{\"199\":1}}],[\"静态资源访问\",{\"0\":{\"428\":1}}],[\"静态路由\",{\"0\":{\"264\":1}}],[\"静态代码块\",{\"1\":{\"209\":1}}],[\"公平消费\",{\"1\":{\"261\":1}}],[\"简洁查看\",{\"1\":{\"521\":1}}],[\"简单命令\",{\"0\":{\"566\":1}}],[\"简单易用\",{\"1\":{\"443\":1}}],[\"简单类型注入\",{\"1\":{\"350\":1}}],[\"简单\",{\"0\":{\"258\":1}}],[\"简称\",{\"1\":{\"77\":1}}],[\"整合\",{\"0\":{\"253\":1}}],[\"xml\",{\"1\":{\"326\":1,\"328\":1,\"331\":1,\"336\":1,\"350\":1,\"364\":1,\"460\":1}}],[\"xml配置详解\",{\"1\":{\"62\":1}}],[\"x\",{\"1\":{\"270\":2}}],[\"xxx\",{\"1\":{\"252\":1,\"350\":1,\"515\":5,\"538\":6}}],[\"代码\",{\"0\":{\"250\":1}}],[\"匹配一个或多个单词\",{\"1\":{\"248\":1}}],[\"匹配不多不少恰好一个单词\",{\"1\":{\"246\":1}}],[\"这只不过是一个测试而已\",{\"1\":{\"465\":3}}],[\"这是个aop\",{\"1\":{\"354\":1}}],[\"这是direct发布于的\",{\"1\":{\"239\":1,\"251\":1}}],[\"这种方式在许多应用中已经足够用了\",{\"1\":{\"315\":1}}],[\"这种方式可以在损失一定数据的情况下更快地恢复数据库\",{\"1\":{\"308\":1}}],[\"这种模型routingkey一般都是由一个或多个单词组成\",{\"1\":{\"245\":1}}],[\"这里是一些基本的redis\",{\"1\":{\"293\":1}}],[\"动态路由\",{\"0\":{\"266\":1},\"1\":{\"257\":1}}],[\"动态\",{\"0\":{\"243\":1}}],[\"动态条件查询\",{\"0\":{\"66\":1}}],[\"会自动把属性放进去\",{\"1\":{\"381\":1}}],[\"会把地址中的name映射给username\",{\"1\":{\"381\":1}}],[\"会在后台异步进行快照操作\",{\"1\":{\"310\":1}}],[\"会根据指定的routingkey进行判断\",{\"1\":{\"237\":1}}],[\"会被订阅的队列消费\",{\"1\":{\"233\":1}}],[\"此命令的路径即mysql的安装路径\",{\"1\":{\"543\":1}}],[\"此时就用到了\",{\"1\":{\"234\":1}}],[\"此页面应当包含\",{\"1\":{\"45\":1}}],[\"但它们之间有以下区别\",{\"0\":{\"489\":1}}],[\"但里面是空的\",{\"1\":{\"311\":1}}],[\"但有时我们希望不同的消息被不同的队列消费\",{\"1\":{\"233\":1}}],[\"但是你需要使用相对链接\",{\"1\":{\"40\":1}}],[\"路由key\",{\"1\":{\"235\":1}}],[\"路由模型\",{\"0\":{\"230\":1}}],[\"路径导航\",{\"1\":{\"13\":1,\"46\":1}}],[\"临时队列\",{\"1\":{\"229\":1,\"241\":1,\"242\":1,\"252\":1}}],[\"创建新的数据库\",{\"1\":{\"554\":1}}],[\"创建并启动一个容器\",{\"1\":{\"538\":1}}],[\"创建某个container的镜像\",{\"1\":{\"536\":1}}],[\"创建ssh\",{\"1\":{\"525\":1}}],[\"创建版本库\",{\"0\":{\"516\":1}}],[\"创建\",{\"1\":{\"487\":1,\"517\":1,\"540\":1}}],[\"创建拦截器\",{\"0\":{\"395\":1}}],[\"创建自定义注解\",{\"0\":{\"393\":1}}],[\"创建使用\",{\"0\":{\"363\":1}}],[\"创建对象\",{\"1\":{\"323\":1}}],[\"创建连接对象\",{\"1\":{\"227\":1}}],[\"创建mq的连接工厂对象\",{\"1\":{\"205\":1,\"207\":1}}],[\"有多个消费者\",{\"1\":{\"220\":1}}],[\"流程如下\",{\"1\":{\"219\":1}}],[\"广播\",{\"0\":{\"218\":1,\"262\":1}}],[\"手动确认的表示\",{\"1\":{\"217\":1}}],[\"手动抛出异常\",{\"1\":{\"122\":1}}],[\"参数类型\",{\"0\":{\"379\":1}}],[\"参数\",{\"1\":{\"217\":1}}],[\"每天中午12点执行任务\",{\"1\":{\"475\":1}}],[\"每秒执行一次fsync\",{\"1\":{\"315\":1}}],[\"每次写入都执行fsync\",{\"1\":{\"315\":1}}],[\"每次消费一个\",{\"1\":{\"217\":1}}],[\"每个队列都绑定了交换机\",{\"1\":{\"222\":1}}],[\"每个消费者有自己的队列\",{\"1\":{\"221\":1}}],[\"每页记录数\",{\"1\":{\"193\":1}}],[\"目前要求能者多劳\",{\"1\":{\"213\":1}}],[\"目录必须为空\",{\"1\":{\"424\":1}}],[\"目录列表\",{\"0\":{\"421\":1}}],[\"目录\",{\"0\":{\"5\":1},\"1\":{\"418\":1}}],[\"叫做循环\",{\"1\":{\"212\":1}}],[\"只导出表结构\",{\"1\":{\"546\":1}}],[\"只需建立连接\",{\"1\":{\"443\":1}}],[\"只是便于理解\",{\"1\":{\"348\":1}}],[\"只管保存\",{\"1\":{\"310\":1}}],[\"只能存入字符串\",{\"1\":{\"303\":1}}],[\"只不过topic\",{\"1\":{\"245\":1}}],[\"只有队列的routingkey与消息的routingkey完全一致\",{\"1\":{\"237\":1}}],[\"只有出现runtimeexception才回滚异常\",{\"1\":{\"120\":1}}],[\"只执行一次\",{\"1\":{\"209\":1}}],[\"实际上还有许多其他的命令可供使用\",{\"1\":{\"293\":1}}],[\"实际的文章内容\",{\"1\":{\"24\":1}}],[\"实现了客户端与服务器端的实时通信\",{\"1\":{\"440\":1}}],[\"实现\",{\"0\":{\"299\":1},\"1\":{\"440\":1}}],[\"实现自定义注解\",{\"0\":{\"399\":1}}],[\"实现自减\",{\"1\":{\"287\":1}}],[\"实现自增\",{\"1\":{\"287\":1}}],[\"实现工具类\",{\"0\":{\"208\":1}}],[\"消费同一个队列\",{\"1\":{\"212\":1}}],[\"消费时的回调接口\",{\"1\":{\"207\":1}}],[\"消费者\",{\"0\":{\"228\":1,\"240\":1,\"273\":1},\"1\":{\"207\":1}}],[\"消费消息\",{\"0\":{\"206\":1},\"1\":{\"207\":1,\"229\":1,\"241\":1,\"242\":1,\"252\":1}}],[\"消息\",{\"1\":{\"236\":1}}],[\"消息可能没有被消费者正确处理\",{\"1\":{\"203\":1}}],[\"消息被拿走后\",{\"1\":{\"203\":1}}],[\"消息队列\",{\"1\":{\"203\":1}}],[\"消息的消费者\",{\"1\":{\"203\":1}}],[\"消息产生者将消息放入队列\",{\"1\":{\"202\":1}}],[\"内存\",{\"1\":{\"538\":1}}],[\"内容\",{\"1\":{\"205\":1,\"350\":1,\"463\":1}}],[\"内置sql注入剥离器\",{\"1\":{\"84\":1}}],[\"内置全局拦截插件\",{\"1\":{\"84\":1}}],[\"内置性能分析插件\",{\"1\":{\"83\":1}}],[\"内置分页插件\",{\"1\":{\"83\":1}}],[\"内置代码生成器\",{\"1\":{\"83\":1}}],[\"队列与交换机绑定\",{\"1\":{\"235\":1}}],[\"队列中的消费者都可以拿到消息\",{\"1\":{\"225\":1}}],[\"队列是否持久化\",{\"1\":{\"205\":1,\"207\":1}}],[\"队列名称\",{\"1\":{\"205\":1,\"207\":1}}],[\"通行\",{\"1\":{\"406\":1}}],[\"通知类型\",{\"0\":{\"357\":1}}],[\"通配符即可\",{\"1\":{\"356\":1}}],[\"通常是每几秒或几分钟\",{\"1\":{\"308\":1}}],[\"通道绑定交换机\",{\"1\":{\"229\":1,\"241\":1,\"242\":1,\"252\":1}}],[\"通道绑定对应的消息队列\",{\"1\":{\"205\":1,\"207\":1}}],[\"通道名称\",{\"1\":{\"205\":1}}],[\"通过get方法停止任务\",{\"1\":{\"476\":1}}],[\"通过map查询\",{\"1\":{\"89\":1}}],[\"通过多个id进行查询\",{\"1\":{\"89\":1}}],[\"通过id查询信息\",{\"1\":{\"89\":1}}],[\"设置成粘贴模式\",{\"1\":{\"556\":1}}],[\"设置编码\",{\"1\":{\"554\":1}}],[\"设置那些请求归springmvc处理\",{\"1\":{\"369\":1}}],[\"设置位配置类\",{\"1\":{\"350\":1}}],[\"设置重写的基准值\",{\"1\":{\"315\":2}}],[\"设置序列化器\",{\"1\":{\"303\":1}}],[\"设置name\",{\"1\":{\"285\":1}}],[\"设置k\",{\"1\":{\"285\":1}}],[\"设置通道一次只能消费一个消息\",{\"1\":{\"214\":1}}],[\"设置用户名和密码\",{\"1\":{\"205\":1,\"207\":1,\"209\":1}}],[\"设置连接哪一个虚拟主机\",{\"1\":{\"205\":1,\"207\":1,\"209\":1}}],[\"设置连接mq主机\",{\"1\":{\"205\":1,\"207\":1,\"209\":1}}],[\"端口号\",{\"1\":{\"205\":1,\"207\":1,\"209\":1}}],[\"中安装\",{\"1\":{\"532\":1}}],[\"中间有一个过度的服务器\",{\"1\":{\"203\":1}}],[\"中设置页面信息\",{\"1\":{\"32\":1}}],[\"聊天\",{\"1\":{\"203\":1}}],[\"应用场景\",{\"1\":{\"203\":1,\"439\":1}}],[\"造成消息的丢失\",{\"1\":{\"203\":1}}],[\"已经从队列中消失了\",{\"1\":{\"203\":1}}],[\"监听\",{\"1\":{\"203\":1}}],[\"学习地址\",{\"1\":{\"199\":1}}],[\"学习与记录\",{\"0\":{\"4\":1}}],[\"博客园\",{\"1\":{\"199\":1}}],[\"逊老头\",{\"1\":{\"199\":1}}],[\"函数\",{\"0\":{\"195\":1}}],[\"04创建一个容器\",{\"1\":{\"538\":1}}],[\"04从本地文件ubuntu\",{\"1\":{\"536\":1}}],[\"04导出到本地文件ubuntu\",{\"1\":{\"536\":1}}],[\"04\",{\"1\":{\"532\":1,\"536\":9,\"538\":2}}],[\"0<\",{\"1\":{\"507\":1}}],[\"09\",{\"1\":{\"380\":1}}],[\"02\",{\"1\":{\"362\":1}}],[\"01\",{\"1\":{\"320\":1}}],[\"0\",{\"0\":{\"474\":2},\"1\":{\"194\":1,\"205\":2,\"207\":2,\"209\":2,\"255\":2,\"257\":1,\"287\":1,\"289\":2,\"295\":1,\"360\":1,\"365\":1,\"435\":1,\"475\":2,\"487\":1,\"496\":6,\"502\":1,\"507\":1,\"508\":1,\"540\":1,\"556\":1,\"558\":6}}],[\"起始索引从0开始\",{\"1\":{\"193\":1}}],[\"起始索引\",{\"1\":{\"192\":1,\"193\":1}}],[\"起别名\",{\"1\":{\"145\":1}}],[\"多个单词之间以\",{\"1\":{\"245\":1}}],[\"多字段排序\",{\"1\":{\"189\":1}}],[\"多选一\",{\"1\":{\"163\":1}}],[\"降序\",{\"1\":{\"188\":1}}],[\"默认使用的是rdb方式持久化\",{\"1\":{\"315\":1}}],[\"默认情况下的模板只能支持\",{\"1\":{\"303\":1}}],[\"默认队列持久化\",{\"1\":{\"259\":1}}],[\"默认会平均分配内容\",{\"1\":{\"212\":1}}],[\"默认\",{\"1\":{\"187\":1,\"582\":1}}],[\"默认形况下\",{\"1\":{\"120\":1}}],[\"升序\",{\"1\":{\"187\":1}}],[\"|\",{\"1\":{\"180\":1,\"209\":1,\"247\":1,\"252\":2}}],[\"||\",{\"1\":{\"170\":1}}],[\"聚合函数\",{\"0\":{\"174\":1}}],[\"聚合查询\",{\"1\":{\"143\":1}}],[\"非常方便\",{\"1\":{\"570\":1}}],[\"非独占\",{\"1\":{\"259\":1}}],[\"非\",{\"1\":{\"173\":1}}],[\"或\",{\"1\":{\"168\":1,\"172\":1,\"536\":1,\"538\":1,\"556\":7}}],[\"或者\",{\"1\":{\"146\":1,\"171\":1,\"333\":1}}],[\"为例\",{\"1\":{\"420\":1}}],[\"为属性赋值\",{\"1\":{\"392\":1}}],[\"为了避免每次使用docker命令都需要加上sudo权限\",{\"1\":{\"531\":1}}],[\"为了更有效地使用内存\",{\"1\":{\"297\":1}}],[\"为了一直消费信息\",{\"1\":{\"207\":1}}],[\"为空\",{\"1\":{\"167\":1}}],[\"为简化开发\",{\"1\":{\"77\":1}}],[\"任务\",{\"0\":{\"260\":1}}],[\"任务模型\",{\"0\":{\"210\":1}}],[\"任意个字符\",{\"1\":{\"165\":1}}],[\"任何异常都回滚\",{\"1\":{\"121\":1}}],[\"模拟实现\",{\"1\":{\"440\":1}}],[\"模拟执行的漫\",{\"1\":{\"217\":1}}],[\"模拟事务回滚\",{\"1\":{\"122\":1}}],[\"模糊匹配\",{\"1\":{\"165\":1}}],[\"占位符\",{\"1\":{\"164\":1}}],[\"某个范围之内\",{\"1\":{\"161\":1}}],[\"功能键\",{\"1\":{\"556\":2}}],[\"功能\",{\"1\":{\"152\":1}}],[\"比较运算符\",{\"1\":{\"151\":1}}],[\"别名登录\",{\"1\":{\"558\":1}}],[\"别名\",{\"1\":{\"149\":1,\"558\":1}}],[\"去重\",{\"1\":{\"149\":1}}],[\"姓名\",{\"1\":{\"146\":2}}],[\"条件查询\",{\"0\":{\"150\":1},\"1\":{\"143\":1}}],[\"条件列表\",{\"1\":{\"142\":1}}],[\"条件\",{\"1\":{\"136\":1,\"139\":1}}],[\"给全部字段添加值\",{\"1\":{\"133\":1}}],[\"给指定字段批量添加值\",{\"1\":{\"131\":1}}],[\"给指定字段添加值\",{\"1\":{\"129\":1}}],[\"值2\",{\"1\":{\"130\":1,\"132\":6,\"134\":1}}],[\"值1\",{\"1\":{\"130\":1,\"132\":6,\"134\":1}}],[\"字段列表\",{\"1\":{\"142\":1}}],[\"字段2=值2\",{\"1\":{\"136\":1}}],[\"字段2\",{\"1\":{\"130\":1,\"132\":1}}],[\"字段1=值1\",{\"1\":{\"136\":1}}],[\"字段1\",{\"1\":{\"130\":1,\"132\":1}}],[\"使得锁的使用变得简单\",{\"1\":{\"491\":1}}],[\"使数据占用的空间更小\",{\"1\":{\"297\":1}}],[\"使事务回滚\",{\"1\":{\"122\":1}}],[\"使用坐标主动排除掉\",{\"1\":{\"575\":1}}],[\"使用已创建的数据库\",{\"1\":{\"554\":1}}],[\"使用sources命令导入\",{\"1\":{\"553\":1}}],[\"使用mysql命令导入\",{\"1\":{\"551\":1}}],[\"使用mapper继承basemapper<t>即可开箱即用\",{\"1\":{\"88\":1}}],[\"使用cron表达式指定执行时间\",{\"0\":{\"474\":1}}],[\"使用ram用户访问密钥发起请求\",{\"1\":{\"418\":1}}],[\"使用ram访问\",{\"0\":{\"415\":1}}],[\"使用场景\",{\"1\":{\"392\":1}}],[\"使用\",{\"0\":{\"401\":1},\"1\":{\"107\":1,\"356\":1,\"471\":1,\"503\":1,\"517\":1}}],[\"使用指南\",{\"1\":{\"35\":1,\"36\":1},\"2\":{\"1\":1,\"7\":1,\"21\":1,\"27\":1,\"56\":1,\"57\":1,\"73\":1,\"123\":1,\"196\":1,\"275\":1,\"316\":1,\"411\":1,\"425\":1,\"509\":1,\"526\":1,\"559\":1,\"594\":1}}],[\"抛出运行时异常\",{\"1\":{\"122\":1}}],[\"并将该字符串替换为word2\",{\"1\":{\"556\":1}}],[\"并将镜像命名为image\",{\"1\":{\"538\":1}}],[\"并将结果存储到新的有序集合中\",{\"1\":{\"295\":2}}],[\"并提供了api接口\",{\"1\":{\"491\":1}}],[\"并且传递的依赖是没有数量和层级的限制的\",{\"1\":{\"570\":1}}],[\"并且切换过去\",{\"1\":{\"515\":1}}],[\"并且\",{\"1\":{\"169\":1}}],[\"并打印异常信息\",{\"1\":{\"122\":1}}],[\"并发控制\",{\"1\":{\"117\":1}}],[\"捕获异常\",{\"1\":{\"122\":1}}],[\"r\",{\"1\":{\"556\":1,\"558\":1}}],[\"rsa\",{\"1\":{\"525\":1}}],[\"rmi\",{\"1\":{\"536\":1}}],[\"rm\",{\"1\":{\"523\":2,\"525\":1,\"536\":1,\"538\":1}}],[\"rlock\",{\"1\":{\"504\":1}}],[\"run\",{\"1\":{\"477\":1,\"538\":1,\"540\":1}}],[\"runnable\",{\"1\":{\"477\":1}}],[\"runtime\",{\"1\":{\"394\":1,\"591\":1}}],[\"runtimeexception\",{\"1\":{\"122\":2,\"434\":1}}],[\"randomuuid\",{\"1\":{\"434\":1,\"496\":1}}],[\"ram用户\",{\"1\":{\"417\":1}}],[\"rabbithandler\",{\"1\":{\"259\":1}}],[\"rabbitlistener\",{\"1\":{\"259\":1,\"261\":2,\"263\":2,\"265\":2,\"267\":2,\"274\":1}}],[\"rabbittemplate\",{\"1\":{\"257\":7,\"272\":4}}],[\"rabbit\",{\"1\":{\"205\":1}}],[\"rabbitmqtest\",{\"1\":{\"257\":1}}],[\"rabbitmqconnection\",{\"1\":{\"209\":1,\"217\":1,\"227\":1,\"229\":1,\"239\":1,\"241\":1,\"242\":1,\"251\":1,\"252\":1}}],[\"rabbitmq\",{\"0\":{\"198\":1},\"1\":{\"255\":1,\"259\":1}}],[\"rdb\",{\"0\":{\"307\":1},\"1\":{\"308\":2,\"311\":1,\"312\":1}}],[\"rpop\",{\"1\":{\"289\":1}}],[\"round\",{\"1\":{\"358\":1,\"360\":1}}],[\"routing\",{\"1\":{\"270\":2,\"272\":2}}],[\"routingkey\",{\"1\":{\"239\":2,\"241\":1,\"242\":1,\"251\":2,\"252\":1}}],[\"route2\",{\"1\":{\"265\":1}}],[\"route1\",{\"1\":{\"265\":1}}],[\"routeconsumer\",{\"1\":{\"265\":1}}],[\"route\",{\"1\":{\"257\":1}}],[\"rollbackfor\",{\"1\":{\"121\":1,\"122\":1}}],[\"rollbackfor属性用于控制出现何种异常类型\",{\"1\":{\"120\":1}}],[\"repositories\",{\"1\":{\"565\":1}}],[\"repository\",{\"1\":{\"349\":1}}],[\"rename\",{\"1\":{\"538\":1}}],[\"remote\",{\"1\":{\"525\":5}}],[\"remove\",{\"1\":{\"523\":1}}],[\"reflog\",{\"1\":{\"521\":1}}],[\"ref=\",{\"1\":{\"338\":1,\"487\":1}}],[\"regasdgsdgister\",{\"1\":{\"496\":1}}],[\"registry\",{\"1\":{\"398\":3,\"408\":3,\"430\":2}}],[\"register\",{\"1\":{\"369\":1}}],[\"readasdataurl\",{\"1\":{\"487\":1}}],[\"reader\",{\"1\":{\"487\":4}}],[\"readme\",{\"1\":{\"465\":1}}],[\"realpath\",{\"1\":{\"434\":3}}],[\"reason\",{\"1\":{\"422\":1,\"424\":1}}],[\"req\",{\"1\":{\"434\":5}}],[\"requesthandlerselectors\",{\"1\":{\"508\":1}}],[\"request\",{\"1\":{\"396\":3,\"404\":1,\"406\":3,\"422\":2,\"424\":2,\"435\":1}}],[\"requestmethod\",{\"1\":{\"387\":2,\"389\":1}}],[\"requestmapping\",{\"1\":{\"367\":1,\"374\":1,\"376\":1,\"383\":2,\"387\":2,\"389\":2}}],[\"requestparam\",{\"1\":{\"381\":2,\"389\":1,\"402\":1}}],[\"rejected\",{\"1\":{\"422\":1,\"424\":1}}],[\"retentionpolicy\",{\"1\":{\"394\":1}}],[\"retention\",{\"1\":{\"394\":1}}],[\"ret\",{\"1\":{\"360\":2}}],[\"return\",{\"1\":{\"106\":1,\"108\":1,\"209\":1,\"270\":4,\"272\":1,\"303\":1,\"360\":1,\"367\":1,\"369\":3,\"374\":1,\"376\":1,\"381\":1,\"383\":2,\"396\":1,\"400\":2,\"402\":1,\"406\":1,\"420\":1,\"422\":2,\"424\":2,\"434\":1,\"463\":1,\"473\":1,\"477\":1,\"484\":4,\"486\":1,\"496\":7,\"502\":1,\"504\":1,\"508\":2}}],[\"rewrite\",{\"1\":{\"315\":3}}],[\"red对应id\",{\"1\":{\"338\":1}}],[\"redsi\",{\"0\":{\"284\":1}}],[\"redissonclient\",{\"1\":{\"502\":1,\"504\":3}}],[\"redissonconfig\",{\"1\":{\"501\":1,\"502\":1}}],[\"redisson<\",{\"1\":{\"500\":1}}],[\"redisson学习地址\",{\"1\":{\"498\":1}}],[\"redisson\",{\"0\":{\"497\":1},\"1\":{\"500\":1,\"502\":2}}],[\"redisson分布式锁使用redlock算法避免了死锁的问题\",{\"1\":{\"494\":1}}],[\"redisson分布式锁内部封装了锁的自动续期机制\",{\"1\":{\"493\":1}}],[\"redisson分布式锁内部封装了redis的单线程模型\",{\"1\":{\"492\":1}}],[\"redisson分布式锁封装了锁逻辑\",{\"1\":{\"491\":1}}],[\"redis分布式锁\",{\"0\":{\"495\":1}}],[\"redis分布式锁在高并发场景下可能存在死锁的问题\",{\"1\":{\"494\":1}}],[\"redis分布式锁在锁定后需要手动维护锁的超时时间\",{\"1\":{\"493\":1}}],[\"redis分布式锁在进行锁定和解锁操作时\",{\"1\":{\"492\":1}}],[\"redis分布式锁需要手动编写锁逻辑代码\",{\"1\":{\"491\":1}}],[\"redis分布式锁是基于redis的setnx命令实现的\",{\"1\":{\"490\":1}}],[\"redis分布式锁和redisson分布式锁都是用于实现分布式系统中的分布式锁\",{\"0\":{\"489\":1}}],[\"redisconnectionfactory\",{\"1\":{\"303\":1}}],[\"redisconfig\",{\"1\":{\"302\":1,\"303\":1}}],[\"redistemplate\",{\"1\":{\"303\":3,\"305\":4}}],[\"redistemplate<string\",{\"1\":{\"303\":3}}],[\"redis默认使用的序列化格式\",{\"1\":{\"298\":1}}],[\"redis支持多种序列化格式\",{\"1\":{\"298\":1}}],[\"redis是一种内存数据库\",{\"1\":{\"297\":1}}],[\"redis详细解释\",{\"1\":{\"278\":1}}],[\"redis\",{\"0\":{\"277\":1},\"1\":{\"280\":2,\"308\":2,\"310\":1,\"314\":2,\"502\":1}}],[\"recrive\",{\"1\":{\"259\":1}}],[\"records\",{\"1\":{\"108\":1}}],[\"recordmapper\",{\"1\":{\"108\":2}}],[\"recordipage\",{\"1\":{\"108\":2}}],[\"reset\",{\"1\":{\"521\":2}}],[\"resids\",{\"1\":{\"463\":2}}],[\"result\",{\"1\":{\"402\":1,\"487\":1,\"496\":7,\"504\":2}}],[\"resulttype=\",{\"1\":{\"68\":1,\"70\":1,\"72\":1}}],[\"resolve\",{\"1\":{\"435\":1}}],[\"resolveargument\",{\"1\":{\"400\":1}}],[\"resourcehandlerregistry\",{\"1\":{\"430\":1}}],[\"resources\",{\"1\":{\"429\":1}}],[\"resource\",{\"1\":{\"272\":1}}],[\"restart\",{\"1\":{\"538\":1}}],[\"restcontroller\",{\"1\":{\"389\":1,\"434\":1,\"477\":1,\"486\":1}}],[\"restful快速开发\",{\"1\":{\"386\":1}}],[\"rest风格\",{\"0\":{\"384\":1}}],[\"response\",{\"1\":{\"396\":1,\"404\":1,\"406\":3,\"422\":1,\"424\":1}}],[\"responsebody\",{\"1\":{\"367\":1,\"374\":1,\"376\":1,\"381\":1,\"383\":1,\"387\":2,\"389\":3}}],[\"resp\",{\"1\":{\"108\":4}}],[\"res\",{\"1\":{\"89\":4,\"463\":2,\"496\":2}}],[\"是\",{\"1\":{\"308\":1,\"314\":1,\"440\":2}}],[\"是否延迟解析\",{\"1\":{\"435\":1}}],[\"是否开启上传\",{\"1\":{\"435\":1}}],[\"是否开启多个消息同时确认\",{\"1\":{\"217\":1}}],[\"是否以append\",{\"1\":{\"315\":1}}],[\"是否消费结束后自动删除\",{\"1\":{\"205\":1,\"207\":1}}],[\"是否独占队列\",{\"1\":{\"205\":1,\"207\":1}}],[\"是保证数据库安全和稳定运行的基本手段\",{\"1\":{\"119\":1}}],[\"是一个\",{\"1\":{\"77\":1}}],[\"完整性和一致性非常重要\",{\"1\":{\"119\":1}}],[\"将全文代码格式化\",{\"1\":{\"556\":1}}],[\"将全文的word1替换为word2\",{\"1\":{\"556\":2}}],[\"将选中的文本整体向左缩进一次\",{\"1\":{\"556\":1}}],[\"将选中的文本整体向右缩进一次\",{\"1\":{\"556\":1}}],[\"将复制的数据在光标的下一行\",{\"1\":{\"556\":1}}],[\"将本地文件xxx\",{\"1\":{\"538\":1}}],[\"将本地内容推送到远程仓库\",{\"1\":{\"525\":2}}],[\"将容器container导出到本地文件xxx\",{\"1\":{\"538\":1}}],[\"将镜像ubuntu\",{\"1\":{\"536\":2}}],[\"将当前用户添加到docker用户组\",{\"0\":{\"530\":1}}],[\"将功能增强\",{\"1\":{\"352\":1}}],[\"将name移入到数据库1中\",{\"1\":{\"285\":1}}],[\"将通道声明到交换机\",{\"1\":{\"227\":1}}],[\"将所有操作合并到一个事务中可以减少i\",{\"1\":{\"118\":1}}],[\"将数据回滚至操作之前的状态\",{\"1\":{\"116\":1}}],[\"错误回滚\",{\"1\":{\"116\":1}}],[\"防止数据冲突和数据丢失等问题\",{\"1\":{\"115\":1}}],[\"要么全部失败回滚\",{\"1\":{\"115\":1}}],[\"要么全部执行成功\",{\"1\":{\"115\":1}}],[\"事务对于确保数据的正确性\",{\"1\":{\"119\":1}}],[\"事务会自动将所有操作撤消\",{\"1\":{\"116\":1}}],[\"事务可以优化数据库操作的性能\",{\"1\":{\"118\":1}}],[\"事务可以通过锁机制来控制这些操作的执行顺序\",{\"1\":{\"117\":1}}],[\"事务可以解决数据库并发访问的问题\",{\"1\":{\"117\":1}}],[\"事务可以在发生错误或异常时回滚到之前的状态\",{\"1\":{\"116\":1}}],[\"事务可以确保数据的一致性\",{\"1\":{\"115\":1}}],[\"事务可以确保多个操作在一个逻辑单元中执行\",{\"1\":{\"115\":1}}],[\"事务主要的作用体现在以下几个方面\",{\"1\":{\"114\":1}}],[\"事务\",{\"0\":{\"112\":1}}],[\"l\",{\"1\":{\"556\":1}}],[\"lts\",{\"1\":{\"532\":1}}],[\"ltrim\",{\"1\":{\"289\":1}}],[\"ls\",{\"1\":{\"525\":1}}],[\"lset\",{\"1\":{\"289\":1}}],[\"load会保存完整记录\",{\"1\":{\"538\":1}}],[\"load的区别\",{\"1\":{\"538\":1}}],[\"load\",{\"1\":{\"536\":1}}],[\"log\",{\"1\":{\"521\":2}}],[\"local\",{\"1\":{\"545\":1}}],[\"localhost\",{\"1\":{\"502\":1}}],[\"location\",{\"1\":{\"435\":1}}],[\"locations\",{\"1\":{\"429\":1}}],[\"lock\",{\"1\":{\"496\":1,\"504\":4}}],[\"lesson\",{\"1\":{\"540\":1}}],[\"learngit\",{\"1\":{\"517\":2}}],[\"length\",{\"1\":{\"463\":3,\"496\":3}}],[\"lazily\",{\"1\":{\"435\":1}}],[\"lastindexof\",{\"1\":{\"434\":1}}],[\"lastsave\",{\"1\":{\"310\":1}}],[\"lambdaupdatewrapper<>\",{\"1\":{\"111\":1}}],[\"lambdaupdatewrapper<article>\",{\"1\":{\"111\":1}}],[\"lrem\",{\"1\":{\"289\":1}}],[\"lrange\",{\"1\":{\"289\":1}}],[\"llen\",{\"1\":{\"289\":1}}],[\"lpop\",{\"1\":{\"289\":1}}],[\"lpush\",{\"1\":{\"289\":1}}],[\"liming\",{\"1\":{\"305\":1}}],[\"limit\",{\"1\":{\"142\":1,\"143\":1,\"192\":1,\"194\":2}}],[\"lindex\",{\"1\":{\"289\":1}}],[\"linux\",{\"0\":{\"528\":1},\"1\":{\"6\":1}}],[\"listobjects\",{\"1\":{\"418\":1,\"422\":1}}],[\"list\",{\"0\":{\"288\":1},\"1\":{\"89\":4,\"108\":2,\"289\":8,\"344\":1,\"381\":1,\"402\":3,\"420\":1,\"422\":4,\"424\":1}}],[\"list<web>\",{\"1\":{\"496\":1}}],[\"list<objecterror>\",{\"1\":{\"486\":1}}],[\"list<object>\",{\"1\":{\"86\":1}}],[\"list<ossobjectsummary>\",{\"1\":{\"422\":1}}],[\"list<handlermethodargumentresolver>\",{\"1\":{\"398\":1}}],[\"list<string>\",{\"1\":{\"381\":1,\"486\":1}}],[\"list<record>\",{\"1\":{\"108\":1}}],[\"list<user>\",{\"1\":{\"89\":3}}],[\"list<integer>\",{\"1\":{\"89\":2}}],[\"list<map<string\",{\"1\":{\"86\":1}}],[\"list<t>\",{\"1\":{\"86\":3}}],[\"like\",{\"1\":{\"68\":2,\"70\":2,\"72\":2,\"164\":1}}],[\"+1\",{\"1\":{\"504\":1}}],[\"+999999\",{\"1\":{\"496\":1}}],[\"+\",{\"1\":{\"110\":1,\"111\":2,\"207\":1,\"217\":1,\"229\":1,\"241\":1,\"242\":1,\"252\":1,\"259\":1,\"261\":2,\"263\":2,\"265\":2,\"267\":2,\"274\":1,\"376\":1,\"381\":1,\"389\":1,\"422\":6,\"424\":5,\"434\":9,\"465\":1,\"486\":1,\"496\":4,\"556\":2}}],[\"gc\",{\"1\":{\"556\":1}}],[\"gg=g\",{\"1\":{\"556\":1}}],[\"gg\",{\"1\":{\"556\":1}}],[\"global\",{\"1\":{\"513\":2}}],[\"globalinterceptor\",{\"1\":{\"396\":1,\"398\":1}}],[\"gitskills\",{\"1\":{\"525\":1}}],[\"github\",{\"1\":{\"525\":2}}],[\"git文件\",{\"1\":{\"517\":1}}],[\"git安装后\",{\"0\":{\"512\":1}}],[\"git\",{\"1\":{\"496\":2,\"513\":2,\"515\":8,\"517\":1,\"519\":3,\"521\":7,\"523\":3,\"525\":12}}],[\"g\",{\"1\":{\"252\":1,\"556\":3}}],[\"gash\",{\"1\":{\"257\":1}}],[\"gas\",{\"1\":{\"252\":2}}],[\"gag\",{\"1\":{\"252\":1}}],[\"group\",{\"1\":{\"142\":1,\"143\":1,\"185\":1}}],[\"groupid>\",{\"1\":{\"61\":1,\"254\":1,\"327\":1,\"365\":2,\"432\":1,\"437\":1,\"461\":1,\"480\":1,\"500\":1,\"507\":1,\"573\":1,\"576\":3}}],[\"getviews\",{\"1\":{\"504\":1}}],[\"getlock\",{\"1\":{\"504\":1}}],[\"getlist\",{\"1\":{\"420\":1,\"422\":1,\"424\":1}}],[\"getdefaultmessage\",{\"1\":{\"486\":3}}],[\"getdeliverytag\",{\"1\":{\"217\":1}}],[\"getemail\",{\"1\":{\"484\":1}}],[\"geterrorcode\",{\"1\":{\"422\":1,\"424\":1}}],[\"geterrormessage\",{\"1\":{\"422\":1,\"424\":1}}],[\"getname\",{\"1\":{\"463\":1,\"484\":1}}],[\"getnativerequest\",{\"1\":{\"400\":1}}],[\"gethostid\",{\"1\":{\"422\":1,\"424\":1}}],[\"getheader\",{\"1\":{\"396\":1}}],[\"getkey\",{\"1\":{\"422\":2}}],[\"getobjectsummaries\",{\"1\":{\"422\":1}}],[\"getoriginalfilename\",{\"1\":{\"420\":1,\"434\":1}}],[\"getinputstream\",{\"1\":{\"420\":1}}],[\"getid\",{\"1\":{\"111\":1}}],[\"getallerrors\",{\"1\":{\"486\":1}}],[\"getage\",{\"1\":{\"484\":1}}],[\"getaddress\",{\"1\":{\"484\":1}}],[\"getattribute\",{\"1\":{\"400\":1}}],[\"getargs\",{\"1\":{\"360\":1}}],[\"getparameterannotation\",{\"1\":{\"400\":1}}],[\"getscheme\",{\"1\":{\"434\":1}}],[\"getsubject\",{\"1\":{\"396\":1}}],[\"getserverport\",{\"1\":{\"434\":1}}],[\"getservername\",{\"1\":{\"434\":1}}],[\"getservletcontext\",{\"1\":{\"434\":1}}],[\"getservletmappings\",{\"1\":{\"369\":1}}],[\"getsession\",{\"1\":{\"396\":1,\"400\":1,\"434\":1}}],[\"getset\",{\"1\":{\"287\":1}}],[\"getmapping\",{\"1\":{\"389\":1,\"477\":1}}],[\"getmessageproperties\",{\"1\":{\"272\":1}}],[\"getmessage\",{\"1\":{\"207\":1}}],[\"getbean\",{\"1\":{\"331\":1}}],[\"getbytes\",{\"1\":{\"205\":1,\"227\":1,\"239\":1,\"251\":1,\"272\":1}}],[\"getrealpath\",{\"1\":{\"434\":1}}],[\"getrequestid\",{\"1\":{\"422\":1,\"424\":1}}],[\"getrecords\",{\"1\":{\"108\":1}}],[\"getrange\",{\"1\":{\"287\":1}}],[\"get\",{\"0\":{\"372\":1},\"1\":{\"285\":1,\"305\":1,\"385\":1,\"387\":3,\"389\":5,\"402\":2,\"496\":1}}],[\"getqueue\",{\"1\":{\"229\":1,\"241\":1,\"242\":1,\"252\":1}}],[\"getconnection\",{\"1\":{\"209\":1,\"217\":1,\"227\":1,\"229\":1,\"239\":1,\"241\":1,\"242\":1,\"251\":1,\"252\":1}}],[\"j\",{\"1\":{\"556\":1}}],[\"jwt\",{\"1\":{\"496\":2}}],[\"jwtutil\",{\"1\":{\"396\":1,\"496\":1}}],[\"jpg\",{\"1\":{\"465\":1}}],[\"jackson2jsonredisserializer\",{\"1\":{\"303\":6}}],[\"javamailsender\",{\"1\":{\"463\":7}}],[\"javax\",{\"1\":{\"459\":1}}],[\"java上传文件概述和文件下载\",{\"0\":{\"414\":1}}],[\"java\",{\"1\":{\"300\":1,\"302\":1,\"330\":1,\"336\":1,\"369\":2}}],[\"jsp\",{\"1\":{\"383\":3}}],[\"jsp页面\",{\"1\":{\"383\":1}}],[\"json数据传递参数\",{\"1\":{\"380\":1}}],[\"jsonautodetect\",{\"1\":{\"303\":1}}],[\"json和messagepack是常用的序列化格式\",{\"1\":{\"298\":1}}],[\"json\",{\"1\":{\"298\":1,\"381\":1}}],[\"jsonobject\",{\"1\":{\"108\":3}}],[\"js\",{\"1\":{\"251\":1}}],[\"jkl\",{\"1\":{\"89\":1}}],[\"d\",{\"1\":{\"515\":2,\"547\":1,\"549\":1,\"556\":1}}],[\"dotask\",{\"1\":{\"475\":1}}],[\"documentationtype\",{\"1\":{\"508\":1}}],[\"documented\",{\"1\":{\"394\":1}}],[\"docker\",{\"0\":{\"529\":1},\"1\":{\"532\":2,\"533\":1,\"536\":7,\"538\":19,\"540\":3}}],[\"docker安装rabbitmq详细步骤\",{\"1\":{\"199\":1}}],[\"docket\",{\"1\":{\"508\":2}}],[\"dd\",{\"1\":{\"434\":1,\"556\":1}}],[\"daisy\",{\"1\":{\"525\":2}}],[\"date\",{\"1\":{\"434\":1,\"496\":2}}],[\"data\",{\"1\":{\"433\":1}}],[\"databases\",{\"1\":{\"554\":1}}],[\"database\",{\"1\":{\"308\":1}}],[\"dao\",{\"1\":{\"329\":1,\"336\":1,\"338\":1,\"340\":2,\"344\":1,\"354\":1,\"356\":1,\"358\":1,\"360\":1}}],[\"dump\",{\"1\":{\"311\":1,\"312\":1}}],[\"div>\",{\"1\":{\"487\":1}}],[\"disposablebean\",{\"1\":{\"333\":1}}],[\"distinct\",{\"1\":{\"148\":1,\"149\":1}}],[\"direct\",{\"1\":{\"239\":3,\"241\":5,\"242\":3,\"251\":1,\"257\":3,\"265\":4,\"270\":1}}],[\"direct类型的exchange\",{\"1\":{\"234\":1}}],[\"dbtype\",{\"1\":{\"106\":1}}],[\"debug\",{\"1\":{\"459\":1}}],[\"devtools<\",{\"1\":{\"437\":1}}],[\"destroy\",{\"1\":{\"333\":1}}],[\"destory\",{\"1\":{\"333\":3}}],[\"desc\",{\"1\":{\"188\":1,\"190\":1}}],[\"description\",{\"1\":{\"91\":1,\"103\":1,\"232\":1,\"244\":1,\"508\":1}}],[\"default\",{\"1\":{\"459\":1,\"487\":1}}],[\"defaulttyping\",{\"1\":{\"303\":1}}],[\"defaultconsumer\",{\"1\":{\"207\":1,\"217\":1,\"229\":1,\"241\":1,\"242\":1,\"252\":1}}],[\"decimalmax\",{\"1\":{\"484\":1}}],[\"decimalmin\",{\"1\":{\"484\":1}}],[\"dectby\",{\"1\":{\"287\":1}}],[\"decr\",{\"1\":{\"287\":1}}],[\"dependencies>\",{\"1\":{\"365\":1}}],[\"dependency>\",{\"1\":{\"61\":1,\"254\":1,\"327\":1,\"365\":2,\"432\":1,\"437\":1,\"461\":1,\"480\":1,\"500\":1,\"507\":1,\"573\":1,\"576\":2}}],[\"deplyconsumer\",{\"1\":{\"274\":1}}],[\"deplyproducer\",{\"1\":{\"272\":1}}],[\"deplybinding\",{\"1\":{\"270\":1}}],[\"delaytime\",{\"1\":{\"272\":3}}],[\"delayqueue\",{\"1\":{\"270\":2}}],[\"delayed\",{\"1\":{\"270\":2}}],[\"delayexchange\",{\"1\":{\"270\":2}}],[\"delay\",{\"1\":{\"270\":3}}],[\"deleteobject\",{\"1\":{\"418\":1,\"424\":2}}],[\"deletebatchids\",{\"1\":{\"86\":1,\"89\":1}}],[\"deletebymap\",{\"1\":{\"86\":1,\"89\":1}}],[\"deletebyid\",{\"1\":{\"86\":1,\"89\":1}}],[\"delete\",{\"0\":{\"138\":1},\"1\":{\"86\":1,\"89\":2,\"139\":1,\"140\":1,\"387\":1,\"496\":1}}],[\"dead\",{\"1\":{\"270\":6,\"272\":4,\"274\":1}}],[\"分布式锁\",{\"0\":{\"488\":1}}],[\"分割\",{\"1\":{\"245\":1}}],[\"分组后的列只有待分组的字段和聚合函数\",{\"1\":{\"183\":1}}],[\"分组后条件列表\",{\"1\":{\"142\":1}}],[\"分组查询\",{\"0\":{\"182\":1},\"1\":{\"143\":1}}],[\"分组字段列表\",{\"1\":{\"142\":1}}],[\"分页查询\",{\"0\":{\"191\":1},\"1\":{\"143\":1}}],[\"分页\",{\"0\":{\"104\":1},\"1\":{\"142\":1}}],[\"分类为\",{\"1\":{\"35\":1}}],[\"返回路径\",{\"1\":{\"434\":1}}],[\"返回所有的链接\",{\"1\":{\"422\":1}}],[\"返回一个串\",{\"1\":{\"383\":1}}],[\"返回值\",{\"1\":{\"389\":1}}],[\"返回值类型\",{\"1\":{\"367\":1}}],[\"返回值为null\",{\"1\":{\"100\":1}}],[\"返回对象必须是object\",{\"1\":{\"358\":1}}],[\"返回有序集合中元素的数量\",{\"1\":{\"295\":1}}],[\"返回有序集合中指定元素的排名\",{\"1\":{\"295\":1}}],[\"返回有序集合中指定分数范围的元素数量\",{\"1\":{\"295\":1}}],[\"返回有序集合中指定分数范围的元素\",{\"1\":{\"295\":1}}],[\"返回有序集合中指定范围的元素\",{\"1\":{\"295\":1}}],[\"返回多个集合的交集\",{\"1\":{\"291\":1}}],[\"返回多个集合的差集\",{\"1\":{\"291\":1}}],[\"返回多个集合的并集\",{\"1\":{\"291\":1}}],[\"返回集合中元素的数量\",{\"1\":{\"291\":1}}],[\"返回集合中所有元素\",{\"1\":{\"291\":1}}],[\"返回顶部按钮\",{\"1\":{\"20\":1,\"54\":1}}],[\"映射\",{\"1\":{\"98\":1}}],[\"赋值\",{\"1\":{\"96\":1}}],[\"雪花算法\",{\"1\":{\"96\":1}}],[\"自启动\",{\"1\":{\"476\":1}}],[\"自定义注解为属性赋值\",{\"0\":{\"391\":1}}],[\"自定义它们\",{\"1\":{\"55\":1}}],[\"自动装配\",{\"1\":{\"350\":1}}],[\"自动装配到spring的bean\",{\"1\":{\"350\":1}}],[\"自动生成的快照文件\",{\"1\":{\"308\":1}}],[\"自动从队列中删除\",{\"1\":{\"203\":1}}],[\"自增\",{\"1\":{\"95\":1}}],[\"注意sql的路径\",{\"1\":{\"554\":1}}],[\"注解开发\",{\"0\":{\"345\":1}}],[\"注解说明\",{\"0\":{\"92\":1,\"388\":1}}],[\"注入\",{\"1\":{\"341\":1}}],[\"注释之前的内容被视为文章摘要\",{\"1\":{\"30\":1}}],[\"39\",{\"1\":{\"556\":1}}],[\"38\",{\"1\":{\"556\":1}}],[\"37\",{\"1\":{\"556\":1}}],[\"36\",{\"1\":{\"556\":1}}],[\"35\",{\"1\":{\"556\":1}}],[\"34\",{\"1\":{\"556\":1}}],[\"33\",{\"1\":{\"556\":1}}],[\"32\",{\"1\":{\"556\":1}}],[\"31\",{\"1\":{\"556\":1}}],[\"30\",{\"1\":{\"556\":1}}],[\"3\",{\"0\":{\"397\":1},\"1\":{\"89\":1,\"287\":1,\"327\":1,\"331\":1,\"365\":1,\"519\":1,\"556\":1,\"576\":1}}],[\"不想使用其中的某个依赖\",{\"1\":{\"575\":1}}],[\"不改变原始设计\",{\"1\":{\"352\":1}}],[\"不执行fsync\",{\"1\":{\"315\":1}}],[\"不是autodelete\",{\"1\":{\"259\":1}}],[\"不是数据库中字段\",{\"1\":{\"99\":1}}],[\"不再是任意绑定了\",{\"1\":{\"235\":1}}],[\"不关闭\",{\"1\":{\"207\":1}}],[\"不参与计算\",{\"1\":{\"175\":1}}],[\"不等于\",{\"1\":{\"159\":1}}],[\"不重复\",{\"1\":{\"147\":1}}],[\"不写条件\",{\"1\":{\"137\":1}}],[\"不管如何都会回滚\",{\"1\":{\"113\":1}}],[\"不会污染数据\",{\"1\":{\"113\":1}}],[\"不会改变数据\",{\"1\":{\"113\":1}}],[\"不会参与查询\",{\"1\":{\"100\":1}}],[\"不被修改\",{\"1\":{\"89\":1}}],[\"不屑password\",{\"1\":{\"89\":1}}],[\"q可以挂起容器\",{\"1\":{\"538\":1}}],[\"qq\",{\"1\":{\"459\":2,\"465\":3}}],[\"qian\",{\"1\":{\"358\":1}}],[\"queues\",{\"1\":{\"274\":1}}],[\"queuestodeclare\",{\"1\":{\"259\":1,\"261\":2}}],[\"queuebinding\",{\"1\":{\"263\":2,\"265\":2,\"267\":2}}],[\"queuebind\",{\"1\":{\"229\":1,\"241\":3,\"242\":1,\"252\":3}}],[\"queue\",{\"1\":{\"229\":3,\"241\":5,\"242\":3,\"252\":5,\"259\":1,\"261\":2,\"263\":2,\"265\":2,\"267\":2,\"270\":5,\"274\":1}}],[\"queuedeclare\",{\"1\":{\"205\":1,\"207\":1,\"217\":1,\"229\":1,\"241\":1,\"242\":1,\"252\":1}}],[\"querywrapper<web>\",{\"1\":{\"496\":2}}],[\"querywrapper<>\",{\"1\":{\"108\":1}}],[\"querywrapper<record>\",{\"1\":{\"108\":1}}],[\"querywrapper\",{\"1\":{\"86\":8,\"108\":3,\"496\":3}}],[\"q\",{\"1\":{\"89\":3,\"111\":5,\"556\":3}}],[\"改了\",{\"1\":{\"89\":1}}],[\"8\",{\"1\":{\"459\":1,\"554\":1,\"556\":1}}],[\"80\",{\"1\":{\"89\":1}}],[\"880\",{\"1\":{\"89\":2}}],[\"三\",{\"0\":{\"518\":1},\"1\":{\"89\":1,\"381\":1}}],[\"二进制协议是redis自定义的序列化格式\",{\"1\":{\"298\":1}}],[\"二\",{\"0\":{\"514\":1,\"516\":1},\"1\":{\"89\":1,\"381\":1}}],[\"一次性提交多个文件\",{\"1\":{\"519\":1}}],[\"一分支管理\",{\"0\":{\"514\":1}}],[\"一般\",{\"1\":{\"341\":1}}],[\"一般对象都是直接通过new出来\",{\"1\":{\"324\":1}}],[\"一种思想\",{\"1\":{\"323\":1}}],[\"一条消息\",{\"1\":{\"233\":1}}],[\"一\",{\"0\":{\"512\":1},\"1\":{\"89\":1,\"381\":1}}],[\"一套玩转mybatis\",{\"1\":{\"78\":1}}],[\"天天学习\",{\"1\":{\"89\":1}}],[\"we\",{\"1\":{\"576\":1}}],[\"web1\",{\"1\":{\"496\":7}}],[\"webmapper\",{\"1\":{\"496\":2}}],[\"webmvcconfigurer\",{\"1\":{\"408\":1,\"430\":1}}],[\"webmvcconfigurationsupport\",{\"1\":{\"398\":1,\"408\":1}}],[\"webmvc<\",{\"1\":{\"365\":1}}],[\"webs\",{\"1\":{\"496\":2}}],[\"websocket在连接建立后会一直保持连接\",{\"1\":{\"448\":1}}],[\"websocket是html5标准的一部分\",{\"1\":{\"447\":1}}],[\"websocket是一个非常简单的协议\",{\"1\":{\"443\":1}}],[\"websocket提供了双向通信的功能\",{\"1\":{\"445\":1}}],[\"websocket的缺点\",{\"0\":{\"446\":1}}],[\"websocket的头部信息非常小\",{\"1\":{\"444\":1}}],[\"websocket的优势\",{\"0\":{\"442\":1}}],[\"websocket和sockjs都是在web应用程序中使用实时通信的协议\",{\"1\":{\"441\":1}}],[\"websocket\",{\"0\":{\"438\":1},\"1\":{\"440\":5}}],[\"web\",{\"1\":{\"429\":1,\"496\":2}}],[\"webdatabinderfactory\",{\"1\":{\"400\":2}}],[\"webapplicationcontext\",{\"1\":{\"369\":2}}],[\"wq\",{\"1\":{\"556\":1}}],[\"w\",{\"1\":{\"556\":2}}],[\"wrote\",{\"1\":{\"519\":1}}],[\"wrapper<t>\",{\"1\":{\"86\":9}}],[\"width\",{\"1\":{\"487\":1}}],[\"withmethodannotation\",{\"1\":{\"508\":1}}],[\"with\",{\"1\":{\"270\":1,\"422\":1,\"424\":1}}],[\"was\",{\"1\":{\"422\":1,\"424\":1}}],[\"warn\",{\"1\":{\"239\":1,\"241\":1,\"242\":1,\"251\":1,\"252\":1,\"257\":1,\"265\":2}}],[\"wapper条件构造器\",{\"0\":{\"90\":1}}],[\"work2\",{\"1\":{\"261\":1}}],[\"work1\",{\"1\":{\"261\":1}}],[\"workconsumer\",{\"1\":{\"261\":1}}],[\"work\",{\"1\":{\"257\":4,\"261\":2}}],[\"world\",{\"1\":{\"227\":1,\"257\":1,\"287\":1,\"344\":1,\"350\":1,\"367\":1,\"374\":1,\"376\":1,\"381\":1,\"463\":1}}],[\"word2\",{\"1\":{\"556\":3}}],[\"word1\",{\"1\":{\"556\":3}}],[\"word\",{\"1\":{\"217\":2,\"556\":2}}],[\"which\",{\"1\":{\"422\":1,\"424\":1}}],[\"while\",{\"1\":{\"203\":1}}],[\"when>\",{\"1\":{\"70\":2}}],[\"where\",{\"1\":{\"68\":1,\"70\":1,\"72\":1,\"89\":2,\"136\":1,\"139\":1,\"142\":1,\"143\":1}}],[\"esc\",{\"1\":{\"556\":1}}],[\"event\",{\"1\":{\"487\":2}}],[\"everysec\",{\"1\":{\"315\":2}}],[\"email\",{\"1\":{\"482\":2,\"484\":7,\"513\":2}}],[\"ems\",{\"1\":{\"205\":3,\"207\":3,\"209\":3,\"255\":3}}],[\"elementtype\",{\"1\":{\"394\":1}}],[\"element2\",{\"1\":{\"291\":1,\"295\":1}}],[\"element1\",{\"1\":{\"291\":3,\"295\":4}}],[\"error\",{\"1\":{\"241\":2,\"252\":4,\"422\":3,\"424\":3,\"486\":3}}],[\"end\",{\"1\":{\"556\":1}}],[\"endpoint\",{\"1\":{\"420\":2,\"422\":1,\"424\":1}}],[\"endpoint以华东1\",{\"1\":{\"420\":1}}],[\"enableswagger2\",{\"1\":{\"508\":1}}],[\"enablescheduling\",{\"1\":{\"470\":1}}],[\"enabled\",{\"1\":{\"435\":1}}],[\"enabledefaulttyping\",{\"1\":{\"303\":1}}],[\"encode\",{\"1\":{\"496\":1}}],[\"encoding\",{\"1\":{\"459\":1}}],[\"enctype=\",{\"1\":{\"433\":1}}],[\"entry>\",{\"1\":{\"344\":1}}],[\"entity\",{\"1\":{\"86\":3}}],[\"envelope\",{\"1\":{\"207\":2,\"217\":3,\"229\":2,\"241\":2,\"242\":2,\"252\":2}}],[\"exec\",{\"1\":{\"538\":1}}],[\"executing\",{\"1\":{\"477\":1}}],[\"execution\",{\"1\":{\"354\":1,\"356\":1,\"358\":1,\"360\":1}}],[\"example\",{\"1\":{\"513\":1,\"525\":1}}],[\"examplebucket\",{\"1\":{\"420\":1}}],[\"explicit\",{\"1\":{\"576\":1}}],[\"export\",{\"1\":{\"487\":1,\"538\":3}}],[\"expire\",{\"1\":{\"285\":1,\"496\":1}}],[\"ex\",{\"1\":{\"406\":1}}],[\"exists\",{\"1\":{\"285\":1}}],[\"exist=false\",{\"1\":{\"99\":1}}],[\"exclusions>\",{\"1\":{\"576\":1}}],[\"exclusion>\",{\"1\":{\"576\":1}}],[\"exchange\",{\"1\":{\"263\":4,\"265\":4,\"267\":4,\"270\":3,\"272\":2}}],[\"exchange在发送消息时\",{\"1\":{\"237\":1}}],[\"exchangedeclare\",{\"1\":{\"227\":1,\"229\":1,\"239\":1,\"241\":1,\"242\":1,\"251\":1,\"252\":1}}],[\"exception\",{\"1\":{\"121\":1,\"122\":2,\"396\":1,\"400\":1,\"406\":4}}],[\"extends\",{\"1\":{\"86\":5,\"369\":1,\"398\":1,\"408\":1}}],[\"equals\",{\"1\":{\"496\":1}}],[\"eq\",{\"1\":{\"89\":1,\"110\":1,\"111\":1,\"496\":1}}],[\"e\",{\"1\":{\"86\":4,\"122\":2,\"209\":2,\"358\":2,\"360\":4,\"434\":2,\"435\":1,\"465\":1,\"486\":4}}],[\"et\",{\"1\":{\"86\":2}}],[\"ew\",{\"1\":{\"86\":9}}],[\"支持性\",{\"1\":{\"447\":1,\"451\":1}}],[\"支持指定分数\",{\"1\":{\"295\":1}}],[\"支持关键词自动转义\",{\"1\":{\"82\":1}}],[\"支持自定义全局通用操作\",{\"1\":{\"82\":1}}],[\"支持activerecord模式\",{\"1\":{\"81\":1}}],[\"支持主键自动生成\",{\"1\":{\"81\":1}}],[\"支持多种数据库\",{\"1\":{\"80\":1}}],[\"支持lambda形式调用\",{\"1\":{\"80\":1}}],[\"损耗小\",{\"1\":{\"79\":1}}],[\"b依赖了c和d\",{\"1\":{\"570\":1}}],[\"branch\",{\"1\":{\"515\":3}}],[\"but\",{\"1\":{\"422\":1,\"424\":1}}],[\"bucket\",{\"1\":{\"422\":1,\"424\":1}}],[\"bucketname\",{\"1\":{\"420\":2}}],[\"build\",{\"1\":{\"420\":1,\"422\":1,\"424\":1,\"508\":2}}],[\"backimg\",{\"1\":{\"402\":1}}],[\"basicack\",{\"1\":{\"217\":1}}],[\"basicqos\",{\"1\":{\"217\":1}}],[\"basicproperties\",{\"1\":{\"207\":1,\"217\":1,\"229\":1,\"241\":1,\"242\":1,\"252\":1}}],[\"basicpublish\",{\"1\":{\"205\":1,\"227\":1,\"239\":1,\"251\":1}}],[\"basicconsume\",{\"1\":{\"207\":1,\"217\":1,\"229\":1,\"241\":1,\"242\":1,\"252\":1}}],[\"basic\",{\"1\":{\"205\":1}}],[\"basemapper<t>\",{\"1\":{\"86\":1}}],[\"basemapper\",{\"0\":{\"85\":1}}],[\"bgsave\",{\"1\":{\"310\":1}}],[\"bdsize\",{\"1\":{\"282\":1}}],[\"bin\",{\"1\":{\"545\":1}}],[\"bind\",{\"1\":{\"270\":1}}],[\"bindingresult\",{\"1\":{\"486\":4}}],[\"bindingbuilder\",{\"1\":{\"270\":1}}],[\"binding\",{\"1\":{\"270\":1}}],[\"bindings\",{\"1\":{\"263\":2,\"265\":2,\"267\":2}}],[\"bilibili\",{\"1\":{\"78\":1,\"126\":1,\"199\":1,\"320\":1,\"362\":1,\"380\":1,\"386\":1}}],[\"book\",{\"1\":{\"340\":2}}],[\"bookserviceimpl\",{\"1\":{\"329\":1,\"338\":1}}],[\"bookservice\",{\"1\":{\"329\":1,\"338\":1}}],[\"bookdao1\",{\"1\":{\"331\":2}}],[\"bookdaoimpl\",{\"1\":{\"329\":1,\"331\":1,\"336\":1,\"338\":1,\"342\":1,\"344\":1,\"350\":1}}],[\"bookdao\",{\"1\":{\"329\":1,\"331\":6,\"336\":1,\"338\":3,\"340\":4,\"344\":1,\"350\":2,\"354\":1,\"358\":1,\"360\":1}}],[\"boot应用程序中使用\",{\"1\":{\"468\":1}}],[\"boot<\",{\"1\":{\"254\":1,\"437\":1,\"461\":1,\"480\":1}}],[\"boot\",{\"0\":{\"253\":1},\"1\":{\"254\":1,\"437\":1,\"461\":1,\"480\":1}}],[\"boolean\",{\"1\":{\"122\":1,\"396\":1,\"400\":1,\"406\":1,\"496\":1}}],[\"body\",{\"1\":{\"207\":3,\"217\":3,\"229\":3,\"241\":2,\"242\":2,\"252\":2}}],[\"b2\",{\"1\":{\"205\":1,\"207\":1}}],[\"b1\",{\"1\":{\"205\":1,\"207\":1}}],[\"b\",{\"1\":{\"205\":2,\"207\":1,\"515\":2}}],[\"be\",{\"1\":{\"576\":1}}],[\"beink\",{\"1\":{\"329\":2,\"336\":1,\"338\":2,\"344\":1,\"350\":1,\"354\":1,\"356\":1,\"358\":1,\"360\":1,\"369\":1}}],[\"between\",{\"1\":{\"160\":1}}],[\"bean>\",{\"1\":{\"336\":1,\"338\":2,\"344\":1}}],[\"bean\",{\"0\":{\"332\":1},\"1\":{\"106\":1,\"270\":3,\"303\":1,\"502\":1,\"508\":1}}],[\"byte\",{\"1\":{\"207\":1,\"217\":1,\"229\":1,\"241\":1,\"242\":1,\"252\":1}}],[\"by\",{\"1\":{\"142\":2,\"143\":2,\"185\":1,\"190\":1}}],[\"blog\",{\"1\":{\"68\":2,\"70\":2,\"72\":2}}],[\"哔哩哔哩\",{\"1\":{\"78\":1,\"126\":1,\"199\":1,\"320\":1,\"362\":1,\"380\":1,\"386\":1}}],[\"尚硅谷\",{\"1\":{\"78\":1}}],[\"提交\",{\"1\":{\"519\":1}}],[\"提高数据库操作的性能\",{\"1\":{\"118\":1}}],[\"提高性能\",{\"1\":{\"118\":1}}],[\"提高效率而生\",{\"1\":{\"77\":1}}],[\"提示\",{\"1\":{\"39\":1,\"467\":1}}],[\"在第n1行与n2行之间寻找word1这个字符串\",{\"1\":{\"556\":1}}],[\"在本地和容器间复制文件\",{\"1\":{\"538\":1}}],[\"在容器中执行命令\",{\"1\":{\"538\":1}}],[\"在图片文件读取完毕后设置预览图片的\",{\"1\":{\"487\":1}}],[\"在spring\",{\"1\":{\"468\":1}}],[\"在这种抄送方式中\",{\"1\":{\"463\":1}}],[\"在里面加载spring配置\",{\"1\":{\"369\":1}}],[\"在哪里执行\",{\"1\":{\"354\":1}}],[\"在key对应的hash中设置field对应的value\",{\"1\":{\"293\":1}}],[\"在fanout的模式下\",{\"1\":{\"233\":1}}],[\"在多个操作之间存在依赖关系的情况下\",{\"1\":{\"115\":1}}],[\"在\",{\"1\":{\"77\":1}}],[\"在页面禁用功能与布局\",{\"1\":{\"9\":1}}],[\"p\",{\"1\":{\"538\":1,\"540\":1,\"543\":1,\"545\":1,\"547\":1,\"549\":1,\"551\":1,\"552\":1,\"556\":1}}],[\"ps\",{\"1\":{\"538\":1}}],[\"pwd\",{\"1\":{\"517\":1}}],[\"p2\",{\"1\":{\"465\":1}}],[\"p1\",{\"1\":{\"465\":1}}],[\"png\",{\"1\":{\"465\":1}}],[\"pictures\",{\"1\":{\"465\":2}}],[\"pojo\",{\"1\":{\"483\":1}}],[\"polyfill\",{\"1\":{\"440\":1}}],[\"posthandle\",{\"1\":{\"406\":2}}],[\"postmapping\",{\"1\":{\"402\":1,\"434\":1,\"486\":1}}],[\"post乱码处理\",{\"0\":{\"377\":1}}],[\"post\",{\"0\":{\"375\":1},\"1\":{\"387\":1,\"433\":1}}],[\"postconstruct\",{\"1\":{\"350\":1,\"477\":1}}],[\"pointcut\",{\"1\":{\"354\":1,\"356\":1,\"358\":1,\"360\":1}}],[\"pom\",{\"1\":{\"326\":1,\"364\":1,\"460\":1}}],[\"port\",{\"1\":{\"255\":1,\"459\":1}}],[\"percentage\",{\"1\":{\"315\":1}}],[\"persistent\",{\"1\":{\"205\":1}}],[\"prune\",{\"1\":{\"538\":1}}],[\"prefer\",{\"1\":{\"576\":1}}],[\"pretty=oneline\",{\"1\":{\"521\":1}}],[\"previewimg\",{\"1\":{\"487\":2}}],[\"previewimage\",{\"1\":{\"487\":2}}],[\"prehandle\",{\"1\":{\"396\":1,\"406\":2}}],[\"predestroy\",{\"1\":{\"350\":1}}],[\"provided\",{\"1\":{\"588\":1}}],[\"productapi\",{\"1\":{\"508\":1}}],[\"producer\",{\"1\":{\"227\":1,\"239\":1,\"251\":1}}],[\"protected\",{\"1\":{\"369\":3,\"398\":2,\"408\":1}}],[\"proceed\",{\"1\":{\"358\":1,\"360\":2}}],[\"proceedingjoinpoint\",{\"1\":{\"358\":1,\"360\":1}}],[\"propertysource\",{\"1\":{\"350\":1}}],[\"property>\",{\"1\":{\"344\":2}}],[\"propertyaccessor\",{\"1\":{\"303\":1}}],[\"properties\",{\"1\":{\"207\":1,\"217\":1,\"229\":1,\"241\":1,\"242\":1,\"252\":1,\"459\":1,\"481\":1}}],[\"printstacktrace\",{\"1\":{\"122\":1,\"209\":1}}],[\"println\",{\"1\":{\"89\":6,\"110\":1,\"111\":1,\"207\":1,\"217\":1,\"229\":1,\"241\":1,\"242\":1,\"252\":1,\"259\":1,\"261\":2,\"263\":2,\"265\":2,\"267\":2,\"274\":1,\"305\":1,\"333\":2,\"354\":1,\"358\":3,\"360\":1,\"367\":1,\"374\":1,\"376\":1,\"381\":1,\"387\":2,\"406\":3,\"422\":6,\"424\":5,\"434\":1,\"463\":1,\"473\":1,\"477\":1,\"486\":1,\"496\":2}}],[\"private\",{\"1\":{\"122\":1,\"209\":1,\"257\":1,\"301\":2,\"305\":1,\"336\":2,\"340\":1,\"342\":2,\"350\":2,\"354\":1,\"358\":1,\"360\":1,\"408\":1,\"465\":1,\"477\":3,\"484\":4,\"508\":1}}],[\"p端\",{\"1\":{\"203\":1}}],[\"pull\",{\"1\":{\"536\":1}}],[\"push\",{\"1\":{\"515\":1,\"525\":2}}],[\"putobject\",{\"1\":{\"418\":1,\"420\":1}}],[\"put\",{\"1\":{\"89\":3,\"108\":2,\"270\":1,\"385\":1,\"387\":3}}],[\"publicmapper\",{\"1\":{\"496\":1}}],[\"public\",{\"1\":{\"41\":1,\"86\":1,\"106\":2,\"108\":1,\"122\":2,\"207\":1,\"209\":3,\"217\":3,\"227\":2,\"229\":3,\"239\":2,\"241\":3,\"242\":3,\"251\":2,\"252\":3,\"257\":1,\"259\":2,\"261\":3,\"263\":3,\"265\":3,\"267\":3,\"270\":7,\"272\":2,\"274\":2,\"301\":1,\"303\":2,\"331\":2,\"333\":2,\"340\":1,\"342\":1,\"354\":2,\"358\":3,\"360\":2,\"367\":2,\"369\":2,\"374\":1,\"376\":1,\"381\":1,\"383\":2,\"387\":2,\"394\":1,\"396\":2,\"398\":1,\"400\":3,\"402\":1,\"406\":4,\"408\":1,\"420\":1,\"422\":1,\"424\":1,\"430\":2,\"434\":2,\"463\":4,\"470\":1,\"473\":1,\"475\":1,\"477\":4,\"484\":9,\"486\":2,\"496\":2,\"502\":1,\"504\":1,\"508\":2}}],[\"package\",{\"1\":{\"567\":1}}],[\"paste\",{\"1\":{\"556\":1}}],[\"pass\",{\"1\":{\"496\":2}}],[\"passwordencoder\",{\"1\":{\"496\":1}}],[\"password\",{\"1\":{\"89\":3,\"255\":1,\"459\":1,\"496\":4}}],[\"pattern\",{\"1\":{\"429\":1,\"482\":1,\"484\":1}}],[\"pathselectors\",{\"1\":{\"508\":1}}],[\"paths\",{\"1\":{\"508\":1}}],[\"path\",{\"1\":{\"429\":1}}],[\"pathvariable\",{\"1\":{\"387\":2,\"389\":1}}],[\"parsejwt\",{\"1\":{\"396\":1}}],[\"parameter\",{\"1\":{\"394\":1}}],[\"param\",{\"1\":{\"86\":15,\"408\":1}}],[\"paginationinnerinterceptor\",{\"1\":{\"106\":1}}],[\"page<>\",{\"1\":{\"108\":1}}],[\"page\",{\"1\":{\"86\":2,\"108\":2}}],[\"plus\",{\"0\":{\"75\":1,\"76\":1},\"1\":{\"77\":1,\"78\":1}}],[\"other\",{\"0\":{\"598\":1}}],[\"otherwise>\",{\"1\":{\"70\":1}}],[\"oother\",{\"0\":{\"596\":1}}],[\"our\",{\"1\":{\"576\":1}}],[\"out\",{\"1\":{\"89\":6,\"110\":1,\"111\":1,\"207\":1,\"217\":1,\"229\":1,\"241\":1,\"242\":1,\"252\":1,\"259\":1,\"261\":2,\"263\":2,\"265\":2,\"267\":2,\"274\":1,\"305\":1,\"333\":2,\"354\":1,\"358\":3,\"360\":1,\"367\":1,\"374\":1,\"376\":1,\"381\":1,\"387\":2,\"406\":3,\"422\":6,\"424\":5,\"434\":1,\"463\":1,\"473\":1,\"477\":1,\"486\":1,\"496\":2}}],[\"o\",{\"1\":{\"536\":1,\"538\":1}}],[\"optional为true时不让别人知道自己所用依赖\",{\"1\":{\"572\":1}}],[\"optional>\",{\"1\":{\"437\":1,\"573\":1}}],[\"opsforvalue\",{\"1\":{\"305\":2,\"496\":1}}],[\"oldname\",{\"1\":{\"434\":3}}],[\"oe\",{\"1\":{\"422\":5,\"424\":5}}],[\"os\",{\"1\":{\"420\":3}}],[\"ossexception\",{\"1\":{\"422\":2,\"424\":2}}],[\"ossobjectsummary\",{\"1\":{\"422\":1}}],[\"ossclient\",{\"1\":{\"422\":4,\"424\":4}}],[\"ossclientbuilder\",{\"1\":{\"420\":1,\"422\":1,\"424\":1}}],[\"oss\",{\"1\":{\"418\":3,\"420\":2,\"422\":2,\"424\":2}}],[\"of\",{\"1\":{\"322\":1}}],[\"om\",{\"1\":{\"303\":4}}],[\"objecterror\",{\"1\":{\"486\":1}}],[\"objectlisting\",{\"1\":{\"422\":3}}],[\"objectmapper\",{\"1\":{\"303\":3}}],[\"object\",{\"1\":{\"303\":1,\"360\":3,\"396\":1,\"400\":1,\"406\":3}}],[\"object>>>\",{\"1\":{\"86\":1}}],[\"object>>\",{\"1\":{\"86\":1}}],[\"object>\",{\"1\":{\"86\":2,\"89\":2,\"270\":2,\"303\":2}}],[\"onload\",{\"1\":{\"487\":1}}],[\"only模式作为持久化方式\",{\"1\":{\"315\":1}}],[\"only\",{\"1\":{\"314\":1}}],[\"on\",{\"1\":{\"315\":1}}],[\"onmessage\",{\"1\":{\"274\":1}}],[\"one\",{\"1\":{\"227\":2,\"229\":2}}],[\"o操作和网络传输\",{\"1\":{\"118\":1}}],[\"o操作或网络传输\",{\"1\":{\"118\":1}}],[\"origin\",{\"1\":{\"515\":3,\"525\":4}}],[\"originalfilename\",{\"1\":{\"420\":2}}],[\"or或\",{\"1\":{\"170\":1}}],[\"order\",{\"1\":{\"142\":1,\"143\":1,\"190\":1}}],[\"orderbyasc\",{\"1\":{\"108\":1}}],[\"org\",{\"1\":{\"61\":1}}],[\"override\",{\"1\":{\"108\":1,\"122\":1,\"207\":1,\"217\":1,\"229\":1,\"241\":1,\"242\":1,\"252\":1,\"369\":3,\"396\":1,\"398\":2,\"400\":2,\"406\":3,\"408\":1,\"430\":1,\"477\":1,\"504\":1}}],[\"central\",{\"1\":{\"565\":1}}],[\"ctrl\",{\"1\":{\"556\":2}}],[\"ctx\",{\"1\":{\"369\":3}}],[\"cp\",{\"1\":{\"538\":2}}],[\"cd\",{\"1\":{\"517\":1,\"525\":1}}],[\"cron\",{\"0\":{\"474\":1},\"1\":{\"475\":1}}],[\"create\",{\"1\":{\"502\":1,\"538\":1,\"554\":1}}],[\"createjwt\",{\"1\":{\"496\":1}}],[\"createmimemessage\",{\"1\":{\"463\":2}}],[\"createrootapplicationcontext\",{\"1\":{\"369\":1}}],[\"createservletapplicationcontext\",{\"1\":{\"369\":1}}],[\"createchannel\",{\"1\":{\"205\":1,\"207\":1,\"217\":1,\"227\":1,\"229\":1,\"239\":1,\"241\":1,\"242\":1,\"251\":1,\"252\":1}}],[\"c\",{\"1\":{\"465\":3,\"525\":1}}],[\"cc\",{\"1\":{\"463\":1}}],[\"cat\",{\"1\":{\"521\":1}}],[\"catch\",{\"1\":{\"122\":1,\"209\":1,\"422\":1,\"424\":1,\"434\":1}}],[\"cancel\",{\"1\":{\"477\":1}}],[\"caught\",{\"1\":{\"422\":1,\"424\":1}}],[\"cn\",{\"1\":{\"420\":1}}],[\"cnblogs\",{\"1\":{\"199\":1}}],[\"customexchange\",{\"1\":{\"270\":2}}],[\"curd\",{\"0\":{\"87\":1}}],[\"clean\",{\"1\":{\"567\":1}}],[\"clone\",{\"1\":{\"525\":1}}],[\"closechannelandconnection\",{\"1\":{\"209\":1}}],[\"close\",{\"1\":{\"205\":2,\"207\":2,\"209\":2,\"227\":2,\"239\":2,\"251\":2}}],[\"cli\",{\"1\":{\"280\":1}}],[\"classpath\",{\"1\":{\"429\":1,\"430\":1}}],[\"classpathxmlapplicationcontext\",{\"1\":{\"331\":1}}],[\"class=\",{\"1\":{\"329\":2,\"336\":1,\"338\":2,\"344\":1}}],[\"class\",{\"1\":{\"106\":1,\"121\":1,\"122\":2,\"209\":1,\"217\":1,\"227\":1,\"229\":1,\"239\":1,\"241\":1,\"242\":1,\"251\":1,\"252\":1,\"257\":1,\"259\":1,\"261\":1,\"263\":1,\"265\":1,\"267\":1,\"270\":1,\"272\":1,\"274\":1,\"301\":1,\"303\":2,\"331\":1,\"354\":1,\"358\":1,\"360\":1,\"367\":1,\"369\":3,\"396\":1,\"398\":1,\"400\":2,\"406\":1,\"408\":1,\"430\":1,\"434\":1,\"459\":1,\"463\":1,\"470\":1,\"477\":2,\"484\":1,\"486\":1,\"502\":1,\"508\":2}}],[\"checkout\",{\"1\":{\"515\":2,\"521\":1,\"523\":1}}],[\"chenkout\",{\"1\":{\"515\":1}}],[\"change=\",{\"1\":{\"487\":1}}],[\"channel\",{\"1\":{\"205\":5,\"207\":6,\"209\":4,\"217\":7,\"227\":5,\"229\":7,\"239\":5,\"241\":9,\"242\":7,\"251\":5,\"252\":9}}],[\"choose>\",{\"1\":{\"70\":1}}],[\"choose\",{\"1\":{\"69\":1}}],[\"c端\",{\"1\":{\"203\":1}}],[\"core<\",{\"1\":{\"576\":1}}],[\"copy\",{\"1\":{\"558\":1}}],[\"code\",{\"1\":{\"422\":1,\"424\":1,\"475\":1}}],[\"const\",{\"1\":{\"487\":2}}],[\"consumertwo\",{\"1\":{\"242\":1}}],[\"consumertag\",{\"1\":{\"207\":1,\"217\":1,\"229\":1,\"241\":1,\"242\":1,\"252\":1}}],[\"consumerone\",{\"1\":{\"229\":1,\"241\":1,\"252\":1}}],[\"consumer2\",{\"1\":{\"217\":1}}],[\"consumer\",{\"0\":{\"216\":1},\"1\":{\"203\":1}}],[\"contaienr\",{\"1\":{\"538\":1}}],[\"container2\",{\"1\":{\"538\":1}}],[\"container1\",{\"1\":{\"538\":1}}],[\"container\",{\"0\":{\"537\":1},\"1\":{\"536\":2,\"538\":19}}],[\"content\",{\"1\":{\"463\":6,\"496\":2,\"565\":1}}],[\"context<\",{\"1\":{\"327\":1}}],[\"contextloads\",{\"1\":{\"305\":1}}],[\"controller\",{\"1\":{\"348\":1,\"367\":1,\"369\":1,\"389\":2,\"485\":1}}],[\"control\",{\"1\":{\"322\":1}}],[\"convertandsend\",{\"1\":{\"257\":5,\"272\":2}}],[\"con\",{\"1\":{\"209\":3}}],[\"connection\",{\"1\":{\"205\":4,\"207\":4,\"209\":2,\"217\":3,\"227\":4,\"229\":3,\"239\":4,\"241\":3,\"242\":3,\"251\":4,\"252\":3}}],[\"connectionfactory\",{\"1\":{\"205\":9,\"207\":9,\"209\":10}}],[\"config类\",{\"1\":{\"368\":1}}],[\"configuration\",{\"1\":{\"106\":1,\"270\":1,\"303\":1,\"350\":1,\"369\":1,\"398\":1,\"408\":1,\"430\":1,\"470\":1,\"502\":1,\"508\":1}}],[\"config\",{\"1\":{\"105\":1,\"269\":1,\"502\":5,\"513\":2}}],[\"count\",{\"1\":{\"108\":1,\"143\":1,\"185\":1}}],[\"colorservice\",{\"1\":{\"402\":1}}],[\"color\",{\"1\":{\"398\":1,\"402\":3}}],[\"collection<\",{\"1\":{\"86\":2}}],[\"coll\",{\"1\":{\"86\":2}}],[\"columnmap\",{\"1\":{\"86\":2}}],[\"compile\",{\"1\":{\"567\":1,\"582\":1}}],[\"compose\",{\"1\":{\"532\":1}}],[\"componentscan\",{\"1\":{\"350\":1,\"369\":1}}],[\"component\",{\"1\":{\"259\":1,\"261\":1,\"263\":1,\"265\":1,\"267\":1,\"272\":1,\"274\":1,\"346\":1,\"354\":1,\"406\":1}}],[\"command\",{\"1\":{\"538\":1}}],[\"commit\",{\"1\":{\"519\":2,\"521\":1,\"523\":1,\"536\":1}}],[\"com\",{\"1\":{\"61\":1,\"199\":1,\"329\":2,\"336\":1,\"338\":2,\"344\":1,\"350\":1,\"354\":1,\"356\":1,\"358\":1,\"360\":1,\"369\":1,\"420\":1,\"459\":2,\"465\":6,\"513\":1,\"525\":3,\"565\":1}}],[\"cm\",{\"1\":{\"86\":2}}],[\"nu\",{\"1\":{\"556\":1}}],[\"null\",{\"1\":{\"68\":3,\"70\":3,\"72\":4,\"89\":1,\"108\":1,\"110\":1,\"111\":1,\"166\":1,\"175\":1,\"205\":2,\"207\":1,\"217\":1,\"227\":1,\"239\":1,\"251\":1,\"369\":1,\"422\":2,\"424\":2,\"477\":1,\"496\":2}}],[\"n2s\",{\"1\":{\"556\":1}}],[\"n1与n2为数字\",{\"1\":{\"556\":1}}],[\"n1\",{\"1\":{\"556\":1}}],[\"n<enter>\",{\"1\":{\"556\":1}}],[\"n<space>\",{\"1\":{\"556\":1}}],[\"n为数字\",{\"1\":{\"556\":2}}],[\"ng\",{\"1\":{\"556\":1}}],[\"n表示数字\",{\"1\":{\"556\":1}}],[\"n\",{\"1\":{\"496\":2,\"556\":3}}],[\"nexus\",{\"1\":{\"565\":1}}],[\"net\",{\"1\":{\"459\":1}}],[\"newname\",{\"1\":{\"434\":3}}],[\"newconnection\",{\"1\":{\"205\":1,\"207\":1,\"209\":1}}],[\"new\",{\"1\":{\"89\":5,\"106\":2,\"108\":3,\"110\":1,\"111\":1,\"122\":2,\"205\":1,\"207\":4,\"209\":1,\"217\":3,\"229\":3,\"241\":2,\"242\":2,\"252\":2,\"270\":3,\"272\":2,\"295\":2,\"303\":4,\"305\":1,\"331\":2,\"350\":1,\"369\":2,\"398\":2,\"420\":1,\"422\":2,\"424\":1,\"434\":5,\"463\":5,\"465\":3,\"477\":1,\"486\":1,\"487\":1,\"496\":12,\"502\":1,\"504\":1,\"508\":2}}],[\"nanotime\",{\"1\":{\"496\":1}}],[\"nativerequest\",{\"1\":{\"400\":2}}],[\"nativewebrequest\",{\"1\":{\"400\":3}}],[\"name>\",{\"1\":{\"565\":1}}],[\"names\",{\"1\":{\"554\":1}}],[\"name=name\",{\"1\":{\"373\":1}}],[\"name=hello\",{\"1\":{\"350\":1}}],[\"name=\",{\"1\":{\"336\":2,\"338\":3,\"344\":2,\"433\":1}}],[\"name\",{\"1\":{\"65\":2,\"68\":3,\"70\":3,\"72\":3,\"98\":1,\"146\":2,\"148\":1,\"239\":2,\"241\":4,\"242\":2,\"251\":2,\"252\":4,\"282\":1,\"285\":7,\"287\":3,\"293\":4,\"301\":1,\"350\":1,\"374\":2,\"376\":2,\"381\":1,\"482\":2,\"484\":6,\"496\":1,\"513\":2,\"536\":1,\"538\":2,\"540\":1,\"549\":1}}],[\"noh\",{\"1\":{\"556\":1}}],[\"nopaste\",{\"1\":{\"556\":1}}],[\"no\",{\"1\":{\"315\":3}}],[\"nonu\",{\"1\":{\"556\":1}}],[\"non\",{\"1\":{\"303\":1}}],[\"none\",{\"1\":{\"96\":1}}],[\"noargs\",{\"1\":{\"270\":1}}],[\"notnull\",{\"1\":{\"482\":1,\"484\":2}}],[\"not\",{\"1\":{\"172\":1}}],[\"attach\",{\"1\":{\"538\":1}}],[\"atx\",{\"1\":{\"331\":2}}],[\"akgit\",{\"1\":{\"525\":2}}],[\"ah\",{\"1\":{\"517\":1}}],[\"abstractdispatcherservletinitializer\",{\"1\":{\"369\":1}}],[\"abc\",{\"1\":{\"247\":1}}],[\"aftercompletion\",{\"1\":{\"406\":2}}],[\"afterthrowing\",{\"1\":{\"358\":1}}],[\"afterreturning\",{\"1\":{\"354\":1,\"358\":2}}],[\"afterpropertiesset\",{\"1\":{\"303\":1}}],[\"aop\",{\"0\":{\"351\":1},\"1\":{\"354\":1,\"358\":1}}],[\"aof持久化策略的配置\",{\"1\":{\"315\":1}}],[\"aof\",{\"0\":{\"313\":1},\"1\":{\"314\":2,\"315\":4}}],[\"a\",{\"1\":{\"336\":2,\"338\":1,\"342\":4,\"519\":1,\"538\":1}}],[\"aliyun\",{\"1\":{\"565\":1}}],[\"aliyuncs\",{\"1\":{\"420\":1}}],[\"always\",{\"1\":{\"315\":1}}],[\"allerrors\",{\"1\":{\"486\":2}}],[\"all\",{\"1\":{\"303\":1}}],[\"an\",{\"1\":{\"422\":2,\"424\":2}}],[\"annotationconfigwebapplicationcontext\",{\"1\":{\"369\":2}}],[\"any\",{\"1\":{\"303\":1,\"508\":1}}],[\"and\",{\"1\":{\"68\":3,\"70\":4,\"72\":3,\"89\":1,\"160\":1,\"168\":1}}],[\"apache\",{\"1\":{\"576\":1}}],[\"apioperation\",{\"1\":{\"508\":1}}],[\"apis\",{\"1\":{\"508\":1}}],[\"apiinfobuilder\",{\"1\":{\"508\":1}}],[\"apiinfo\",{\"1\":{\"508\":4}}],[\"api<\",{\"1\":{\"365\":1,\"432\":1}}],[\"application\",{\"1\":{\"458\":1}}],[\"applicationcontext\",{\"1\":{\"328\":1,\"331\":2}}],[\"appendfsync\",{\"1\":{\"315\":3}}],[\"appendfilename\",{\"1\":{\"315\":2}}],[\"appendonly\",{\"1\":{\"315\":2}}],[\"append\",{\"1\":{\"287\":1,\"314\":1}}],[\"apt\",{\"1\":{\"280\":2}}],[\"aaa\",{\"1\":{\"252\":1,\"545\":2,\"549\":1,\"552\":2,\"554\":3}}],[\"adress\",{\"1\":{\"482\":1}}],[\"administrator\",{\"1\":{\"465\":2}}],[\"admin\",{\"1\":{\"247\":3,\"249\":2}}],[\"address\",{\"1\":{\"482\":1,\"484\":6}}],[\"addresourcelocations\",{\"1\":{\"430\":1}}],[\"addresourcehandler\",{\"1\":{\"430\":1}}],[\"addresourcehandlers\",{\"1\":{\"430\":1}}],[\"addattachment\",{\"1\":{\"463\":1}}],[\"addargumentresolvers\",{\"1\":{\"398\":1}}],[\"addpathpatterns\",{\"1\":{\"398\":1,\"408\":1}}],[\"addinline\",{\"1\":{\"463\":1}}],[\"addinterceptor\",{\"1\":{\"398\":1,\"408\":1}}],[\"addinterceptors\",{\"1\":{\"398\":2,\"408\":1}}],[\"addinnerinterceptor\",{\"1\":{\"106\":1}}],[\"add\",{\"1\":{\"398\":1,\"422\":1,\"486\":1,\"519\":2,\"525\":1}}],[\"adduser\",{\"1\":{\"122\":1,\"486\":2}}],[\"amqp<\",{\"1\":{\"254\":1}}],[\"amqp\",{\"1\":{\"207\":1,\"217\":1,\"229\":1,\"241\":1,\"242\":1,\"252\":1}}],[\"ag\",{\"1\":{\"533\":1}}],[\"agsdga\",{\"1\":{\"252\":1}}],[\"age\",{\"1\":{\"179\":1,\"181\":2,\"185\":1,\"190\":1,\"287\":4,\"482\":2,\"484\":7}}],[\"agv\",{\"1\":{\"179\":1}}],[\"aspect\",{\"1\":{\"354\":1}}],[\"asg\",{\"1\":{\"252\":1}}],[\"asc\",{\"1\":{\"187\":1,\"190\":1}}],[\"as\",{\"1\":{\"146\":1,\"149\":1}}],[\"aslist\",{\"1\":{\"89\":2}}],[\"avg\",{\"1\":{\"143\":1,\"178\":1,\"185\":1}}],[\"autowired\",{\"1\":{\"122\":1,\"257\":1,\"305\":1,\"350\":1,\"408\":1,\"463\":1,\"465\":1,\"477\":1,\"504\":1}}],[\"auto\",{\"1\":{\"95\":1,\"315\":2}}],[\"authorization\",{\"1\":{\"396\":1}}],[\"author\",{\"1\":{\"68\":4,\"70\":4,\"72\":4}}],[\"around\",{\"1\":{\"358\":1,\"360\":1}}],[\"arraylist<>\",{\"1\":{\"422\":1,\"486\":1}}],[\"arraylist<string>\",{\"1\":{\"422\":1,\"486\":1}}],[\"array>\",{\"1\":{\"344\":1}}],[\"arrays\",{\"1\":{\"89\":2,\"360\":1}}],[\"argumentresolvers\",{\"1\":{\"398\":2}}],[\"arg\",{\"1\":{\"338\":3}}],[\"args\",{\"1\":{\"217\":1,\"227\":1,\"229\":1,\"239\":1,\"241\":1,\"242\":1,\"251\":1,\"252\":1,\"270\":3,\"331\":1,\"360\":4}}],[\"article\",{\"1\":{\"111\":1,\"504\":6}}],[\"articlemapper\",{\"1\":{\"110\":1,\"111\":1,\"504\":2}}],[\"artifactid>\",{\"1\":{\"61\":1,\"254\":1,\"327\":1,\"365\":2,\"432\":1,\"437\":1,\"461\":1,\"480\":1,\"500\":1,\"507\":1,\"573\":1,\"576\":3}}],[\"artifact\",{\"1\":{\"61\":1}}],[\"action=\",{\"1\":{\"433\":1}}],[\"action\",{\"1\":{\"418\":1}}],[\"active\",{\"1\":{\"68\":1,\"70\":1}}],[\"accept=\",{\"1\":{\"487\":1}}],[\"accesskeysecert\",{\"1\":{\"422\":1,\"424\":1}}],[\"accesskeysecret\",{\"1\":{\"420\":2}}],[\"accesskeyid\",{\"1\":{\"420\":2,\"422\":1,\"424\":1}}],[\"accesskey进行操作\",{\"1\":{\"417\":1}}],[\"account\",{\"1\":{\"89\":3,\"396\":1,\"398\":1,\"400\":1,\"402\":3,\"496\":11}}],[\"sql\",{\"1\":{\"543\":1,\"545\":1,\"547\":1,\"549\":2,\"551\":1,\"552\":1,\"554\":1}}],[\"swaggerconfig\",{\"1\":{\"508\":1}}],[\"swagger2<\",{\"1\":{\"507\":1}}],[\"swagger\",{\"0\":{\"505\":1},\"1\":{\"508\":1}}],[\"swap\",{\"0\":{\"436\":1}}],[\"should\",{\"1\":{\"576\":1}}],[\"showbyid\",{\"1\":{\"504\":1}}],[\"show\",{\"1\":{\"496\":1}}],[\"shutdown\",{\"1\":{\"420\":1,\"422\":1,\"424\":1}}],[\"smtp\",{\"1\":{\"459\":2}}],[\"smembers\",{\"1\":{\"291\":2}}],[\"sdf\",{\"1\":{\"434\":2}}],[\"sdiff\",{\"1\":{\"291\":2}}],[\"s为图片的名字\",{\"1\":{\"424\":1}}],[\"source\",{\"1\":{\"554\":1}}],[\"socketfactory\",{\"1\":{\"459\":1}}],[\"sockjs的缺点\",{\"0\":{\"453\":1}}],[\"sockjs的优势\",{\"0\":{\"449\":1}}],[\"sockjs在不支持websocket的浏览器中使用的是长轮询技术\",{\"1\":{\"452\":1}}],[\"sockjs可以通过polyfill模拟websocket的功能\",{\"1\":{\"451\":1}}],[\"sockjs可以在所有支持javascript的浏览器中运行\",{\"1\":{\"450\":1}}],[\"sockjs\",{\"0\":{\"438\":1},\"1\":{\"440\":3}}],[\"some\",{\"1\":{\"422\":1,\"424\":1}}],[\"sortedset2\",{\"1\":{\"295\":2}}],[\"sortedset1\",{\"1\":{\"295\":2}}],[\"sortedset\",{\"1\":{\"295\":2}}],[\"sorted\",{\"0\":{\"294\":1}}],[\"ssh\",{\"0\":{\"557\":1},\"1\":{\"525\":1,\"558\":4}}],[\"sslsocketfactory\",{\"1\":{\"459\":1}}],[\"ssl\",{\"1\":{\"459\":1}}],[\"ss\",{\"1\":{\"354\":2,\"358\":3,\"360\":2}}],[\"script>\",{\"1\":{\"487\":1}}],[\"schedulewithfixeddelay\",{\"1\":{\"477\":1}}],[\"schedulecontroller\",{\"1\":{\"477\":1}}],[\"scheduledfuture\",{\"1\":{\"477\":4}}],[\"scheduledfuture<\",{\"1\":{\"477\":1}}],[\"scheduled\",{\"0\":{\"474\":1},\"1\":{\"473\":1,\"475\":1}}],[\"scheduledtasksconfig\",{\"1\":{\"470\":1}}],[\"scheduled注解标记的定时任务是在应用程序启动时自动启动的\",{\"1\":{\"468\":1}}],[\"schedul\",{\"1\":{\"473\":1}}],[\"scope>\",{\"1\":{\"365\":1,\"432\":1}}],[\"scope\",{\"1\":{\"350\":1,\"578\":1}}],[\"scard\",{\"1\":{\"291\":2}}],[\"same\",{\"1\":{\"576\":1}}],[\"save\",{\"1\":{\"310\":1,\"331\":2,\"354\":1,\"358\":1,\"360\":1,\"367\":2,\"373\":1,\"374\":2,\"376\":2,\"381\":2,\"389\":1,\"536\":1,\"538\":2}}],[\"sadd\",{\"1\":{\"291\":2}}],[\"src\",{\"1\":{\"487\":1}}],[\"srcpath\",{\"1\":{\"463\":3}}],[\"srandmember\",{\"1\":{\"291\":2}}],[\"srem\",{\"1\":{\"291\":2}}],[\"spop\",{\"1\":{\"291\":2}}],[\"springboot\",{\"0\":{\"597\":1}}],[\"springboottest\",{\"1\":{\"257\":1}}],[\"springfox<\",{\"1\":{\"507\":1}}],[\"springframework<\",{\"1\":{\"327\":1,\"365\":1}}],[\"springframework\",{\"1\":{\"254\":1,\"437\":1,\"461\":1,\"480\":1}}],[\"springmvcconfig\",{\"1\":{\"369\":3}}],[\"springmvc入门案例\",{\"1\":{\"362\":1}}],[\"springmvc\",{\"0\":{\"318\":1,\"361\":1},\"1\":{\"362\":1,\"380\":1,\"386\":1}}],[\"spring\",{\"0\":{\"253\":1,\"318\":1,\"319\":1},\"1\":{\"255\":1,\"320\":1,\"429\":1,\"435\":1,\"459\":1}}],[\"simplemailmessage\",{\"1\":{\"463\":2}}],[\"simpledateformat\",{\"1\":{\"434\":2}}],[\"simple简单模式\",{\"0\":{\"200\":1}}],[\"singleton\",{\"1\":{\"350\":1}}],[\"sinter\",{\"1\":{\"291\":2}}],[\"size\",{\"1\":{\"315\":1,\"435\":3,\"482\":2,\"484\":4}}],[\"sismember\",{\"1\":{\"291\":2}}],[\"success\",{\"1\":{\"496\":1,\"504\":1}}],[\"subject\",{\"1\":{\"463\":6}}],[\"submit\",{\"1\":{\"433\":1}}],[\"substring\",{\"1\":{\"396\":1,\"434\":1}}],[\"support\",{\"1\":{\"408\":1}}],[\"supportsparameter\",{\"1\":{\"400\":1}}],[\"super\",{\"1\":{\"398\":1}}],[\"sunion\",{\"1\":{\"291\":2}}],[\"sudo\",{\"1\":{\"280\":2,\"533\":1}}],[\"sums\",{\"1\":{\"422\":2}}],[\"sum\",{\"1\":{\"143\":1,\"176\":1,\"177\":1}}],[\"sleep\",{\"1\":{\"217\":1}}],[\"sneakythrows\",{\"1\":{\"217\":1}}],[\"s1\",{\"1\":{\"205\":1,\"207\":1}}],[\"s\",{\"1\":{\"185\":1,\"190\":1,\"194\":2,\"205\":2,\"207\":2,\"336\":2,\"338\":1,\"342\":4,\"350\":1,\"422\":3,\"424\":2}}],[\"style=\",{\"1\":{\"487\":1}}],[\"stop\",{\"1\":{\"477\":3,\"538\":1}}],[\"stu\",{\"1\":{\"300\":1,\"301\":1,\"305\":4}}],[\"study\",{\"1\":{\"184\":1,\"201\":1,\"211\":1,\"457\":1}}],[\"struts\",{\"1\":{\"576\":1}}],[\"struts<\",{\"1\":{\"576\":1}}],[\"strlen\",{\"1\":{\"287\":1}}],[\"stringredistemplate\",{\"1\":{\"496\":3}}],[\"stringredisserializer\",{\"1\":{\"303\":6}}],[\"string>map\",{\"1\":{\"402\":1}}],[\"string>\",{\"1\":{\"303\":1}}],[\"string\",{\"0\":{\"286\":1},\"1\":{\"207\":3,\"217\":4,\"227\":1,\"229\":5,\"239\":2,\"241\":4,\"242\":4,\"251\":2,\"252\":4,\"259\":1,\"261\":2,\"263\":2,\"265\":2,\"267\":2,\"270\":3,\"272\":1,\"274\":1,\"301\":1,\"331\":1,\"336\":1,\"342\":2,\"350\":1,\"367\":1,\"369\":2,\"374\":2,\"376\":3,\"381\":3,\"383\":2,\"387\":2,\"396\":1,\"402\":3,\"420\":5,\"424\":1,\"434\":6,\"463\":14,\"465\":2,\"473\":2,\"477\":1,\"484\":9,\"496\":8,\"504\":1}}],[\"startswith\",{\"1\":{\"487\":1}}],[\"start\",{\"1\":{\"477\":1,\"538\":1}}],[\"starter\",{\"1\":{\"254\":1,\"461\":1,\"480\":1}}],[\"stats\",{\"1\":{\"538\":1}}],[\"status\",{\"1\":{\"521\":1}}],[\"statichandles\",{\"1\":{\"430\":1}}],[\"static\",{\"1\":{\"209\":3,\"217\":1,\"227\":1,\"229\":1,\"239\":1,\"241\":1,\"242\":1,\"251\":1,\"252\":1,\"270\":3,\"331\":1,\"429\":4,\"430\":2}}],[\"state\",{\"1\":{\"68\":1,\"70\":1,\"72\":3}}],[\"system\",{\"1\":{\"89\":6,\"110\":1,\"111\":1,\"207\":1,\"217\":1,\"229\":1,\"241\":1,\"242\":1,\"252\":1,\"259\":1,\"261\":2,\"263\":2,\"265\":2,\"267\":2,\"274\":1,\"305\":1,\"333\":2,\"354\":1,\"358\":3,\"360\":1,\"367\":1,\"374\":1,\"376\":1,\"381\":1,\"387\":2,\"406\":3,\"422\":6,\"424\":5,\"434\":1,\"463\":1,\"473\":1,\"477\":1,\"486\":1,\"496\":3}}],[\"seconds\",{\"1\":{\"496\":1}}],[\"sendimgmail\",{\"1\":{\"465\":1}}],[\"sendmailimg\",{\"1\":{\"463\":1,\"465\":1}}],[\"sendfailmail\",{\"1\":{\"463\":1,\"465\":2}}],[\"sendsimplemail\",{\"1\":{\"463\":1,\"465\":2}}],[\"send\",{\"1\":{\"205\":1,\"272\":1,\"463\":3}}],[\"sex\",{\"1\":{\"185\":3}}],[\"servletinitconfig\",{\"1\":{\"369\":2}}],[\"servlet\",{\"1\":{\"365\":1,\"435\":1}}],[\"servlet<\",{\"1\":{\"365\":1,\"432\":1}}],[\"server\",{\"1\":{\"280\":1,\"540\":1}}],[\"service\",{\"1\":{\"122\":1,\"329\":1,\"338\":1,\"347\":1,\"462\":1,\"463\":1}}],[\"serializable>\",{\"1\":{\"86\":2}}],[\"serializable\",{\"1\":{\"86\":2,\"301\":1}}],[\"setdatabase\",{\"1\":{\"502\":1}}],[\"setdate\",{\"1\":{\"496\":1}}],[\"setdelay\",{\"1\":{\"272\":2}}],[\"setlist\",{\"1\":{\"496\":1}}],[\"setbackimg\",{\"1\":{\"496\":1}}],[\"setbookdao\",{\"1\":{\"340\":1}}],[\"setifabsent\",{\"1\":{\"496\":1}}],[\"setid\",{\"1\":{\"89\":1}}],[\"setemail\",{\"1\":{\"484\":1}}],[\"setname\",{\"1\":{\"484\":1}}],[\"setnx\",{\"1\":{\"287\":1}}],[\"settext\",{\"1\":{\"463\":3}}],[\"setter\",{\"0\":{\"335\":1}}],[\"setto\",{\"1\":{\"463\":3}}],[\"setfrom\",{\"1\":{\"463\":3}}],[\"setcolor\",{\"1\":{\"402\":2}}],[\"setconnectionfactory\",{\"1\":{\"303\":1}}],[\"setage\",{\"1\":{\"484\":1}}],[\"setaddress\",{\"1\":{\"484\":1,\"502\":1}}],[\"setattribute\",{\"1\":{\"396\":1}}],[\"setaccount\",{\"1\":{\"89\":2,\"496\":1}}],[\"sethashvalueserializer\",{\"1\":{\"303\":1}}],[\"sethashkeyserializer\",{\"1\":{\"303\":1}}],[\"sethost\",{\"1\":{\"205\":1,\"207\":1,\"209\":1}}],[\"setvalueserializer\",{\"1\":{\"303\":2}}],[\"setviews\",{\"1\":{\"504\":1}}],[\"setvisibility\",{\"1\":{\"303\":1}}],[\"setvirtualhost\",{\"1\":{\"205\":1,\"207\":1,\"209\":1}}],[\"setkeyserializer\",{\"1\":{\"303\":1}}],[\"setobjectmapper\",{\"1\":{\"303\":1}}],[\"setsubject\",{\"1\":{\"463\":3}}],[\"sets\",{\"0\":{\"294\":1}}],[\"setsql\",{\"1\":{\"110\":1,\"111\":2}}],[\"set3\",{\"1\":{\"291\":3}}],[\"set2\",{\"1\":{\"291\":3}}],[\"set1\",{\"1\":{\"291\":3}}],[\"setusername\",{\"1\":{\"205\":1,\"207\":1,\"209\":1}}],[\"setport\",{\"1\":{\"205\":1,\"207\":1,\"209\":1}}],[\"setpassword\",{\"1\":{\"89\":1,\"205\":1,\"207\":1,\"209\":1,\"496\":1}}],[\"set\",{\"0\":{\"290\":1},\"1\":{\"136\":1,\"285\":1,\"305\":1,\"354\":1,\"358\":1,\"554\":1,\"556\":4}}],[\"selectpage\",{\"1\":{\"86\":1,\"108\":1}}],[\"selectobjs\",{\"1\":{\"86\":1}}],[\"selectone\",{\"1\":{\"86\":1}}],[\"selectmapspage\",{\"1\":{\"86\":1}}],[\"selectmaps\",{\"1\":{\"86\":1}}],[\"selectlist\",{\"1\":{\"86\":1,\"89\":1,\"496\":1}}],[\"selectcount\",{\"1\":{\"86\":1,\"108\":1}}],[\"selectbymap\",{\"1\":{\"86\":1,\"89\":1}}],[\"selectbyid\",{\"1\":{\"86\":1,\"89\":1,\"504\":1}}],[\"selectbatchids\",{\"1\":{\"86\":1,\"89\":1}}],[\"select>\",{\"1\":{\"68\":1,\"70\":1,\"72\":1}}],[\"select\",{\"0\":{\"141\":1},\"1\":{\"68\":1,\"70\":1,\"72\":1,\"100\":1,\"142\":1,\"146\":2,\"148\":1,\"177\":1,\"179\":1,\"181\":2,\"185\":1,\"190\":1,\"192\":1,\"194\":2,\"282\":1,\"508\":1}}],[\"fetch\",{\"1\":{\"515\":1}}],[\"featured\",{\"1\":{\"70\":1}}],[\"folder\",{\"1\":{\"434\":4}}],[\"format\",{\"1\":{\"434\":4}}],[\"form>\",{\"1\":{\"433\":1}}],[\"form\",{\"1\":{\"433\":1}}],[\"for\",{\"1\":{\"257\":1,\"422\":2,\"424\":1,\"463\":1,\"486\":1}}],[\"foreach\",{\"1\":{\"89\":3}}],[\"first\",{\"1\":{\"515\":2}}],[\"fixedrate\",{\"1\":{\"473\":1}}],[\"filereader\",{\"1\":{\"487\":2}}],[\"files\",{\"1\":{\"487\":1,\"519\":1}}],[\"filesystemresource\",{\"1\":{\"463\":2}}],[\"filepath\",{\"1\":{\"434\":2}}],[\"fileuploadcontroller\",{\"1\":{\"434\":1}}],[\"file\",{\"1\":{\"314\":1,\"420\":3,\"433\":1,\"434\":3,\"435\":2,\"463\":5,\"465\":1,\"487\":4,\"519\":1}}],[\"field\",{\"1\":{\"293\":5}}],[\"find\",{\"1\":{\"549\":1}}],[\"findactivebloglike\",{\"1\":{\"68\":1,\"70\":1,\"72\":1}}],[\"finally\",{\"1\":{\"422\":1,\"424\":1,\"504\":1}}],[\"final\",{\"1\":{\"270\":3,\"303\":1,\"496\":2}}],[\"flushall\",{\"1\":{\"282\":1,\"311\":1}}],[\"flushdb\",{\"1\":{\"282\":1}}],[\"factory\",{\"1\":{\"303\":2}}],[\"fanout2\",{\"1\":{\"263\":1}}],[\"fanout1\",{\"1\":{\"263\":1}}],[\"fanoutconsumer\",{\"1\":{\"263\":1}}],[\"fanout\",{\"1\":{\"227\":1,\"229\":1,\"257\":4,\"263\":4}}],[\"false\",{\"1\":{\"100\":1,\"205\":3,\"207\":3,\"217\":7,\"270\":1,\"406\":1,\"435\":1}}],[\"from\",{\"1\":{\"68\":1,\"70\":1,\"72\":1,\"89\":2,\"139\":1,\"140\":1,\"142\":1,\"146\":2,\"148\":1,\"177\":1,\"179\":1,\"181\":2,\"185\":1,\"190\":1,\"192\":1,\"194\":2,\"463\":6}}],[\"frontmatter\",{\"1\":{\"9\":1,\"32\":1,\"55\":1}}],[\"uroot\",{\"1\":{\"545\":1,\"549\":1,\"552\":1}}],[\"url>\",{\"1\":{\"565\":1}}],[\"url\",{\"1\":{\"487\":1}}],[\"usr\",{\"1\":{\"545\":1}}],[\"use\",{\"1\":{\"554\":1}}],[\"usesingleserver\",{\"1\":{\"502\":1}}],[\"usermod\",{\"1\":{\"533\":1}}],[\"usermapper\",{\"1\":{\"89\":9,\"122\":3}}],[\"userinfoimpl\",{\"1\":{\"398\":1,\"400\":1}}],[\"userinfo\",{\"1\":{\"394\":1,\"400\":1,\"402\":1}}],[\"usercontroller\",{\"1\":{\"367\":1,\"486\":1}}],[\"usercontroler类\",{\"1\":{\"366\":1}}],[\"username\",{\"1\":{\"255\":1,\"381\":2,\"459\":1}}],[\"userlist\",{\"1\":{\"108\":1}}],[\"userservice\",{\"1\":{\"122\":1}}],[\"userserviceimpl\",{\"1\":{\"122\":1}}],[\"users\",{\"1\":{\"89\":6,\"465\":2}}],[\"user\",{\"1\":{\"89\":17,\"122\":3,\"257\":1,\"267\":3,\"293\":8,\"381\":2,\"398\":1,\"402\":1,\"408\":2,\"482\":4,\"484\":6,\"486\":2,\"513\":2,\"558\":1}}],[\"usegeneratedkeys=\",{\"1\":{\"65\":1}}],[\"u用户名\",{\"1\":{\"543\":1,\"547\":1,\"551\":1}}],[\"ubuntu\",{\"1\":{\"532\":1,\"536\":6,\"538\":2}}],[\"u\",{\"1\":{\"525\":1,\"556\":1}}],[\"unlock\",{\"1\":{\"504\":1}}],[\"utf\",{\"1\":{\"459\":1,\"554\":1}}],[\"utf8mb4\",{\"1\":{\"127\":1}}],[\"uuid\",{\"1\":{\"434\":1,\"496\":1}}],[\"uploadfile\",{\"1\":{\"433\":1,\"434\":5}}],[\"upload\",{\"1\":{\"433\":1,\"434\":2}}],[\"uploadobject\",{\"1\":{\"420\":1}}],[\"up\",{\"1\":{\"65\":2,\"110\":2,\"111\":2}}],[\"updatewrapper<article>\",{\"1\":{\"110\":1}}],[\"updatewrapper<>\",{\"1\":{\"89\":1,\"110\":1}}],[\"updatewrapper<user>\",{\"1\":{\"89\":1}}],[\"updatewrapper\",{\"1\":{\"86\":1,\"110\":3}}],[\"updatebyid\",{\"1\":{\"86\":1,\"504\":1}}],[\"update\",{\"0\":{\"135\":1},\"1\":{\"64\":1,\"65\":1,\"86\":1,\"89\":1,\"110\":1,\"111\":1,\"136\":1,\"280\":1,\"538\":1}}],[\"txt\",{\"1\":{\"519\":1,\"521\":3,\"523\":4}}],[\"tar导入成镜像\",{\"1\":{\"538\":1}}],[\"tar中加载出来\",{\"1\":{\"536\":1}}],[\"tar中\",{\"1\":{\"536\":1,\"538\":1}}],[\"tar\",{\"1\":{\"536\":2,\"538\":2}}],[\"target\",{\"1\":{\"394\":1,\"487\":1}}],[\"tag\",{\"1\":{\"536\":1,\"538\":2}}],[\"taskscheduler\",{\"1\":{\"477\":3}}],[\"task\",{\"1\":{\"475\":1,\"477\":1}}],[\"tablefield\",{\"1\":{\"97\":1,\"98\":1,\"99\":1,\"100\":1}}],[\"tableid\",{\"1\":{\"94\":1,\"95\":1,\"96\":1}}],[\"tablename\",{\"1\":{\"93\":1}}],[\"ttt\",{\"1\":{\"383\":1}}],[\"ttl\",{\"1\":{\"285\":1}}],[\"the\",{\"1\":{\"576\":1}}],[\"though\",{\"1\":{\"576\":1}}],[\"this\",{\"1\":{\"340\":1,\"342\":2,\"424\":1,\"484\":4,\"487\":1}}],[\"threshold\",{\"1\":{\"435\":1}}],[\"thread\",{\"1\":{\"217\":1}}],[\"throwable\",{\"1\":{\"358\":1,\"360\":1}}],[\"throws\",{\"1\":{\"205\":1,\"207\":2,\"209\":1,\"217\":2,\"227\":1,\"229\":2,\"239\":1,\"241\":2,\"242\":2,\"251\":1,\"252\":2,\"358\":1,\"360\":1,\"396\":1,\"400\":1,\"406\":3,\"420\":1,\"463\":2,\"465\":2}}],[\"throw\",{\"1\":{\"122\":2,\"434\":1}}],[\"temp\",{\"1\":{\"435\":1}}],[\"template>\",{\"1\":{\"487\":1}}],[\"template\",{\"1\":{\"303\":9}}],[\"testdelayqueueconfig\",{\"1\":{\"270\":1}}],[\"testdelete\",{\"1\":{\"89\":1}}],[\"testselect\",{\"1\":{\"89\":1}}],[\"testupdata\",{\"1\":{\"89\":1}}],[\"testinsert\",{\"1\":{\"89\":1}}],[\"test\",{\"0\":{\"256\":1},\"1\":{\"89\":4,\"205\":1,\"207\":1,\"257\":6,\"305\":1,\"464\":1,\"465\":6,\"519\":2,\"521\":3,\"523\":4,\"567\":1,\"586\":1}}],[\"test=\",{\"1\":{\"68\":2,\"70\":2,\"72\":3}}],[\"test1\",{\"1\":{\"64\":1,\"65\":1}}],[\"type\",{\"1\":{\"263\":2,\"265\":2,\"267\":2,\"270\":1,\"282\":1,\"487\":1}}],[\"type=\",{\"1\":{\"95\":1,\"96\":1,\"433\":2,\"487\":1}}],[\"time<\",{\"1\":{\"573\":2}}],[\"timeunit\",{\"1\":{\"496\":1}}],[\"timeoutexception\",{\"1\":{\"205\":1,\"207\":1,\"209\":2,\"217\":1,\"227\":1,\"229\":1,\"239\":1,\"241\":1,\"242\":1,\"251\":1,\"252\":1}}],[\"title\",{\"1\":{\"68\":3,\"70\":3,\"72\":3,\"496\":3,\"508\":1}}],[\"totryeverything\",{\"1\":{\"459\":1,\"465\":4}}],[\"token\",{\"1\":{\"396\":2}}],[\"toattpage\",{\"1\":{\"383\":1}}],[\"toapage\",{\"1\":{\"383\":1}}],[\"top\",{\"1\":{\"538\":1}}],[\"topage\",{\"1\":{\"383\":1}}],[\"topic2\",{\"1\":{\"267\":1}}],[\"topic1\",{\"1\":{\"267\":1}}],[\"topicconsumer\",{\"1\":{\"267\":1}}],[\"topic\",{\"1\":{\"251\":2,\"252\":5,\"257\":3,\"267\":4}}],[\"topic类型的exchange与direct\",{\"1\":{\"245\":1}}],[\"tom\",{\"1\":{\"293\":1}}],[\"to\",{\"1\":{\"270\":1,\"422\":1,\"424\":1,\"463\":6}}],[\"tostring\",{\"1\":{\"89\":1,\"360\":1,\"434\":1,\"496\":1}}],[\"toc\",{\"1\":{\"48\":1}}],[\"t\",{\"1\":{\"86\":5,\"422\":1,\"525\":1}}],[\"transferto\",{\"1\":{\"434\":1}}],[\"transactional\",{\"1\":{\"113\":1,\"121\":1,\"122\":1}}],[\"try\",{\"1\":{\"122\":1,\"209\":1,\"422\":1,\"424\":1,\"434\":1,\"504\":1}}],[\"trim\",{\"1\":{\"71\":1,\"496\":1}}],[\"true\",{\"1\":{\"65\":1,\"207\":1,\"229\":1,\"241\":1,\"242\":1,\"252\":1,\"270\":2,\"336\":1,\"338\":1,\"396\":1,\"406\":2,\"435\":1,\"459\":1,\"463\":3,\"477\":1,\"496\":1}}],[\"=>\",{\"1\":{\"487\":1}}],[\"=resids\",{\"1\":{\"463\":1}}],[\"==0\",{\"1\":{\"496\":1}}],[\"==\",{\"1\":{\"389\":1,\"496\":2}}],[\"===\",{\"1\":{\"350\":1}}],[\"=null\",{\"1\":{\"209\":2,\"400\":1}}],[\"=\",{\"0\":{\"474\":1},\"1\":{\"64\":1,\"68\":4,\"70\":5,\"72\":5,\"89\":15,\"100\":1,\"106\":1,\"108\":4,\"110\":2,\"111\":3,\"121\":1,\"122\":1,\"157\":1,\"158\":1,\"193\":1,\"205\":3,\"207\":4,\"209\":1,\"217\":3,\"227\":2,\"229\":4,\"239\":3,\"241\":3,\"242\":3,\"251\":3,\"252\":3,\"257\":1,\"259\":3,\"261\":4,\"263\":12,\"265\":14,\"267\":14,\"270\":4,\"272\":2,\"274\":2,\"303\":4,\"305\":1,\"331\":3,\"340\":1,\"342\":2,\"350\":1,\"360\":3,\"369\":1,\"387\":4,\"389\":3,\"396\":1,\"400\":1,\"402\":2,\"420\":6,\"422\":5,\"424\":2,\"434\":7,\"463\":6,\"473\":2,\"475\":1,\"477\":2,\"482\":4,\"484\":13,\"486\":3,\"487\":4,\"496\":12,\"502\":1,\"504\":3}}],[\"i<srcpath\",{\"1\":{\"463\":1}}],[\"i=0\",{\"1\":{\"463\":1}}],[\"itd\",{\"1\":{\"538\":1,\"540\":1}}],[\"it\",{\"1\":{\"422\":1,\"424\":1,\"538\":1,\"576\":1}}],[\"item\",{\"1\":{\"245\":1}}],[\"import会丢弃历史记录和元数据信息\",{\"1\":{\"538\":1}}],[\"import与docker\",{\"1\":{\"538\":1}}],[\"import\",{\"1\":{\"538\":1}}],[\"impl\",{\"1\":{\"329\":2,\"336\":2,\"338\":2,\"344\":1}}],[\"implements\",{\"1\":{\"122\":1,\"301\":1,\"333\":1,\"396\":1,\"400\":1,\"406\":1,\"408\":1,\"430\":1,\"477\":1}}],[\"images\",{\"0\":{\"535\":1},\"1\":{\"536\":1}}],[\"image\",{\"1\":{\"487\":2,\"536\":2,\"538\":1}}],[\"img\",{\"1\":{\"378\":1,\"487\":1}}],[\"ioc容器来控制对象的创建\",{\"1\":{\"324\":1}}],[\"ioc\",{\"0\":{\"321\":1},\"1\":{\"322\":1}}],[\"ioexception\",{\"1\":{\"205\":1,\"207\":2,\"209\":2,\"217\":2,\"227\":1,\"229\":2,\"239\":1,\"241\":2,\"242\":2,\"251\":1,\"252\":2,\"420\":1,\"434\":1}}],[\"i++\",{\"1\":{\"257\":1,\"463\":1,\"473\":1}}],[\"isdirectory\",{\"1\":{\"434\":1}}],[\"is\",{\"1\":{\"166\":1}}],[\"isempty\",{\"1\":{\"89\":1,\"496\":1}}],[\"ipage<record>\",{\"1\":{\"108\":1}}],[\"ipage<map<string\",{\"1\":{\"86\":1}}],[\"ipage<t>>\",{\"1\":{\"86\":1}}],[\"if>\",{\"1\":{\"68\":2,\"72\":3}}],[\"if\",{\"1\":{\"67\":1,\"209\":2,\"422\":1,\"424\":1,\"434\":1,\"463\":1,\"477\":1,\"486\":1,\"487\":1,\"496\":7}}],[\"input\",{\"1\":{\"487\":1}}],[\"index\",{\"1\":{\"383\":3}}],[\"initialdelay\",{\"1\":{\"473\":1}}],[\"initializingbean\",{\"1\":{\"333\":1}}],[\"init\",{\"1\":{\"333\":4,\"517\":1}}],[\"inversion\",{\"1\":{\"322\":1}}],[\"incrby\",{\"1\":{\"287\":1}}],[\"incr\",{\"1\":{\"287\":1}}],[\"install\",{\"1\":{\"280\":1,\"567\":1}}],[\"insert>\",{\"1\":{\"65\":1}}],[\"insert\",{\"0\":{\"128\":1},\"1\":{\"65\":1,\"86\":1,\"89\":1,\"122\":1,\"130\":1,\"132\":2,\"134\":1,\"245\":1,\"496\":2}}],[\"info\",{\"1\":{\"241\":1,\"242\":1,\"252\":3,\"265\":1}}],[\"in\",{\"1\":{\"89\":1,\"162\":1}}],[\"interceptorregistry\",{\"1\":{\"398\":1,\"408\":1}}],[\"interceptor\",{\"1\":{\"106\":3,\"398\":1}}],[\"interface\",{\"1\":{\"86\":1,\"394\":1}}],[\"integer\",{\"1\":{\"86\":1,\"108\":1,\"272\":1,\"301\":1,\"484\":3,\"504\":1}}],[\"into\",{\"1\":{\"65\":1,\"130\":1,\"132\":2,\"134\":1}}],[\"int\",{\"1\":{\"64\":1,\"86\":7,\"89\":2,\"257\":1,\"336\":1,\"342\":2,\"463\":1,\"504\":1}}],[\"id>\",{\"1\":{\"565\":1}}],[\"idtype\",{\"1\":{\"95\":1,\"96\":1}}],[\"idlist\",{\"1\":{\"86\":2}}],[\"id\",{\"1\":{\"65\":3,\"86\":2,\"89\":1,\"108\":1,\"110\":1,\"190\":1,\"301\":1,\"376\":2,\"381\":2,\"387\":6,\"389\":2,\"422\":2,\"424\":2,\"504\":3,\"521\":1,\"558\":1}}],[\"id=5\",{\"1\":{\"389\":1}}],[\"id=\",{\"1\":{\"65\":1,\"68\":1,\"70\":1,\"72\":1,\"329\":2,\"336\":1,\"338\":2,\"344\":1}}],[\"i\",{\"1\":{\"64\":1,\"257\":2,\"463\":2,\"473\":1,\"504\":1,\"536\":1,\"556\":1}}],[\"主代码\",{\"1\":{\"579\":1}}],[\"主题\",{\"1\":{\"463\":1}}],[\"主题包含了一个自定义徽章可以使用\",{\"1\":{\"42\":1}}],[\"主账号accesskey泄露会威胁您所有资源的安全\",{\"1\":{\"417\":1}}],[\"主键\",{\"1\":{\"94\":1}}],[\"主键返回\",{\"0\":{\"63\":1}}],[\"添加apioperiation注解的被扫描\",{\"1\":{\"508\":1}}],[\"添加用户时出现异常\",{\"1\":{\"122\":2}}],[\"添加用户\",{\"1\":{\"122\":1}}],[\"添加\",{\"0\":{\"63\":1},\"1\":{\"519\":1}}],[\"version\",{\"1\":{\"508\":1,\"576\":2}}],[\"version>\",{\"1\":{\"61\":1,\"327\":1,\"365\":2,\"432\":1,\"500\":1,\"507\":1,\"573\":1,\"576\":2}}],[\"validated\",{\"1\":{\"486\":1}}],[\"validationmessages\",{\"1\":{\"481\":1}}],[\"validation<\",{\"1\":{\"480\":1}}],[\"valueoperations\",{\"1\":{\"496\":1}}],[\"valueof\",{\"1\":{\"473\":1,\"504\":1}}],[\"value>\",{\"1\":{\"344\":2}}],[\"value序列化方式采用jackson\",{\"1\":{\"303\":1}}],[\"value的长度\",{\"1\":{\"287\":1}}],[\"value后面增加world\",{\"1\":{\"287\":1}}],[\"value\",{\"1\":{\"259\":1,\"263\":4,\"265\":4,\"267\":4,\"293\":1,\"350\":1,\"387\":2,\"389\":1,\"484\":2,\"496\":3}}],[\"value=\",{\"1\":{\"98\":1,\"336\":2,\"338\":2,\"344\":1,\"433\":2}}],[\"values\",{\"1\":{\"65\":1,\"130\":1,\"132\":2,\"134\":1}}],[\"v\",{\"1\":{\"285\":1,\"496\":3,\"525\":2,\"556\":1}}],[\"vim\",{\"0\":{\"555\":1}}],[\"visibility\",{\"1\":{\"303\":1}}],[\"virtual\",{\"1\":{\"255\":1}}],[\"views\",{\"1\":{\"65\":2,\"111\":2}}],[\"void\",{\"1\":{\"89\":4,\"205\":1,\"207\":2,\"209\":1,\"217\":2,\"227\":1,\"229\":2,\"239\":1,\"241\":2,\"242\":2,\"251\":1,\"252\":2,\"257\":5,\"259\":1,\"261\":2,\"263\":2,\"265\":2,\"267\":2,\"272\":1,\"274\":1,\"305\":1,\"331\":1,\"333\":2,\"340\":1,\"354\":3,\"358\":4,\"360\":2,\"387\":2,\"398\":2,\"406\":2,\"408\":1,\"430\":1,\"463\":3,\"465\":3,\"475\":1,\"477\":2,\"484\":4}}],[\"vuepress\",{\"1\":{\"41\":1}}],[\"5s\",{\"1\":{\"285\":1}}],[\"5672\",{\"1\":{\"205\":1,\"207\":1,\"209\":1,\"255\":1}}],[\"500mb\",{\"1\":{\"538\":1}}],[\"5000ms\",{\"1\":{\"477\":1}}],[\"5000l\",{\"1\":{\"477\":1}}],[\"5000\",{\"1\":{\"473\":2}}],[\"50\",{\"1\":{\"185\":1}}],[\"5<\",{\"1\":{\"61\":1,\"432\":1,\"500\":1}}],[\"5\",{\"0\":{\"401\":1},\"1\":{\"61\":1,\"285\":1,\"385\":1,\"496\":1,\"556\":1}}],[\">aaa\",{\"1\":{\"549\":1}}],[\">50\",{\"1\":{\"496\":1}}],[\"><img\",{\"1\":{\"465\":1}}],[\"><\",{\"1\":{\"344\":1}}],[\">=\",{\"1\":{\"154\":1}}],[\">\",{\"1\":{\"61\":1,\"65\":1,\"68\":3,\"70\":3,\"72\":4,\"153\":1,\"185\":1,\"247\":1,\"249\":1,\"272\":1,\"327\":1,\"329\":3,\"333\":1,\"336\":3,\"338\":6,\"344\":3,\"433\":3,\"465\":1,\"477\":1,\"487\":4,\"500\":1,\"543\":1,\"545\":1,\"547\":1,\"556\":1,\"576\":1}}],[\"h\",{\"1\":{\"556\":1}}],[\"html5\",{\"1\":{\"440\":1}}],[\"httpservletresponse\",{\"1\":{\"396\":1,\"404\":1,\"406\":3}}],[\"httpservletrequest\",{\"1\":{\"396\":1,\"400\":2,\"404\":1,\"406\":3,\"434\":1}}],[\"https\",{\"1\":{\"61\":1,\"420\":1}}],[\"hmget等\",{\"1\":{\"293\":1}}],[\"hmset\",{\"1\":{\"293\":1}}],[\"hvals\",{\"1\":{\"293\":2}}],[\"hkeys\",{\"1\":{\"293\":2}}],[\"head\",{\"1\":{\"521\":1}}],[\"head~100\",{\"1\":{\"521\":1}}],[\"head^\",{\"1\":{\"521\":1}}],[\"height\",{\"1\":{\"487\":1}}],[\"here\",{\"1\":{\"475\":1}}],[\"helper\",{\"1\":{\"463\":12}}],[\"hello\",{\"1\":{\"205\":3,\"207\":2,\"227\":1,\"257\":7,\"259\":1,\"289\":3,\"344\":1,\"367\":1,\"374\":1,\"376\":1,\"381\":1,\"463\":1}}],[\"hexists\",{\"1\":{\"293\":2}}],[\"hlen\",{\"1\":{\"293\":2}}],[\"hdel\",{\"1\":{\"293\":2}}],[\"hgetall\",{\"1\":{\"293\":2}}],[\"hget\",{\"1\":{\"293\":2}}],[\"hset\",{\"1\":{\"293\":2}}],[\"hh\",{\"1\":{\"247\":2,\"249\":1,\"257\":1,\"285\":1,\"305\":2}}],[\"hhh\",{\"1\":{\"89\":1,\"285\":1,\"367\":1}}],[\"hard\",{\"1\":{\"521\":1}}],[\"haserrors\",{\"1\":{\"486\":1}}],[\"hash的value序列化方式采用jackson\",{\"1\":{\"303\":1}}],[\"hash的key也采用string的序列化方式\",{\"1\":{\"303\":1}}],[\"hash命令\",{\"1\":{\"293\":1}}],[\"hash\",{\"0\":{\"292\":1}}],[\"hashmap<>\",{\"1\":{\"89\":2}}],[\"hashmap<string\",{\"1\":{\"89\":2,\"270\":1}}],[\"hangzhou\",{\"1\":{\"420\":1}}],[\"handlermethodargumentresolver\",{\"1\":{\"400\":1}}],[\"handler\",{\"1\":{\"396\":1,\"406\":3}}],[\"handlerinterceptor\",{\"1\":{\"396\":1,\"406\":1}}],[\"handledelivery\",{\"1\":{\"207\":1,\"217\":1,\"229\":1,\"241\":1,\"242\":1,\"252\":1}}],[\"having\",{\"1\":{\"142\":1,\"185\":1}}],[\"hot\",{\"0\":{\"436\":1}}],[\"hou\",{\"1\":{\"358\":1}}],[\"hostname\",{\"1\":{\"558\":1}}],[\"host\",{\"1\":{\"255\":2,\"422\":1,\"424\":1,\"459\":1,\"558\":1}}],[\"hope\",{\"1\":{\"33\":1}}],[\"home\",{\"0\":{\"0\":1},\"1\":{\"556\":1},\"2\":{\"2\":1}}],[\"<url>http\",{\"1\":{\"565\":1}}],[\"<name>aliyun\",{\"1\":{\"565\":1}}],[\"<mirrorof>central<\",{\"1\":{\"565\":1}}],[\"<mirror>\",{\"1\":{\"565\":1}}],[\"<map>\",{\"1\":{\"344\":1}}],[\"<div>\",{\"1\":{\"487\":1}}],[\"<dependencies>\",{\"1\":{\"365\":1}}],[\"<dependency>\",{\"1\":{\"61\":1,\"254\":1,\"327\":1,\"365\":2,\"432\":1,\"437\":1,\"461\":1,\"480\":1,\"500\":1,\"507\":1,\"573\":1,\"576\":2}}],[\"<template>\",{\"1\":{\"487\":1}}],[\"<第一步获得的密钥>\",{\"1\":{\"459\":1}}],[\"<optional>true<\",{\"1\":{\"437\":1,\"573\":1}}],[\"<otherwise>\",{\"1\":{\"70\":1}}],[\"<form\",{\"1\":{\"433\":1}}],[\"<script>\",{\"1\":{\"487\":1}}],[\"<scope>provided<\",{\"1\":{\"365\":1,\"432\":1}}],[\"<select\",{\"1\":{\"68\":1,\"70\":1,\"72\":1}}],[\"<groupid>asm<\",{\"1\":{\"576\":2}}],[\"<groupid>joda\",{\"1\":{\"573\":1}}],[\"<groupid>javax\",{\"1\":{\"365\":1,\"432\":1}}],[\"<groupid>io\",{\"1\":{\"507\":1}}],[\"<groupid>org\",{\"1\":{\"61\":1,\"254\":1,\"327\":1,\"365\":1,\"437\":1,\"461\":1,\"480\":1,\"500\":1,\"576\":1}}],[\"<value>world<\",{\"1\":{\"344\":1}}],[\"<value>hello\",{\"1\":{\"344\":1}}],[\"<version>$\",{\"1\":{\"576\":1}}],[\"<version>2\",{\"1\":{\"432\":1,\"573\":1}}],[\"<version>4\",{\"1\":{\"365\":1}}],[\"<version>5\",{\"1\":{\"327\":1,\"365\":1}}],[\"<version>3\",{\"1\":{\"61\":1,\"500\":1,\"507\":1,\"576\":1}}],[\"<array>\",{\"1\":{\"344\":1}}],[\"<artifactid>asm<\",{\"1\":{\"576\":2}}],[\"<artifactid>joda\",{\"1\":{\"573\":1}}],[\"<artifactid>javax\",{\"1\":{\"365\":1}}],[\"<artifactid>redisson<\",{\"1\":{\"500\":1}}],[\"<artifactid>struts2\",{\"1\":{\"576\":1}}],[\"<artifactid>servlet\",{\"1\":{\"432\":1}}],[\"<artifactid>springfox\",{\"1\":{\"507\":1}}],[\"<artifactid>spring\",{\"1\":{\"254\":1,\"327\":1,\"365\":1,\"437\":1,\"461\":1,\"480\":1}}],[\"<artifactid>mybatis<\",{\"1\":{\"61\":1}}],[\"<constructor\",{\"1\":{\"338\":3}}],[\"<choose>\",{\"1\":{\"70\":1}}],[\"<property\",{\"1\":{\"336\":2,\"344\":2}}],[\"<bean\",{\"1\":{\"329\":2,\"333\":1,\"336\":1,\"338\":2,\"344\":1}}],[\"<>\",{\"1\":{\"303\":1}}],[\"<>或\",{\"1\":{\"158\":1}}],[\"<=\",{\"1\":{\"156\":1}}],[\"<exclusion>\",{\"1\":{\"576\":1}}],[\"<exclusions>\",{\"1\":{\"576\":1}}],[\"<entry\",{\"1\":{\"344\":1}}],[\"<e\",{\"1\":{\"86\":2}}],[\"<when\",{\"1\":{\"70\":2}}],[\"<id>alimaven<\",{\"1\":{\"565\":1}}],[\"<img\",{\"1\":{\"465\":1,\"487\":1}}],[\"<input\",{\"1\":{\"433\":2,\"487\":1}}],[\"<insert\",{\"1\":{\"65\":1}}],[\"<if\",{\"1\":{\"68\":2,\"72\":3}}],[\"<\",{\"1\":{\"61\":2,\"65\":1,\"68\":3,\"70\":5,\"72\":4,\"155\":1,\"254\":1,\"257\":1,\"327\":2,\"329\":1,\"336\":1,\"338\":3,\"344\":6,\"365\":3,\"432\":1,\"433\":1,\"437\":1,\"461\":1,\"480\":1,\"487\":5,\"500\":2,\"507\":1,\"551\":1,\"552\":1,\"556\":1,\"565\":2,\"573\":1,\"576\":6}}],[\"依赖范围\",{\"0\":{\"577\":1}}],[\"依赖传递\",{\"0\":{\"569\":1}}],[\"依赖管理\",{\"0\":{\"568\":1}}],[\"依赖注入\",{\"0\":{\"334\":1},\"1\":{\"339\":1}}],[\"依赖\",{\"1\":{\"60\":1,\"479\":1}}],[\"官网学习地址\",{\"1\":{\"59\":1}}],[\"标签\",{\"1\":{\"487\":1}}],[\"标签用于选择图片\",{\"1\":{\"487\":1}}],[\"标签为\",{\"1\":{\"36\":1}}],[\"标题和页面信息\",{\"1\":{\"47\":1}}],[\"徽章\",{\"1\":{\"43\":1}}],[\"徽章文字\",{\"1\":{\"43\":1}}],[\"和远程分支连接起来\",{\"1\":{\"515\":1}}],[\"和\",{\"0\":{\"438\":1},\"1\":{\"36\":1,\"440\":1,\"532\":1}}],[\"日\",{\"1\":{\"34\":1}}],[\"月\",{\"1\":{\"34\":1}}],[\"年\",{\"1\":{\"34\":1}}],[\"写作日期为\",{\"1\":{\"34\":1}}],[\"作者设置为\",{\"1\":{\"33\":1}}],[\"的一个\",{\"1\":{\"440\":1}}],[\"的一种新协议\",{\"1\":{\"440\":1}}],[\"的另一种数据持久化方式\",{\"1\":{\"314\":1}}],[\"的缩写\",{\"1\":{\"314\":1}}],[\"的默认数据持久化方式\",{\"1\":{\"308\":1}}],[\"的发送方在向exchang发送消息时\",{\"1\":{\"236\":1}}],[\"的基础上只做增强不做改变\",{\"1\":{\"77\":1}}],[\"的增强工具\",{\"1\":{\"77\":1}}],[\"的\",{\"1\":{\"32\":1}}],[\"m\",{\"1\":{\"519\":2,\"523\":1}}],[\"mkdir\",{\"1\":{\"517\":1}}],[\"mkdirs\",{\"1\":{\"434\":1}}],[\"md\",{\"1\":{\"465\":1}}],[\"mirror>\",{\"1\":{\"565\":1}}],[\"mirrorof>\",{\"1\":{\"565\":1}}],[\"mimemessagehelper\",{\"1\":{\"463\":4}}],[\"mimemessage\",{\"1\":{\"463\":2}}],[\"minimal\",{\"1\":{\"205\":1}}],[\"min\",{\"1\":{\"143\":1,\"180\":1,\"181\":1,\"315\":1,\"484\":1}}],[\"mm\",{\"1\":{\"434\":1}}],[\"multipart\",{\"1\":{\"433\":1,\"435\":1}}],[\"multipartfile\",{\"1\":{\"420\":1,\"434\":1}}],[\"mvn\",{\"1\":{\"567\":5}}],[\"mvnrepository\",{\"1\":{\"61\":1}}],[\"mvc\",{\"1\":{\"429\":1}}],[\"memory\",{\"1\":{\"538\":1}}],[\"messagingexception\",{\"1\":{\"463\":2,\"465\":2}}],[\"messagepack等\",{\"1\":{\"298\":1}}],[\"messageproperties\",{\"1\":{\"205\":1,\"272\":5}}],[\"message2\",{\"1\":{\"261\":1,\"263\":1,\"265\":1,\"267\":1}}],[\"message1\",{\"1\":{\"261\":1,\"263\":1,\"265\":1,\"267\":1,\"272\":3}}],[\"message\",{\"1\":{\"259\":3,\"261\":4,\"263\":4,\"265\":5,\"267\":5,\"270\":1,\"272\":4,\"422\":1,\"424\":1,\"484\":5}}],[\"means\",{\"1\":{\"422\":1,\"424\":1}}],[\"methods\",{\"1\":{\"487\":1}}],[\"methodparameter\",{\"1\":{\"400\":5}}],[\"method\",{\"1\":{\"387\":2,\"389\":1}}],[\"method=\",{\"1\":{\"333\":2,\"433\":1}}],[\"mget\",{\"1\":{\"287\":1}}],[\"modelandview\",{\"1\":{\"406\":2}}],[\"modelandviewcontainer\",{\"1\":{\"400\":2}}],[\"move\",{\"1\":{\"285\":1}}],[\"more\",{\"1\":{\"30\":1}}],[\"mq的引言和不同mq的特点\",{\"1\":{\"199\":1}}],[\"my\",{\"1\":{\"540\":1}}],[\"mytask\",{\"1\":{\"477\":2}}],[\"myinterceptor\",{\"1\":{\"406\":1,\"408\":3}}],[\"myaop\",{\"1\":{\"354\":1,\"358\":1,\"360\":1}}],[\"mysortedset\",{\"1\":{\"295\":8}}],[\"myset\",{\"1\":{\"291\":7}}],[\"mysql>\",{\"1\":{\"554\":4}}],[\"mysqldump\",{\"1\":{\"543\":1,\"545\":1,\"547\":1,\"549\":1}}],[\"mysql\",{\"0\":{\"125\":1,\"541\":1},\"1\":{\"106\":1,\"545\":1,\"551\":1,\"552\":1}}],[\"mybatis+字段+1\",{\"0\":{\"109\":1}}],[\"mybatisplusinterceptor\",{\"1\":{\"106\":4}}],[\"mybatisconfig\",{\"1\":{\"106\":1}}],[\"mybatisx\",{\"0\":{\"101\":1},\"1\":{\"102\":1}}],[\"mybatis<\",{\"1\":{\"61\":1}}],[\"mybatis\",{\"0\":{\"58\":1,\"75\":1,\"76\":1},\"1\":{\"61\":2,\"77\":3}}],[\"mp\",{\"1\":{\"77\":1}}],[\"maven<\",{\"1\":{\"565\":1}}],[\"maven\",{\"0\":{\"561\":1},\"1\":{\"565\":1}}],[\"master\",{\"1\":{\"525\":2}}],[\"mailservice\",{\"1\":{\"463\":1,\"465\":5}}],[\"mail<\",{\"1\":{\"461\":1}}],[\"mail\",{\"1\":{\"459\":2}}],[\"main\",{\"1\":{\"217\":1,\"227\":1,\"229\":1,\"239\":1,\"241\":1,\"242\":1,\"251\":1,\"252\":1,\"330\":1,\"331\":2}}],[\"made\",{\"1\":{\"422\":1,\"424\":1}}],[\"max\",{\"1\":{\"143\":1,\"180\":1,\"181\":1,\"435\":2,\"484\":1,\"487\":2}}],[\"map>\",{\"1\":{\"344\":1}}],[\"map\",{\"1\":{\"89\":7,\"205\":1,\"207\":1,\"344\":1,\"381\":1,\"402\":2}}],[\"map<string\",{\"1\":{\"86\":2,\"270\":1,\"402\":1}}],[\"mapper<t>\",{\"1\":{\"86\":1}}],[\"mapper\",{\"1\":{\"64\":1}}],[\"markdown\",{\"1\":{\"32\":1,\"38\":1,\"40\":1},\"2\":{\"74\":1,\"124\":1,\"197\":1,\"276\":1,\"317\":1,\"412\":1,\"426\":1,\"510\":1,\"527\":1,\"560\":1,\"595\":1}}],[\"mset\",{\"1\":{\"287\":1}}],[\"msg\",{\"1\":{\"272\":3,\"274\":3,\"463\":12}}],[\"ms\",{\"1\":{\"33\":1}}],[\"文章标题列表\",{\"1\":{\"48\":1}}],[\"文章加密\",{\"2\":{\"28\":1}}],[\"文件上传\",{\"0\":{\"431\":1}}],[\"文件名称\",{\"1\":{\"315\":1}}],[\"文件是将\",{\"1\":{\"314\":1}}],[\"文件是在指定的时间间隔内\",{\"1\":{\"308\":1}}],[\"文件\",{\"1\":{\"311\":1,\"312\":1}}],[\"文件的缩写\",{\"1\":{\"308\":1}}],[\"文件夹的图片\",{\"1\":{\"41\":1}}],[\"文件放置在一起\",{\"1\":{\"40\":1}}],[\"文字结尾应该有深蓝色的\",{\"1\":{\"43\":1}}],[\"文字\",{\"1\":{\"25\":1,\"26\":1}}],[\"文字段落\",{\"1\":{\"25\":11,\"26\":13}}],[\"29\",{\"1\":{\"556\":1}}],[\"28\",{\"1\":{\"556\":1}}],[\"27\",{\"1\":{\"556\":1}}],[\"26\",{\"1\":{\"556\":1}}],[\"25\",{\"1\":{\"556\":1}}],[\"24\",{\"1\":{\"556\":1}}],[\"23\",{\"1\":{\"556\":1}}],[\"23<\",{\"1\":{\"327\":1,\"365\":1}}],[\"20000\",{\"1\":{\"540\":1}}],[\"20l\",{\"1\":{\"496\":1}}],[\"20\",{\"1\":{\"287\":2,\"536\":11,\"538\":3,\"556\":1}}],[\"2022版mybatisplus教程\",{\"1\":{\"78\":1}}],[\"2020\",{\"1\":{\"34\":1}}],[\"22\",{\"1\":{\"111\":1,\"532\":1,\"540\":1,\"556\":1}}],[\"21\",{\"1\":{\"110\":1,\"556\":1}}],[\"2\",{\"0\":{\"395\":1,\"407\":1},\"1\":{\"26\":14,\"89\":2,\"289\":1,\"295\":6,\"329\":1,\"465\":1,\"484\":1,\"508\":1,\"546\":1,\"553\":1,\"556\":1}}],[\"19\",{\"1\":{\"556\":1}}],[\"19138084894\",{\"1\":{\"465\":3}}],[\"18\",{\"1\":{\"556\":1}}],[\"17\",{\"1\":{\"556\":1}}],[\"16\",{\"1\":{\"556\":1}}],[\"163\",{\"1\":{\"465\":3}}],[\"15\",{\"1\":{\"556\":1}}],[\"13\",{\"1\":{\"556\":1}}],[\"11\",{\"1\":{\"556\":1}}],[\"14\",{\"1\":{\"386\":1,\"556\":1}}],[\"1<\",{\"1\":{\"365\":1,\"576\":1}}],[\"12\",{\"0\":{\"474\":1},\"1\":{\"475\":1,\"556\":1}}],[\"123\",{\"1\":{\"336\":1}}],[\"123root\",{\"1\":{\"89\":1}}],[\"127\",{\"1\":{\"205\":1,\"207\":1,\"209\":1,\"255\":1,\"558\":3}}],[\"100\",{\"1\":{\"484\":1,\"487\":2}}],[\"1000\",{\"1\":{\"217\":1}}],[\"10mb\",{\"1\":{\"435\":2}}],[\"10\",{\"1\":{\"108\":1,\"194\":3,\"257\":1,\"484\":1,\"556\":1}}],[\"1\",{\"0\":{\"393\":1,\"405\":1},\"1\":{\"25\":12,\"34\":2,\"70\":1,\"89\":1,\"110\":1,\"111\":2,\"193\":1,\"205\":1,\"207\":1,\"209\":1,\"217\":1,\"255\":1,\"285\":1,\"289\":3,\"293\":8,\"295\":4,\"305\":1,\"327\":1,\"484\":1,\"496\":2,\"504\":1,\"508\":1,\"540\":1,\"551\":1,\"556\":3,\"558\":3}}],[\"段落\",{\"1\":{\"25\":1,\"26\":1}}],[\"禁用\",{\"2\":{\"22\":1}}],[\"禁用了如下功能\",{\"1\":{\"10\":1}}],[\"页面结构\",{\"0\":{\"44\":1}}],[\"页面内容\",{\"0\":{\"37\":1}}],[\"页面配置\",{\"0\":{\"29\":1},\"1\":{\"36\":1},\"2\":{\"57\":1}}],[\"页面信息\",{\"0\":{\"31\":1},\"1\":{\"14\":1}}],[\"页脚\",{\"1\":{\"19\":1,\"53\":1}}],[\"评论\",{\"1\":{\"18\":1,\"50\":1}}],[\"链接\",{\"1\":{\"17\":1}}],[\"贡献者\",{\"1\":{\"15\":1,\"49\":1}}],[\"侧边栏\",{\"1\":{\"12\":1,\"52\":1}}],[\"本页面就是一个示例\",{\"1\":{\"10\":1}}],[\"布局与功能禁用\",{\"0\":{\"8\":1}}],[\"幻灯片页\",{\"0\":{\"3\":1}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,kt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n}})=>{e==="suggest"?self.postMessage(it(t,I[s],n)):e==="search"?self.postMessage(ot(t,I[s],n)):self.postMessage({suggestions:it(t,I[s],n),results:ot(t,I[s],n)})};
//# sourceMappingURL=index.js.map
